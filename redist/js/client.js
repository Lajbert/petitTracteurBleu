// Generated by Haxe 4.1.4
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Assets = function() { };
$hxClasses["Assets"] = Assets;
Assets.__name__ = "Assets";
Assets.init = function() {
	if(Assets.initDone) {
		return;
	}
	Assets.initDone = true;
	var _g = new haxe_ds_StringMap();
	var this1 = hxd_Res.get_loader();
	var value = this1.loadCache("world/tiles.png",hxd_res_Image).toTile();
	_g.h["Tiles"] = value;
	var this1 = hxd_Res.get_loader();
	var value = this1.loadCache("world/RPG_Assets_by_ssugmi.png",hxd_res_Image).toTile();
	_g.h["Icons"] = value;
	Assets.ledTilesets = _g;
	var this1 = hxd_Res.get_loader();
	Assets.fontPixel = this1.loadCache("fonts/minecraftiaOutline.fnt",hxd_res_BitmapFont).toFont();
	var this1 = hxd_Res.get_loader();
	Assets.fontTiny = this1.loadCache("fonts/barlow_condensed_medium_regular_9.fnt",hxd_res_BitmapFont).toFont();
	var this1 = hxd_Res.get_loader();
	Assets.fontSmall = this1.loadCache("fonts/barlow_condensed_medium_regular_11.fnt",hxd_res_BitmapFont).toFont();
	var this1 = hxd_Res.get_loader();
	Assets.fontMedium = this1.loadCache("fonts/barlow_condensed_medium_regular_17.fnt",hxd_res_BitmapFont).toFont();
	var this1 = hxd_Res.get_loader();
	Assets.fontLarge = this1.loadCache("fonts/barlow_condensed_medium_regular_32.fnt",hxd_res_BitmapFont).toFont();
	Assets.tiles = dn_heaps_assets_Atlas.load("atlas/tiles.atlas");
};
var h3d_IDrawable = function() { };
$hxClasses["h3d.IDrawable"] = h3d_IDrawable;
h3d_IDrawable.__name__ = "h3d.IDrawable";
h3d_IDrawable.__isInterface__ = true;
var hxd_App = function() {
	var _gthis = this;
	var engine = h3d_Engine.CURRENT;
	if(engine != null) {
		this.engine = engine;
		engine.onReady = $bind(this,this.setup);
		haxe_Timer.delay($bind(this,this.setup),0);
	} else {
		hxd_System.start(function() {
			engine = new h3d_Engine();
			_gthis.engine = engine;
			engine.onReady = $bind(_gthis,_gthis.setup);
			engine.init();
		});
	}
};
$hxClasses["hxd.App"] = hxd_App;
hxd_App.__name__ = "hxd.App";
hxd_App.__interfaces__ = [h3d_IDrawable];
hxd_App.staticHandler = function() {
};
hxd_App.prototype = {
	onResize: function() {
	}
	,render: function(e) {
		this.s3d.render(e);
		this.s2d.render(e);
	}
	,setup: function() {
		var _gthis = this;
		var initDone = false;
		this.engine.onReady = hxd_App.staticHandler;
		this.engine.onResized = function() {
			if(_gthis.s2d == null) {
				return;
			}
			_gthis.s2d.checkResize();
			if(initDone) {
				_gthis.onResize();
			}
		};
		this.s3d = new h3d_scene_Scene();
		this.s2d = new h2d_Scene();
		this.sevents = new hxd_SceneEvents();
		this.sevents.addScene(this.s2d);
		this.sevents.addScene(this.s3d);
		this.loadAssets(function() {
			initDone = true;
			_gthis.init();
			hxd_Timer.skip();
			_gthis.mainLoop();
			hxd_System.setLoop($bind(_gthis,_gthis.mainLoop));
			hxd_Key.initialize();
		});
	}
	,loadAssets: function(onLoaded) {
		onLoaded();
	}
	,init: function() {
	}
	,mainLoop: function() {
		hxd_Timer.update();
		this.sevents.checkEvents();
		if(this.isDisposed) {
			return;
		}
		this.update(hxd_Timer.dt);
		if(this.isDisposed) {
			return;
		}
		var dt = hxd_Timer.dt;
		if(this.s2d != null) {
			this.s2d.setElapsedTime(dt);
		}
		if(this.s3d != null) {
			this.s3d.setElapsedTime(dt);
		}
		this.engine.render(this);
	}
	,update: function(dt) {
	}
	,__class__: hxd_App
};
var Boot = function() {
	this.speed = 1.0;
	hxd_App.call(this);
};
$hxClasses["Boot"] = Boot;
Boot.__name__ = "Boot";
Boot.main = function() {
	new Boot();
};
Boot.__super__ = hxd_App;
Boot.prototype = $extend(hxd_App.prototype,{
	init: function() {
		Boot.ME = this;
		new Main(this.s2d);
		this.onResize();
	}
	,onResize: function() {
		hxd_App.prototype.onResize.call(this);
		dn_Process.resizeAll();
	}
	,update: function(deltaTime) {
		hxd_App.prototype.update.call(this,deltaTime);
		var boost = 1.0;
		var tmod = hxd_Timer.dt * hxd_Timer.wantedFPS * boost * this.speed;
		dn_heaps_Controller.beforeUpdate();
		dn_Process.updateAll(tmod);
	}
	,__class__: Boot
});
var dn_Process = function(parent) {
	this._initOnceDone = false;
	this._fixedUpdateCounter = 0.;
	this.fixedUpdateFps = 30;
	this.baseTimeMul = 1.0;
	this.init();
	if(parent == null) {
		dn_Process.ROOTS.push(this);
	} else {
		parent.addChild(this);
	}
};
$hxClasses["dn.Process"] = dn_Process;
dn_Process.__name__ = "dn.Process";
dn_Process._doPreUpdate = function(p,utmod) {
	if(!(!p.paused && !p.destroyed)) {
		return;
	}
	p.utmod = utmod;
	p.ftime += p.utmod * p.getComputedTimeMultiplier();
	p.uftime += p.utmod;
	p.delayer.update(p.utmod * p.getComputedTimeMultiplier());
	if(!p.paused && !p.destroyed) {
		p.udelayer.update(p.utmod);
	}
	if(!p.paused && !p.destroyed) {
		p.cd.update(p.utmod * p.getComputedTimeMultiplier());
	}
	if(!p.paused && !p.destroyed) {
		p.ucd.update(p.utmod);
	}
	if(!p.paused && !p.destroyed) {
		p.tw.update(p.utmod * p.getComputedTimeMultiplier());
	}
	if(!p.paused && !p.destroyed) {
		if(!p._initOnceDone) {
			p.initOnceBeforeUpdate();
			p._initOnceDone = true;
		}
		p.preUpdate();
	}
	if(!p.paused && !p.destroyed) {
		var _g = 0;
		var _g1 = p.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			dn_Process._doPreUpdate(c,p.utmod);
		}
	}
};
dn_Process._doMainUpdate = function(p) {
	if(!(!p.paused && !p.destroyed)) {
		return;
	}
	p.update();
	if(p.onUpdateCb != null) {
		p.onUpdateCb();
	}
	if(!p.paused && !p.destroyed) {
		var _g = 0;
		var _g1 = p.children;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			dn_Process._doMainUpdate(p);
		}
	}
};
dn_Process._doFixedUpdate = function(p) {
	if(!(!p.paused && !p.destroyed)) {
		return;
	}
	p._fixedUpdateCounter += p.utmod * p.getComputedTimeMultiplier();
	while(p._fixedUpdateCounter >= p.getDefaultFrameRate() / p.fixedUpdateFps) {
		p._fixedUpdateCounter -= p.getDefaultFrameRate() / p.fixedUpdateFps;
		if(!p.paused && !p.destroyed) {
			p.fixedUpdate();
			if(p.onFixedUpdateCb != null) {
				p.onFixedUpdateCb();
			}
		}
	}
	if(!p.paused && !p.destroyed) {
		var _g = 0;
		var _g1 = p.children;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			dn_Process._doFixedUpdate(p);
		}
	}
};
dn_Process._doPostUpdate = function(p) {
	if(!(!p.paused && !p.destroyed)) {
		return;
	}
	p.postUpdate();
	if(!p.destroyed) {
		var _g = 0;
		var _g1 = p.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			dn_Process._doPostUpdate(c);
		}
	}
};
dn_Process._garbageCollector = function(plist) {
	var i = 0;
	while(i < plist.length) {
		var p = plist[i];
		if(p.destroyed) {
			dn_Process._disposeProcess(p);
		} else {
			dn_Process._garbageCollector(p.children);
			++i;
		}
	}
};
dn_Process._disposeProcess = function(p) {
	var _g = 0;
	var _g1 = p.children;
	while(_g < _g1.length) {
		var p1 = _g1[_g];
		++_g;
		p1.destroyed = true;
	}
	dn_Process._garbageCollector(p.children);
	p.delayer.destroy();
	p.cd.destroy();
	p.tw.destroy();
	if(p.parent != null) {
		HxOverrides.remove(p.parent.children,p);
	} else {
		HxOverrides.remove(dn_Process.ROOTS,p);
	}
	if(p.root != null) {
		var _this = p.root;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
	}
	p.onDispose();
	if(p.onDisposeCb != null) {
		p.onDisposeCb();
	}
	p.parent = null;
	p.children = null;
	p.delayer = null;
	p.cd = null;
	p.tw = null;
	p.root = null;
};
dn_Process._resizeProcess = function(p) {
	if(!p.destroyed) {
		p.onResize();
		var _g = 0;
		var _g1 = p.children;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			dn_Process._resizeProcess(p);
		}
	}
};
dn_Process.updateAll = function(utmod) {
	var _g = 0;
	var _g1 = dn_Process.ROOTS;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		if(!p.paused && !p.destroyed) {
			p.utmod = utmod;
			p.ftime += p.utmod * p.getComputedTimeMultiplier();
			p.uftime += p.utmod;
			p.delayer.update(p.utmod * p.getComputedTimeMultiplier());
			if(!p.paused && !p.destroyed) {
				p.udelayer.update(p.utmod);
			}
			if(!p.paused && !p.destroyed) {
				p.cd.update(p.utmod * p.getComputedTimeMultiplier());
			}
			if(!p.paused && !p.destroyed) {
				p.ucd.update(p.utmod);
			}
			if(!p.paused && !p.destroyed) {
				p.tw.update(p.utmod * p.getComputedTimeMultiplier());
			}
			if(!p.paused && !p.destroyed) {
				if(!p._initOnceDone) {
					p.initOnceBeforeUpdate();
					p._initOnceDone = true;
				}
				p.preUpdate();
			}
			if(!p.paused && !p.destroyed) {
				var _g2 = 0;
				var _g3 = p.children;
				while(_g2 < _g3.length) {
					var c = _g3[_g2];
					++_g2;
					if(!c.paused && !c.destroyed) {
						c.utmod = p.utmod;
						c.ftime += c.utmod * c.getComputedTimeMultiplier();
						c.uftime += c.utmod;
						c.delayer.update(c.utmod * c.getComputedTimeMultiplier());
						if(!c.paused && !c.destroyed) {
							c.udelayer.update(c.utmod);
						}
						if(!c.paused && !c.destroyed) {
							c.cd.update(c.utmod * c.getComputedTimeMultiplier());
						}
						if(!c.paused && !c.destroyed) {
							c.ucd.update(c.utmod);
						}
						if(!c.paused && !c.destroyed) {
							c.tw.update(c.utmod * c.getComputedTimeMultiplier());
						}
						if(!c.paused && !c.destroyed) {
							if(!c._initOnceDone) {
								c.initOnceBeforeUpdate();
								c._initOnceDone = true;
							}
							c.preUpdate();
						}
						if(!c.paused && !c.destroyed) {
							var _g4 = 0;
							var _g5 = c.children;
							while(_g4 < _g5.length) {
								var c1 = _g5[_g4];
								++_g4;
								dn_Process._doPreUpdate(c1,c.utmod);
							}
						}
					}
				}
			}
		}
	}
	var _g = 0;
	var _g1 = dn_Process.ROOTS;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		dn_Process._doMainUpdate(p);
	}
	var _g = 0;
	var _g1 = dn_Process.ROOTS;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		dn_Process._doFixedUpdate(p);
	}
	var _g = 0;
	var _g1 = dn_Process.ROOTS;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		if(!p.paused && !p.destroyed) {
			p.postUpdate();
			if(!p.destroyed) {
				var _g2 = 0;
				var _g3 = p.children;
				while(_g2 < _g3.length) {
					var c = _g3[_g2];
					++_g2;
					if(!c.paused && !c.destroyed) {
						c.postUpdate();
						if(!c.destroyed) {
							var _g4 = 0;
							var _g5 = c.children;
							while(_g4 < _g5.length) {
								var c1 = _g5[_g4];
								++_g4;
								dn_Process._doPostUpdate(c1);
							}
						}
					}
				}
			}
		}
	}
	dn_Process._garbageCollector(dn_Process.ROOTS);
};
dn_Process.resizeAll = function() {
	var _g = 0;
	var _g1 = dn_Process.ROOTS;
	while(_g < _g1.length) {
		var p = _g1[_g];
		++_g;
		if(!p.destroyed) {
			p.onResize();
			var _g2 = 0;
			var _g3 = p.children;
			while(_g2 < _g3.length) {
				var p1 = _g3[_g2];
				++_g2;
				if(!p1.destroyed) {
					p1.onResize();
					var _g4 = 0;
					var _g5 = p1.children;
					while(_g4 < _g5.length) {
						var p2 = _g5[_g4];
						++_g4;
						dn_Process._resizeProcess(p2);
					}
				}
			}
		}
	}
};
dn_Process.prototype = {
	init: function() {
		this.name = "process";
		this.uniqId = dn_Process.UNIQ_ID++;
		this.children = [];
		this.paused = false;
		this.destroyed = false;
		this.ftime = 0;
		this.uftime = 0;
		this.utmod = 1;
		this.baseTimeMul = 1;
		this.cd = new dn_Cooldown(this.getDefaultFrameRate());
		this.delayer = new dn_Delayer(this.getDefaultFrameRate());
		this.tw = new dn_Tweenie(this.getDefaultFrameRate());
		this.ucd = new dn_Cooldown(this.getDefaultFrameRate());
		this.udelayer = new dn_Delayer(this.getDefaultFrameRate());
	}
	,initOnceBeforeUpdate: function() {
	}
	,createRoot: function(ctx) {
		if(this.root != null) {
			throw haxe_Exception.thrown(Std.string(this) + ": root already created!");
		}
		if(ctx == null) {
			if(this.parent == null || this.parent.root == null) {
				throw haxe_Exception.thrown(Std.string(this) + ": context required");
			}
			ctx = this.parent.root;
		}
		this.root = new h2d_Layers(ctx);
	}
	,createRootInLayers: function(ctx,plan) {
		if(this.root != null) {
			throw haxe_Exception.thrown(Std.string(this) + ": root already exists");
		}
		this.root = new h2d_Layers();
		ctx.addChildAt(this.root,plan);
	}
	,preUpdate: function() {
	}
	,update: function() {
	}
	,fixedUpdate: function() {
	}
	,postUpdate: function() {
	}
	,onResize: function() {
	}
	,onDispose: function() {
	}
	,onUpdateCb: function() {
	}
	,onFixedUpdateCb: function() {
	}
	,onDisposeCb: function() {
	}
	,toString: function() {
		return this.name + ":" + this.uniqId;
	}
	,getDefaultFrameRate: function() {
		return hxd_Timer.wantedFPS;
	}
	,getComputedTimeMultiplier: function() {
		var y = this.baseTimeMul * (this.parent == null ? 1 : this.parent.getComputedTimeMultiplier());
		if(0 > y) {
			return 0;
		} else {
			return y;
		}
	}
	,pause: function() {
		this.paused = true;
	}
	,resume: function() {
		this.paused = false;
	}
	,addChild: function(p) {
		if(p.parent == null) {
			HxOverrides.remove(dn_Process.ROOTS,p);
		} else {
			HxOverrides.remove(p.parent.children,p);
		}
		p.parent = this;
		this.children.push(p);
	}
	,createChildProcess: function(onUpdate,onDispose,runUpdateImmediatly) {
		if(runUpdateImmediatly == null) {
			runUpdateImmediatly = false;
		}
		var p = new dn_Process(this);
		p.name = "childProcess";
		if(onUpdate != null) {
			p.onUpdateCb = function() {
				onUpdate(p);
			};
		}
		if(onDispose != null) {
			p.onDisposeCb = function() {
				onDispose(p);
			};
		}
		if(runUpdateImmediatly) {
			if(!p.paused && !p.destroyed) {
				p.utmod = 1;
				p.ftime += p.utmod * p.getComputedTimeMultiplier();
				p.uftime += p.utmod;
				p.delayer.update(p.utmod * p.getComputedTimeMultiplier());
				if(!p.paused && !p.destroyed) {
					p.udelayer.update(p.utmod);
				}
				if(!p.paused && !p.destroyed) {
					p.cd.update(p.utmod * p.getComputedTimeMultiplier());
				}
				if(!p.paused && !p.destroyed) {
					p.ucd.update(p.utmod);
				}
				if(!p.paused && !p.destroyed) {
					p.tw.update(p.utmod * p.getComputedTimeMultiplier());
				}
				if(!p.paused && !p.destroyed) {
					if(!p._initOnceDone) {
						p.initOnceBeforeUpdate();
						p._initOnceDone = true;
					}
					p.preUpdate();
				}
				if(!p.paused && !p.destroyed) {
					var _g = 0;
					var _g1 = p.children;
					while(_g < _g1.length) {
						var c = _g1[_g];
						++_g;
						if(!c.paused && !c.destroyed) {
							c.utmod = p.utmod;
							c.ftime += c.utmod * c.getComputedTimeMultiplier();
							c.uftime += c.utmod;
							c.delayer.update(c.utmod * c.getComputedTimeMultiplier());
							if(!c.paused && !c.destroyed) {
								c.udelayer.update(c.utmod);
							}
							if(!c.paused && !c.destroyed) {
								c.cd.update(c.utmod * c.getComputedTimeMultiplier());
							}
							if(!c.paused && !c.destroyed) {
								c.ucd.update(c.utmod);
							}
							if(!c.paused && !c.destroyed) {
								c.tw.update(c.utmod * c.getComputedTimeMultiplier());
							}
							if(!c.paused && !c.destroyed) {
								if(!c._initOnceDone) {
									c.initOnceBeforeUpdate();
									c._initOnceDone = true;
								}
								c.preUpdate();
							}
							if(!c.paused && !c.destroyed) {
								var _g2 = 0;
								var _g3 = c.children;
								while(_g2 < _g3.length) {
									var c1 = _g3[_g2];
									++_g2;
									dn_Process._doPreUpdate(c1,c.utmod);
								}
							}
						}
					}
				}
			}
			dn_Process._doMainUpdate(p);
		}
		return p;
	}
	,__class__: dn_Process
};
var Camera = function() {
	this.shakePower = 1.0;
	this.bumpOffY = 0.;
	this.bumpOffX = 0.;
	dn_Process.call(this,Game.ME);
	this.x = this.y = 0;
	this.dx = this.dy = 0;
};
$hxClasses["Camera"] = Camera;
Camera.__name__ = "Camera";
Camera.__super__ = dn_Process;
Camera.prototype = $extend(dn_Process.prototype,{
	get_wid: function() {
		var _this = Game.ME;
		var x = (dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) / Const.SCALE;
		if(x > .0) {
			var t = x + .5 | 0;
			if(t < x) {
				return t + 1;
			} else {
				return t;
			}
		} else if(x < .0) {
			var t = x - .5 | 0;
			if(t < x) {
				return t + 1;
			} else {
				return t;
			}
		} else {
			return 0;
		}
	}
	,get_hei: function() {
		var _this = Game.ME;
		var x = (dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height()) / Const.SCALE;
		if(x > .0) {
			var t = x + .5 | 0;
			if(t < x) {
				return t + 1;
			} else {
				return t;
			}
		} else if(x < .0) {
			var t = x - .5 | 0;
			if(t < x) {
				return t + 1;
			} else {
				return t;
			}
		} else {
			return 0;
		}
	}
	,trackTarget: function(e,immediate) {
		this.target = e;
		if(immediate) {
			this.recenter();
		}
	}
	,recenter: function() {
		if(this.target != null) {
			var _this = this.target;
			this.x = (_this.cx + _this.xr) * Const.GRID;
			var _this = this.target;
			this.y = (_this.cy + _this.yr) * Const.GRID - _this.hei * 0.5;
		}
	}
	,update: function() {
		dn_Process.prototype.update.call(this);
		if(this.target != null) {
			var s = 0.006;
			var deadZone = 5;
			var _this = this.target;
			var tx = (_this.cx + _this.xr) * Const.GRID;
			var _this = this.target;
			var ty = (_this.cy + _this.yr) * Const.GRID - Const.GRID * 2;
			var ax = this.x;
			var ay = this.y;
			var d = Math.sqrt((ax - tx) * (ax - tx) + (ay - ty) * (ay - ty));
			if(d >= deadZone) {
				var a = Math.atan2(ty - this.y,tx - this.x);
				this.dx += Math.cos(a) * (d - deadZone) * s * (this.utmod * this.getComputedTimeMultiplier());
				this.dy += Math.sin(a) * (d - deadZone) * s * (this.utmod * this.getComputedTimeMultiplier());
			}
		}
		var frict = 0.89;
		this.x += this.dx * (this.utmod * this.getComputedTimeMultiplier());
		this.dx *= Math.pow(frict,this.utmod * this.getComputedTimeMultiplier());
		this.y += this.dy * (this.utmod * this.getComputedTimeMultiplier());
		this.dy *= Math.pow(frict,this.utmod * this.getComputedTimeMultiplier());
	}
	,postUpdate: function() {
		dn_Process.prototype.postUpdate.call(this);
		if(!ui_Console.ME.hasFlag("scroll")) {
			var level = Game.ME.level;
			var scroller = Game.ME.scroller;
			if(this.get_wid() < level.data.l_Collisions.cWid * Const.GRID) {
				var v = -this.x + this.get_wid() * 0.5;
				scroller.posChanged = true;
				scroller.x = v;
			} else {
				var v = this.get_wid() * 0.5;
				scroller.posChanged = true;
				scroller.x = v - level.data.l_Collisions.cWid * 0.5 * Const.GRID;
			}
			if(this.get_hei() < level.data.l_Collisions.cHei * Const.GRID) {
				var v = -this.y + this.get_hei() * 0.5;
				scroller.posChanged = true;
				scroller.y = v;
			} else {
				var v = this.get_hei() * 0.5;
				scroller.posChanged = true;
				scroller.y = v - level.data.l_Collisions.cHei * 0.5 * Const.GRID;
			}
			if(this.get_wid() < level.data.l_Collisions.cWid * Const.GRID) {
				var x = scroller.x;
				var min = this.get_wid() - level.data.l_Collisions.cWid * Const.GRID;
				scroller.posChanged = true;
				scroller.x = x < min ? min : x > 0 ? 0 : x;
			}
			if(this.get_hei() < level.data.l_Collisions.cHei * Const.GRID) {
				var x = scroller.y;
				var min = this.get_hei() - level.data.l_Collisions.cHei * Const.GRID;
				scroller.posChanged = true;
				scroller.y = x < min ? min : x > 0 ? 0 : x;
			}
			this.bumpOffX *= Math.pow(0.75,this.utmod * this.getComputedTimeMultiplier());
			this.bumpOffY *= Math.pow(0.75,this.utmod * this.getComputedTimeMultiplier());
			var _g = scroller;
			_g.posChanged = true;
			_g.x += this.bumpOffX;
			var _g = scroller;
			_g.posChanged = true;
			_g.y += this.bumpOffY;
			if(this.cd.fastCheck.h.hasOwnProperty(50331648)) {
				var _g = scroller;
				var v = _g.x + Math.cos(this.ftime * 1.1) * 2.5 * this.shakePower * this.cd._getRatio(50331648);
				_g.posChanged = true;
				_g.x = v;
				var _g = scroller;
				var v = _g.y + Math.sin(0.3 + this.ftime * 1.7) * 2.5 * this.shakePower * this.cd._getRatio(50331648);
				_g.posChanged = true;
				_g.y = v;
			}
			var _g = scroller;
			_g.posChanged = true;
			_g.x *= Const.SCALE;
			var _g = scroller;
			_g.posChanged = true;
			_g.y *= Const.SCALE;
			var x = scroller.x;
			scroller.posChanged = true;
			scroller.x = (x > 0 ? x + .5 : x < 0 ? x - .5 : 0) | 0;
			var x = scroller.y;
			scroller.posChanged = true;
			scroller.y = (x > 0 ? x + .5 : x < 0 ? x - .5 : 0) | 0;
		}
	}
	,__class__: Camera
});
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Const = function() { };
$hxClasses["Const"] = Const;
Const.__name__ = "Const";
var Data = function() { };
$hxClasses["Data"] = Data;
Data.__name__ = "Data";
Data.load = function(content,allowReload) {
	if(allowReload == null) {
		allowReload = false;
	}
	Data.root = cdb_Parser.parse(content,false);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,__class__: EReg
};
var Entity = function(x,y) {
	this.layer = -1;
	this.hasCartoonDistorsion = true;
	this.hasWallCollisions = true;
	this.carriageWidth = 1.;
	this.carriedShaking = 0.;
	this.carriedEnts = [];
	this.actions = [];
	this.prevFrameFootY = -Const.INFINITE;
	this.prevFrameFootX = -Const.INFINITE;
	this.invalidateDebugBounds = false;
	this.entityVisible = true;
	this.sprRotation = 0.;
	this.sprSquashY = 1.0;
	this.sprSquashX = 1.0;
	this.sprScaleY = 1.0;
	this.sprScaleX = 1.0;
	this.dir = 1;
	this.radius = Const.GRID * 0.5;
	this.hei = Const.GRID;
	this.bumpFrict = 0.93;
	this.frictY = 0.82;
	this.frictX = 0.82;
	this.bdy = 0.;
	this.bdx = 0.;
	this.gravityMul = 1.0;
	this.dy = 0.;
	this.dx = 0.;
	this.yr = 1.0;
	this.xr = 0.5;
	this.cy = 0;
	this.cx = 0;
	this.randVal = Math.random();
	this.affects = new haxe_ds_EnumValueMap();
	this.destroyed = false;
	this.uid = Const._uniq++;
	Entity.ALL.push(this);
	var sign = null;
	if(sign == null) {
		sign = false;
	}
	this.carriedRandOffset = sign ? (-1 + Math.random() * 2) * (Std.random(2) * 2 - 1) : -1 + Math.random() * 2;
	this.cd = new dn_Cooldown(Const.FPS);
	this.ucd = new dn_Cooldown(Const.FPS);
	this.setPosCase(x,y);
	this.spr = new dn_heaps_slib_HSprite(Assets.tiles);
	this.addToLayer(Const.DP_MAIN);
	this.spr.set_colorAdd(new h3d_Vector());
	this.baseColor = new h3d_Vector();
	this.blinkColor = new h3d_Vector();
	this.spr.set_colorMatrix(this.colorMatrix = h3d_Matrix.I());
	var xRatio = 0.5;
	var yRatio = 1;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = this.spr.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(ui_Console.ME.hasFlag("bounds")) {
		this.enableBounds();
	}
};
$hxClasses["Entity"] = Entity;
Entity.__name__ = "Entity";
Entity.prototype = {
	addToLayer: function(id) {
		if(this.layer == id) {
			Game.ME.scroller.over(this.spr);
			return;
		}
		this.layer = id;
		Game.ME.scroller.addChildAt(this.spr,id);
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ("@" + this.cx + "," + this.cy);
	}
	,setPosCase: function(x,y) {
		this.cx = x;
		this.cy = y;
		this.xr = 0.5;
		this.yr = 1;
		this.onPosManuallyChanged();
	}
	,startCarrying: function(e) {
		if(!this.isCarrying(e)) {
			if(e.isCarried()) {
				e.carrier.stopCarrying(e);
			}
			this.carriedEnts.push(e);
			e.carrier = this;
			e.onBeingCarried(this);
		}
	}
	,stopCarrying: function(e) {
		if(HxOverrides.remove(this.carriedEnts,e)) {
			e.setPosCase(this.cx,this.cy);
			e.xr = this.xr;
			e.yr = this.yr;
			e.carrier = null;
			e.onStopBeingCarried(this);
		}
	}
	,onBeingCarried: function(by) {
	}
	,onStopBeingCarried: function(by) {
	}
	,getCarriageX: function(offset) {
		return (this.cx + this.xr) * Const.GRID + this.carriageWidth * offset;
	}
	,getCarriageY: function(offset) {
		return (this.cy + this.yr) * Const.GRID;
	}
	,isCarrying: function(e) {
		var _g = 0;
		var _g1 = this.carriedEnts;
		while(_g < _g1.length) {
			var ce = _g1[_g];
			++_g;
			if(ce == e) {
				return true;
			}
		}
		return false;
	}
	,isCarried: function() {
		return this.carrier != null;
	}
	,setPosPixel: function(x,y) {
		this.cx = x / Const.GRID | 0;
		this.cy = y / Const.GRID | 0;
		this.xr = (x - this.cx * Const.GRID) / Const.GRID;
		this.yr = (y - this.cy * Const.GRID) / Const.GRID;
		this.onPosManuallyChanged();
	}
	,onPosManuallyChanged: function() {
		var ax = (this.cx + this.xr) * Const.GRID;
		var ay = (this.cy + this.yr) * Const.GRID;
		var bx = this.prevFrameFootX;
		var by = this.prevFrameFootY;
		if(Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) > Const.GRID * 2) {
			this.prevFrameFootX = (this.cx + this.xr) * Const.GRID;
			this.prevFrameFootY = (this.cy + this.yr) * Const.GRID;
		}
	}
	,bump: function(x,y) {
		this.bdx += x;
		this.bdy += y;
	}
	,cancelVelocities: function() {
		this.dx = this.bdx = 0;
		this.dy = this.bdy = 0;
	}
	,is: function(c) {
		return js_Boot.__instanceof(this,c);
	}
	,canSeeThrough: function(x,y) {
		if(x == this.cx && y == this.cy) {
			return true;
		} else {
			var _this = Game.ME.level;
			var tmp;
			if(!(x >= 0 && x < _this.data.l_Collisions.cWid && y >= 0 && y < _this.data.l_Collisions.cHei)) {
				tmp = true;
			} else {
				var tmp1;
				var _this1 = _this.data.l_Collisions;
				if((!(x >= 0 && x < _this1.cWid && y >= 0 && y < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(x + y * _this1.cWid) ? -1 : _this1.intGrid.h[x + y * _this1.cWid]) != 0) {
					var _this1 = _this.data.l_Collisions;
					tmp1 = (!(x >= 0 && x < _this1.cWid && y >= 0 && y < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(x + y * _this1.cWid) ? -1 : _this1.intGrid.h[x + y * _this1.cWid]) == 2;
				} else {
					tmp1 = true;
				}
				if(!tmp1) {
					var _this1 = _this.data.l_Collisions;
					tmp = (!(x >= 0 && x < _this1.cWid && y >= 0 && y < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(x + y * _this1.cWid) ? -1 : _this1.intGrid.h[x + y * _this1.cWid]) == 4;
				} else {
					tmp = true;
				}
			}
			return !tmp;
		}
	}
	,dispose: function() {
		HxOverrides.remove(Entity.ALL,this);
		var _g = 0;
		var _g1 = this.carriedEnts;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.onStopBeingCarried(this);
			}
		}
		this.carriedEnts = null;
		this.baseColor = null;
		this.blinkColor = null;
		this.colorMatrix = null;
		var _this = this.spr;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		this.spr = null;
		if(this.debugLabel != null) {
			var _this = this.debugLabel;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.debugLabel = null;
		}
		if(this.debugBounds != null) {
			var _this = this.debugBounds;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.debugBounds = null;
		}
		this.cd.destroy();
		this.cd = null;
	}
	,enableBounds: function() {
		if(this.debugBounds == null) {
			this.debugBounds = new h2d_Graphics();
			Game.ME.scroller.addChildAt(this.debugBounds,Const.DP_TOP);
		}
		this.invalidateDebugBounds = true;
	}
	,renderBounds: function() {
		var saturation = 1;
		var luminosity = 1;
		if(luminosity == null) {
			luminosity = 1.0;
		}
		if(saturation == null) {
			saturation = 1.0;
		}
		var hsl = { h : this.uid % 20 / 20, s : saturation, l : luminosity};
		var c_r = 0;
		var c_g = 0;
		var c_b = 0;
		var r = 0.;
		var g = 0.;
		var b = 0.;
		if(hsl.s == 0) {
			c_b = Math.round(hsl.l * 255);
			c_g = c_b;
			c_r = c_g;
		} else {
			var h = hsl.h * 6;
			var i = Math.floor(h);
			var c1 = hsl.l * (1 - hsl.s);
			var c2 = hsl.l * (1 - hsl.s * (h - i));
			var c3 = hsl.l * (1 - hsl.s * (1 - (h - i)));
			if(i == 0 || i == 6) {
				r = hsl.l;
				g = c3;
				b = c1;
			} else if(i == 1) {
				r = c2;
				g = hsl.l;
				b = c1;
			} else if(i == 2) {
				r = c1;
				g = hsl.l;
				b = c3;
			} else if(i == 3) {
				r = c1;
				g = c2;
				b = hsl.l;
			} else if(i == 4) {
				r = c3;
				g = c1;
				b = hsl.l;
			} else {
				r = hsl.l;
				g = c1;
				b = c2;
			}
			c_r = Math.round(r * 255);
			c_g = Math.round(g * 255);
			c_b = Math.round(b * 255);
		}
		var c = c_r << 16 | c_g << 8 | c_b;
		this.debugBounds.clear();
		this.debugBounds.lineStyle(1,c,0.8);
		this.debugBounds.drawCircle(0,-this.radius,this.radius);
		this.debugBounds.lineStyle(1,c,0.5);
		this.debugBounds.drawRect(-this.radius,-this.hei,this.radius * 2,this.hei);
		this.debugBounds.lineStyle(1,16777215,1);
		var d = Const.GRID * 0.2;
		var _this = this.debugBounds;
		var x = -d;
		_this.flush();
		_this.addVertex(x,0,_this.curR,_this.curG,_this.curB,_this.curA,x * _this.ma + 0 * _this.mc + _this.mx,x * _this.mb + 0 * _this.md + _this.my);
		var _this = this.debugBounds;
		_this.addVertex(d,0,_this.curR,_this.curG,_this.curB,_this.curA,d * _this.ma + 0 * _this.mc + _this.mx,d * _this.mb + 0 * _this.md + _this.my);
		var _this = this.debugBounds;
		var y = -d;
		_this.flush();
		_this.addVertex(0,y,_this.curR,_this.curG,_this.curB,_this.curA,0 * _this.ma + y * _this.mc + _this.mx,0 * _this.mb + y * _this.md + _this.my);
		var _this = this.debugBounds;
		_this.addVertex(0,0,_this.curR,_this.curG,_this.curB,_this.curA,0 * _this.ma + 0 * _this.mc + _this.mx,0 * _this.mb + 0 * _this.md + _this.my);
		this.debugBounds.lineStyle(1,c,0.3);
		this.debugBounds.drawCircle(0,-this.hei * 0.5,3);
		this.debugBounds.lineStyle(1,c,0.3);
		this.debugBounds.drawCircle(0,(this.cy + this.yr) * Const.GRID - this.hei - (this.cy + this.yr) * Const.GRID,3);
	}
	,updateActions: function() {
		var i = 0;
		while(i < this.actions.length) {
			var a = this.actions[i];
			var _this = Game.ME;
			a.t -= _this.utmod * _this.getComputedTimeMultiplier() / Const.FPS;
			if(a.t <= 0) {
				this.actions.splice(i,1);
				if(!this.destroyed) {
					a.cb();
				}
			} else {
				++i;
			}
		}
	}
	,clearAffect: function(k) {
		if(this.affects.exists(k) && this.affects.get(k) > 0) {
			this.affects.remove(k);
			this.onAffectEnd(k);
		}
	}
	,updateAffects: function() {
		var k = this.affects.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var t = this.affects.get(k1);
			var _this = Game.ME;
			t -= 1 / Const.FPS * (_this.utmod * _this.getComputedTimeMultiplier());
			if(t <= 0) {
				this.clearAffect(k1);
			} else {
				this.affects.set(k1,t);
			}
		}
	}
	,onAffectEnd: function(k) {
	}
	,setSquashX: function(v) {
		this.sprSquashX = v;
		this.sprSquashY = 2 - v;
	}
	,setSquashY: function(v) {
		this.sprSquashX = 2 - v;
		this.sprSquashY = v;
	}
	,preUpdate: function() {
		this.ucd.update(Game.ME.utmod);
		var _this = Game.ME;
		this.cd.update(_this.utmod * _this.getComputedTimeMultiplier());
		this.updateAffects();
		this.updateActions();
	}
	,postUpdate: function() {
		var _this = this.spr;
		_this.posChanged = true;
		_this.x = (this.cx + this.xr) * Const.GRID | 0;
		var _this = this.spr;
		_this.posChanged = true;
		_this.y = (this.cy + this.yr) * Const.GRID | 0;
		var _this = this.spr;
		_this.posChanged = true;
		_this.scaleX = this.dir * this.sprScaleX * this.sprSquashX;
		var _this = this.spr;
		_this.posChanged = true;
		_this.scaleY = this.sprScaleY * this.sprSquashY;
		this.spr.set_visible(this.entityVisible);
		var _this = this.spr;
		_this.posChanged = true;
		_this.rotation = this.sprRotation;
		if(this.hasCartoonDistorsion) {
			var t = Game.ME.ftime * 0.1 + this.uid;
			var _g = this.spr;
			var v = _g.scaleX * (0.9 + Math.cos(t) * 0.1);
			_g.posChanged = true;
			_g.scaleX = v;
			var _g = this.spr;
			var v = _g.scaleY * (0.9 + Math.sin(t) * 0.1);
			_g.posChanged = true;
			_g.scaleY = v;
		}
		this.sprSquashX += (1 - this.sprSquashX) * 0.12;
		this.sprSquashY += (1 - this.sprSquashY) * 0.12;
		if(this.isCarried()) {
			var _g = this.spr;
			_g.posChanged = true;
			_g.x += 6 * this.carriedRandOffset;
			var _g = this.spr;
			var v = _g.x + Math.cos(Game.ME.ftime * 0.07 + this.uid * 1.1) * (5 + this.uid % 3) * this.carriageWidth * this.carriedShaking;
			_g.posChanged = true;
			_g.x = v;
			var _g = this.spr;
			var x = Math.sin(Game.ME.ftime * 0.13 + this.uid * 0.9) * (5 + this.uid % 5);
			_g.posChanged = true;
			_g.y += -(x < 0 ? -x : x) * this.carriedShaking;
		}
		var _this = Game.ME;
		this.carriedShaking *= Math.pow(0.98,_this.utmod * _this.getComputedTimeMultiplier());
		if(!this.cd.fastCheck.h.hasOwnProperty(29360128)) {
			var _this = Game.ME;
			this.blinkColor.x *= Math.pow(0.60,_this.utmod * _this.getComputedTimeMultiplier());
			var _this = Game.ME;
			this.blinkColor.y *= Math.pow(0.55,_this.utmod * _this.getComputedTimeMultiplier());
			var _this = Game.ME;
			this.blinkColor.z *= Math.pow(0.50,_this.utmod * _this.getComputedTimeMultiplier());
		}
		var _this = this.spr.get_colorAdd();
		var v = this.baseColor;
		_this.x = v.x;
		_this.y = v.y;
		_this.z = v.z;
		_this.w = v.w;
		this.spr.get_colorAdd().x += this.blinkColor.x;
		this.spr.get_colorAdd().y += this.blinkColor.y;
		this.spr.get_colorAdd().z += this.blinkColor.z;
		if(this.debugLabel != null) {
			var _this = this.debugLabel;
			var v = (this.cx + this.xr) * Const.GRID - this.debugLabel.get_textWidth() * 0.5 | 0;
			_this.posChanged = true;
			_this.x = v;
			var _this = this.debugLabel;
			_this.posChanged = true;
			_this.y = (this.cy + this.yr) * Const.GRID + 1 | 0;
		}
		if(this.debugBounds != null) {
			if(this.invalidateDebugBounds) {
				this.invalidateDebugBounds = false;
				this.renderBounds();
			}
			var _this = this.debugBounds;
			_this.posChanged = true;
			_this.x = (this.cx + this.xr) * Const.GRID;
			var _this = this.debugBounds;
			_this.posChanged = true;
			_this.y = (this.cy + this.yr) * Const.GRID;
		}
	}
	,finalUpdate: function() {
		this.prevFrameFootX = (this.cx + this.xr) * Const.GRID;
		this.prevFrameFootY = (this.cy + this.yr) * Const.GRID;
	}
	,onLand: function() {
	}
	,fixedUpdate: function() {
	}
	,update: function() {
		if(this.carrier != null && this.carrier.destroyed) {
			var e = this.carrier;
			this.onStopBeingCarried(e);
			this.carrier = null;
		}
		var i = 0;
		while(i < this.carriedEnts.length) if(this.carriedEnts[i].destroyed) {
			this.carriedEnts.splice(i,1);
		} else {
			++i;
		}
		if(this.isCarried() && !this.cd.fastCheck.h.hasOwnProperty(12582912)) {
			this.bdx = this.bdy = 0;
			var tx = this.carrier.getCarriageX(this.carriedRandOffset);
			var ty = this.carrier.getCarriageY(this.carriedRandOffset);
			var ax = (this.cx + this.xr) * Const.GRID;
			var ay = (this.cy + this.yr) * Const.GRID;
			if(Math.sqrt((ax - tx) * (ax - tx) + (ay - ty) * (ay - ty)) > 0.2 * Const.GRID) {
				var a = Math.atan2(ty - (this.cy + this.yr) * Const.GRID,tx - (this.cx + this.xr) * Const.GRID);
				var _this = Game.ME;
				this.dx += Math.cos(a) * 0.08 * (_this.utmod * _this.getComputedTimeMultiplier());
				var _this = Game.ME;
				this.dy += Math.sin(a) * 0.11 * (_this.utmod * _this.getComputedTimeMultiplier());
			}
			var _this = Game.ME;
			this.dx *= Math.pow(0.92,_this.utmod * _this.getComputedTimeMultiplier());
			var _this = Game.ME;
			this.dy *= Math.pow(0.92,_this.utmod * _this.getComputedTimeMultiplier());
		}
		var tmp;
		var x = this.dx + this.bdx;
		if(!((x < 0 ? -x : x) > 0.03)) {
			var x = this.dy + this.bdy;
			tmp = (x < 0 ? -x : x) > 0.03;
		} else {
			tmp = true;
		}
		if(tmp) {
			var _g = 0;
			var _g1 = this.carriedEnts;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var _this = Game.ME;
				e.carriedShaking += 0.05 * (_this.utmod * _this.getComputedTimeMultiplier());
				if(e.carriedShaking > 1) {
					e.carriedShaking = 1;
				}
			}
		}
		var _this = Game.ME;
		var x = (this.dx + this.bdx) * (_this.utmod * _this.getComputedTimeMultiplier());
		var x1 = x < 0 ? -x : x;
		var steps;
		if(x1 > .0) {
			var t = x1 + .5 | 0;
			steps = t < x1 ? t + 1 : t;
		} else if(x1 < .0) {
			var t = x1 - .5 | 0;
			steps = t < x1 ? t + 1 : t;
		} else {
			steps = 0;
		}
		var _this = Game.ME;
		var step = (this.dx + this.bdx) * (_this.utmod * _this.getComputedTimeMultiplier()) / steps;
		while(steps > 0) {
			this.xr += step;
			var tmp;
			if(!this.isCarried() && this.hasWallCollisions) {
				var _this = Game.ME.level;
				var cx = this.cx + 1;
				var cy = this.cy;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp = true;
				} else {
					var tmp1;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this2 = _this.data.l_Collisions;
						tmp1 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						var _this3 = _this.data.l_Collisions;
						tmp = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp && this.xr > 0.65) {
				var _this4 = Game.ME;
				this.dx *= Math.pow(0.9,_this4.utmod * _this4.getComputedTimeMultiplier());
				this.xr = 0.65;
			}
			var tmp2;
			if(!this.isCarried() && this.hasWallCollisions) {
				var _this5 = Game.ME.level;
				var cx1 = this.cx - 1;
				var cy1 = this.cy;
				if(!(cx1 >= 0 && cx1 < _this5.data.l_Collisions.cWid && cy1 >= 0 && cy1 < _this5.data.l_Collisions.cHei)) {
					tmp2 = true;
				} else {
					var tmp3;
					var _this6 = _this5.data.l_Collisions;
					if((!(cx1 >= 0 && cx1 < _this6.cWid && cy1 >= 0 && cy1 < _this6.cHei) || !_this6.intGrid.h.hasOwnProperty(cx1 + cy1 * _this6.cWid) ? -1 : _this6.intGrid.h[cx1 + cy1 * _this6.cWid]) != 0) {
						var _this7 = _this5.data.l_Collisions;
						tmp3 = (!(cx1 >= 0 && cx1 < _this7.cWid && cy1 >= 0 && cy1 < _this7.cHei) || !_this7.intGrid.h.hasOwnProperty(cx1 + cy1 * _this7.cWid) ? -1 : _this7.intGrid.h[cx1 + cy1 * _this7.cWid]) == 2;
					} else {
						tmp3 = true;
					}
					if(!tmp3) {
						var _this8 = _this5.data.l_Collisions;
						tmp2 = (!(cx1 >= 0 && cx1 < _this8.cWid && cy1 >= 0 && cy1 < _this8.cHei) || !_this8.intGrid.h.hasOwnProperty(cx1 + cy1 * _this8.cWid) ? -1 : _this8.intGrid.h[cx1 + cy1 * _this8.cWid]) == 4;
					} else {
						tmp2 = true;
					}
				}
			} else {
				tmp2 = false;
			}
			if(tmp2 && this.xr < 0.35) {
				var _this9 = Game.ME;
				this.dx *= Math.pow(0.9,_this9.utmod * _this9.getComputedTimeMultiplier());
				this.xr = 0.35;
			}
			while(this.xr > 1) {
				this.xr--;
				this.cx++;
			}
			while(this.xr < 0) {
				this.xr++;
				this.cx--;
			}
			--steps;
		}
		var _this = Game.ME;
		this.dx *= Math.pow(this.frictX,_this.utmod * _this.getComputedTimeMultiplier());
		var _this = Game.ME;
		this.bdx *= Math.pow(this.bumpFrict,_this.utmod * _this.getComputedTimeMultiplier());
		var x = this.dx;
		var _this = Game.ME;
		if((x < 0 ? -x : x) <= 0.0005 * (_this.utmod * _this.getComputedTimeMultiplier())) {
			this.dx = 0;
		}
		var x = this.bdx;
		var _this = Game.ME;
		if((x < 0 ? -x : x) <= 0.0005 * (_this.utmod * _this.getComputedTimeMultiplier())) {
			this.bdx = 0;
		}
		var tmp;
		if(this.destroyed) {
			tmp = true;
		} else {
			var tmp1;
			if(this.yr == 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp1 = true;
				} else {
					var tmp2;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this1 = _this.data.l_Collisions;
						tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
					} else {
						tmp2 = true;
					}
					if(!tmp2) {
						var _this1 = _this.data.l_Collisions;
						tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			tmp = tmp1 && this.dy + this.bdy == 0;
		}
		if(tmp || this.isCarried()) {
			var _this = this.cd;
			var frames = 0.25 * this.cd.baseFps;
			var allowLower = true;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(0);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[0] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(0,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(0);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 0 + "): cooldown " + 0 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
		} else {
			var _this = Game.ME;
			this.dy += this.gravityMul * Const.GRAVITY * (_this.utmod * _this.getComputedTimeMultiplier());
		}
		var _this = Game.ME;
		var x = (this.dy + this.bdy) * (_this.utmod * _this.getComputedTimeMultiplier());
		var x1 = x < 0 ? -x : x;
		var steps;
		if(x1 > .0) {
			var t = x1 + .5 | 0;
			steps = t < x1 ? t + 1 : t;
		} else if(x1 < .0) {
			var t = x1 - .5 | 0;
			steps = t < x1 ? t + 1 : t;
		} else {
			steps = 0;
		}
		var _this = Game.ME;
		var step = (this.dy + this.bdy) * (_this.utmod * _this.getComputedTimeMultiplier()) / steps;
		while(steps > 0) {
			this.yr += step;
			var tmp;
			if(!this.isCarried() && this.hasWallCollisions && this.yr > 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp = true;
				} else {
					var tmp1;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this2 = _this.data.l_Collisions;
						tmp1 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						var _this3 = _this.data.l_Collisions;
						tmp = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				this.yr = 1;
				this.dy = 0;
				this.bdx *= 0.66;
				this.bdy = 0;
				this.onLand();
			}
			while(this.yr > 1) {
				this.yr--;
				this.cy++;
			}
			while(this.yr < 0) {
				this.yr++;
				this.cy--;
			}
			--steps;
		}
		var _this = Game.ME;
		this.dy *= Math.pow(this.frictY,_this.utmod * _this.getComputedTimeMultiplier());
		var _this = Game.ME;
		this.bdy *= Math.pow(this.bumpFrict,_this.utmod * _this.getComputedTimeMultiplier());
		var x = this.dy;
		var _this = Game.ME;
		if((x < 0 ? -x : x) <= 0.0005 * (_this.utmod * _this.getComputedTimeMultiplier())) {
			this.dy = 0;
		}
		var x = this.bdy;
		var _this = Game.ME;
		if((x < 0 ? -x : x) <= 0.0005 * (_this.utmod * _this.getComputedTimeMultiplier())) {
			this.bdy = 0;
		}
	}
	,__class__: Entity
};
var Fx = function() {
	dn_Process.call(this,Game.ME);
	var _this = Assets.tiles;
	if(_this.pages.length > 1) {
		throw haxe_Exception.thrown("Cannot access tile when there is multiple pages");
	}
	this.pool = new dn_heaps_ParticlePool(_this.pages[0],2048,Const.FPS);
	var _this = Assets.tiles;
	if(_this.pages.length > 1) {
		throw haxe_Exception.thrown("Cannot access tile when there is multiple pages");
	}
	this.bgAddSb = new h2d_SpriteBatch(_this.pages[0]);
	Game.ME.scroller.addChildAt(this.bgAddSb,Const.DP_FX_BG);
	this.bgAddSb.blendMode = h2d_BlendMode.Add;
	this.bgAddSb.hasRotationScale = true;
	var _this = Assets.tiles;
	if(_this.pages.length > 1) {
		throw haxe_Exception.thrown("Cannot access tile when there is multiple pages");
	}
	this.bgNormalSb = new h2d_SpriteBatch(_this.pages[0]);
	Game.ME.scroller.addChildAt(this.bgNormalSb,Const.DP_FX_BG);
	this.bgNormalSb.hasRotationScale = true;
	var _this = Assets.tiles;
	if(_this.pages.length > 1) {
		throw haxe_Exception.thrown("Cannot access tile when there is multiple pages");
	}
	this.topNormalSb = new h2d_SpriteBatch(_this.pages[0]);
	Game.ME.scroller.addChildAt(this.topNormalSb,Const.DP_FX_FRONT);
	this.topNormalSb.hasRotationScale = true;
	var _this = Assets.tiles;
	if(_this.pages.length > 1) {
		throw haxe_Exception.thrown("Cannot access tile when there is multiple pages");
	}
	this.topAddSb = new h2d_SpriteBatch(_this.pages[0]);
	Game.ME.scroller.addChildAt(this.topAddSb,Const.DP_FX_FRONT);
	this.topAddSb.blendMode = h2d_BlendMode.Add;
	this.topAddSb.hasRotationScale = true;
};
$hxClasses["Fx"] = Fx;
Fx.__name__ = "Fx";
Fx.__super__ = dn_Process;
Fx.prototype = $extend(dn_Process.prototype,{
	onDispose: function() {
		dn_Process.prototype.onDispose.call(this);
		this.pool.dispose();
		var _this = this.bgAddSb;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.bgNormalSb;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.topAddSb;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.topNormalSb;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
	}
	,clear: function() {
		var _this = this.pool;
		var _g = 0;
		var _g1 = _this.nalloc;
		while(_g < _g1) {
			var i = _g++;
			var p = _this.all[i];
			if(p.onKill != null) {
				p.onKill();
			}
			p.reset(null);
			p.visible = false;
		}
		_this.nalloc = 0;
	}
	,_dustPhysics: function(p) {
		var offX = 0;
		var offY = 1;
		if(offY == null) {
			offY = 0.;
		}
		if(offX == null) {
			offX = 0.;
		}
		var _this = Game.ME.level;
		var cx = (p.x + offX) / Const.GRID | 0;
		var cy = (p.y + offY) / Const.GRID | 0;
		var tmp;
		if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
			tmp = true;
		} else {
			var tmp1;
			var _this1 = _this.data.l_Collisions;
			if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
				var _this1 = _this.data.l_Collisions;
				tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				var _this1 = _this.data.l_Collisions;
				tmp = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
			} else {
				tmp = true;
			}
		}
		if(tmp) {
			p.dx = 0;
			p.dy = 0;
			p.dx *= Math.pow(0.5,this.utmod * this.getComputedTimeMultiplier());
			p.dr = 0;
			p.gy *= Math.pow(0.96,this.utmod * this.getComputedTimeMultiplier());
		}
	}
	,tractorSmoke: function(x,y,dir) {
		var _g = 0;
		while(_g < 10) {
			var i = _g++;
			var t = Assets.tiles.getTileRandom("fxSmoke");
			var sign = true;
			if(sign == null) {
				sign = false;
			}
			var x1 = x + (sign ? Math.random() * 5 * (Std.random(2) * 2 - 1) : Math.random() * 5);
			var sign1 = true;
			if(sign1 == null) {
				sign1 = false;
			}
			var y1 = y + (sign1 ? Math.random() * 5 * (Std.random(2) * 2 - 1) : Math.random() * 5);
			var _this = this.pool;
			var sb = this.bgNormalSb;
			var p;
			if(_this.nalloc < _this.all.length) {
				var p1 = _this.all[_this.nalloc];
				p1.reset(sb,t,x1,y1);
				p1.poolIdx = _this.nalloc;
				_this.nalloc++;
				p = p1;
			} else {
				var best = null;
				var _g1 = 0;
				var _g2 = _this.all;
				while(_g1 < _g2.length) {
					var p2 = _g2[_g1];
					++_g1;
					if(best == null || p2.stamp <= best.stamp) {
						best = p2;
					}
				}
				if(best.onKill != null) {
					best.onKill();
				}
				best.reset(sb,t,x1,y1);
				p = best;
			}
			var ratio = 1.0;
			if(ratio == null) {
				ratio = 1.0;
			}
			var a = UInt.toFloat(255);
			var x2 = a + (UInt.toFloat(215) - a) * ratio;
			p.r = ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) / 255;
			var a1 = UInt.toFloat(65535 & 255);
			var x3 = a1 + (UInt.toFloat(55225 & 255) - a1) * ratio;
			p.g = ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0) / 255;
			var a2 = UInt.toFloat(255);
			var x4 = a2 + (UInt.toFloat(136) - a2) * ratio;
			p.b = ((x4 > 0 ? x4 + .5 : x4 < 0 ? x4 - .5 : 0) | 0) / 255;
			var sign2 = null;
			if(sign2 == null) {
				sign2 = false;
			}
			var tmp = sign2 ? (0.05 + Math.random() * 0.05) * (Std.random(2) * 2 - 1) : 0.05 + Math.random() * 0.05;
			var sign3 = null;
			if(sign3 == null) {
				sign3 = false;
			}
			p.setFadeS(tmp,0.5,sign3 ? (0.5 + Math.random() * 0.5) * (Std.random(2) * 2 - 1) : 0.5 + Math.random() * 0.5);
			var sign4 = null;
			if(sign4 == null) {
				sign4 = false;
			}
			p.rotation = sign4 ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
			var sign5 = true;
			if(sign5 == null) {
				sign5 = false;
			}
			p.dr = sign5 ? Math.random() * 0.05 * (Std.random(2) * 2 - 1) : Math.random() * 0.05;
			var sign6 = null;
			if(sign6 == null) {
				sign6 = false;
			}
			p.scaleX = p.scaleY = sign6 ? (0.1 + Math.random() * 0.1) * (Std.random(2) * 2 - 1) : 0.1 + Math.random() * 0.1;
			var sign7 = null;
			if(sign7 == null) {
				sign7 = false;
			}
			p.scaleMul = sign7 ? (1.01 + Math.random() * 0.010000000000000009) * (Std.random(2) * 2 - 1) : 1.01 + Math.random() * 0.010000000000000009;
			p.dy = -2;
			var sign8 = null;
			if(sign8 == null) {
				sign8 = false;
			}
			p.gx = sign8 ? (0.003 + Math.random() * 0.001) * (Std.random(2) * 2 - 1) : 0.003 + Math.random() * 0.001;
			var sign9 = null;
			if(sign9 == null) {
				sign9 = false;
			}
			p.gy = -(sign9 ? (0.010 + Math.random() * 0.002) * (Std.random(2) * 2 - 1) : 0.010 + Math.random() * 0.002);
			var sign10 = null;
			if(sign10 == null) {
				sign10 = false;
			}
			p.frictX = p.frictY = sign10 ? (0.93 + Math.random() * 0.0099999999999998979) * (Std.random(2) * 2 - 1) : 0.93 + Math.random() * 0.0099999999999998979;
			var sign11 = null;
			if(sign11 == null) {
				sign11 = false;
			}
			p.set_lifeS(sign11 ? (0.2 + Math.random() * 0.49999999999999994) * (Std.random(2) * 2 - 1) : 0.2 + Math.random() * 0.49999999999999994);
		}
	}
	,grass: function(x,y,dir) {
		var _g = 0;
		while(_g < 3) {
			var i = _g++;
			var t = Assets.tiles.getTileRandom("fxDust");
			var sign = true;
			if(sign == null) {
				sign = false;
			}
			var x1 = x + (sign ? Math.random() * 10 * (Std.random(2) * 2 - 1) : Math.random() * 10);
			var sign1 = null;
			if(sign1 == null) {
				sign1 = false;
			}
			var y1 = y - (sign1 ? Math.random() * 2 * (Std.random(2) * 2 - 1) : Math.random() * 2);
			var _this = this.pool;
			var sb = this.topNormalSb;
			var p;
			if(_this.nalloc < _this.all.length) {
				var p1 = _this.all[_this.nalloc];
				p1.reset(sb,t,x1,y1);
				p1.poolIdx = _this.nalloc;
				_this.nalloc++;
				p = p1;
			} else {
				var best = null;
				var _g1 = 0;
				var _g2 = _this.all;
				while(_g1 < _g2.length) {
					var p2 = _g2[_g1];
					++_g1;
					if(best == null || p2.stamp <= best.stamp) {
						best = p2;
					}
				}
				if(best.onKill != null) {
					best.onKill();
				}
				best.reset(sb,t,x1,y1);
				p = best;
			}
			var sign2 = null;
			if(sign2 == null) {
				sign2 = false;
			}
			var tmp = sign2 ? (0.4 + Math.random() * 0.6) * (Std.random(2) * 2 - 1) : 0.4 + Math.random() * 0.6;
			var sign3 = null;
			if(sign3 == null) {
				sign3 = false;
			}
			p.setFadeS(tmp,0,sign3 ? (0.2 + Math.random() * 0.099999999999999978) * (Std.random(2) * 2 - 1) : 0.2 + Math.random() * 0.099999999999999978);
			var ratio = 1.0;
			if(ratio == null) {
				ratio = 1.0;
			}
			var a = UInt.toFloat(255);
			var x2 = a + (UInt.toFloat(138) - a) * ratio;
			p.r = ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) / 255;
			var a1 = UInt.toFloat(65535 & 255);
			var x3 = a1 + (UInt.toFloat(35499 & 255) - a1) * ratio;
			p.g = ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0) / 255;
			var a2 = UInt.toFloat(255);
			var x4 = a2 + (UInt.toFloat(82) - a2) * ratio;
			p.b = ((x4 > 0 ? x4 + .5 : x4 < 0 ? x4 - .5 : 0) | 0) / 255;
			var sign4 = null;
			if(sign4 == null) {
				sign4 = false;
			}
			p.dx = dir * (sign4 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random());
			var sign5 = null;
			if(sign5 == null) {
				sign5 = false;
			}
			p.dy = -(sign5 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random());
			var sign6 = null;
			if(sign6 == null) {
				sign6 = false;
			}
			p.gy = sign6 ? (0.05 + Math.random() * 0.05) * (Std.random(2) * 2 - 1) : 0.05 + Math.random() * 0.05;
			var sign7 = null;
			if(sign7 == null) {
				sign7 = false;
			}
			p.frictX = p.frictY = sign7 ? (0.94 + Math.random() * 0.020000000000000018) * (Std.random(2) * 2 - 1) : 0.94 + Math.random() * 0.020000000000000018;
			var sign8 = true;
			if(sign8 == null) {
				sign8 = false;
			}
			p.scaleX = sign8 ? (0.3 + Math.random() * 0.7) * (Std.random(2) * 2 - 1) : 0.3 + Math.random() * 0.7;
			var sign9 = true;
			if(sign9 == null) {
				sign9 = false;
			}
			p.scaleY = sign9 ? (0.3 + Math.random() * 0.7) * (Std.random(2) * 2 - 1) : 0.3 + Math.random() * 0.7;
			var sign10 = null;
			if(sign10 == null) {
				sign10 = false;
			}
			p.rotation = sign10 ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
			var sign11 = true;
			if(sign11 == null) {
				sign11 = false;
			}
			p.dr = sign11 ? Math.random() * 0.03 * (Std.random(2) * 2 - 1) : Math.random() * 0.03;
			var sign12 = null;
			if(sign12 == null) {
				sign12 = false;
			}
			p.set_lifeS(sign12 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random());
			p.onUpdate = $bind(this,this._dustPhysics);
		}
	}
	,pick: function(x,y) {
		var t = Assets.tiles.getTileRandom("halo");
		var _this = this.pool;
		var sb = this.topAddSb;
		var p;
		if(_this.nalloc < _this.all.length) {
			var p1 = _this.all[_this.nalloc];
			p1.reset(sb,t,x,y);
			p1.poolIdx = _this.nalloc;
			_this.nalloc++;
			p = p1;
		} else {
			var best = null;
			var _g = 0;
			var _g1 = _this.all;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				if(best == null || p1.stamp <= best.stamp) {
					best = p1;
				}
			}
			if(best.onKill != null) {
				best.onKill();
			}
			best.reset(sb,t,x,y);
			p = best;
		}
		p.setFadeS(0.3,0,1);
		var ratio = 1.0;
		if(ratio == null) {
			ratio = 1.0;
		}
		var a = UInt.toFloat(255);
		var x1 = a + (UInt.toFloat(52) - a) * ratio;
		p.r = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(65535 & 255);
		var x1 = a + (UInt.toFloat(13451 & 255) - a) * ratio;
		p.g = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(255);
		var x1 = a + (UInt.toFloat(255) - a) * ratio;
		p.b = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var sign = null;
		if(sign == null) {
			sign = false;
		}
		p.rotation = sign ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
		p.set_lifeS(0);
		var n = 8;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			var a = 6.283185307179586 * i / n;
			var t = Assets.tiles.getTileRandom("fxImpact");
			var _this = this.pool;
			var sb = this.topAddSb;
			var p;
			if(_this.nalloc < _this.all.length) {
				var p1 = _this.all[_this.nalloc];
				p1.reset(sb,t,x,y);
				p1.poolIdx = _this.nalloc;
				_this.nalloc++;
				p = p1;
			} else {
				var best = null;
				var _g2 = 0;
				var _g3 = _this.all;
				while(_g2 < _g3.length) {
					var p2 = _g3[_g2];
					++_g2;
					if(best == null || p2.stamp <= best.stamp) {
						best = p2;
					}
				}
				if(best.onKill != null) {
					best.onKill();
				}
				best.reset(sb,t,x,y);
				p = best;
			}
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			p.setFadeS(sign ? (0.5 + Math.random() * 0.19999999999999996) * (Std.random(2) * 2 - 1) : 0.5 + Math.random() * 0.19999999999999996,0,0.1);
			var _this1 = p.t;
			var px = 1;
			var py = 0.5;
			if(py == null) {
				py = 0.5;
			}
			if(px == null) {
				px = 0.5;
			}
			_this1.dx = -(px * _this1.width);
			_this1.dy = -(py * _this1.height);
			p.animXr = 1;
			p.animYr = 0.5;
			p.rotation = a;
			var ratio = 1.0;
			if(ratio == null) {
				ratio = 1.0;
			}
			var a1 = UInt.toFloat(255);
			var x1 = a1 + (UInt.toFloat(68) - a1) * ratio;
			p.r = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
			var a2 = UInt.toFloat(65535 & 255);
			var x2 = a2 + (UInt.toFloat(17609 & 255) - a2) * ratio;
			p.g = ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) / 255;
			var a3 = UInt.toFloat(255);
			var x3 = a3 + (UInt.toFloat(255) - a3) * ratio;
			p.b = ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0) / 255;
			p.scaleX = 0.2;
			var sign1 = true;
			if(sign1 == null) {
				sign1 = false;
			}
			p.scaleY = (sign1 ? (0.5 + Math.random() * 0.5) * (Std.random(2) * 2 - 1) : 0.5 + Math.random() * 0.5) * p.scaleX;
			p.ds = 0.2;
			p.dsFrict = 0.9;
			var sign2 = null;
			if(sign2 == null) {
				sign2 = false;
			}
			p.scaleMul = sign2 ? (0.9 + Math.random() * 0.030000000000000027) * (Std.random(2) * 2 - 1) : 0.9 + Math.random() * 0.030000000000000027;
			p.set_lifeS(0.5);
			p.dr = 0.1;
		}
	}
	,homeDrop: function(x,y) {
		var c = 16733780;
		var t = Assets.tiles.getTileRandom("halo");
		var _this = this.pool;
		var sb = this.topAddSb;
		var p;
		if(_this.nalloc < _this.all.length) {
			var p1 = _this.all[_this.nalloc];
			p1.reset(sb,t,x,y);
			p1.poolIdx = _this.nalloc;
			_this.nalloc++;
			p = p1;
		} else {
			var best = null;
			var _g = 0;
			var _g1 = _this.all;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				if(best == null || p1.stamp <= best.stamp) {
					best = p1;
				}
			}
			if(best.onKill != null) {
				best.onKill();
			}
			best.reset(sb,t,x,y);
			p = best;
		}
		p.setFadeS(0.3,0,1);
		var ratio = 1.0;
		if(ratio == null) {
			ratio = 1.0;
		}
		var a = UInt.toFloat(255);
		var x1 = a + (UInt.toFloat(c >>> 16) - a) * ratio;
		p.r = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(65535 & 255);
		var x1 = a + (UInt.toFloat(c >>> 8 & 255) - a) * ratio;
		p.g = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(255);
		var x1 = a + (UInt.toFloat(c & 255) - a) * ratio;
		p.b = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var sign = null;
		if(sign == null) {
			sign = false;
		}
		p.rotation = sign ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
		p.set_lifeS(0);
		var n = 20;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			var sign = true;
			if(sign == null) {
				sign = false;
			}
			var a = 6.283185307179586 * i / n + (sign ? Math.random() * 0.1 * (Std.random(2) * 2 - 1) : Math.random() * 0.1);
			var t = Assets.tiles.getTileRandom("fxLineDir");
			var _this = this.pool;
			var sb = this.topAddSb;
			var p;
			if(_this.nalloc < _this.all.length) {
				var p1 = _this.all[_this.nalloc];
				p1.reset(sb,t,x,y);
				p1.poolIdx = _this.nalloc;
				_this.nalloc++;
				p = p1;
			} else {
				var best = null;
				var _g2 = 0;
				var _g3 = _this.all;
				while(_g2 < _g3.length) {
					var p2 = _g3[_g2];
					++_g2;
					if(best == null || p2.stamp <= best.stamp) {
						best = p2;
					}
				}
				if(best.onKill != null) {
					best.onKill();
				}
				best.reset(sb,t,x,y);
				p = best;
			}
			var sign1 = null;
			if(sign1 == null) {
				sign1 = false;
			}
			p.setFadeS(sign1 ? (0.3 + Math.random() * 0.2) * (Std.random(2) * 2 - 1) : 0.3 + Math.random() * 0.2,0,0.1);
			var _this1 = p.t;
			var px = 0.8;
			var py = 0.5;
			if(py == null) {
				py = 0.5;
			}
			if(px == null) {
				px = 0.5;
			}
			_this1.dx = -(px * _this1.width);
			_this1.dy = -(py * _this1.height);
			p.animXr = 0.8;
			p.animYr = 0.5;
			p.rotation = a;
			var ratio = 1.0;
			if(ratio == null) {
				ratio = 1.0;
			}
			var a1 = UInt.toFloat(255);
			var x1 = a1 + (UInt.toFloat(c >>> 16) - a1) * ratio;
			p.r = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
			var a2 = UInt.toFloat(65535 & 255);
			var x2 = a2 + (UInt.toFloat(c >>> 8 & 255) - a2) * ratio;
			p.g = ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) / 255;
			var a3 = UInt.toFloat(255);
			var x3 = a3 + (UInt.toFloat(c & 255) - a3) * ratio;
			p.b = ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0) / 255;
			var sign2 = null;
			if(sign2 == null) {
				sign2 = false;
			}
			p.scaleX = sign2 ? (0.5 + Math.random() * 0.5) * (Std.random(2) * 2 - 1) : 0.5 + Math.random() * 0.5;
			p.scaleY = 2;
			p.ds = 0.2;
			p.dsFrict = 0.9;
			var sign3 = null;
			if(sign3 == null) {
				sign3 = false;
			}
			p.scaleMul = sign3 ? (0.9 + Math.random() * 0.030000000000000027) * (Std.random(2) * 2 - 1) : 0.9 + Math.random() * 0.030000000000000027;
			p.set_lifeS(0.5);
			var sign4 = true;
			if(sign4 == null) {
				sign4 = false;
			}
			p.dr = sign4 ? (0.02 + Math.random() * 0.0099999999999999985) * (Std.random(2) * 2 - 1) : 0.02 + Math.random() * 0.0099999999999999985;
		}
	}
	,shine: function(x,y,c) {
		var t = Assets.tiles.getTileRandom("halo");
		var _this = this.pool;
		var sb = this.topAddSb;
		var p;
		if(_this.nalloc < _this.all.length) {
			var p1 = _this.all[_this.nalloc];
			p1.reset(sb,t,x,y);
			p1.poolIdx = _this.nalloc;
			_this.nalloc++;
			p = p1;
		} else {
			var best = null;
			var _g = 0;
			var _g1 = _this.all;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				if(best == null || p1.stamp <= best.stamp) {
					best = p1;
				}
			}
			if(best.onKill != null) {
				best.onKill();
			}
			best.reset(sb,t,x,y);
			p = best;
		}
		p.setFadeS(0.3,0.1,0.2);
		var ratio = 1.0;
		if(ratio == null) {
			ratio = 1.0;
		}
		var a = UInt.toFloat(255);
		var x = a + (UInt.toFloat(c >>> 16) - a) * ratio;
		p.r = ((x > 0 ? x + .5 : x < 0 ? x - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(65535 & 255);
		var x = a + (UInt.toFloat(c >>> 8 & 255) - a) * ratio;
		p.g = ((x > 0 ? x + .5 : x < 0 ? x - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(255);
		var x = a + (UInt.toFloat(c & 255) - a) * ratio;
		p.b = ((x > 0 ? x + .5 : x < 0 ? x - .5 : 0) | 0) / 255;
		var sign = null;
		if(sign == null) {
			sign = false;
		}
		p.rotation = sign ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
		var sign = true;
		if(sign == null) {
			sign = false;
		}
		p.dr = sign ? Math.random() * 0.002 * (Std.random(2) * 2 - 1) : Math.random() * 0.002;
		p.set_lifeS(0.1);
	}
	,bumper: function(x,y) {
		var c = 7664127;
		var t = Assets.tiles.getTileRandom("halo");
		var _this = this.pool;
		var sb = this.topAddSb;
		var p;
		if(_this.nalloc < _this.all.length) {
			var p1 = _this.all[_this.nalloc];
			p1.reset(sb,t,x,y);
			p1.poolIdx = _this.nalloc;
			_this.nalloc++;
			p = p1;
		} else {
			var best = null;
			var _g = 0;
			var _g1 = _this.all;
			while(_g < _g1.length) {
				var p1 = _g1[_g];
				++_g;
				if(best == null || p1.stamp <= best.stamp) {
					best = p1;
				}
			}
			if(best.onKill != null) {
				best.onKill();
			}
			best.reset(sb,t,x,y);
			p = best;
		}
		p.setFadeS(0.3,0,1);
		var ratio = 1.0;
		if(ratio == null) {
			ratio = 1.0;
		}
		var a = UInt.toFloat(255);
		var x1 = a + (UInt.toFloat(c >>> 16) - a) * ratio;
		p.r = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(65535 & 255);
		var x1 = a + (UInt.toFloat(c >>> 8 & 255) - a) * ratio;
		p.g = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var a = UInt.toFloat(255);
		var x1 = a + (UInt.toFloat(c & 255) - a) * ratio;
		p.b = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) / 255;
		var sign = null;
		if(sign == null) {
			sign = false;
		}
		p.rotation = sign ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
		p.set_lifeS(0);
		var h = Const.GRID * 5;
		var n = 40;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var h1 = i / n * h + (sign ? Math.random() * 16 * (Std.random(2) * 2 - 1) : Math.random() * 16);
			var sign1 = true;
			if(sign1 == null) {
				sign1 = false;
			}
			var a = 6.283185307179586 * i / n + (sign1 ? Math.random() * 0.1 * (Std.random(2) * 2 - 1) : Math.random() * 0.1);
			var t = Assets.tiles.getTileRandom("fxLineDir");
			var sign2 = true;
			if(sign2 == null) {
				sign2 = false;
			}
			var x1 = x + (sign2 ? Math.random() * 8 * (Std.random(2) * 2 - 1) : Math.random() * 8);
			var y1 = y - h1;
			var _this = this.pool;
			var sb = this.topAddSb;
			var p;
			if(_this.nalloc < _this.all.length) {
				var p1 = _this.all[_this.nalloc];
				p1.reset(sb,t,x1,y1);
				p1.poolIdx = _this.nalloc;
				_this.nalloc++;
				p = p1;
			} else {
				var best = null;
				var _g2 = 0;
				var _g3 = _this.all;
				while(_g2 < _g3.length) {
					var p2 = _g3[_g2];
					++_g2;
					if(best == null || p2.stamp <= best.stamp) {
						best = p2;
					}
				}
				if(best.onKill != null) {
					best.onKill();
				}
				best.reset(sb,t,x1,y1);
				p = best;
			}
			var sign3 = null;
			if(sign3 == null) {
				sign3 = false;
			}
			p.setFadeS(sign3 ? (0.3 + Math.random() * 0.2) * (Std.random(2) * 2 - 1) : 0.3 + Math.random() * 0.2,0,0.1);
			p.rotation = -1.5707963267948966;
			var ratio = 1.0;
			if(ratio == null) {
				ratio = 1.0;
			}
			var a1 = UInt.toFloat(255);
			var x2 = a1 + (UInt.toFloat(c >>> 16) - a1) * ratio;
			p.r = ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) / 255;
			var a2 = UInt.toFloat(65535 & 255);
			var x3 = a2 + (UInt.toFloat(c >>> 8 & 255) - a2) * ratio;
			p.g = ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0) / 255;
			var a3 = UInt.toFloat(255);
			var x4 = a3 + (UInt.toFloat(c & 255) - a3) * ratio;
			p.b = ((x4 > 0 ? x4 + .5 : x4 < 0 ? x4 - .5 : 0) | 0) / 255;
			var sign4 = null;
			if(sign4 == null) {
				sign4 = false;
			}
			p.scaleX = sign4 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random();
			p.scaleY = 2;
			var sign5 = null;
			if(sign5 == null) {
				sign5 = false;
			}
			p.dy = -(sign5 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random());
			var sign6 = null;
			if(sign6 == null) {
				sign6 = false;
			}
			p.frictX = p.frictY = sign6 ? (0.95 + Math.random() * 0.010000000000000009) * (Std.random(2) * 2 - 1) : 0.95 + Math.random() * 0.010000000000000009;
			p.ds = 0.2;
			p.dsFrict = 0.9;
			var sign7 = null;
			if(sign7 == null) {
				sign7 = false;
			}
			p.scaleMul = sign7 ? (0.9 + Math.random() * 0.030000000000000027) * (Std.random(2) * 2 - 1) : 0.9 + Math.random() * 0.030000000000000027;
			p.set_lifeS(0.5);
			var sign8 = true;
			if(sign8 == null) {
				sign8 = false;
			}
			var d = 0.2 * i / n + (sign8 ? Math.random() * 0.05 * (Std.random(2) * 2 - 1) : Math.random() * 0.05);
			var d1 = d * p.fps;
			if(0 > d1) {
				d1 = 0;
			}
			p.visible = !p.killed && d1 <= 0;
			p.delayF = d1;
		}
	}
	,leaves: function(x,y) {
		var _g = 0;
		while(_g < 20) {
			var i = _g++;
			var t = Assets.tiles.getTileRandom("fxLeaf");
			var sign = true;
			if(sign == null) {
				sign = false;
			}
			var x1 = x + (sign ? Math.random() * 10 * (Std.random(2) * 2 - 1) : Math.random() * 10);
			var sign1 = true;
			if(sign1 == null) {
				sign1 = false;
			}
			var y1 = y + (sign1 ? Math.random() * 8 * (Std.random(2) * 2 - 1) : Math.random() * 8);
			var _this = this.pool;
			var sb = this.topNormalSb;
			var p;
			if(_this.nalloc < _this.all.length) {
				var p1 = _this.all[_this.nalloc];
				p1.reset(sb,t,x1,y1);
				p1.poolIdx = _this.nalloc;
				_this.nalloc++;
				p = p1;
			} else {
				var best = null;
				var _g1 = 0;
				var _g2 = _this.all;
				while(_g1 < _g2.length) {
					var p2 = _g2[_g1];
					++_g1;
					if(best == null || p2.stamp <= best.stamp) {
						best = p2;
					}
				}
				if(best.onKill != null) {
					best.onKill();
				}
				best.reset(sb,t,x1,y1);
				p = best;
			}
			var sign2 = null;
			if(sign2 == null) {
				sign2 = false;
			}
			var tmp = sign2 ? (0.4 + Math.random() * 0.4) * (Std.random(2) * 2 - 1) : 0.4 + Math.random() * 0.4;
			var sign3 = null;
			if(sign3 == null) {
				sign3 = false;
			}
			var tmp1 = sign3 ? Math.random() * 0.2 * (Std.random(2) * 2 - 1) : Math.random() * 0.2;
			var sign4 = null;
			if(sign4 == null) {
				sign4 = false;
			}
			p.setFadeS(tmp,tmp1,sign4 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random());
			var ratio = 1.0;
			if(ratio == null) {
				ratio = 1.0;
			}
			var a = UInt.toFloat(255);
			var x2 = a + (UInt.toFloat(181) - a) * ratio;
			p.r = ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) / 255;
			var a1 = UInt.toFloat(65535 & 255);
			var x3 = a1 + (UInt.toFloat(46561 & 255) - a1) * ratio;
			p.g = ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0) / 255;
			var a2 = UInt.toFloat(255);
			var x4 = a2 + (UInt.toFloat(108) - a2) * ratio;
			p.b = ((x4 > 0 ? x4 + .5 : x4 < 0 ? x4 - .5 : 0) | 0) / 255;
			var sign5 = true;
			if(sign5 == null) {
				sign5 = false;
			}
			p.dx = sign5 ? Math.random() * (Std.random(2) * 2 - 1) : Math.random();
			var sign6 = null;
			if(sign6 == null) {
				sign6 = false;
			}
			p.dy = -(sign6 ? (0.2 + Math.random() * 0.8) * (Std.random(2) * 2 - 1) : 0.2 + Math.random() * 0.8);
			var sign7 = null;
			if(sign7 == null) {
				sign7 = false;
			}
			p.gx = sign7 ? Math.random() * 0.01 * (Std.random(2) * 2 - 1) : Math.random() * 0.01;
			var sign8 = null;
			if(sign8 == null) {
				sign8 = false;
			}
			p.gy = sign8 ? (0.01 + Math.random() * 0.019999999999999997) * (Std.random(2) * 2 - 1) : 0.01 + Math.random() * 0.019999999999999997;
			var sign9 = null;
			if(sign9 == null) {
				sign9 = false;
			}
			p.frictX = p.frictY = sign9 ? (0.96 + Math.random() * 0.020000000000000018) * (Std.random(2) * 2 - 1) : 0.96 + Math.random() * 0.020000000000000018;
			var sign10 = true;
			if(sign10 == null) {
				sign10 = false;
			}
			p.scaleX = sign10 ? (0.3 + Math.random() * 0.7) * (Std.random(2) * 2 - 1) : 0.3 + Math.random() * 0.7;
			var sign11 = true;
			if(sign11 == null) {
				sign11 = false;
			}
			p.scaleY = sign11 ? (0.3 + Math.random() * 0.7) * (Std.random(2) * 2 - 1) : 0.3 + Math.random() * 0.7;
			var sign12 = null;
			if(sign12 == null) {
				sign12 = false;
			}
			p.rotation = sign12 ? Math.random() * 6.283185307179586 * (Std.random(2) * 2 - 1) : Math.random() * 6.283185307179586;
			var sign13 = true;
			if(sign13 == null) {
				sign13 = false;
			}
			p.dr = sign13 ? Math.random() * 0.03 * (Std.random(2) * 2 - 1) : Math.random() * 0.03;
			var sign14 = null;
			if(sign14 == null) {
				sign14 = false;
			}
			p.set_lifeS(sign14 ? (1 + Math.random()) * (Std.random(2) * 2 - 1) : 1 + Math.random());
			p.onUpdate = $bind(this,this._dustPhysics);
		}
	}
	,update: function() {
		dn_Process.prototype.update.call(this);
		var _this = Game.ME;
		this.pool.update(_this.utmod * _this.getComputedTimeMultiplier());
	}
	,__class__: Fx
});
var Game = function() {
	this.slowMos = new haxe_ds_StringMap();
	this.curGameSpeed = 1.0;
	dn_Process.call(this,Main.ME);
	Game.ME = this;
	this.ca = Main.ME.controller.createAccess("game");
	var _this = this.ca;
	_this.leftDeadZone = 0.2;
	var _this = this.ca;
	_this.rightDeadZone = 0.2;
	this.createRootInLayers(Main.ME.root,Const.DP_BG);
	this.scroller = new h2d_Layers();
	this.root.addChildAt(this.scroller,Const.DP_MAIN);
	this.world = new World();
	this.camera = new Camera();
	this.fx = new Fx();
	this.hud = new ui_Hud();
	this.startLevel(0);
};
$hxClasses["Game"] = Game;
Game.__name__ = "Game";
Game.__super__ = dn_Process;
Game.prototype = $extend(dn_Process.prototype,{
	startLevel: function(idx) {
		if(this.level != null) {
			this.level.destroyed = true;
		}
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.destroyed = true;
				Entity.GC.push(e);
			}
		}
		this.gc();
		this.level = new Level(idx,this.world.levels[idx]);
		this.hero = new en_Hero(this.level.data.l_Entities.all_Hero[0]);
		this.camera.trackTarget(this.hero,true);
		this.cart = new en_Cart();
		var _g = 0;
		var _g1 = this.level.data.l_Entities.all_Item;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			new en_Item(e.f_type,e.cx,e.cy);
		}
		var _g = 0;
		var _g1 = this.level.data.l_Entities.all_Home;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			new en_Home(e);
		}
		var _g = 0;
		var _g1 = this.level.data.l_Entities.all_ItemGenerator;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			new en_ItemGen(e);
		}
		var _g = 0;
		var _g1 = this.level.data.l_Entities.all_Bumper;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			new en_Bumper(e);
		}
		this.fx.clear();
		this.hud.invalidated = true;
		dn_Process.resizeAll();
	}
	,onResize: function() {
		dn_Process.prototype.onResize.call(this);
		var _this = this.scroller;
		var v = Const.SCALE;
		_this.posChanged = true;
		_this.scaleX = v;
		_this.posChanged = true;
		_this.scaleY = v;
	}
	,gc: function() {
		if(Entity.GC == null || Entity.GC.length == 0) {
			return;
		}
		var _g = 0;
		var _g1 = Entity.GC;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			e.dispose();
		}
		Entity.GC = [];
	}
	,onDispose: function() {
		dn_Process.prototype.onDispose.call(this);
		this.fx.destroyed = true;
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.destroyed = true;
				Entity.GC.push(e);
			}
		}
		this.gc();
	}
	,addSlowMo: function(id,sec,speedFactor) {
		if(speedFactor == null) {
			speedFactor = 0.3;
		}
		if(Object.prototype.hasOwnProperty.call(this.slowMos.h,id)) {
			var s = this.slowMos.h[id];
			s.f = speedFactor;
			var x = s.t;
			s.t = x > sec ? x : sec;
		} else {
			this.slowMos.h[id] = { id : id, t : sec, f : speedFactor};
		}
	}
	,updateSlowMos: function() {
		var s = haxe_ds_StringMap.valueIterator(this.slowMos.h);
		while(s.hasNext()) {
			var s1 = s.next();
			s1.t -= this.utmod / Const.FPS;
			if(s1.t <= 0) {
				var key = s1.id;
				var _this = this.slowMos;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
			}
		}
		var targetGameSpeed = 1.0;
		var s = haxe_ds_StringMap.valueIterator(this.slowMos.h);
		while(s.hasNext()) {
			var s1 = s.next();
			targetGameSpeed *= s1.f;
		}
		this.curGameSpeed += (targetGameSpeed - this.curGameSpeed) * (targetGameSpeed > this.curGameSpeed ? 0.2 : 0.6);
		var x = this.curGameSpeed - targetGameSpeed;
		if((x < 0 ? -x : x) <= 0.001) {
			this.curGameSpeed = targetGameSpeed;
		}
	}
	,preUpdate: function() {
		dn_Process.prototype.preUpdate.call(this);
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.preUpdate();
			}
		}
	}
	,postUpdate: function() {
		dn_Process.prototype.postUpdate.call(this);
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.postUpdate();
			}
		}
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.finalUpdate();
			}
		}
		this.gc();
		this.updateSlowMos();
		this.baseTimeMul = (0.2 + 0.8 * this.curGameSpeed) * (this.ucd.fastCheck.h.hasOwnProperty(104857600) ? 0.3 : 1);
		var tmp = this.utmod;
		var tmp1 = this.getComputedTimeMultiplier();
		Assets.tiles.tmod = tmp * tmp1;
	}
	,fixedUpdate: function() {
		dn_Process.prototype.fixedUpdate.call(this);
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.fixedUpdate();
			}
		}
	}
	,update: function() {
		dn_Process.prototype.update.call(this);
		var _g = 0;
		var _g1 = Entity.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed) {
				e.update();
			}
		}
		if(!ui_Console.ME.isActive() && !ui_Modal.hasAny()) {
			var _this = this.ca;
			var k = 4;
			var tmp;
			if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
				var tmp1;
				var tmp2;
				var tmp3;
				var k1 = _this.parent.primary.h[k];
				if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1))) {
					var k1 = _this.parent.secondary.h[k];
					tmp3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
				} else {
					tmp3 = true;
				}
				if(!tmp3) {
					var k1 = _this.parent.third.h[k];
					tmp2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
				} else {
					tmp2 = true;
				}
				if(!tmp2) {
					var k1 = _this.parent.fourth.h[k];
					tmp1 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
				} else {
					tmp1 = true;
				}
				tmp = tmp1 || _this.parent.gc.isPressed(k);
			} else {
				tmp = false;
			}
			if(tmp) {
				this.startLevel(this.level.idx);
			}
			var tmp;
			var _this = this.ca;
			if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(82)) {
				var _this = this.ca;
				tmp = !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(16);
			} else {
				tmp = false;
			}
			if(tmp) {
				this.startLevel(0);
			}
		}
	}
	,__class__: Game
});
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
var Lang = function() { };
$hxClasses["Lang"] = Lang;
Lang.__name__ = "Lang";
Lang.init = function(lid) {
	if(Lang._initDone) {
		return;
	}
	Lang._initDone = true;
	Lang.CUR = lid == null ? Lang.DEFAULT : lid;
	Lang.t = new dn_data_GetText();
	Lang.t.readMo(hxd_Res.load("lang/" + Lang.CUR + ".mo").entry.getBytes());
};
var Level = function(idx,lvl) {
	this.invalidated = true;
	this.marks = new haxe_ds_EnumValueMap();
	dn_Process.call(this,Game.ME);
	this.idx = idx;
	this.createRootInLayers(Game.ME.scroller,Const.DP_BG);
	this.data = lvl;
	var frame = 0;
	var xr = 0;
	var yr = 0.5;
	var smooth = null;
	var p = null;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"bg",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.sky = s;
	Game.ME.root.addChildAt(this.sky,Const.DP_BG);
	this.parallax = new h2d_TileGroup(Assets.ledTilesets.h[this.data.l_Parallax.tileset.identifier]);
	Game.ME.root.addChildAt(this.parallax,Const.DP_BG);
	var col = Const.PARALLAX_COLOR;
	var ratioNewColor = 0.9;
	var ratioOldColor = null;
	if(ratioNewColor == null) {
		ratioNewColor = 1.0;
	}
	if(ratioOldColor == null) {
		ratioOldColor = 1 - ratioNewColor;
	}
	var rgb_r = col >> 16 & 255;
	var rgb_g = col >> 8 & 255;
	var rgb_b = col & 255;
	var r = ratioNewColor * rgb_r / 255;
	var g = ratioNewColor * rgb_g / 255;
	var b = ratioNewColor * rgb_b / 255;
	var m = [ratioOldColor + r,g,b,0,r,ratioOldColor + g,b,0,r,g,ratioOldColor + b,0,0,0,0,1];
	this.parallax.set_colorMatrix(h3d_Matrix.L(m));
	this.parallax.set_filter(new h2d_filter_Blur(2,1,2));
	var _g = 0;
	var _g1 = this.data.l_Collisions.cHei;
	while(_g < _g1) {
		var cy = _g++;
		var _g2 = 0;
		var _g3 = this.data.l_Collisions.cWid;
		while(_g2 < _g3) {
			var cx = _g2++;
			var tmp;
			var tmp1;
			if(!(cx >= 0 && cx < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
				tmp1 = true;
			} else {
				var tmp2;
				var _this = this.data.l_Collisions;
				if((!(cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei) || !_this.intGrid.h.hasOwnProperty(cx + cy * _this.cWid) ? -1 : _this.intGrid.h[cx + cy * _this.cWid]) != 0) {
					var _this1 = this.data.l_Collisions;
					tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
				} else {
					tmp2 = true;
				}
				if(!tmp2) {
					var _this2 = this.data.l_Collisions;
					tmp1 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 4;
				} else {
					tmp1 = true;
				}
			}
			if(!tmp1) {
				var cy1 = cy + 1;
				if(!(cx >= 0 && cx < this.data.l_Collisions.cWid && cy1 >= 0 && cy1 < this.data.l_Collisions.cHei)) {
					tmp = true;
				} else {
					var tmp3;
					var _this3 = this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this3.cWid && cy1 >= 0 && cy1 < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy1 * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy1 * _this3.cWid]) != 0) {
						var _this4 = this.data.l_Collisions;
						tmp3 = (!(cx >= 0 && cx < _this4.cWid && cy1 >= 0 && cy1 < _this4.cHei) || !_this4.intGrid.h.hasOwnProperty(cx + cy1 * _this4.cWid) ? -1 : _this4.intGrid.h[cx + cy1 * _this4.cWid]) == 2;
					} else {
						tmp3 = true;
					}
					if(!tmp3) {
						var _this5 = this.data.l_Collisions;
						tmp = (!(cx >= 0 && cx < _this5.cWid && cy1 >= 0 && cy1 < _this5.cHei) || !_this5.intGrid.h.hasOwnProperty(cx + cy1 * _this5.cWid) ? -1 : _this5.intGrid.h[cx + cy1 * _this5.cWid]) == 4;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				var dir = -1;
				var tmp4;
				var cx1 = cx + dir;
				var tmp5;
				if(!(cx1 >= 0 && cx1 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
					tmp5 = true;
				} else {
					var tmp6;
					var _this6 = this.data.l_Collisions;
					if((!(cx1 >= 0 && cx1 < _this6.cWid && cy >= 0 && cy < _this6.cHei) || !_this6.intGrid.h.hasOwnProperty(cx1 + cy * _this6.cWid) ? -1 : _this6.intGrid.h[cx1 + cy * _this6.cWid]) != 0) {
						var _this7 = this.data.l_Collisions;
						tmp6 = (!(cx1 >= 0 && cx1 < _this7.cWid && cy >= 0 && cy < _this7.cHei) || !_this7.intGrid.h.hasOwnProperty(cx1 + cy * _this7.cWid) ? -1 : _this7.intGrid.h[cx1 + cy * _this7.cWid]) == 2;
					} else {
						tmp6 = true;
					}
					if(!tmp6) {
						var _this8 = this.data.l_Collisions;
						tmp5 = (!(cx1 >= 0 && cx1 < _this8.cWid && cy >= 0 && cy < _this8.cHei) || !_this8.intGrid.h.hasOwnProperty(cx1 + cy * _this8.cWid) ? -1 : _this8.intGrid.h[cx1 + cy * _this8.cWid]) == 4;
					} else {
						tmp5 = true;
					}
				}
				if(tmp5) {
					var cx2 = cx + dir;
					var cy2 = cy - 1;
					var tmp7;
					if(!(cx2 >= 0 && cx2 < this.data.l_Collisions.cWid && cy2 >= 0 && cy2 < this.data.l_Collisions.cHei)) {
						tmp7 = true;
					} else {
						var tmp8;
						var _this9 = this.data.l_Collisions;
						if((!(cx2 >= 0 && cx2 < _this9.cWid && cy2 >= 0 && cy2 < _this9.cHei) || !_this9.intGrid.h.hasOwnProperty(cx2 + cy2 * _this9.cWid) ? -1 : _this9.intGrid.h[cx2 + cy2 * _this9.cWid]) != 0) {
							var _this10 = this.data.l_Collisions;
							tmp8 = (!(cx2 >= 0 && cx2 < _this10.cWid && cy2 >= 0 && cy2 < _this10.cHei) || !_this10.intGrid.h.hasOwnProperty(cx2 + cy2 * _this10.cWid) ? -1 : _this10.intGrid.h[cx2 + cy2 * _this10.cWid]) == 2;
						} else {
							tmp8 = true;
						}
						if(!tmp8) {
							var _this11 = this.data.l_Collisions;
							tmp7 = (!(cx2 >= 0 && cx2 < _this11.cWid && cy2 >= 0 && cy2 < _this11.cHei) || !_this11.intGrid.h.hasOwnProperty(cx2 + cy2 * _this11.cWid) ? -1 : _this11.intGrid.h[cx2 + cy2 * _this11.cWid]) == 4;
						} else {
							tmp7 = true;
						}
					}
					tmp4 = !tmp7;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					this.setMark(LevelMark.StepSmall,cx,cy,dir);
				} else {
					var tmp9;
					var tmp10;
					var cx3 = cx + dir;
					var tmp11;
					if(!(cx3 >= 0 && cx3 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
						tmp11 = true;
					} else {
						var tmp12;
						var _this12 = this.data.l_Collisions;
						if((!(cx3 >= 0 && cx3 < _this12.cWid && cy >= 0 && cy < _this12.cHei) || !_this12.intGrid.h.hasOwnProperty(cx3 + cy * _this12.cWid) ? -1 : _this12.intGrid.h[cx3 + cy * _this12.cWid]) != 0) {
							var _this13 = this.data.l_Collisions;
							tmp12 = (!(cx3 >= 0 && cx3 < _this13.cWid && cy >= 0 && cy < _this13.cHei) || !_this13.intGrid.h.hasOwnProperty(cx3 + cy * _this13.cWid) ? -1 : _this13.intGrid.h[cx3 + cy * _this13.cWid]) == 2;
						} else {
							tmp12 = true;
						}
						if(!tmp12) {
							var _this14 = this.data.l_Collisions;
							tmp11 = (!(cx3 >= 0 && cx3 < _this14.cWid && cy >= 0 && cy < _this14.cHei) || !_this14.intGrid.h.hasOwnProperty(cx3 + cy * _this14.cWid) ? -1 : _this14.intGrid.h[cx3 + cy * _this14.cWid]) == 4;
						} else {
							tmp11 = true;
						}
					}
					if(tmp11) {
						var cx4 = cx + dir;
						var cy3 = cy - 1;
						if(!(cx4 >= 0 && cx4 < this.data.l_Collisions.cWid && cy3 >= 0 && cy3 < this.data.l_Collisions.cHei)) {
							tmp10 = true;
						} else {
							var tmp13;
							var _this15 = this.data.l_Collisions;
							if((!(cx4 >= 0 && cx4 < _this15.cWid && cy3 >= 0 && cy3 < _this15.cHei) || !_this15.intGrid.h.hasOwnProperty(cx4 + cy3 * _this15.cWid) ? -1 : _this15.intGrid.h[cx4 + cy3 * _this15.cWid]) != 0) {
								var _this16 = this.data.l_Collisions;
								tmp13 = (!(cx4 >= 0 && cx4 < _this16.cWid && cy3 >= 0 && cy3 < _this16.cHei) || !_this16.intGrid.h.hasOwnProperty(cx4 + cy3 * _this16.cWid) ? -1 : _this16.intGrid.h[cx4 + cy3 * _this16.cWid]) == 2;
							} else {
								tmp13 = true;
							}
							if(!tmp13) {
								var _this17 = this.data.l_Collisions;
								tmp10 = (!(cx4 >= 0 && cx4 < _this17.cWid && cy3 >= 0 && cy3 < _this17.cHei) || !_this17.intGrid.h.hasOwnProperty(cx4 + cy3 * _this17.cWid) ? -1 : _this17.intGrid.h[cx4 + cy3 * _this17.cWid]) == 4;
							} else {
								tmp10 = true;
							}
						}
					} else {
						tmp10 = false;
					}
					if(tmp10) {
						var cx5 = cx + dir;
						var cy4 = cy - 2;
						var tmp14;
						if(!(cx5 >= 0 && cx5 < this.data.l_Collisions.cWid && cy4 >= 0 && cy4 < this.data.l_Collisions.cHei)) {
							tmp14 = true;
						} else {
							var tmp15;
							var _this18 = this.data.l_Collisions;
							if((!(cx5 >= 0 && cx5 < _this18.cWid && cy4 >= 0 && cy4 < _this18.cHei) || !_this18.intGrid.h.hasOwnProperty(cx5 + cy4 * _this18.cWid) ? -1 : _this18.intGrid.h[cx5 + cy4 * _this18.cWid]) != 0) {
								var _this19 = this.data.l_Collisions;
								tmp15 = (!(cx5 >= 0 && cx5 < _this19.cWid && cy4 >= 0 && cy4 < _this19.cHei) || !_this19.intGrid.h.hasOwnProperty(cx5 + cy4 * _this19.cWid) ? -1 : _this19.intGrid.h[cx5 + cy4 * _this19.cWid]) == 2;
							} else {
								tmp15 = true;
							}
							if(!tmp15) {
								var _this20 = this.data.l_Collisions;
								tmp14 = (!(cx5 >= 0 && cx5 < _this20.cWid && cy4 >= 0 && cy4 < _this20.cHei) || !_this20.intGrid.h.hasOwnProperty(cx5 + cy4 * _this20.cWid) ? -1 : _this20.intGrid.h[cx5 + cy4 * _this20.cWid]) == 4;
							} else {
								tmp14 = true;
							}
						}
						tmp9 = !tmp14;
					} else {
						tmp9 = false;
					}
					if(tmp9) {
						this.setMark(LevelMark.StepHight,cx,cy,dir);
					}
				}
				var tmp16;
				var tmp17;
				var cx6 = cx + dir;
				var tmp18;
				if(!(cx6 >= 0 && cx6 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
					tmp18 = true;
				} else {
					var tmp19;
					var _this21 = this.data.l_Collisions;
					if((!(cx6 >= 0 && cx6 < _this21.cWid && cy >= 0 && cy < _this21.cHei) || !_this21.intGrid.h.hasOwnProperty(cx6 + cy * _this21.cWid) ? -1 : _this21.intGrid.h[cx6 + cy * _this21.cWid]) != 0) {
						var _this22 = this.data.l_Collisions;
						tmp19 = (!(cx6 >= 0 && cx6 < _this22.cWid && cy >= 0 && cy < _this22.cHei) || !_this22.intGrid.h.hasOwnProperty(cx6 + cy * _this22.cWid) ? -1 : _this22.intGrid.h[cx6 + cy * _this22.cWid]) == 2;
					} else {
						tmp19 = true;
					}
					if(!tmp19) {
						var _this23 = this.data.l_Collisions;
						tmp18 = (!(cx6 >= 0 && cx6 < _this23.cWid && cy >= 0 && cy < _this23.cHei) || !_this23.intGrid.h.hasOwnProperty(cx6 + cy * _this23.cWid) ? -1 : _this23.intGrid.h[cx6 + cy * _this23.cWid]) == 4;
					} else {
						tmp18 = true;
					}
				}
				if(!tmp18) {
					var cx7 = cx + dir;
					var cy5 = cy + 3;
					var tmp20;
					if(!(cx7 >= 0 && cx7 < this.data.l_Collisions.cWid && cy5 >= 0 && cy5 < this.data.l_Collisions.cHei)) {
						tmp20 = true;
					} else {
						var tmp21;
						var _this24 = this.data.l_Collisions;
						if((!(cx7 >= 0 && cx7 < _this24.cWid && cy5 >= 0 && cy5 < _this24.cHei) || !_this24.intGrid.h.hasOwnProperty(cx7 + cy5 * _this24.cWid) ? -1 : _this24.intGrid.h[cx7 + cy5 * _this24.cWid]) != 0) {
							var _this25 = this.data.l_Collisions;
							tmp21 = (!(cx7 >= 0 && cx7 < _this25.cWid && cy5 >= 0 && cy5 < _this25.cHei) || !_this25.intGrid.h.hasOwnProperty(cx7 + cy5 * _this25.cWid) ? -1 : _this25.intGrid.h[cx7 + cy5 * _this25.cWid]) == 2;
						} else {
							tmp21 = true;
						}
						if(!tmp21) {
							var _this26 = this.data.l_Collisions;
							tmp20 = (!(cx7 >= 0 && cx7 < _this26.cWid && cy5 >= 0 && cy5 < _this26.cHei) || !_this26.intGrid.h.hasOwnProperty(cx7 + cy5 * _this26.cWid) ? -1 : _this26.intGrid.h[cx7 + cy5 * _this26.cWid]) == 4;
						} else {
							tmp20 = true;
						}
					}
					tmp17 = !tmp20;
				} else {
					tmp17 = false;
				}
				if(tmp17) {
					var cx8 = cx + dir;
					var cy6 = cy + 1;
					var tmp22;
					if(!(cx8 >= 0 && cx8 < this.data.l_Collisions.cWid && cy6 >= 0 && cy6 < this.data.l_Collisions.cHei)) {
						tmp22 = true;
					} else {
						var tmp23;
						var _this27 = this.data.l_Collisions;
						if((!(cx8 >= 0 && cx8 < _this27.cWid && cy6 >= 0 && cy6 < _this27.cHei) || !_this27.intGrid.h.hasOwnProperty(cx8 + cy6 * _this27.cWid) ? -1 : _this27.intGrid.h[cx8 + cy6 * _this27.cWid]) != 0) {
							var _this28 = this.data.l_Collisions;
							tmp23 = (!(cx8 >= 0 && cx8 < _this28.cWid && cy6 >= 0 && cy6 < _this28.cHei) || !_this28.intGrid.h.hasOwnProperty(cx8 + cy6 * _this28.cWid) ? -1 : _this28.intGrid.h[cx8 + cy6 * _this28.cWid]) == 2;
						} else {
							tmp23 = true;
						}
						if(!tmp23) {
							var _this29 = this.data.l_Collisions;
							tmp22 = (!(cx8 >= 0 && cx8 < _this29.cWid && cy6 >= 0 && cy6 < _this29.cHei) || !_this29.intGrid.h.hasOwnProperty(cx8 + cy6 * _this29.cWid) ? -1 : _this29.intGrid.h[cx8 + cy6 * _this29.cWid]) == 4;
						} else {
							tmp22 = true;
						}
					}
					tmp16 = !tmp22;
				} else {
					tmp16 = false;
				}
				if(tmp16) {
					this.setMark(LevelMark.CliffHigh,cx,cy,dir);
				} else {
					var tmp24;
					var cx9 = cx + dir;
					var tmp25;
					if(!(cx9 >= 0 && cx9 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
						tmp25 = true;
					} else {
						var tmp26;
						var _this30 = this.data.l_Collisions;
						if((!(cx9 >= 0 && cx9 < _this30.cWid && cy >= 0 && cy < _this30.cHei) || !_this30.intGrid.h.hasOwnProperty(cx9 + cy * _this30.cWid) ? -1 : _this30.intGrid.h[cx9 + cy * _this30.cWid]) != 0) {
							var _this31 = this.data.l_Collisions;
							tmp26 = (!(cx9 >= 0 && cx9 < _this31.cWid && cy >= 0 && cy < _this31.cHei) || !_this31.intGrid.h.hasOwnProperty(cx9 + cy * _this31.cWid) ? -1 : _this31.intGrid.h[cx9 + cy * _this31.cWid]) == 2;
						} else {
							tmp26 = true;
						}
						if(!tmp26) {
							var _this32 = this.data.l_Collisions;
							tmp25 = (!(cx9 >= 0 && cx9 < _this32.cWid && cy >= 0 && cy < _this32.cHei) || !_this32.intGrid.h.hasOwnProperty(cx9 + cy * _this32.cWid) ? -1 : _this32.intGrid.h[cx9 + cy * _this32.cWid]) == 4;
						} else {
							tmp25 = true;
						}
					}
					if(!tmp25) {
						var cx10 = cx + dir;
						var cy7 = cy + 1;
						var tmp27;
						if(!(cx10 >= 0 && cx10 < this.data.l_Collisions.cWid && cy7 >= 0 && cy7 < this.data.l_Collisions.cHei)) {
							tmp27 = true;
						} else {
							var tmp28;
							var _this33 = this.data.l_Collisions;
							if((!(cx10 >= 0 && cx10 < _this33.cWid && cy7 >= 0 && cy7 < _this33.cHei) || !_this33.intGrid.h.hasOwnProperty(cx10 + cy7 * _this33.cWid) ? -1 : _this33.intGrid.h[cx10 + cy7 * _this33.cWid]) != 0) {
								var _this34 = this.data.l_Collisions;
								tmp28 = (!(cx10 >= 0 && cx10 < _this34.cWid && cy7 >= 0 && cy7 < _this34.cHei) || !_this34.intGrid.h.hasOwnProperty(cx10 + cy7 * _this34.cWid) ? -1 : _this34.intGrid.h[cx10 + cy7 * _this34.cWid]) == 2;
							} else {
								tmp28 = true;
							}
							if(!tmp28) {
								var _this35 = this.data.l_Collisions;
								tmp27 = (!(cx10 >= 0 && cx10 < _this35.cWid && cy7 >= 0 && cy7 < _this35.cHei) || !_this35.intGrid.h.hasOwnProperty(cx10 + cy7 * _this35.cWid) ? -1 : _this35.intGrid.h[cx10 + cy7 * _this35.cWid]) == 4;
							} else {
								tmp27 = true;
							}
						}
						tmp24 = !tmp27;
					} else {
						tmp24 = false;
					}
					if(tmp24) {
						this.setMark(LevelMark.CliffSmall,cx,cy,dir);
					}
				}
				var dir1 = 1;
				var tmp29;
				var cx11 = cx + dir1;
				var tmp30;
				if(!(cx11 >= 0 && cx11 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
					tmp30 = true;
				} else {
					var tmp31;
					var _this36 = this.data.l_Collisions;
					if((!(cx11 >= 0 && cx11 < _this36.cWid && cy >= 0 && cy < _this36.cHei) || !_this36.intGrid.h.hasOwnProperty(cx11 + cy * _this36.cWid) ? -1 : _this36.intGrid.h[cx11 + cy * _this36.cWid]) != 0) {
						var _this37 = this.data.l_Collisions;
						tmp31 = (!(cx11 >= 0 && cx11 < _this37.cWid && cy >= 0 && cy < _this37.cHei) || !_this37.intGrid.h.hasOwnProperty(cx11 + cy * _this37.cWid) ? -1 : _this37.intGrid.h[cx11 + cy * _this37.cWid]) == 2;
					} else {
						tmp31 = true;
					}
					if(!tmp31) {
						var _this38 = this.data.l_Collisions;
						tmp30 = (!(cx11 >= 0 && cx11 < _this38.cWid && cy >= 0 && cy < _this38.cHei) || !_this38.intGrid.h.hasOwnProperty(cx11 + cy * _this38.cWid) ? -1 : _this38.intGrid.h[cx11 + cy * _this38.cWid]) == 4;
					} else {
						tmp30 = true;
					}
				}
				if(tmp30) {
					var cx12 = cx + dir1;
					var cy8 = cy - 1;
					var tmp32;
					if(!(cx12 >= 0 && cx12 < this.data.l_Collisions.cWid && cy8 >= 0 && cy8 < this.data.l_Collisions.cHei)) {
						tmp32 = true;
					} else {
						var tmp33;
						var _this39 = this.data.l_Collisions;
						if((!(cx12 >= 0 && cx12 < _this39.cWid && cy8 >= 0 && cy8 < _this39.cHei) || !_this39.intGrid.h.hasOwnProperty(cx12 + cy8 * _this39.cWid) ? -1 : _this39.intGrid.h[cx12 + cy8 * _this39.cWid]) != 0) {
							var _this40 = this.data.l_Collisions;
							tmp33 = (!(cx12 >= 0 && cx12 < _this40.cWid && cy8 >= 0 && cy8 < _this40.cHei) || !_this40.intGrid.h.hasOwnProperty(cx12 + cy8 * _this40.cWid) ? -1 : _this40.intGrid.h[cx12 + cy8 * _this40.cWid]) == 2;
						} else {
							tmp33 = true;
						}
						if(!tmp33) {
							var _this41 = this.data.l_Collisions;
							tmp32 = (!(cx12 >= 0 && cx12 < _this41.cWid && cy8 >= 0 && cy8 < _this41.cHei) || !_this41.intGrid.h.hasOwnProperty(cx12 + cy8 * _this41.cWid) ? -1 : _this41.intGrid.h[cx12 + cy8 * _this41.cWid]) == 4;
						} else {
							tmp32 = true;
						}
					}
					tmp29 = !tmp32;
				} else {
					tmp29 = false;
				}
				if(tmp29) {
					this.setMark(LevelMark.StepSmall,cx,cy,dir1);
				} else {
					var tmp34;
					var tmp35;
					var cx13 = cx + dir1;
					var tmp36;
					if(!(cx13 >= 0 && cx13 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
						tmp36 = true;
					} else {
						var tmp37;
						var _this42 = this.data.l_Collisions;
						if((!(cx13 >= 0 && cx13 < _this42.cWid && cy >= 0 && cy < _this42.cHei) || !_this42.intGrid.h.hasOwnProperty(cx13 + cy * _this42.cWid) ? -1 : _this42.intGrid.h[cx13 + cy * _this42.cWid]) != 0) {
							var _this43 = this.data.l_Collisions;
							tmp37 = (!(cx13 >= 0 && cx13 < _this43.cWid && cy >= 0 && cy < _this43.cHei) || !_this43.intGrid.h.hasOwnProperty(cx13 + cy * _this43.cWid) ? -1 : _this43.intGrid.h[cx13 + cy * _this43.cWid]) == 2;
						} else {
							tmp37 = true;
						}
						if(!tmp37) {
							var _this44 = this.data.l_Collisions;
							tmp36 = (!(cx13 >= 0 && cx13 < _this44.cWid && cy >= 0 && cy < _this44.cHei) || !_this44.intGrid.h.hasOwnProperty(cx13 + cy * _this44.cWid) ? -1 : _this44.intGrid.h[cx13 + cy * _this44.cWid]) == 4;
						} else {
							tmp36 = true;
						}
					}
					if(tmp36) {
						var cx14 = cx + dir1;
						var cy9 = cy - 1;
						if(!(cx14 >= 0 && cx14 < this.data.l_Collisions.cWid && cy9 >= 0 && cy9 < this.data.l_Collisions.cHei)) {
							tmp35 = true;
						} else {
							var tmp38;
							var _this45 = this.data.l_Collisions;
							if((!(cx14 >= 0 && cx14 < _this45.cWid && cy9 >= 0 && cy9 < _this45.cHei) || !_this45.intGrid.h.hasOwnProperty(cx14 + cy9 * _this45.cWid) ? -1 : _this45.intGrid.h[cx14 + cy9 * _this45.cWid]) != 0) {
								var _this46 = this.data.l_Collisions;
								tmp38 = (!(cx14 >= 0 && cx14 < _this46.cWid && cy9 >= 0 && cy9 < _this46.cHei) || !_this46.intGrid.h.hasOwnProperty(cx14 + cy9 * _this46.cWid) ? -1 : _this46.intGrid.h[cx14 + cy9 * _this46.cWid]) == 2;
							} else {
								tmp38 = true;
							}
							if(!tmp38) {
								var _this47 = this.data.l_Collisions;
								tmp35 = (!(cx14 >= 0 && cx14 < _this47.cWid && cy9 >= 0 && cy9 < _this47.cHei) || !_this47.intGrid.h.hasOwnProperty(cx14 + cy9 * _this47.cWid) ? -1 : _this47.intGrid.h[cx14 + cy9 * _this47.cWid]) == 4;
							} else {
								tmp35 = true;
							}
						}
					} else {
						tmp35 = false;
					}
					if(tmp35) {
						var cx15 = cx + dir1;
						var cy10 = cy - 2;
						var tmp39;
						if(!(cx15 >= 0 && cx15 < this.data.l_Collisions.cWid && cy10 >= 0 && cy10 < this.data.l_Collisions.cHei)) {
							tmp39 = true;
						} else {
							var tmp40;
							var _this48 = this.data.l_Collisions;
							if((!(cx15 >= 0 && cx15 < _this48.cWid && cy10 >= 0 && cy10 < _this48.cHei) || !_this48.intGrid.h.hasOwnProperty(cx15 + cy10 * _this48.cWid) ? -1 : _this48.intGrid.h[cx15 + cy10 * _this48.cWid]) != 0) {
								var _this49 = this.data.l_Collisions;
								tmp40 = (!(cx15 >= 0 && cx15 < _this49.cWid && cy10 >= 0 && cy10 < _this49.cHei) || !_this49.intGrid.h.hasOwnProperty(cx15 + cy10 * _this49.cWid) ? -1 : _this49.intGrid.h[cx15 + cy10 * _this49.cWid]) == 2;
							} else {
								tmp40 = true;
							}
							if(!tmp40) {
								var _this50 = this.data.l_Collisions;
								tmp39 = (!(cx15 >= 0 && cx15 < _this50.cWid && cy10 >= 0 && cy10 < _this50.cHei) || !_this50.intGrid.h.hasOwnProperty(cx15 + cy10 * _this50.cWid) ? -1 : _this50.intGrid.h[cx15 + cy10 * _this50.cWid]) == 4;
							} else {
								tmp39 = true;
							}
						}
						tmp34 = !tmp39;
					} else {
						tmp34 = false;
					}
					if(tmp34) {
						this.setMark(LevelMark.StepHight,cx,cy,dir1);
					}
				}
				var tmp41;
				var tmp42;
				var cx16 = cx + dir1;
				var tmp43;
				if(!(cx16 >= 0 && cx16 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
					tmp43 = true;
				} else {
					var tmp44;
					var _this51 = this.data.l_Collisions;
					if((!(cx16 >= 0 && cx16 < _this51.cWid && cy >= 0 && cy < _this51.cHei) || !_this51.intGrid.h.hasOwnProperty(cx16 + cy * _this51.cWid) ? -1 : _this51.intGrid.h[cx16 + cy * _this51.cWid]) != 0) {
						var _this52 = this.data.l_Collisions;
						tmp44 = (!(cx16 >= 0 && cx16 < _this52.cWid && cy >= 0 && cy < _this52.cHei) || !_this52.intGrid.h.hasOwnProperty(cx16 + cy * _this52.cWid) ? -1 : _this52.intGrid.h[cx16 + cy * _this52.cWid]) == 2;
					} else {
						tmp44 = true;
					}
					if(!tmp44) {
						var _this53 = this.data.l_Collisions;
						tmp43 = (!(cx16 >= 0 && cx16 < _this53.cWid && cy >= 0 && cy < _this53.cHei) || !_this53.intGrid.h.hasOwnProperty(cx16 + cy * _this53.cWid) ? -1 : _this53.intGrid.h[cx16 + cy * _this53.cWid]) == 4;
					} else {
						tmp43 = true;
					}
				}
				if(!tmp43) {
					var cx17 = cx + dir1;
					var cy11 = cy + 3;
					var tmp45;
					if(!(cx17 >= 0 && cx17 < this.data.l_Collisions.cWid && cy11 >= 0 && cy11 < this.data.l_Collisions.cHei)) {
						tmp45 = true;
					} else {
						var tmp46;
						var _this54 = this.data.l_Collisions;
						if((!(cx17 >= 0 && cx17 < _this54.cWid && cy11 >= 0 && cy11 < _this54.cHei) || !_this54.intGrid.h.hasOwnProperty(cx17 + cy11 * _this54.cWid) ? -1 : _this54.intGrid.h[cx17 + cy11 * _this54.cWid]) != 0) {
							var _this55 = this.data.l_Collisions;
							tmp46 = (!(cx17 >= 0 && cx17 < _this55.cWid && cy11 >= 0 && cy11 < _this55.cHei) || !_this55.intGrid.h.hasOwnProperty(cx17 + cy11 * _this55.cWid) ? -1 : _this55.intGrid.h[cx17 + cy11 * _this55.cWid]) == 2;
						} else {
							tmp46 = true;
						}
						if(!tmp46) {
							var _this56 = this.data.l_Collisions;
							tmp45 = (!(cx17 >= 0 && cx17 < _this56.cWid && cy11 >= 0 && cy11 < _this56.cHei) || !_this56.intGrid.h.hasOwnProperty(cx17 + cy11 * _this56.cWid) ? -1 : _this56.intGrid.h[cx17 + cy11 * _this56.cWid]) == 4;
						} else {
							tmp45 = true;
						}
					}
					tmp42 = !tmp45;
				} else {
					tmp42 = false;
				}
				if(tmp42) {
					var cx18 = cx + dir1;
					var cy12 = cy + 1;
					var tmp47;
					if(!(cx18 >= 0 && cx18 < this.data.l_Collisions.cWid && cy12 >= 0 && cy12 < this.data.l_Collisions.cHei)) {
						tmp47 = true;
					} else {
						var tmp48;
						var _this57 = this.data.l_Collisions;
						if((!(cx18 >= 0 && cx18 < _this57.cWid && cy12 >= 0 && cy12 < _this57.cHei) || !_this57.intGrid.h.hasOwnProperty(cx18 + cy12 * _this57.cWid) ? -1 : _this57.intGrid.h[cx18 + cy12 * _this57.cWid]) != 0) {
							var _this58 = this.data.l_Collisions;
							tmp48 = (!(cx18 >= 0 && cx18 < _this58.cWid && cy12 >= 0 && cy12 < _this58.cHei) || !_this58.intGrid.h.hasOwnProperty(cx18 + cy12 * _this58.cWid) ? -1 : _this58.intGrid.h[cx18 + cy12 * _this58.cWid]) == 2;
						} else {
							tmp48 = true;
						}
						if(!tmp48) {
							var _this59 = this.data.l_Collisions;
							tmp47 = (!(cx18 >= 0 && cx18 < _this59.cWid && cy12 >= 0 && cy12 < _this59.cHei) || !_this59.intGrid.h.hasOwnProperty(cx18 + cy12 * _this59.cWid) ? -1 : _this59.intGrid.h[cx18 + cy12 * _this59.cWid]) == 4;
						} else {
							tmp47 = true;
						}
					}
					tmp41 = !tmp47;
				} else {
					tmp41 = false;
				}
				if(tmp41) {
					this.setMark(LevelMark.CliffHigh,cx,cy,dir1);
				} else {
					var tmp49;
					var cx19 = cx + dir1;
					var tmp50;
					if(!(cx19 >= 0 && cx19 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
						tmp50 = true;
					} else {
						var tmp51;
						var _this60 = this.data.l_Collisions;
						if((!(cx19 >= 0 && cx19 < _this60.cWid && cy >= 0 && cy < _this60.cHei) || !_this60.intGrid.h.hasOwnProperty(cx19 + cy * _this60.cWid) ? -1 : _this60.intGrid.h[cx19 + cy * _this60.cWid]) != 0) {
							var _this61 = this.data.l_Collisions;
							tmp51 = (!(cx19 >= 0 && cx19 < _this61.cWid && cy >= 0 && cy < _this61.cHei) || !_this61.intGrid.h.hasOwnProperty(cx19 + cy * _this61.cWid) ? -1 : _this61.intGrid.h[cx19 + cy * _this61.cWid]) == 2;
						} else {
							tmp51 = true;
						}
						if(!tmp51) {
							var _this62 = this.data.l_Collisions;
							tmp50 = (!(cx19 >= 0 && cx19 < _this62.cWid && cy >= 0 && cy < _this62.cHei) || !_this62.intGrid.h.hasOwnProperty(cx19 + cy * _this62.cWid) ? -1 : _this62.intGrid.h[cx19 + cy * _this62.cWid]) == 4;
						} else {
							tmp50 = true;
						}
					}
					if(!tmp50) {
						var cx20 = cx + dir1;
						var cy13 = cy + 1;
						var tmp52;
						if(!(cx20 >= 0 && cx20 < this.data.l_Collisions.cWid && cy13 >= 0 && cy13 < this.data.l_Collisions.cHei)) {
							tmp52 = true;
						} else {
							var tmp53;
							var _this63 = this.data.l_Collisions;
							if((!(cx20 >= 0 && cx20 < _this63.cWid && cy13 >= 0 && cy13 < _this63.cHei) || !_this63.intGrid.h.hasOwnProperty(cx20 + cy13 * _this63.cWid) ? -1 : _this63.intGrid.h[cx20 + cy13 * _this63.cWid]) != 0) {
								var _this64 = this.data.l_Collisions;
								tmp53 = (!(cx20 >= 0 && cx20 < _this64.cWid && cy13 >= 0 && cy13 < _this64.cHei) || !_this64.intGrid.h.hasOwnProperty(cx20 + cy13 * _this64.cWid) ? -1 : _this64.intGrid.h[cx20 + cy13 * _this64.cWid]) == 2;
							} else {
								tmp53 = true;
							}
							if(!tmp53) {
								var _this65 = this.data.l_Collisions;
								tmp52 = (!(cx20 >= 0 && cx20 < _this65.cWid && cy13 >= 0 && cy13 < _this65.cHei) || !_this65.intGrid.h.hasOwnProperty(cx20 + cy13 * _this65.cWid) ? -1 : _this65.intGrid.h[cx20 + cy13 * _this65.cWid]) == 4;
							} else {
								tmp52 = true;
							}
						}
						tmp49 = !tmp52;
					} else {
						tmp49 = false;
					}
					if(tmp49) {
						this.setMark(LevelMark.CliffSmall,cx,cy,dir1);
					}
				}
			}
			var tmp54;
			if(!(cx >= 0 && cx < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
				tmp54 = true;
			} else {
				var tmp55;
				var _this66 = this.data.l_Collisions;
				if((!(cx >= 0 && cx < _this66.cWid && cy >= 0 && cy < _this66.cHei) || !_this66.intGrid.h.hasOwnProperty(cx + cy * _this66.cWid) ? -1 : _this66.intGrid.h[cx + cy * _this66.cWid]) != 0) {
					var _this67 = this.data.l_Collisions;
					tmp55 = (!(cx >= 0 && cx < _this67.cWid && cy >= 0 && cy < _this67.cHei) || !_this67.intGrid.h.hasOwnProperty(cx + cy * _this67.cWid) ? -1 : _this67.intGrid.h[cx + cy * _this67.cWid]) == 2;
				} else {
					tmp55 = true;
				}
				if(!tmp55) {
					var _this68 = this.data.l_Collisions;
					tmp54 = (!(cx >= 0 && cx < _this68.cWid && cy >= 0 && cy < _this68.cHei) || !_this68.intGrid.h.hasOwnProperty(cx + cy * _this68.cWid) ? -1 : _this68.intGrid.h[cx + cy * _this68.cWid]) == 4;
				} else {
					tmp54 = true;
				}
			}
			if(!tmp54) {
				var dir2 = -1;
				var tmp56;
				var cx21 = cx + dir2;
				var tmp57;
				if(!(cx21 >= 0 && cx21 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
					tmp57 = true;
				} else {
					var tmp58;
					var _this69 = this.data.l_Collisions;
					if((!(cx21 >= 0 && cx21 < _this69.cWid && cy >= 0 && cy < _this69.cHei) || !_this69.intGrid.h.hasOwnProperty(cx21 + cy * _this69.cWid) ? -1 : _this69.intGrid.h[cx21 + cy * _this69.cWid]) != 0) {
						var _this70 = this.data.l_Collisions;
						tmp58 = (!(cx21 >= 0 && cx21 < _this70.cWid && cy >= 0 && cy < _this70.cHei) || !_this70.intGrid.h.hasOwnProperty(cx21 + cy * _this70.cWid) ? -1 : _this70.intGrid.h[cx21 + cy * _this70.cWid]) == 2;
					} else {
						tmp58 = true;
					}
					if(!tmp58) {
						var _this71 = this.data.l_Collisions;
						tmp57 = (!(cx21 >= 0 && cx21 < _this71.cWid && cy >= 0 && cy < _this71.cHei) || !_this71.intGrid.h.hasOwnProperty(cx21 + cy * _this71.cWid) ? -1 : _this71.intGrid.h[cx21 + cy * _this71.cWid]) == 4;
					} else {
						tmp57 = true;
					}
				}
				if(tmp57) {
					var cx22 = cx + dir2;
					var cy14 = cy - 1;
					var tmp59;
					if(!(cx22 >= 0 && cx22 < this.data.l_Collisions.cWid && cy14 >= 0 && cy14 < this.data.l_Collisions.cHei)) {
						tmp59 = true;
					} else {
						var tmp60;
						var _this72 = this.data.l_Collisions;
						if((!(cx22 >= 0 && cx22 < _this72.cWid && cy14 >= 0 && cy14 < _this72.cHei) || !_this72.intGrid.h.hasOwnProperty(cx22 + cy14 * _this72.cWid) ? -1 : _this72.intGrid.h[cx22 + cy14 * _this72.cWid]) != 0) {
							var _this73 = this.data.l_Collisions;
							tmp60 = (!(cx22 >= 0 && cx22 < _this73.cWid && cy14 >= 0 && cy14 < _this73.cHei) || !_this73.intGrid.h.hasOwnProperty(cx22 + cy14 * _this73.cWid) ? -1 : _this73.intGrid.h[cx22 + cy14 * _this73.cWid]) == 2;
						} else {
							tmp60 = true;
						}
						if(!tmp60) {
							var _this74 = this.data.l_Collisions;
							tmp59 = (!(cx22 >= 0 && cx22 < _this74.cWid && cy14 >= 0 && cy14 < _this74.cHei) || !_this74.intGrid.h.hasOwnProperty(cx22 + cy14 * _this74.cWid) ? -1 : _this74.intGrid.h[cx22 + cy14 * _this74.cWid]) == 4;
						} else {
							tmp59 = true;
						}
					}
					tmp56 = !tmp59;
				} else {
					tmp56 = false;
				}
				if(tmp56) {
					this.setMark(LevelMark.EdgeGrab,cx,cy,dir2);
				}
				var dir3 = 1;
				var tmp61;
				var cx23 = cx + dir3;
				var tmp62;
				if(!(cx23 >= 0 && cx23 < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
					tmp62 = true;
				} else {
					var tmp63;
					var _this75 = this.data.l_Collisions;
					if((!(cx23 >= 0 && cx23 < _this75.cWid && cy >= 0 && cy < _this75.cHei) || !_this75.intGrid.h.hasOwnProperty(cx23 + cy * _this75.cWid) ? -1 : _this75.intGrid.h[cx23 + cy * _this75.cWid]) != 0) {
						var _this76 = this.data.l_Collisions;
						tmp63 = (!(cx23 >= 0 && cx23 < _this76.cWid && cy >= 0 && cy < _this76.cHei) || !_this76.intGrid.h.hasOwnProperty(cx23 + cy * _this76.cWid) ? -1 : _this76.intGrid.h[cx23 + cy * _this76.cWid]) == 2;
					} else {
						tmp63 = true;
					}
					if(!tmp63) {
						var _this77 = this.data.l_Collisions;
						tmp62 = (!(cx23 >= 0 && cx23 < _this77.cWid && cy >= 0 && cy < _this77.cHei) || !_this77.intGrid.h.hasOwnProperty(cx23 + cy * _this77.cWid) ? -1 : _this77.intGrid.h[cx23 + cy * _this77.cWid]) == 4;
					} else {
						tmp62 = true;
					}
				}
				if(tmp62) {
					var cx24 = cx + dir3;
					var cy15 = cy - 1;
					var tmp64;
					if(!(cx24 >= 0 && cx24 < this.data.l_Collisions.cWid && cy15 >= 0 && cy15 < this.data.l_Collisions.cHei)) {
						tmp64 = true;
					} else {
						var tmp65;
						var _this78 = this.data.l_Collisions;
						if((!(cx24 >= 0 && cx24 < _this78.cWid && cy15 >= 0 && cy15 < _this78.cHei) || !_this78.intGrid.h.hasOwnProperty(cx24 + cy15 * _this78.cWid) ? -1 : _this78.intGrid.h[cx24 + cy15 * _this78.cWid]) != 0) {
							var _this79 = this.data.l_Collisions;
							tmp65 = (!(cx24 >= 0 && cx24 < _this79.cWid && cy15 >= 0 && cy15 < _this79.cHei) || !_this79.intGrid.h.hasOwnProperty(cx24 + cy15 * _this79.cWid) ? -1 : _this79.intGrid.h[cx24 + cy15 * _this79.cWid]) == 2;
						} else {
							tmp65 = true;
						}
						if(!tmp65) {
							var _this80 = this.data.l_Collisions;
							tmp64 = (!(cx24 >= 0 && cx24 < _this80.cWid && cy15 >= 0 && cy15 < _this80.cHei) || !_this80.intGrid.h.hasOwnProperty(cx24 + cy15 * _this80.cWid) ? -1 : _this80.intGrid.h[cx24 + cy15 * _this80.cWid]) == 4;
						} else {
							tmp64 = true;
						}
					}
					tmp61 = !tmp64;
				} else {
					tmp61 = false;
				}
				if(tmp61) {
					this.setMark(LevelMark.EdgeGrab,cx,cy,dir3);
				}
			}
		}
	}
};
$hxClasses["Level"] = Level;
Level.__name__ = "Level";
Level.__super__ = dn_Process;
Level.prototype = $extend(dn_Process.prototype,{
	onDispose: function() {
		dn_Process.prototype.onDispose.call(this);
		var _this = this.sky;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.parallax;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
	}
	,onResize: function() {
		dn_Process.prototype.onResize.call(this);
		var _this = this.sky;
		var v = dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height();
		_this.posChanged = true;
		_this.y = v * 0.5;
		var _this = this.sky;
		var x = dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width();
		var _this1 = this.sky;
		if(!_this1.destroyed && _this1.lib != null && _this1.groupName != null) {
			var fd = _this1.frameData;
			_this1.rawTile.setPosition(fd.x,fd.y);
			_this1.rawTile.setSize(fd.wid,fd.hei);
			var _this2 = _this1.pivot;
			if(!_this2.isUndefined && !_this2.usingFactor) {
				_this1.rawTile.dx = -(_this1.pivot.coordX + fd.realX | 0);
				_this1.rawTile.dy = -(_this1.pivot.coordY + fd.realY | 0);
			} else {
				var _this2 = _this1.pivot;
				if(!_this2.isUndefined && _this2.usingFactor) {
					_this1.rawTile.dx = -(fd.realWid * _this1.pivot.centerFactorX + fd.realX | 0);
					_this1.rawTile.dy = -(fd.realHei * _this1.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this2 = _this1.pivot;
			if(!_this2.isUndefined && !_this2.usingFactor) {
				_this1.rawTile.dx = -(_this1.pivot.coordX | 0);
				_this1.rawTile.dy = -(_this1.pivot.coordY | 0);
			} else {
				var _this2 = _this1.pivot;
				if(!_this2.isUndefined && _this2.usingFactor) {
					_this1.rawTile.dx = -(_this1.rawTile.width * _this1.pivot.centerFactorX | 0);
					_this1.rawTile.dy = -(_this1.rawTile.height * _this1.pivot.centerFactorY | 0);
				}
			}
		}
		var x1 = x / _this1.rawTile.width;
		var y = dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height();
		var _this1 = this.sky;
		if(!_this1.destroyed && _this1.lib != null && _this1.groupName != null) {
			var fd = _this1.frameData;
			_this1.rawTile.setPosition(fd.x,fd.y);
			_this1.rawTile.setSize(fd.wid,fd.hei);
			var _this2 = _this1.pivot;
			if(!_this2.isUndefined && !_this2.usingFactor) {
				_this1.rawTile.dx = -(_this1.pivot.coordX + fd.realX | 0);
				_this1.rawTile.dy = -(_this1.pivot.coordY + fd.realY | 0);
			} else {
				var _this2 = _this1.pivot;
				if(!_this2.isUndefined && _this2.usingFactor) {
					_this1.rawTile.dx = -(fd.realWid * _this1.pivot.centerFactorX + fd.realX | 0);
					_this1.rawTile.dy = -(fd.realHei * _this1.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this2 = _this1.pivot;
			if(!_this2.isUndefined && !_this2.usingFactor) {
				_this1.rawTile.dx = -(_this1.pivot.coordX | 0);
				_this1.rawTile.dy = -(_this1.pivot.coordY | 0);
			} else {
				var _this2 = _this1.pivot;
				if(!_this2.isUndefined && _this2.usingFactor) {
					_this1.rawTile.dx = -(_this1.rawTile.width * _this1.pivot.centerFactorX | 0);
					_this1.rawTile.dy = -(_this1.rawTile.height * _this1.pivot.centerFactorY | 0);
				}
			}
		}
		var y1 = y / _this1.rawTile.height;
		var x = x1 > y1 ? x1 : y1;
		var v = x < 1 ? 1 : x > 99 ? 99 : x;
		_this.posChanged = true;
		_this.scaleX = v;
		_this.posChanged = true;
		_this.scaleY = v;
		var _this = this.parallax;
		var v = Const.SCALE;
		_this.posChanged = true;
		_this.scaleX = v;
		_this.posChanged = true;
		_this.scaleY = v;
	}
	,setMark: function(mark,cx,cy,dir) {
		if(dir == null) {
			dir = 0;
		}
		var tmp;
		if(cx >= 0 && cx < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei) {
			var dir1 = null;
			tmp = !(!(cx >= 0 && cx < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei) || !this.marks.exists(mark) ? false : dir1 == null ? this.marks.get(mark).h.hasOwnProperty(cx + cy * this.data.l_Collisions.cWid) : this.marks.get(mark).h[cx + cy * this.data.l_Collisions.cWid] == (dir1 == 0 ? 0 : dir1 > 0 ? 1 : -1));
		} else {
			tmp = false;
		}
		if(tmp) {
			if(!this.marks.exists(mark)) {
				this.marks.set(mark,new haxe_ds_IntMap());
			}
			this.marks.get(mark).h[cx + cy * this.data.l_Collisions.cWid] = dir == 0 ? 0 : dir > 0 ? 1 : -1;
		}
	}
	,getGroundDist: function(cx,cy) {
		var tmp;
		if(!(cx >= 0 && cx < this.data.l_Collisions.cWid && cy >= 0 && cy < this.data.l_Collisions.cHei)) {
			tmp = true;
		} else {
			var tmp1;
			var _this = this.data.l_Collisions;
			if((!(cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei) || !_this.intGrid.h.hasOwnProperty(cx + cy * _this.cWid) ? -1 : _this.intGrid.h[cx + cy * _this.cWid]) != 0) {
				var _this = this.data.l_Collisions;
				tmp1 = (!(cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei) || !_this.intGrid.h.hasOwnProperty(cx + cy * _this.cWid) ? -1 : _this.intGrid.h[cx + cy * _this.cWid]) == 2;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				var _this = this.data.l_Collisions;
				tmp = (!(cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei) || !_this.intGrid.h.hasOwnProperty(cx + cy * _this.cWid) ? -1 : _this.intGrid.h[cx + cy * _this.cWid]) == 4;
			} else {
				tmp = true;
			}
		}
		if(tmp) {
			return 0;
		}
		var d = 0;
		while(true) {
			var cy1 = cy + d + 1;
			var tmp;
			if(!(cx >= 0 && cx < this.data.l_Collisions.cWid && cy1 >= 0 && cy1 < this.data.l_Collisions.cHei)) {
				tmp = true;
			} else {
				var tmp1;
				var _this = this.data.l_Collisions;
				if((!(cx >= 0 && cx < _this.cWid && cy1 >= 0 && cy1 < _this.cHei) || !_this.intGrid.h.hasOwnProperty(cx + cy1 * _this.cWid) ? -1 : _this.intGrid.h[cx + cy1 * _this.cWid]) != 0) {
					var _this1 = this.data.l_Collisions;
					tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy1 >= 0 && cy1 < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy1 * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy1 * _this1.cWid]) == 2;
				} else {
					tmp1 = true;
				}
				if(!tmp1) {
					var _this2 = this.data.l_Collisions;
					tmp = (!(cx >= 0 && cx < _this2.cWid && cy1 >= 0 && cy1 < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy1 * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy1 * _this2.cWid]) == 4;
				} else {
					tmp = true;
				}
			}
			if(tmp) {
				break;
			}
			++d;
		}
		return d;
	}
	,render: function() {
		this.root.removeChildren();
		var atlasTile = Assets.ledTilesets.h[this.data.l_Collisions.tileset.identifier];
		var bg = new h2d_TileGroup(atlasTile,this.root);
		var _this = this.data.l_BgElements;
		var _g = 0;
		var _g1 = _this.autoTiles;
		while(_g < _g1.length) {
			var autoTile = _g1[_g];
			++_g;
			var x = autoTile.renderX;
			var y = autoTile.renderY;
			var _this1 = _this._getTileset();
			var t;
			if(autoTile.tileId < 0) {
				t = null;
			} else {
				var tileId = autoTile.tileId;
				var flipBits = autoTile.flips;
				if(flipBits == null) {
					flipBits = 0;
				}
				if(tileId < 0) {
					t = null;
				} else {
					var t1 = bg.tile.sub((tileId - (tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * Math.ceil(_this1.pxWid / _this1.tileGridSize)) * _this1.tileGridSize,(tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * _this1.tileGridSize,_this1.tileGridSize,_this1.tileGridSize);
					switch(flipBits) {
					case 0:
						t = t1;
						break;
					case 1:
						t1.flipX();
						var px = 0;
						var py = 0;
						if(py == null) {
							py = 0.5;
						}
						if(px == null) {
							px = 0.5;
						}
						t1.dx = -(px * t1.width);
						t1.dy = -(py * t1.height);
						t = t1;
						break;
					case 2:
						t1.flipY();
						var px1 = 0;
						var py1 = 0;
						if(py1 == null) {
							py1 = 0.5;
						}
						if(px1 == null) {
							px1 = 0.5;
						}
						t1.dx = -(px1 * t1.width);
						t1.dy = -(py1 * t1.height);
						t = t1;
						break;
					case 3:
						t1.flipX();
						t1.flipY();
						var px2 = 0;
						var py2 = 0;
						if(py2 == null) {
							py2 = 0.5;
						}
						if(px2 == null) {
							px2 = 0.5;
						}
						t1.dx = -(px2 * t1.width);
						t1.dy = -(py2 * t1.height);
						t = t1;
						break;
					default:
						throw haxe_Exception.thrown("Unsupported flipBits value");
					}
				}
			}
			bg.content.add(x,y,bg.curColor.x,bg.curColor.y,bg.curColor.z,bg.curColor.w,t);
		}
		var col = Const.BG_COLOR;
		var ratioNewColor = 0.8;
		var ratioOldColor = null;
		if(ratioNewColor == null) {
			ratioNewColor = 1.0;
		}
		if(ratioOldColor == null) {
			ratioOldColor = 1 - ratioNewColor;
		}
		var rgb_r = col >> 16 & 255;
		var rgb_g = col >> 8 & 255;
		var rgb_b = col & 255;
		var r = ratioNewColor * rgb_r / 255;
		var g = ratioNewColor * rgb_g / 255;
		var b = ratioNewColor * rgb_b / 255;
		var m = [ratioOldColor + r,g,b,0,r,ratioOldColor + g,b,0,r,g,ratioOldColor + b,0,0,0,0,1];
		bg.set_colorMatrix(h3d_Matrix.L(m));
		var shadow = new h2d_TileGroup(atlasTile,this.root);
		var _this = this.data.l_Shadows;
		var _g = 0;
		var _g1 = _this.autoTiles;
		while(_g < _g1.length) {
			var autoTile = _g1[_g];
			++_g;
			var x = autoTile.renderX;
			var y = autoTile.renderY;
			var _this1 = _this._getTileset();
			var t;
			if(autoTile.tileId < 0) {
				t = null;
			} else {
				var tileId = autoTile.tileId;
				var flipBits = autoTile.flips;
				if(flipBits == null) {
					flipBits = 0;
				}
				if(tileId < 0) {
					t = null;
				} else {
					var t1 = shadow.tile.sub((tileId - (tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * Math.ceil(_this1.pxWid / _this1.tileGridSize)) * _this1.tileGridSize,(tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * _this1.tileGridSize,_this1.tileGridSize,_this1.tileGridSize);
					switch(flipBits) {
					case 0:
						t = t1;
						break;
					case 1:
						t1.flipX();
						var px = 0;
						var py = 0;
						if(py == null) {
							py = 0.5;
						}
						if(px == null) {
							px = 0.5;
						}
						t1.dx = -(px * t1.width);
						t1.dy = -(py * t1.height);
						t = t1;
						break;
					case 2:
						t1.flipY();
						var px1 = 0;
						var py1 = 0;
						if(py1 == null) {
							py1 = 0.5;
						}
						if(px1 == null) {
							px1 = 0.5;
						}
						t1.dx = -(px1 * t1.width);
						t1.dy = -(py1 * t1.height);
						t = t1;
						break;
					case 3:
						t1.flipX();
						t1.flipY();
						var px2 = 0;
						var py2 = 0;
						if(py2 == null) {
							py2 = 0.5;
						}
						if(px2 == null) {
							px2 = 0.5;
						}
						t1.dx = -(px2 * t1.width);
						t1.dy = -(py2 * t1.height);
						t = t1;
						break;
					default:
						throw haxe_Exception.thrown("Unsupported flipBits value");
					}
				}
			}
			shadow.content.add(x,y,shadow.curColor.x,shadow.curColor.y,shadow.curColor.z,shadow.curColor.w,t);
		}
		shadow.alpha = this.data.l_Shadows.opacity;
		var walls = new h2d_TileGroup(atlasTile,this.root);
		var _this = this.data.l_Collisions;
		var _g = 0;
		var _g1 = _this.autoTiles;
		while(_g < _g1.length) {
			var autoTile = _g1[_g];
			++_g;
			var x = autoTile.renderX;
			var y = autoTile.renderY;
			var _this1 = _this._getTileset();
			var t;
			if(autoTile.tileId < 0) {
				t = null;
			} else {
				var tileId = autoTile.tileId;
				var flipBits = autoTile.flips;
				if(flipBits == null) {
					flipBits = 0;
				}
				if(tileId < 0) {
					t = null;
				} else {
					var t1 = walls.tile.sub((tileId - (tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * Math.ceil(_this1.pxWid / _this1.tileGridSize)) * _this1.tileGridSize,(tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * _this1.tileGridSize,_this1.tileGridSize,_this1.tileGridSize);
					switch(flipBits) {
					case 0:
						t = t1;
						break;
					case 1:
						t1.flipX();
						var px = 0;
						var py = 0;
						if(py == null) {
							py = 0.5;
						}
						if(px == null) {
							px = 0.5;
						}
						t1.dx = -(px * t1.width);
						t1.dy = -(py * t1.height);
						t = t1;
						break;
					case 2:
						t1.flipY();
						var px1 = 0;
						var py1 = 0;
						if(py1 == null) {
							py1 = 0.5;
						}
						if(px1 == null) {
							px1 = 0.5;
						}
						t1.dx = -(px1 * t1.width);
						t1.dy = -(py1 * t1.height);
						t = t1;
						break;
					case 3:
						t1.flipX();
						t1.flipY();
						var px2 = 0;
						var py2 = 0;
						if(py2 == null) {
							py2 = 0.5;
						}
						if(px2 == null) {
							px2 = 0.5;
						}
						t1.dx = -(px2 * t1.width);
						t1.dy = -(py2 * t1.height);
						t = t1;
						break;
					default:
						throw haxe_Exception.thrown("Unsupported flipBits value");
					}
				}
			}
			walls.content.add(x,y,walls.curColor.x,walls.curColor.y,walls.curColor.z,walls.curColor.w,t);
		}
		var tilesMain = new h2d_TileGroup(atlasTile,this.root);
		var _this = this.data.l_TilesMain;
		var _g = 0;
		var _g1 = _this.cHei;
		while(_g < _g1) {
			var cy = _g++;
			var _g2 = 0;
			var _g3 = _this.cWid;
			while(_g2 < _g3) {
				var cx = _g2++;
				if((cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei && _this.tiles.h.hasOwnProperty(cx + cy * _this.cWid) ? _this.tiles.h[cx + cy * _this.cWid] : -1) >= 0) {
					var tileId = cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei && _this.tiles.h.hasOwnProperty(cx + cy * _this.cWid) ? _this.tiles.h[cx + cy * _this.cWid] : -1;
					var x = cx * _this.gridSize + _this.pxOffsetX;
					var y = cy * _this.gridSize + _this.pxOffsetY;
					var _this1 = _this._getTileset();
					var t;
					if(tileId < 0) {
						t = null;
					} else {
						var t1 = tilesMain.tile.sub((tileId - (tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * Math.ceil(_this1.pxWid / _this1.tileGridSize)) * _this1.tileGridSize,(tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * _this1.tileGridSize,_this1.tileGridSize,_this1.tileGridSize);
						t = t1;
					}
					tilesMain.content.add(x,y,tilesMain.curColor.x,tilesMain.curColor.y,tilesMain.curColor.z,tilesMain.curColor.w,t);
				}
			}
		}
		var tilesFront = new h2d_TileGroup(atlasTile,this.root);
		var _this = this.data.l_TilesFront;
		var _g = 0;
		var _g1 = _this.cHei;
		while(_g < _g1) {
			var cy = _g++;
			var _g2 = 0;
			var _g3 = _this.cWid;
			while(_g2 < _g3) {
				var cx = _g2++;
				if((cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei && _this.tiles.h.hasOwnProperty(cx + cy * _this.cWid) ? _this.tiles.h[cx + cy * _this.cWid] : -1) >= 0) {
					var tileId = cx >= 0 && cx < _this.cWid && cy >= 0 && cy < _this.cHei && _this.tiles.h.hasOwnProperty(cx + cy * _this.cWid) ? _this.tiles.h[cx + cy * _this.cWid] : -1;
					var x = cx * _this.gridSize + _this.pxOffsetX;
					var y = cy * _this.gridSize + _this.pxOffsetY;
					var _this1 = _this._getTileset();
					var t;
					if(tileId < 0) {
						t = null;
					} else {
						var t1 = tilesFront.tile.sub((tileId - (tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * Math.ceil(_this1.pxWid / _this1.tileGridSize)) * _this1.tileGridSize,(tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * _this1.tileGridSize,_this1.tileGridSize,_this1.tileGridSize);
						t = t1;
					}
					tilesFront.content.add(x,y,tilesFront.curColor.x,tilesFront.curColor.y,tilesFront.curColor.z,tilesFront.curColor.w,t);
				}
			}
		}
		var _this = this.data.l_Parallax;
		var tg = this.parallax;
		tg.clear();
		var _g = 0;
		var _g1 = _this.autoTiles;
		while(_g < _g1.length) {
			var autoTile = _g1[_g];
			++_g;
			var x = autoTile.renderX;
			var y = autoTile.renderY;
			var _this1 = _this._getTileset();
			var t;
			if(autoTile.tileId < 0) {
				t = null;
			} else {
				var tileId = autoTile.tileId;
				var flipBits = autoTile.flips;
				if(flipBits == null) {
					flipBits = 0;
				}
				if(tileId < 0) {
					t = null;
				} else {
					var t1 = tg.tile.sub((tileId - (tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * Math.ceil(_this1.pxWid / _this1.tileGridSize)) * _this1.tileGridSize,(tileId / Math.ceil(_this1.pxWid / _this1.tileGridSize) | 0) * _this1.tileGridSize,_this1.tileGridSize,_this1.tileGridSize);
					switch(flipBits) {
					case 0:
						t = t1;
						break;
					case 1:
						t1.flipX();
						var px = 0;
						var py = 0;
						if(py == null) {
							py = 0.5;
						}
						if(px == null) {
							px = 0.5;
						}
						t1.dx = -(px * t1.width);
						t1.dy = -(py * t1.height);
						t = t1;
						break;
					case 2:
						t1.flipY();
						var px1 = 0;
						var py1 = 0;
						if(py1 == null) {
							py1 = 0.5;
						}
						if(px1 == null) {
							px1 = 0.5;
						}
						t1.dx = -(px1 * t1.width);
						t1.dy = -(py1 * t1.height);
						t = t1;
						break;
					case 3:
						t1.flipX();
						t1.flipY();
						var px2 = 0;
						var py2 = 0;
						if(py2 == null) {
							py2 = 0.5;
						}
						if(px2 == null) {
							px2 = 0.5;
						}
						t1.dx = -(px2 * t1.width);
						t1.dy = -(py2 * t1.height);
						t = t1;
						break;
					default:
						throw haxe_Exception.thrown("Unsupported flipBits value");
					}
				}
			}
			tg.content.add(x,y,tg.curColor.x,tg.curColor.y,tg.curColor.z,tg.curColor.w,t);
		}
	}
	,postUpdate: function() {
		dn_Process.prototype.postUpdate.call(this);
		if(this.invalidated) {
			this.invalidated = false;
			this.render();
		}
		var _this = this.parallax;
		_this.posChanged = true;
		_this.x = Game.ME.scroller.x * 0.7;
		var _this = this.parallax;
		_this.posChanged = true;
		_this.y = Game.ME.scroller.y * 0.75;
	}
	,__class__: Level
});
var Main = function(s) {
	dn_Process.call(this);
	Main.ME = this;
	this.createRoot(s);
	hxd_Timer.wantedFPS = Const.FPS;
	h3d_Engine.CURRENT.backgroundColor = -1;
	hxd_Res.set_loader(new hxd_res_Loader(new hxd_fs_EmbedFileSystem(haxe_Unserializer.run("oy10:props.jsonty5:atlasoy9:tiles.pngty11:tiles.atlastgy5:worldoy24:RPG_Assets_by_ssugmi.pngtR2ty10:world.jsontgy5:fontsoy38:barlow_condensed_medium_regular_17.pngty38:barlow_condensed_medium_regular_17.fntty22:minecraftiaOutline.pngty37:barlow_condensed_medium_regular_9.fntty38:barlow_condensed_medium_regular_32.fntty22:minecraftiaOutline.fntty38:barlow_condensed_medium_regular_11.fntty37:barlow_condensed_medium_regular_9.pngty38:barlow_condensed_medium_regular_32.pngty38:barlow_condensed_medium_regular_11.pngtgy4:langoy5:en.poty5:en.moty15:sourceTexts.pottgy8:data.cdbtg"))));
	Assets.init();
	new ui_Console(Assets.fontTiny,s);
	Lang.init("en");
	Data.load(hxd_Res.get_loader().loadCache("data.cdb",hxd_res_Resource).entry.getText());
	this.controller = new dn_heaps_Controller(s);
	this.ca = this.controller.createAccess("main");
	this.controller.bind(17,37,81,65);
	this.controller.bind(18,39,68);
	this.controller.bind(0,38,90,87,32);
	this.controller.bind(4,82);
	this.controller.bind(5,78);
	new dn_heaps_GameFocusHelper(Boot.ME.s2d,Assets.fontMedium);
	this.delayer.addF(null,$bind(this,this.startGame),1);
};
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.__super__ = dn_Process;
Main.prototype = $extend(dn_Process.prototype,{
	startGame: function() {
		if(Game.ME != null) {
			Game.ME.destroyed = true;
			dn_Process.updateAll(1);
			new Game();
		} else {
			new Game();
		}
	}
	,onResize: function() {
		dn_Process.prototype.onResize.call(this);
		if(Const.AUTO_SCALE_TARGET_WID > 0) {
			var x = (dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) / Const.AUTO_SCALE_TARGET_WID;
			var tmp;
			if(x > .0) {
				var t = x + .5 | 0;
				tmp = t < x ? t + 1 : t;
			} else if(x < .0) {
				var t = x - .5 | 0;
				tmp = t < x ? t + 1 : t;
			} else {
				tmp = 0;
			}
			Const.SCALE = tmp;
		} else if(Const.AUTO_SCALE_TARGET_HEI > 0) {
			var x = (dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height()) / Const.AUTO_SCALE_TARGET_HEI;
			var tmp;
			if(x > .0) {
				var t = x + .5 | 0;
				tmp = t < x ? t + 1 : t;
			} else if(x < .0) {
				var t = x - .5 | 0;
				tmp = t < x ? t + 1 : t;
			} else {
				tmp = 0;
			}
			Const.SCALE = tmp;
		}
		Const.UI_SCALE = Const.SCALE;
	}
	,update: function() {
		var tmp = this.utmod;
		var tmp1 = this.getComputedTimeMultiplier();
		Assets.tiles.tmod = tmp * tmp1;
		dn_Process.prototype.update.call(this);
	}
	,__class__: Main
});
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw haxe_Exception.thrown(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var Affect = $hxEnums["Affect"] = { __ename__ : true, __constructs__ : ["Stun"]
	,Stun: {_hx_index:0,__enum__:"Affect",toString:$estr}
};
Affect.__empty_constructs__ = [Affect.Stun];
var LevelMark = $hxEnums["LevelMark"] = { __ename__ : true, __constructs__ : ["StepSmall","StepHight","CliffSmall","CliffHigh","EdgeGrab"]
	,StepSmall: {_hx_index:0,__enum__:"LevelMark",toString:$estr}
	,StepHight: {_hx_index:1,__enum__:"LevelMark",toString:$estr}
	,CliffSmall: {_hx_index:2,__enum__:"LevelMark",toString:$estr}
	,CliffHigh: {_hx_index:3,__enum__:"LevelMark",toString:$estr}
	,EdgeGrab: {_hx_index:4,__enum__:"LevelMark",toString:$estr}
};
LevelMark.__empty_constructs__ = [LevelMark.StepSmall,LevelMark.StepHight,LevelMark.CliffSmall,LevelMark.CliffHigh,LevelMark.EdgeGrab];
var UInt = {};
UInt.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
UInt.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var Enum_$Item = $hxEnums["Enum_Item"] = { __ename__ : true, __constructs__ : ["Wood","Apple","Diamond"]
	,Wood: {_hx_index:0,__enum__:"Enum_Item",toString:$estr}
	,Apple: {_hx_index:1,__enum__:"Enum_Item",toString:$estr}
	,Diamond: {_hx_index:2,__enum__:"Enum_Item",toString:$estr}
};
Enum_$Item.__empty_constructs__ = [Enum_$Item.Wood,Enum_$Item.Apple,Enum_$Item.Diamond];
var Enum_$SpawnMode = $hxEnums["Enum_SpawnMode"] = { __ename__ : true, __constructs__ : ["FloatInAir","OnGround"]
	,FloatInAir: {_hx_index:0,__enum__:"Enum_SpawnMode",toString:$estr}
	,OnGround: {_hx_index:1,__enum__:"Enum_SpawnMode",toString:$estr}
};
Enum_$SpawnMode.__empty_constructs__ = [Enum_$SpawnMode.FloatInAir,Enum_$SpawnMode.OnGround];
var EntityEnum = $hxEnums["EntityEnum"] = { __ename__ : true, __constructs__ : ["Hero","Home","Item","ItemGenerator","Bumper"]
	,Hero: {_hx_index:0,__enum__:"EntityEnum",toString:$estr}
	,Home: {_hx_index:1,__enum__:"EntityEnum",toString:$estr}
	,Item: {_hx_index:2,__enum__:"EntityEnum",toString:$estr}
	,ItemGenerator: {_hx_index:3,__enum__:"EntityEnum",toString:$estr}
	,Bumper: {_hx_index:4,__enum__:"EntityEnum",toString:$estr}
};
EntityEnum.__empty_constructs__ = [EntityEnum.Hero,EntityEnum.Home,EntityEnum.Item,EntityEnum.ItemGenerator,EntityEnum.Bumper];
var led_Entity = function(json) {
	this.identifier = json.__identifier;
	this.cx = json.__grid[0];
	this.cy = json.__grid[1];
	this.pixelX = json.px[0];
	this.pixelY = json.px[1];
	this.tileInfos = json.__tile == null ? null : { tilesetUid : json.__tile.tilesetUid, x : json.__tile.srcRect[0], y : json.__tile.srcRect[1], w : json.__tile.srcRect[2], h : json.__tile.srcRect[3]};
	var arrayReg = new EReg("Array<(.*)>","gi");
	var _g = 0;
	var _g1 = json.fieldInstances;
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		if(f.__value == null) {
			continue;
		}
		var isArray = arrayReg.match(f.__type);
		var typeName = isArray ? arrayReg.matched(1) : f.__type;
		var _hx_tmp;
		var _hx_tmp1;
		switch(typeName) {
		case "Color":
			this["f_" + f.__identifier + "_hex"] = f.__value;
			if(!isArray) {
				this["f_" + f.__identifier + "_int"] = Std.parseInt("0x" + HxOverrides.substr(f.__value,1,999));
			} else {
				var arr = f.__value;
				var field = "f_" + f.__identifier + "_int";
				var result = new Array(arr.length);
				var _g2 = 0;
				var _g3 = arr.length;
				while(_g2 < _g3) {
					var i = _g2++;
					result[i] = Std.parseInt("0x" + HxOverrides.substr(arr[i],1,999));
				}
				this[field] = result;
			}
			break;
		case "Point":
			if(!isArray) {
				this["f_" + f.__identifier] = new led_Point(f.__value.cx,f.__value.cy);
			} else {
				var arr1 = f.__value;
				var field1 = "f_" + f.__identifier;
				var result1 = new Array(arr1.length);
				var _g4 = 0;
				var _g5 = arr1.length;
				while(_g4 < _g5) {
					var i1 = _g4++;
					var pt = arr1[i1];
					result1[i1] = new led_Point(pt.cx,pt.cy);
				}
				this[field1] = result1;
			}
			break;
		case "Bool":case "Float":case "Int":case "String":
			this["f_" + f.__identifier] = f.__value;
			break;
		default:
			_hx_tmp = typeName.indexOf("LocalEnum.");
			if(_hx_tmp == 0) {
				var type = this._enumTypePrefix + HxOverrides.substr(typeName,typeName.indexOf(".") + 1,null);
				var e = $hxEnums[type];
				if(!isArray) {
					this["f_" + f.__identifier] = Type.createEnum(e,f.__value);
				} else {
					var arr2 = f.__value;
					var field2 = "f_" + f.__identifier;
					var result2 = new Array(arr2.length);
					var _g6 = 0;
					var _g7 = arr2.length;
					while(_g6 < _g7) {
						var i2 = _g6++;
						result2[i2] = Type.createEnum(e,arr2[i2]);
					}
					this[field2] = result2;
				}
			} else {
				_hx_tmp1 = typeName.indexOf("ExternEnum.");
				if(_hx_tmp1 == 0) {
					var type1 = HxOverrides.substr(typeName,typeName.indexOf(".") + 1,null);
					var e1 = this._resolveExternalEnum(type1);
					if(e1 == null) {
						throw haxe_Exception.thrown("Couldn't create an instance of enum " + type1 + "! Please check if the PROJECT enum still matches the EXTERNAL FILE declaring it.");
					}
					if(!isArray) {
						this["f_" + f.__identifier] = Type.createEnum(e1,f.__value);
					} else {
						var arr3 = f.__value;
						var field3 = "f_" + f.__identifier;
						var result3 = new Array(arr3.length);
						var _g8 = 0;
						var _g9 = arr3.length;
						while(_g8 < _g9) {
							var i3 = _g8++;
							result3[i3] = Type.createEnum(e1,arr3[i3]);
						}
						this[field3] = result3;
					}
				} else {
					throw haxe_Exception.thrown("Unknown field type " + typeName + " for " + this.identifier + "." + f.__identifier);
				}
			}
		}
	}
};
$hxClasses["led.Entity"] = led_Entity;
led_Entity.__name__ = "led.Entity";
led_Entity.prototype = {
	_resolveExternalEnum: function(name) {
		return null;
	}
	,__class__: led_Entity
};
var World_$Entity = function(json) {
	this._enumTypePrefix = "Enum_";
	led_Entity.call(this,json);
	this.entityType = Type.createEnum(EntityEnum,json.__identifier);
};
$hxClasses["World_Entity"] = World_$Entity;
World_$Entity.__name__ = "World_Entity";
World_$Entity.__super__ = led_Entity;
World_$Entity.prototype = $extend(led_Entity.prototype,{
	_resolveExternalEnum: function(name) {
		var name1;
		switch(name) {
		case "Affect":
			name1 = "Affect";
			break;
		case "LevelMark":
			name1 = "LevelMark";
			break;
		default:
			throw haxe_Exception.thrown("Unknown external enum name");
		}
		return $hxEnums[name1];
	}
	,is: function(e) {
		return this.entityType == e;
	}
	,__class__: World_$Entity
});
var Entity_$Hero = function(json) {
	World_$Entity.call(this,json);
};
$hxClasses["Entity_Hero"] = Entity_$Hero;
Entity_$Hero.__name__ = "Entity_Hero";
Entity_$Hero.__super__ = World_$Entity;
Entity_$Hero.prototype = $extend(World_$Entity.prototype,{
	__class__: Entity_$Hero
});
var Entity_$Home = function(json) {
	World_$Entity.call(this,json);
};
$hxClasses["Entity_Home"] = Entity_$Home;
Entity_$Home.__name__ = "Entity_Home";
Entity_$Home.__super__ = World_$Entity;
Entity_$Home.prototype = $extend(World_$Entity.prototype,{
	__class__: Entity_$Home
});
var Entity_$Item = function(json) {
	World_$Entity.call(this,json);
};
$hxClasses["Entity_Item"] = Entity_$Item;
Entity_$Item.__name__ = "Entity_Item";
Entity_$Item.__super__ = World_$Entity;
Entity_$Item.prototype = $extend(World_$Entity.prototype,{
	__class__: Entity_$Item
});
var Entity_$ItemGenerator = function(json) {
	World_$Entity.call(this,json);
};
$hxClasses["Entity_ItemGenerator"] = Entity_$ItemGenerator;
Entity_$ItemGenerator.__name__ = "Entity_ItemGenerator";
Entity_$ItemGenerator.__super__ = World_$Entity;
Entity_$ItemGenerator.prototype = $extend(World_$Entity.prototype,{
	__class__: Entity_$ItemGenerator
});
var Entity_$Bumper = function(json) {
	World_$Entity.call(this,json);
};
$hxClasses["Entity_Bumper"] = Entity_$Bumper;
Entity_$Bumper.__name__ = "Entity_Bumper";
Entity_$Bumper.__super__ = World_$Entity;
Entity_$Bumper.prototype = $extend(World_$Entity.prototype,{
	__class__: Entity_$Bumper
});
var led_Tileset = function(json) {
	this.identifier = json.identifier;
	this.tileGridSize = json.tileGridSize;
	this.relPath = json.relPath;
	this.pxWid = json.pxWid;
	this.pxHei = json.pxHei;
};
$hxClasses["led.Tileset"] = led_Tileset;
led_Tileset.__name__ = "led.Tileset";
led_Tileset.prototype = {
	__class__: led_Tileset
};
var Tileset_$Tiles = function(json) {
	led_Tileset.call(this,json);
};
$hxClasses["Tileset_Tiles"] = Tileset_$Tiles;
Tileset_$Tiles.__name__ = "Tileset_Tiles";
Tileset_$Tiles.__super__ = led_Tileset;
Tileset_$Tiles.prototype = $extend(led_Tileset.prototype,{
	__class__: Tileset_$Tiles
});
var Tileset_$Icons = function(json) {
	led_Tileset.call(this,json);
};
$hxClasses["Tileset_Icons"] = Tileset_$Icons;
Tileset_$Icons.__name__ = "Tileset_Icons";
Tileset_$Icons.__super__ = led_Tileset;
Tileset_$Icons.prototype = $extend(led_Tileset.prototype,{
	__class__: Tileset_$Icons
});
var led_Layer = function(json) {
	this.identifier = json.__identifier;
	var tmp;
	try {
		tmp = Type.createEnum(led_LayerType,json.__type,null);
	} catch( _g ) {
		tmp = led_LayerType.Unknown;
	}
	this.type = tmp;
	this.gridSize = json.__gridSize;
	this.cWid = json.__cWid;
	this.cHei = json.__cHei;
	this.pxOffsetX = json.pxOffsetX;
	this.pxOffsetY = json.pxOffsetY;
	this.opacity = json.__opacity;
};
$hxClasses["led.Layer"] = led_Layer;
led_Layer.__name__ = "led.Layer";
led_Layer.prototype = {
	__class__: led_Layer
};
var led_Layer_$Entities = function(json) {
	this._entities = [];
	led_Layer.call(this,json);
	var _g = 0;
	var _g1 = json.entityInstances;
	while(_g < _g1.length) {
		var json = _g1[_g];
		++_g;
		var e = this._instanciateEntity(json);
		this._entities.push(e);
		if(Reflect.field(this,"all_" + e.identifier) == null) {
			this["all_" + e.identifier] = [];
		}
		var arr = Reflect.field(this,"all_" + e.identifier);
		arr.push(e);
	}
};
$hxClasses["led.Layer_Entities"] = led_Layer_$Entities;
led_Layer_$Entities.__name__ = "led.Layer_Entities";
led_Layer_$Entities.__super__ = led_Layer;
led_Layer_$Entities.prototype = $extend(led_Layer.prototype,{
	_instanciateEntity: function(json) {
		return null;
	}
	,__class__: led_Layer_$Entities
});
var Layer_$Entities = function(json) {
	var f = "all_Hero";
	this[f] = [];
	var f = "all_Home";
	this[f] = [];
	var f = "all_Item";
	this[f] = [];
	var f = "all_ItemGenerator";
	this[f] = [];
	var f = "all_Bumper";
	this[f] = [];
	led_Layer_$Entities.call(this,json);
};
$hxClasses["Layer_Entities"] = Layer_$Entities;
Layer_$Entities.__name__ = "Layer_Entities";
Layer_$Entities.__super__ = led_Layer_$Entities;
Layer_$Entities.prototype = $extend(led_Layer_$Entities.prototype,{
	_instanciateEntity: function(json) {
		var name = "Entity_" + json.__identifier;
		var c = $hxClasses[name];
		if(c == null) {
			return null;
		} else {
			return Type.createInstance(c,[json]);
		}
	}
	,getAllUntyped: function() {
		return this._entities;
	}
	,__class__: Layer_$Entities
});
var led_Layer_$Tiles = function(json) {
	led_Layer.call(this,json);
	this.tiles = new haxe_ds_IntMap();
	var _g = 0;
	var _g1 = json.gridTiles;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		this.tiles.h[t.d[0]] = t.d[1];
	}
};
$hxClasses["led.Layer_Tiles"] = led_Layer_$Tiles;
led_Layer_$Tiles.__name__ = "led.Layer_Tiles";
led_Layer_$Tiles.__super__ = led_Layer;
led_Layer_$Tiles.prototype = $extend(led_Layer.prototype,{
	_getTileset: function() {
		return null;
	}
	,__class__: led_Layer_$Tiles
});
var Layer_$TilesFront = function(json) {
	led_Layer_$Tiles.call(this,json);
	this.tileset = new Tileset_$Tiles({ pxHei : 512, uid : 4, padding : 0, pxWid : 512, spacing : 0, identifier : "Tiles", savedSelections : [{ mode : "Random", ids : [450,481,482]},{ mode : "Random", ids : [451,483]},{ mode : "Random", ids : [452,484]},{ mode : "Random", ids : [453,485]},{ mode : "Stamp", ids : [548,580]},{ mode : "Stamp", ids : [550,582]},{ mode : "Stamp", ids : [262,294]},{ mode : "Random", ids : [97,98,99,100]},{ mode : "Random", ids : [131,132,133,134]},{ mode : "Random", ids : [166,198,230]},{ mode : "Random", ids : [165,197,229]},{ mode : "Random", ids : [224,225,226]},{ mode : "Random", ids : [101,102,103,104,105]},{ mode : "Stamp", ids : [357,389]},{ mode : "Stamp", ids : [276,308,340,277,309,341,278,310,342,279,311,343]},{ mode : "Stamp", ids : [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339]},{ mode : "Stamp", ids : [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241]},{ mode : "Stamp", ids : [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215]}], relPath : "tiles.png", tileGridSize : 16});
};
$hxClasses["Layer_TilesFront"] = Layer_$TilesFront;
Layer_$TilesFront.__name__ = "Layer_TilesFront";
Layer_$TilesFront.__super__ = led_Layer_$Tiles;
Layer_$TilesFront.prototype = $extend(led_Layer_$Tiles.prototype,{
	_getTileset: function() {
		return this.tileset;
	}
	,__class__: Layer_$TilesFront
});
var Layer_$TilesMain = function(json) {
	led_Layer_$Tiles.call(this,json);
	this.tileset = new Tileset_$Tiles({ pxHei : 512, uid : 4, padding : 0, pxWid : 512, spacing : 0, identifier : "Tiles", savedSelections : [{ mode : "Random", ids : [450,481,482]},{ mode : "Random", ids : [451,483]},{ mode : "Random", ids : [452,484]},{ mode : "Random", ids : [453,485]},{ mode : "Stamp", ids : [548,580]},{ mode : "Stamp", ids : [550,582]},{ mode : "Stamp", ids : [262,294]},{ mode : "Random", ids : [97,98,99,100]},{ mode : "Random", ids : [131,132,133,134]},{ mode : "Random", ids : [166,198,230]},{ mode : "Random", ids : [165,197,229]},{ mode : "Random", ids : [224,225,226]},{ mode : "Random", ids : [101,102,103,104,105]},{ mode : "Stamp", ids : [357,389]},{ mode : "Stamp", ids : [276,308,340,277,309,341,278,310,342,279,311,343]},{ mode : "Stamp", ids : [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339]},{ mode : "Stamp", ids : [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241]},{ mode : "Stamp", ids : [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215]}], relPath : "tiles.png", tileGridSize : 16});
};
$hxClasses["Layer_TilesMain"] = Layer_$TilesMain;
Layer_$TilesMain.__name__ = "Layer_TilesMain";
Layer_$TilesMain.__super__ = led_Layer_$Tiles;
Layer_$TilesMain.prototype = $extend(led_Layer_$Tiles.prototype,{
	_getTileset: function() {
		return this.tileset;
	}
	,__class__: Layer_$TilesMain
});
var led_Layer_$IntGrid = function(json) {
	this.intGrid = new haxe_ds_IntMap();
	this.valueInfos = [];
	led_Layer.call(this,json);
	var _g = 0;
	var _g1 = json.intGrid;
	while(_g < _g1.length) {
		var ig = _g1[_g];
		++_g;
		this.intGrid.h[ig.coordId] = ig.v;
	}
};
$hxClasses["led.Layer_IntGrid"] = led_Layer_$IntGrid;
led_Layer_$IntGrid.__name__ = "led.Layer_IntGrid";
led_Layer_$IntGrid.__super__ = led_Layer;
led_Layer_$IntGrid.prototype = $extend(led_Layer.prototype,{
	__class__: led_Layer_$IntGrid
});
var led_Layer_$IntGrid_$AutoLayer = function(json) {
	led_Layer_$IntGrid.call(this,json);
	this.autoTiles = [];
	var _g = 0;
	var _g1 = json.autoLayerTiles;
	while(_g < _g1.length) {
		var jsonAutoTile = _g1[_g];
		++_g;
		this.autoTiles.push({ tileId : jsonAutoTile.d[2], flips : jsonAutoTile.f, renderX : jsonAutoTile.px[0], renderY : jsonAutoTile.px[1]});
	}
};
$hxClasses["led.Layer_IntGrid_AutoLayer"] = led_Layer_$IntGrid_$AutoLayer;
led_Layer_$IntGrid_$AutoLayer.__name__ = "led.Layer_IntGrid_AutoLayer";
led_Layer_$IntGrid_$AutoLayer.__super__ = led_Layer_$IntGrid;
led_Layer_$IntGrid_$AutoLayer.prototype = $extend(led_Layer_$IntGrid.prototype,{
	_getTileset: function() {
		return null;
	}
	,__class__: led_Layer_$IntGrid_$AutoLayer
});
var Layer_$Collisions = function(json) {
	led_Layer_$IntGrid_$AutoLayer.call(this,json);
	var v_color = "#FFFFFF";
	var v_identifier = "walls";
	this.valueInfos.push({ identifier : v_identifier, color : Std.parseInt("0x" + HxOverrides.substr(v_color,1,null))});
	var v_color = "#6367CA";
	var v_identifier = "bgWalls";
	this.valueInfos.push({ identifier : v_identifier, color : Std.parseInt("0x" + HxOverrides.substr(v_color,1,null))});
	var v_color = "#FFD500";
	var v_identifier = "invisibleWalls";
	this.valueInfos.push({ identifier : v_identifier, color : Std.parseInt("0x" + HxOverrides.substr(v_color,1,null))});
	var v_color = "#25AD6B";
	var v_identifier = "treeLeaves";
	this.valueInfos.push({ identifier : v_identifier, color : Std.parseInt("0x" + HxOverrides.substr(v_color,1,null))});
	var v_color = "#B28862";
	var v_identifier = "platform";
	this.valueInfos.push({ identifier : v_identifier, color : Std.parseInt("0x" + HxOverrides.substr(v_color,1,null))});
	this.tileset = new Tileset_$Tiles({ pxHei : 512, uid : 4, padding : 0, pxWid : 512, spacing : 0, identifier : "Tiles", savedSelections : [{ mode : "Random", ids : [450,481,482]},{ mode : "Random", ids : [451,483]},{ mode : "Random", ids : [452,484]},{ mode : "Random", ids : [453,485]},{ mode : "Stamp", ids : [548,580]},{ mode : "Stamp", ids : [550,582]},{ mode : "Stamp", ids : [262,294]},{ mode : "Random", ids : [97,98,99,100]},{ mode : "Random", ids : [131,132,133,134]},{ mode : "Random", ids : [166,198,230]},{ mode : "Random", ids : [165,197,229]},{ mode : "Random", ids : [224,225,226]},{ mode : "Random", ids : [101,102,103,104,105]},{ mode : "Stamp", ids : [357,389]},{ mode : "Stamp", ids : [276,308,340,277,309,341,278,310,342,279,311,343]},{ mode : "Stamp", ids : [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339]},{ mode : "Stamp", ids : [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241]},{ mode : "Stamp", ids : [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215]}], relPath : "tiles.png", tileGridSize : 16});
};
$hxClasses["Layer_Collisions"] = Layer_$Collisions;
Layer_$Collisions.__name__ = "Layer_Collisions";
Layer_$Collisions.__super__ = led_Layer_$IntGrid_$AutoLayer;
Layer_$Collisions.prototype = $extend(led_Layer_$IntGrid_$AutoLayer.prototype,{
	_getTileset: function() {
		return this.tileset;
	}
	,__class__: Layer_$Collisions
});
var led_Layer_$AutoLayer = function(json) {
	led_Layer.call(this,json);
	this.autoTiles = [];
	var _g = 0;
	var _g1 = json.autoLayerTiles;
	while(_g < _g1.length) {
		var jsonAutoTile = _g1[_g];
		++_g;
		this.autoTiles.push({ tileId : jsonAutoTile.d[2], flips : jsonAutoTile.f, renderX : jsonAutoTile.px[0], renderY : jsonAutoTile.px[1]});
	}
};
$hxClasses["led.Layer_AutoLayer"] = led_Layer_$AutoLayer;
led_Layer_$AutoLayer.__name__ = "led.Layer_AutoLayer";
led_Layer_$AutoLayer.__super__ = led_Layer;
led_Layer_$AutoLayer.prototype = $extend(led_Layer.prototype,{
	_getTileset: function() {
		return null;
	}
	,__class__: led_Layer_$AutoLayer
});
var Layer_$Shadows = function(json) {
	led_Layer_$AutoLayer.call(this,json);
	this.tileset = new Tileset_$Tiles({ pxHei : 512, uid : 4, padding : 0, pxWid : 512, spacing : 0, identifier : "Tiles", savedSelections : [{ mode : "Random", ids : [450,481,482]},{ mode : "Random", ids : [451,483]},{ mode : "Random", ids : [452,484]},{ mode : "Random", ids : [453,485]},{ mode : "Stamp", ids : [548,580]},{ mode : "Stamp", ids : [550,582]},{ mode : "Stamp", ids : [262,294]},{ mode : "Random", ids : [97,98,99,100]},{ mode : "Random", ids : [131,132,133,134]},{ mode : "Random", ids : [166,198,230]},{ mode : "Random", ids : [165,197,229]},{ mode : "Random", ids : [224,225,226]},{ mode : "Random", ids : [101,102,103,104,105]},{ mode : "Stamp", ids : [357,389]},{ mode : "Stamp", ids : [276,308,340,277,309,341,278,310,342,279,311,343]},{ mode : "Stamp", ids : [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339]},{ mode : "Stamp", ids : [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241]},{ mode : "Stamp", ids : [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215]}], relPath : "tiles.png", tileGridSize : 16});
};
$hxClasses["Layer_Shadows"] = Layer_$Shadows;
Layer_$Shadows.__name__ = "Layer_Shadows";
Layer_$Shadows.__super__ = led_Layer_$AutoLayer;
Layer_$Shadows.prototype = $extend(led_Layer_$AutoLayer.prototype,{
	_getTileset: function() {
		return this.tileset;
	}
	,__class__: Layer_$Shadows
});
var Layer_$BgElements = function(json) {
	led_Layer_$AutoLayer.call(this,json);
	this.tileset = new Tileset_$Tiles({ pxHei : 512, uid : 4, padding : 0, pxWid : 512, spacing : 0, identifier : "Tiles", savedSelections : [{ mode : "Random", ids : [450,481,482]},{ mode : "Random", ids : [451,483]},{ mode : "Random", ids : [452,484]},{ mode : "Random", ids : [453,485]},{ mode : "Stamp", ids : [548,580]},{ mode : "Stamp", ids : [550,582]},{ mode : "Stamp", ids : [262,294]},{ mode : "Random", ids : [97,98,99,100]},{ mode : "Random", ids : [131,132,133,134]},{ mode : "Random", ids : [166,198,230]},{ mode : "Random", ids : [165,197,229]},{ mode : "Random", ids : [224,225,226]},{ mode : "Random", ids : [101,102,103,104,105]},{ mode : "Stamp", ids : [357,389]},{ mode : "Stamp", ids : [276,308,340,277,309,341,278,310,342,279,311,343]},{ mode : "Stamp", ids : [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339]},{ mode : "Stamp", ids : [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241]},{ mode : "Stamp", ids : [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215]}], relPath : "tiles.png", tileGridSize : 16});
};
$hxClasses["Layer_BgElements"] = Layer_$BgElements;
Layer_$BgElements.__name__ = "Layer_BgElements";
Layer_$BgElements.__super__ = led_Layer_$AutoLayer;
Layer_$BgElements.prototype = $extend(led_Layer_$AutoLayer.prototype,{
	_getTileset: function() {
		return this.tileset;
	}
	,__class__: Layer_$BgElements
});
var Layer_$Parallax = function(json) {
	led_Layer_$IntGrid_$AutoLayer.call(this,json);
	var v_color = "#997614";
	var v_identifier = "Hills";
	this.valueInfos.push({ identifier : v_identifier, color : Std.parseInt("0x" + HxOverrides.substr(v_color,1,null))});
	this.tileset = new Tileset_$Tiles({ pxHei : 512, uid : 4, padding : 0, pxWid : 512, spacing : 0, identifier : "Tiles", savedSelections : [{ mode : "Random", ids : [450,481,482]},{ mode : "Random", ids : [451,483]},{ mode : "Random", ids : [452,484]},{ mode : "Random", ids : [453,485]},{ mode : "Stamp", ids : [548,580]},{ mode : "Stamp", ids : [550,582]},{ mode : "Stamp", ids : [262,294]},{ mode : "Random", ids : [97,98,99,100]},{ mode : "Random", ids : [131,132,133,134]},{ mode : "Random", ids : [166,198,230]},{ mode : "Random", ids : [165,197,229]},{ mode : "Random", ids : [224,225,226]},{ mode : "Random", ids : [101,102,103,104,105]},{ mode : "Stamp", ids : [357,389]},{ mode : "Stamp", ids : [276,308,340,277,309,341,278,310,342,279,311,343]},{ mode : "Stamp", ids : [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339]},{ mode : "Stamp", ids : [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241]},{ mode : "Stamp", ids : [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215]}], relPath : "tiles.png", tileGridSize : 16});
};
$hxClasses["Layer_Parallax"] = Layer_$Parallax;
Layer_$Parallax.__name__ = "Layer_Parallax";
Layer_$Parallax.__super__ = led_Layer_$IntGrid_$AutoLayer;
Layer_$Parallax.prototype = $extend(led_Layer_$IntGrid_$AutoLayer.prototype,{
	_getTileset: function() {
		return this.tileset;
	}
	,__class__: Layer_$Parallax
});
var led_Level = function(json) {
	this.identifier = json.identifier;
	this.pxWid = json.pxWid;
	this.pxHei = json.pxHei;
	this.allUntypedLayers = [];
	var _g = 0;
	var _g1 = json.layerInstances;
	while(_g < _g1.length) {
		var json = _g1[_g];
		++_g;
		this.allUntypedLayers.push(this._instanciateLayer(json));
	}
};
$hxClasses["led.Level"] = led_Level;
led_Level.__name__ = "led.Level";
led_Level.prototype = {
	_instanciateLayer: function(json) {
		return null;
	}
	,__class__: led_Level
};
var World_$Level = function(json) {
	led_Level.call(this,json);
	var _g = 0;
	var _g1 = this.allUntypedLayers;
	while(_g < _g1.length) {
		var l = _g1[_g];
		++_g;
		this["l_" + l.identifier] = l;
	}
};
$hxClasses["World_Level"] = World_$Level;
World_$Level.__name__ = "World_Level";
World_$Level.__super__ = led_Level;
World_$Level.prototype = $extend(led_Level.prototype,{
	_instanciateLayer: function(json) {
		var name = "Layer_" + json.__identifier;
		var c = $hxClasses[name];
		if(c == null) {
			throw haxe_Exception.thrown("Couldn't instanciate layer " + json.__identifier);
		} else {
			return Type.createInstance(c,[json]);
		}
	}
	,resolveLayer: function(id) {
		var _g = 0;
		var _g1 = this.allUntypedLayers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.identifier == id) {
				return l;
			}
		}
		return null;
	}
	,__class__: World_$Level
});
var led_Project = function() {
};
$hxClasses["led.Project"] = led_Project;
led_Project.__name__ = "led.Project";
led_Project.prototype = {
	parseJson: function(jsonString) {
		var json = JSON.parse(jsonString);
		this.bgColor_hex = json.bgColor;
		this.bgColor_int = Std.parseInt("0x" + HxOverrides.substr(json.bgColor,1,999));
		this._untypedLevels = [];
		var _g = 0;
		var _g1 = json.levels;
		while(_g < _g1.length) {
			var json1 = _g1[_g];
			++_g;
			this._untypedLevels.push(this._instanciateLevel(json1));
		}
		this.defs = json.defs;
	}
	,_instanciateLevel: function(json) {
		return null;
	}
	,__class__: led_Project
};
var World = function(overrideEmbedJson) {
	this.all_levels = { Country : null};
	this.levels = [];
	led_Project.call(this);
	this.projectDir = "res/world";
	this.projectFilePath = "res/world/world.json";
	this.parseJson(overrideEmbedJson != null ? overrideEmbedJson : "{\n\t\"__header__\": {\n\t\t\"fileType\": \"LEd Project JSON\",\n\t\t\"app\": \"LEd\",\n\t\t\"appAuthor\": \"Sebastien Benard\",\n\t\t\"appVersion\": \"0.4.0-beta-debug\",\n\t\t\"url\": \"https://deepnight.net/tools/led-2d-level-editor/\"\n\t},\n\t\"jsonVersion\": \"0.4.0\",\n\t\"defaultPivotX\": 0.5,\n\t\"defaultPivotY\": 1,\n\t\"defaultGridSize\": 16,\n\t\"bgColor\": \"#1A212E\",\n\t\"nextUid\": 120,\n\t\"minifyJson\": false,\n\t\"exportTiled\": false,\n\t\"defs\": {\n\t\t\"layers\": [\n\t\t\t{\n\t\t\t\t\"__type\": \"Entities\",\n\t\t\t\t\"identifier\": \"Entities\",\n\t\t\t\t\"type\": \"Entities\",\n\t\t\t\t\"uid\": 21,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 1,\n\t\t\t\t\"intGridValues\": [{ \"identifier\": null, \"color\": \"#000000\" }],\n\t\t\t\t\"autoTilesetDefUid\": null,\n\t\t\t\t\"autoRuleGroups\": [],\n\t\t\t\t\"autoSourceLayerDefUid\": null,\n\t\t\t\t\"tilesetDefUid\": null,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__type\": \"Tiles\",\n\t\t\t\t\"identifier\": \"TilesFront\",\n\t\t\t\t\"type\": \"Tiles\",\n\t\t\t\t\"uid\": 97,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 1,\n\t\t\t\t\"intGridValues\": [{ \"identifier\": null, \"color\": \"#000000\" }],\n\t\t\t\t\"autoTilesetDefUid\": null,\n\t\t\t\t\"autoRuleGroups\": [],\n\t\t\t\t\"autoSourceLayerDefUid\": null,\n\t\t\t\t\"tilesetDefUid\": 4,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__type\": \"Tiles\",\n\t\t\t\t\"identifier\": \"TilesMain\",\n\t\t\t\t\"type\": \"Tiles\",\n\t\t\t\t\"uid\": 95,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 1,\n\t\t\t\t\"intGridValues\": [{ \"identifier\": null, \"color\": \"#000000\" }],\n\t\t\t\t\"autoTilesetDefUid\": null,\n\t\t\t\t\"autoRuleGroups\": [],\n\t\t\t\t\"autoSourceLayerDefUid\": null,\n\t\t\t\t\"tilesetDefUid\": 4,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__type\": \"IntGrid\",\n\t\t\t\t\"identifier\": \"Collisions\",\n\t\t\t\t\"type\": \"IntGrid\",\n\t\t\t\t\"uid\": 1,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 1,\n\t\t\t\t\"intGridValues\": [\n\t\t\t\t\t{ \"identifier\": \"walls\", \"color\": \"#FFFFFF\" },\n\t\t\t\t\t{ \"identifier\": \"bgWalls\", \"color\": \"#6367CA\" },\n\t\t\t\t\t{ \"identifier\": \"invisibleWalls\", \"color\": \"#FFD500\" },\n\t\t\t\t\t{ \"identifier\": \"treeLeaves\", \"color\": \"#25AD6B\" },\n\t\t\t\t\t{ \"identifier\": \"platform\", \"color\": \"#B28862\" }\n\t\t\t\t],\n\t\t\t\t\"autoTilesetDefUid\": 4,\n\t\t\t\t\"autoRuleGroups\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"uid\": 116,\n\t\t\t\t\t\t\"name\": \"Platforms\",\n\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\"collapsed\": true,\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 119,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [68],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,5,-5,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 4053022,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 118,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [66],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,-5,5,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 1751314,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 117,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 1,\n\t\t\t\t\t\t\t\t\"tileIds\": [67],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [5],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5872394,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"uid\": 100,\n\t\t\t\t\t\t\"name\": \"Big trees\",\n\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\"collapsed\": true,\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 110,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 1,\n\t\t\t\t\t\t\t\t\"tileIds\": [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [4],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 0.5,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5623777,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 109,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 1,\n\t\t\t\t\t\t\t\t\"tileIds\": [152,184,216,248,280,153,185,217,249,281,154,186,218,250,282,155,187,219,251,283,156,188,220,252,284,157,189,221,253,285],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [4],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 0.5,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 2396040,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 103,\n\t\t\t\t\t\t\t\t\"active\": false,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215,247],\n\t\t\t\t\t\t\t\t\"chance\": 0.51,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,0,0,0,0,4],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 0.5,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 4593239,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 101,\n\t\t\t\t\t\t\t\t\"active\": false,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [142,174,206,238,143,175,207,239,144,176,208,240,145,177,209,241,146,178,210,242],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,0,0,0,0,4],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 0.5,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 6137155,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 102,\n\t\t\t\t\t\t\t\t\"active\": false,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [4,0,0,0,0,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 0.5,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7369904,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"uid\": 50,\n\t\t\t\t\t\t\"name\": \"Grass\",\n\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\"collapsed\": true,\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 61,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [69,70,71,72,73],\n\t\t\t\t\t\t\t\t\"chance\": 0.29,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,-1,-1,-1,1,1,1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5750676,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 57,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [101,102,103,104,105],\n\t\t\t\t\t\t\t\t\"chance\": 0.21,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,-1,0,0,1,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": true,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7836902,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.34,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 3\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 48,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [97,98,99,100],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,-1,0,0,1,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5607959,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 58,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [131,132,133,134],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,-1,0,0,1,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": true,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 2966353,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.1,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 44,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [129],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1,0,-1,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 4466388,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 43,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [130],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1,0,0,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5559828,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"uid\": 41,\n\t\t\t\t\t\t\"name\": \"Walls\",\n\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\"collapsed\": true,\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 114,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [231,263,232,264,233,265],\n\t\t\t\t\t\t\t\t\"chance\": 0.72,\n\t\t\t\t\t\t\t\t\"pattern\": [0,1,0,0,-1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": true,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 8517536,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 113,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [167,199,168,200,169,201],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,1,0,0,2,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 4093369,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 59,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [165,197,229],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,-1,1,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": true,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7523355,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 60,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [166,198,230],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,-1,1,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7661686,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 54,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [196],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [-1,1,0,1,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": true,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 2120517,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 51,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [163],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1,0,-1,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7068923,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 56,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [227],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,-1,1,0,0,-1,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 2368689,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 55,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [228],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,1,0,0,-1,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7683944,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 53,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [195],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,-1,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 1641285,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 52,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [164],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1,0,0,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 1312197,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 46,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [224,225,226],\n\t\t\t\t\t\t\t\t\"chance\": 0.6,\n\t\t\t\t\t\t\t\t\"pattern\": [0,1,0,0,1,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": true,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 3954599,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 49,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [161,193,162,194],\n\t\t\t\t\t\t\t\t\"chance\": 0.37,\n\t\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,1,1,0,1,1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 2,\n\t\t\t\t\t\t\t\t\"yModulo\": 2,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 3307844,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 47,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 1,\n\t\t\t\t\t\t\t\t\"tileIds\": [160],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 2,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"Horizontal\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 2204224,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 42,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 1,\n\t\t\t\t\t\t\t\t\"tileIds\": [128],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5902570,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"autoSourceLayerDefUid\": null,\n\t\t\t\t\"tilesetDefUid\": null,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__type\": \"AutoLayer\",\n\t\t\t\t\"identifier\": \"Shadows\",\n\t\t\t\t\"type\": \"AutoLayer\",\n\t\t\t\t\"uid\": 74,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 0.43,\n\t\t\t\t\"intGridValues\": [{ \"identifier\": null, \"color\": \"#000000\" }],\n\t\t\t\t\"autoTilesetDefUid\": 4,\n\t\t\t\t\"autoRuleGroups\": [{\n\t\t\t\t\t\"uid\": 75,\n\t\t\t\t\t\"name\": \"Shadows\",\n\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\"collapsed\": false,\n\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 78,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [259],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [-1,1,0,0,2,0,0,0,0],\n\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 1143957,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 77,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [261],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [0,1,0,0,2,1,0,0,0],\n\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 4280237,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 76,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [260],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [1,1,1,0,2,0,0,0,0],\n\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 2687821,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}],\n\t\t\t\t\"autoSourceLayerDefUid\": 1,\n\t\t\t\t\"tilesetDefUid\": null,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__type\": \"AutoLayer\",\n\t\t\t\t\"identifier\": \"BgElements\",\n\t\t\t\t\"type\": \"AutoLayer\",\n\t\t\t\t\"uid\": 68,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 1,\n\t\t\t\t\"intGridValues\": [{ \"identifier\": null, \"color\": \"#000000\" }],\n\t\t\t\t\"autoTilesetDefUid\": 4,\n\t\t\t\t\"autoRuleGroups\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"uid\": 71,\n\t\t\t\t\t\t\"name\": \"Bg walls\",\n\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\"collapsed\": false,\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 80,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [289],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1000001,0,1000001,2,1000001,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": true,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 8090983,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 79,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [288],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1000001,0,-1000001,2,0,0,0,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": true,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 9519844,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 73,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [320],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,1000001,0,-1000001,2,0,0,1000001,0],\n\t\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 1058110,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 72,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [128],\n\t\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\t\"pattern\": [0,1000001,0,1000001,2,1000001,0,1000001,0],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7732478,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"uid\": 63,\n\t\t\t\t\t\t\"name\": \"Small trees\",\n\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\"collapsed\": false,\n\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 67,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [17,49,81,18,50,82,19,51,83],\n\t\t\t\t\t\t\t\t\"chance\": 0.32,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1000001,0,-1000001,-1000001,-1000001,1,1,1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 4,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 5420037,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 66,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [15,47,79,16,48,80],\n\t\t\t\t\t\t\t\t\"chance\": 0.21,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1000001,0,-1000001,-1000001,-1000001,1,1,1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 5,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 7338027,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 65,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [13,45,77,14,46,78],\n\t\t\t\t\t\t\t\t\"chance\": 0.44,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1000001,0,-1000001,-1000001,-1000001,1,1,1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 3,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 1574292,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"uid\": 64,\n\t\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\t\"tileIds\": [10,42,74,11,43,75,12,44,76],\n\t\t\t\t\t\t\t\t\"chance\": 0.25,\n\t\t\t\t\t\t\t\t\"pattern\": [0,-1000001,0,-1000001,-1000001,-1000001,1,1,1],\n\t\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\t\"xModulo\": 4,\n\t\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\t\"tileMode\": \"Stamp\",\n\t\t\t\t\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\t\"perlinSeed\": 9365183,\n\t\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"autoSourceLayerDefUid\": 1,\n\t\t\t\t\"tilesetDefUid\": null,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__type\": \"IntGrid\",\n\t\t\t\t\"identifier\": \"Parallax\",\n\t\t\t\t\"type\": \"IntGrid\",\n\t\t\t\t\"uid\": 82,\n\t\t\t\t\"gridSize\": 16,\n\t\t\t\t\"displayOpacity\": 0.66,\n\t\t\t\t\"intGridValues\": [{ \"identifier\": \"Hills\", \"color\": \"#997614\" }],\n\t\t\t\t\"autoTilesetDefUid\": 4,\n\t\t\t\t\"autoRuleGroups\": [{\n\t\t\t\t\t\"uid\": 83,\n\t\t\t\t\t\"name\": \"Hills\",\n\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\"collapsed\": false,\n\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 91,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [202,234,266],\n\t\t\t\t\t\t\t\"chance\": 0.28,\n\t\t\t\t\t\t\t\"pattern\": [0,0,1,0,-1,1,0,0,1],\n\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 2,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 5363057,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 90,\n\t\t\t\t\t\t\t\"active\": false,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [69,70,71,72,73],\n\t\t\t\t\t\t\t\"chance\": 0.85,\n\t\t\t\t\t\t\t\"pattern\": [0,0,0,0,-1,0,1,1,1],\n\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 4457116,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 85,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [171],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [0,-1,0,-1,1,0,0,0,0],\n\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\"flipY\": true,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 9164513,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 87,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [172],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [0,-1,0,1,1,1,0,0,0],\n\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\"flipY\": true,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 9843979,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 86,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [203],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [0,1,0,-1,1,0,0,1,0],\n\t\t\t\t\t\t\t\"flipX\": true,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 5227043,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"uid\": 84,\n\t\t\t\t\t\t\t\"active\": true,\n\t\t\t\t\t\t\t\"size\": 3,\n\t\t\t\t\t\t\t\"tileIds\": [204],\n\t\t\t\t\t\t\t\"chance\": 1,\n\t\t\t\t\t\t\t\"pattern\": [0,1,0,1,1,1,0,1,0],\n\t\t\t\t\t\t\t\"flipX\": false,\n\t\t\t\t\t\t\t\"flipY\": false,\n\t\t\t\t\t\t\t\"xModulo\": 1,\n\t\t\t\t\t\t\t\"yModulo\": 1,\n\t\t\t\t\t\t\t\"checker\": \"None\",\n\t\t\t\t\t\t\t\"tileMode\": \"Single\",\n\t\t\t\t\t\t\t\"pivotX\": 0,\n\t\t\t\t\t\t\t\"pivotY\": 0,\n\t\t\t\t\t\t\t\"perlinActive\": false,\n\t\t\t\t\t\t\t\"perlinSeed\": 1700130,\n\t\t\t\t\t\t\t\"perlinScale\": 0.2,\n\t\t\t\t\t\t\t\"perlinOctaves\": 2\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}],\n\t\t\t\t\"autoSourceLayerDefUid\": null,\n\t\t\t\t\"tilesetDefUid\": null,\n\t\t\t\t\"tilePivotX\": 0,\n\t\t\t\t\"tilePivotY\": 0\n\t\t\t}\n\t\t],\n\t\t\"entities\": [\n\t\t\t{\n\t\t\t\t\"identifier\": \"Hero\",\n\t\t\t\t\"uid\": 20,\n\t\t\t\t\"width\": 32,\n\t\t\t\t\"height\": 20,\n\t\t\t\t\"color\": \"#BBF13B\",\n\t\t\t\t\"renderMode\": \"Rectangle\",\n\t\t\t\t\"tilesetId\": null,\n\t\t\t\t\"tileId\": null,\n\t\t\t\t\"tileRenderMode\": \"Stretch\",\n\t\t\t\t\"maxPerLevel\": 1,\n\t\t\t\t\"limitBehavior\": \"MoveLastOne\",\n\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\"fieldDefs\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"identifier\": \"Home\",\n\t\t\t\t\"uid\": 22,\n\t\t\t\t\"width\": 16,\n\t\t\t\t\"height\": 16,\n\t\t\t\t\"color\": \"#BB782A\",\n\t\t\t\t\"renderMode\": \"Cross\",\n\t\t\t\t\"tilesetId\": null,\n\t\t\t\t\"tileId\": null,\n\t\t\t\t\"tileRenderMode\": \"Stretch\",\n\t\t\t\t\"maxPerLevel\": 1,\n\t\t\t\t\"limitBehavior\": \"PreventAdding\",\n\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\"fieldDefs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"grabRadius\",\n\t\t\t\t\t\t\"__type\": \"Float\",\n\t\t\t\t\t\t\"uid\": 23,\n\t\t\t\t\t\t\"type\": \"F_Float\",\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"RadiusGrid\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": true,\n\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\"max\": 15,\n\t\t\t\t\t\t\"defaultOverride\": { \"id\": \"V_Float\", \"params\": [3.5] }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"storage\",\n\t\t\t\t\t\t\"__type\": \"Array<Point>\",\n\t\t\t\t\t\t\"uid\": 93,\n\t\t\t\t\t\t\"type\": \"F_Point\",\n\t\t\t\t\t\t\"isArray\": true,\n\t\t\t\t\t\t\"canBeNull\": true,\n\t\t\t\t\t\t\"arrayMinLength\": 2,\n\t\t\t\t\t\t\"arrayMaxLength\": 2,\n\t\t\t\t\t\t\"editorDisplayMode\": \"PointPath\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": false,\n\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\"defaultOverride\": null\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"identifier\": \"Item\",\n\t\t\t\t\"uid\": 25,\n\t\t\t\t\"width\": 12,\n\t\t\t\t\"height\": 12,\n\t\t\t\t\"color\": \"#FFC800\",\n\t\t\t\t\"renderMode\": \"Ellipse\",\n\t\t\t\t\"tilesetId\": null,\n\t\t\t\t\"tileId\": null,\n\t\t\t\t\"tileRenderMode\": \"Stretch\",\n\t\t\t\t\"maxPerLevel\": 0,\n\t\t\t\t\"limitBehavior\": \"DiscardOldOnes\",\n\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\"fieldDefs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"type\",\n\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\"uid\": 37,\n\t\t\t\t\t\t\"type\": { \"id\": \"F_Enum\", \"params\": [35] },\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"EntityTile\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": false,\n\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\"defaultOverride\": null\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"identifier\": \"ItemGenerator\",\n\t\t\t\t\"uid\": 29,\n\t\t\t\t\"width\": 16,\n\t\t\t\t\"height\": 16,\n\t\t\t\t\"color\": \"#858585\",\n\t\t\t\t\"renderMode\": \"Ellipse\",\n\t\t\t\t\"tilesetId\": null,\n\t\t\t\t\"tileId\": null,\n\t\t\t\t\"tileRenderMode\": \"Stretch\",\n\t\t\t\t\"maxPerLevel\": 0,\n\t\t\t\t\"limitBehavior\": \"DiscardOldOnes\",\n\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\"pivotY\": 0.5,\n\t\t\t\t\"fieldDefs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"type\",\n\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\"uid\": 36,\n\t\t\t\t\t\t\"type\": { \"id\": \"F_Enum\", \"params\": [35] },\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"EntityTile\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": false,\n\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\"defaultOverride\": null\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"spawnMode\",\n\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\"uid\": 39,\n\t\t\t\t\t\t\"type\": { \"id\": \"F_Enum\", \"params\": [38] },\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"ValueOnly\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": false,\n\t\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\"defaultOverride\": null\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"maxChildren\",\n\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\"uid\": 33,\n\t\t\t\t\t\t\"type\": \"F_Int\",\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"ValueOnly\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": false,\n\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\"max\": 10,\n\t\t\t\t\t\t\"defaultOverride\": { \"id\": \"V_Int\", \"params\": [1] }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"radius\",\n\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\"uid\": 40,\n\t\t\t\t\t\t\"type\": \"F_Int\",\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"RadiusGrid\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": true,\n\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\"max\": 20,\n\t\t\t\t\t\t\"defaultOverride\": { \"id\": \"V_Int\", \"params\": [2] }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"identifier\": \"minGroundDist\",\n\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\"uid\": 111,\n\t\t\t\t\t\t\"type\": \"F_Int\",\n\t\t\t\t\t\t\"isArray\": false,\n\t\t\t\t\t\t\"canBeNull\": false,\n\t\t\t\t\t\t\"arrayMinLength\": null,\n\t\t\t\t\t\t\"arrayMaxLength\": null,\n\t\t\t\t\t\t\"editorDisplayMode\": \"NameAndValue\",\n\t\t\t\t\t\t\"editorDisplayPos\": \"Above\",\n\t\t\t\t\t\t\"editorAlwaysShow\": false,\n\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\"max\": 4,\n\t\t\t\t\t\t\"defaultOverride\": null\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"identifier\": \"Bumper\",\n\t\t\t\t\"uid\": 115,\n\t\t\t\t\"width\": 16,\n\t\t\t\t\"height\": 8,\n\t\t\t\t\"color\": \"#FEFFC2\",\n\t\t\t\t\"renderMode\": \"Rectangle\",\n\t\t\t\t\"tilesetId\": null,\n\t\t\t\t\"tileId\": null,\n\t\t\t\t\"tileRenderMode\": \"Stretch\",\n\t\t\t\t\"maxPerLevel\": 0,\n\t\t\t\t\"limitBehavior\": \"DiscardOldOnes\",\n\t\t\t\t\"pivotX\": 0.5,\n\t\t\t\t\"pivotY\": 1,\n\t\t\t\t\"fieldDefs\": []\n\t\t\t}\n\t\t],\n\t\t\"tilesets\": [\n\t\t\t{\n\t\t\t\t\"identifier\": \"Tiles\",\n\t\t\t\t\"uid\": 4,\n\t\t\t\t\"relPath\": \"tiles.png\",\n\t\t\t\t\"pxWid\": 512,\n\t\t\t\t\"pxHei\": 512,\n\t\t\t\t\"tileGridSize\": 16,\n\t\t\t\t\"spacing\": 0,\n\t\t\t\t\"padding\": 0,\n\t\t\t\t\"savedSelections\": [\n\t\t\t\t\t{ \"ids\": [450,481,482], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [451,483], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [452,484], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [453,485], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [548,580], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [550,582], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [262,294], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [97,98,99,100], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [131,132,133,134], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [166,198,230], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [165,197,229], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [224,225,226], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [101,102,103,104,105], \"mode\": \"Random\" },\n\t\t\t\t\t{ \"ids\": [357,389], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [276,308,340,277,309,341,278,310,342,279,311,343], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [271,303,335,272,304,336,273,305,337,274,306,338,275,307,339], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [142,143,144,145,146,174,175,176,177,178,206,207,208,209,210,238,239,240,241], \"mode\": \"Stamp\" },\n\t\t\t\t\t{ \"ids\": [147,179,211,243,148,180,212,244,149,181,213,245,150,182,214,246,151,183,215], \"mode\": \"Stamp\" }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"identifier\": \"Icons\",\n\t\t\t\t\"uid\": 34,\n\t\t\t\t\"relPath\": \"RPG_Assets_by_ssugmi.png\",\n\t\t\t\t\"pxWid\": 176,\n\t\t\t\t\"pxHei\": 128,\n\t\t\t\t\"tileGridSize\": 16,\n\t\t\t\t\"spacing\": 0,\n\t\t\t\t\"padding\": 0,\n\t\t\t\t\"savedSelections\": []\n\t\t\t}\n\t\t],\n\t\t\"enums\": [\n\t\t\t{ \"identifier\": \"Item\", \"uid\": 35, \"values\": [\n\t\t\t\t{ \"id\": \"Wood\", \"tileId\": 74, \"__tileSrcRect\": [128,96,16,16] },\n\t\t\t\t{ \"id\": \"Apple\", \"tileId\": 75, \"__tileSrcRect\": [144,96,16,16] },\n\t\t\t\t{ \"id\": \"Diamond\", \"tileId\": 61, \"__tileSrcRect\": [96,80,16,16] }\n\t\t\t], \"iconTilesetUid\": 34, \"externalRelPath\": null, \"externalFileChecksum\": null },\n\t\t\t{ \"identifier\": \"SpawnMode\", \"uid\": 38, \"values\": [ { \"id\": \"FloatInAir\", \"tileId\": null, \"__tileSrcRect\": null }, { \"id\": \"OnGround\", \"tileId\": null, \"__tileSrcRect\": null } ], \"iconTilesetUid\": null, \"externalRelPath\": null, \"externalFileChecksum\": null }\n\t\t],\n\t\t\"externalEnums\": [\n\t\t\t{ \"identifier\": \"Affect\", \"uid\": 3, \"values\": [{ \"id\": \"Stun\", \"tileId\": null, \"__tileSrcRect\": null }], \"iconTilesetUid\": null, \"externalRelPath\": \"../../src/Types.hx\", \"externalFileChecksum\": \"10e84388ccf1fe137d69d23d6e9ab15c\" },\n\t\t\t{ \"identifier\": \"LevelMark\", \"uid\": 27, \"values\": [\n\t\t\t\t{ \"id\": \"CliffHigh\", \"tileId\": null, \"__tileSrcRect\": null },\n\t\t\t\t{ \"id\": \"CliffSmall\", \"tileId\": null, \"__tileSrcRect\": null },\n\t\t\t\t{ \"id\": \"EdgeGrab\", \"tileId\": null, \"__tileSrcRect\": null },\n\t\t\t\t{ \"id\": \"StepHight\", \"tileId\": null, \"__tileSrcRect\": null },\n\t\t\t\t{ \"id\": \"StepSmall\", \"tileId\": null, \"__tileSrcRect\": null }\n\t\t\t], \"iconTilesetUid\": null, \"externalRelPath\": \"../../src/Types.hx\", \"externalFileChecksum\": \"10e84388ccf1fe137d69d23d6e9ab15c\" }\n\t\t]\n\t},\n\t\"levels\": [{\n\t\t\"identifier\": \"Country\",\n\t\t\"uid\": 0,\n\t\t\"pxWid\": 2016,\n\t\t\"pxHei\": 480,\n\t\t\"layerInstances\": [\n\t\t\t{\n\t\t\t\t\"__identifier\": \"Entities\",\n\t\t\t\t\"__type\": \"Entities\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 1,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 21,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [],\n\t\t\t\t\"autoLayerTiles\": [],\n\t\t\t\t\"seed\": 9465652,\n\t\t\t\t\"gridTiles\": [],\n\t\t\t\t\"entityInstances\": [\n\t\t\t\t\t{ \"__identifier\": \"Home\", \"__grid\": [65,22], \"__tile\": null, \"defUid\": 22, \"px\": [1048,368], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"grabRadius\",\n\t\t\t\t\t\t\t\"__value\": 4,\n\t\t\t\t\t\t\t\"__type\": \"Float\",\n\t\t\t\t\t\t\t\"defUid\": 23,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Float\", \"params\": [4] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"storage\",\n\t\t\t\t\t\t\t\"__value\": [ { \"cx\": 63, \"cy\": 19 }, { \"cx\": 66, \"cy\": 19 } ],\n\t\t\t\t\t\t\t\"__type\": \"Array<Point>\",\n\t\t\t\t\t\t\t\"defUid\": 93,\n\t\t\t\t\t\t\t\"realEditorValues\": [ {\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"63,19\"]\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"66,19\"]\n\t\t\t\t\t\t\t} ]\n\t\t\t\t\t\t}\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"Hero\", \"__grid\": [65,23], \"__tile\": null, \"defUid\": 20, \"px\": [1048,384], \"fieldInstances\": [] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [94,19], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [144,96,16,16] }, \"defUid\": 29, \"px\": [1512,312], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 3,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [3] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Apple\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Apple\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"FloatInAir\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"FloatInAir\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 3,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [3] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"minGroundDist\",\n\t\t\t\t\t\t\t\"__value\": 2,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 111,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [2] }]\n\t\t\t\t\t\t}\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [80,18], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [144,96,16,16] }, \"defUid\": 29, \"px\": [1288,296], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 3,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [3] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Apple\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Apple\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"FloatInAir\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"FloatInAir\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 3,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [3] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"minGroundDist\",\n\t\t\t\t\t\t\t\"__value\": 2,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 111,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [2] }]\n\t\t\t\t\t\t}\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [109,20], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [128,96,16,16] }, \"defUid\": 29, \"px\": [1752,328], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 5,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [5] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Wood\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Wood\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 6,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [6] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [15,19], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [128,96,16,16] }, \"defUid\": 29, \"px\": [248,312], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 4,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [4] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Wood\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Wood\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 6,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [6] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [35,18], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [128,96,16,16] }, \"defUid\": 29, \"px\": [568,296], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 2,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [2] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Wood\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Wood\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 7,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [7] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [18,15], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [144,96,16,16] }, \"defUid\": 29, \"px\": [296,248], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 5,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [5] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Apple\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Apple\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"FloatInAir\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"FloatInAir\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 4,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [4] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"minGroundDist\",\n\t\t\t\t\t\t\t\"__value\": 2,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 111,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [2] }]\n\t\t\t\t\t\t}\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [80,13], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [144,96,16,16] }, \"defUid\": 29, \"px\": [1288,216], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 2,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [2] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Apple\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Apple\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 6,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [6] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"Bumper\", \"__grid\": [87,22], \"__tile\": null, \"defUid\": 115, \"px\": [1400,368], \"fieldInstances\": [] },\n\t\t\t\t\t{ \"__identifier\": \"Bumper\", \"__grid\": [6,17], \"__tile\": null, \"defUid\": 115, \"px\": [104,288], \"fieldInstances\": [] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [65,15], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [96,80,16,16] }, \"defUid\": 29, \"px\": [1048,248], \"fieldInstances\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"maxChildren\",\n\t\t\t\t\t\t\t\"__value\": 1,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 33,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [1] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Diamond\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Diamond\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"radius\",\n\t\t\t\t\t\t\t\"__value\": 1,\n\t\t\t\t\t\t\t\"__type\": \"Int\",\n\t\t\t\t\t\t\t\"defUid\": 40,\n\t\t\t\t\t\t\t\"realEditorValues\": [{ \"id\": \"V_Int\", \"params\": [1] }]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [93,13], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [96,80,16,16] }, \"defUid\": 29, \"px\": [1496,216], \"fieldInstances\": [\n\t\t\t\t\t\t{ \"__identifier\": \"maxChildren\", \"__value\": 1, \"__type\": \"Int\", \"defUid\": 33, \"realEditorValues\": [] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Diamond\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Diamond\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"radius\", \"__value\": 2, \"__type\": \"Int\", \"defUid\": 40, \"realEditorValues\": [] },\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] },\n\t\t\t\t\t{ \"__identifier\": \"ItemGenerator\", \"__grid\": [22,9], \"__tile\": { \"tilesetUid\": 34, \"srcRect\": [96,80,16,16] }, \"defUid\": 29, \"px\": [360,152], \"fieldInstances\": [\n\t\t\t\t\t\t{ \"__identifier\": \"maxChildren\", \"__value\": 1, \"__type\": \"Int\", \"defUid\": 33, \"realEditorValues\": [] },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"type\",\n\t\t\t\t\t\t\t\"__value\": \"Diamond\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.Item\",\n\t\t\t\t\t\t\t\"defUid\": 36,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"Diamond\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"__identifier\": \"spawnMode\",\n\t\t\t\t\t\t\t\"__value\": \"OnGround\",\n\t\t\t\t\t\t\t\"__type\": \"LocalEnum.SpawnMode\",\n\t\t\t\t\t\t\t\"defUid\": 39,\n\t\t\t\t\t\t\t\"realEditorValues\": [{\n\t\t\t\t\t\t\t\t\"id\": \"V_String\",\n\t\t\t\t\t\t\t\t\"params\": [\"OnGround\"]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \"__identifier\": \"radius\", \"__value\": 2, \"__type\": \"Int\", \"defUid\": 40, \"realEditorValues\": [] },\n\t\t\t\t\t\t{ \"__identifier\": \"minGroundDist\", \"__value\": 0, \"__type\": \"Int\", \"defUid\": 111, \"realEditorValues\": [] }\n\t\t\t\t\t] }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__identifier\": \"TilesFront\",\n\t\t\t\t\"__type\": \"Tiles\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 1,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 97,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [],\n\t\t\t\t\"autoLayerTiles\": [],\n\t\t\t\t\"seed\": 2682468,\n\t\t\t\t\"gridTiles\": [\n\t\t\t\t\t{ \"px\": [1568,176], \"src\": [224,64], \"f\": 0, \"d\": [1484,142] },\n\t\t\t\t\t{ \"px\": [1584,176], \"src\": [240,64], \"f\": 0, \"d\": [1485,143] },\n\t\t\t\t\t{ \"px\": [1600,176], \"src\": [256,64], \"f\": 0, \"d\": [1486,144] },\n\t\t\t\t\t{ \"px\": [1616,176], \"src\": [272,64], \"f\": 0, \"d\": [1487,145] },\n\t\t\t\t\t{ \"px\": [1632,176], \"src\": [288,64], \"f\": 0, \"d\": [1488,146] },\n\t\t\t\t\t{ \"px\": [256,192], \"src\": [304,64], \"f\": 0, \"d\": [1528,147] },\n\t\t\t\t\t{ \"px\": [272,192], \"src\": [320,64], \"f\": 0, \"d\": [1529,148] },\n\t\t\t\t\t{ \"px\": [288,192], \"src\": [336,64], \"f\": 0, \"d\": [1530,149] },\n\t\t\t\t\t{ \"px\": [304,192], \"src\": [352,64], \"f\": 0, \"d\": [1531,150] },\n\t\t\t\t\t{ \"px\": [320,192], \"src\": [368,64], \"f\": 0, \"d\": [1532,151] },\n\t\t\t\t\t{ \"px\": [1504,192], \"src\": [304,64], \"f\": 0, \"d\": [1606,147] },\n\t\t\t\t\t{ \"px\": [1520,192], \"src\": [320,64], \"f\": 0, \"d\": [1607,148] },\n\t\t\t\t\t{ \"px\": [1536,192], \"src\": [336,64], \"f\": 0, \"d\": [1608,149] },\n\t\t\t\t\t{ \"px\": [1552,192], \"src\": [352,64], \"f\": 0, \"d\": [1609,150] },\n\t\t\t\t\t{ \"px\": [1568,192], \"src\": [224,80], \"f\": 0, \"d\": [1610,174] },\n\t\t\t\t\t{ \"px\": [1584,192], \"src\": [240,80], \"f\": 0, \"d\": [1611,175] },\n\t\t\t\t\t{ \"px\": [1600,192], \"src\": [256,80], \"f\": 0, \"d\": [1612,176] },\n\t\t\t\t\t{ \"px\": [1616,192], \"src\": [272,80], \"f\": 0, \"d\": [1613,177] },\n\t\t\t\t\t{ \"px\": [1632,192], \"src\": [288,80], \"f\": 0, \"d\": [1614,178] },\n\t\t\t\t\t{ \"px\": [256,208], \"src\": [304,80], \"f\": 0, \"d\": [1654,179] },\n\t\t\t\t\t{ \"px\": [272,208], \"src\": [320,80], \"f\": 0, \"d\": [1655,180] },\n\t\t\t\t\t{ \"px\": [288,208], \"src\": [336,80], \"f\": 0, \"d\": [1656,181] },\n\t\t\t\t\t{ \"px\": [304,208], \"src\": [352,80], \"f\": 0, \"d\": [1657,182] },\n\t\t\t\t\t{ \"px\": [320,208], \"src\": [368,80], \"f\": 0, \"d\": [1658,183] },\n\t\t\t\t\t{ \"px\": [1424,208], \"src\": [224,64], \"f\": 0, \"d\": [1727,142] },\n\t\t\t\t\t{ \"px\": [1440,208], \"src\": [240,64], \"f\": 0, \"d\": [1728,143] },\n\t\t\t\t\t{ \"px\": [1456,208], \"src\": [256,64], \"f\": 0, \"d\": [1729,144] },\n\t\t\t\t\t{ \"px\": [1472,208], \"src\": [272,64], \"f\": 0, \"d\": [1730,145] },\n\t\t\t\t\t{ \"px\": [1488,208], \"src\": [288,64], \"f\": 0, \"d\": [1731,146] },\n\t\t\t\t\t{ \"px\": [1504,208], \"src\": [304,80], \"f\": 0, \"d\": [1732,179] },\n\t\t\t\t\t{ \"px\": [1520,208], \"src\": [320,80], \"f\": 0, \"d\": [1733,180] },\n\t\t\t\t\t{ \"px\": [1536,208], \"src\": [336,80], \"f\": 0, \"d\": [1734,181] },\n\t\t\t\t\t{ \"px\": [1552,208], \"src\": [352,80], \"f\": 0, \"d\": [1735,182] },\n\t\t\t\t\t{ \"px\": [1568,208], \"src\": [224,96], \"f\": 0, \"d\": [1736,206] },\n\t\t\t\t\t{ \"px\": [1584,208], \"src\": [240,96], \"f\": 0, \"d\": [1737,207] },\n\t\t\t\t\t{ \"px\": [1600,208], \"src\": [256,96], \"f\": 0, \"d\": [1738,208] },\n\t\t\t\t\t{ \"px\": [1616,208], \"src\": [272,96], \"f\": 0, \"d\": [1739,209] },\n\t\t\t\t\t{ \"px\": [1632,208], \"src\": [288,96], \"f\": 0, \"d\": [1740,210] },\n\t\t\t\t\t{ \"px\": [256,224], \"src\": [304,96], \"f\": 0, \"d\": [1780,211] },\n\t\t\t\t\t{ \"px\": [272,224], \"src\": [320,96], \"f\": 0, \"d\": [1781,212] },\n\t\t\t\t\t{ \"px\": [288,224], \"src\": [336,96], \"f\": 0, \"d\": [1782,213] },\n\t\t\t\t\t{ \"px\": [304,224], \"src\": [352,96], \"f\": 0, \"d\": [1783,214] },\n\t\t\t\t\t{ \"px\": [320,224], \"src\": [368,96], \"f\": 0, \"d\": [1784,215] },\n\t\t\t\t\t{ \"px\": [1424,224], \"src\": [224,80], \"f\": 0, \"d\": [1853,174] },\n\t\t\t\t\t{ \"px\": [1440,224], \"src\": [240,80], \"f\": 0, \"d\": [1854,175] },\n\t\t\t\t\t{ \"px\": [1456,224], \"src\": [256,80], \"f\": 0, \"d\": [1855,176] },\n\t\t\t\t\t{ \"px\": [1472,224], \"src\": [272,80], \"f\": 0, \"d\": [1856,177] },\n\t\t\t\t\t{ \"px\": [1488,224], \"src\": [288,80], \"f\": 0, \"d\": [1857,178] },\n\t\t\t\t\t{ \"px\": [1504,224], \"src\": [304,96], \"f\": 0, \"d\": [1858,211] },\n\t\t\t\t\t{ \"px\": [1520,224], \"src\": [320,96], \"f\": 0, \"d\": [1859,212] },\n\t\t\t\t\t{ \"px\": [1536,224], \"src\": [336,96], \"f\": 0, \"d\": [1860,213] },\n\t\t\t\t\t{ \"px\": [1552,224], \"src\": [352,96], \"f\": 0, \"d\": [1861,214] },\n\t\t\t\t\t{ \"px\": [1568,224], \"src\": [224,112], \"f\": 0, \"d\": [1862,238] },\n\t\t\t\t\t{ \"px\": [1584,224], \"src\": [240,112], \"f\": 0, \"d\": [1863,239] },\n\t\t\t\t\t{ \"px\": [1600,224], \"src\": [256,112], \"f\": 0, \"d\": [1864,240] },\n\t\t\t\t\t{ \"px\": [1616,224], \"src\": [272,112], \"f\": 0, \"d\": [1865,241] },\n\t\t\t\t\t{ \"px\": [256,240], \"src\": [304,112], \"f\": 0, \"d\": [1906,243] },\n\t\t\t\t\t{ \"px\": [272,240], \"src\": [320,112], \"f\": 0, \"d\": [1907,244] },\n\t\t\t\t\t{ \"px\": [288,240], \"src\": [336,112], \"f\": 0, \"d\": [1908,245] },\n\t\t\t\t\t{ \"px\": [304,240], \"src\": [352,112], \"f\": 0, \"d\": [1909,246] },\n\t\t\t\t\t{ \"px\": [320,240], \"src\": [368,112], \"f\": 0, \"d\": [1910,247] },\n\t\t\t\t\t{ \"px\": [1008,240], \"src\": [16,48], \"f\": 0, \"d\": [1953,97] },\n\t\t\t\t\t{ \"px\": [1024,240], \"src\": [80,48], \"f\": 0, \"d\": [1954,101] },\n\t\t\t\t\t{ \"px\": [1040,240], \"src\": [64,48], \"f\": 0, \"d\": [1955,100] },\n\t\t\t\t\t{ \"px\": [1056,240], \"src\": [16,48], \"f\": 0, \"d\": [1956,97] },\n\t\t\t\t\t{ \"px\": [1424,240], \"src\": [224,96], \"f\": 0, \"d\": [1979,206] },\n\t\t\t\t\t{ \"px\": [1440,240], \"src\": [240,96], \"f\": 0, \"d\": [1980,207] },\n\t\t\t\t\t{ \"px\": [1456,240], \"src\": [256,96], \"f\": 0, \"d\": [1981,208] },\n\t\t\t\t\t{ \"px\": [1472,240], \"src\": [272,96], \"f\": 0, \"d\": [1982,209] },\n\t\t\t\t\t{ \"px\": [1488,240], \"src\": [288,96], \"f\": 0, \"d\": [1983,210] },\n\t\t\t\t\t{ \"px\": [1504,240], \"src\": [304,112], \"f\": 0, \"d\": [1984,243] },\n\t\t\t\t\t{ \"px\": [1520,240], \"src\": [320,112], \"f\": 0, \"d\": [1985,244] },\n\t\t\t\t\t{ \"px\": [1536,240], \"src\": [336,112], \"f\": 0, \"d\": [1986,245] },\n\t\t\t\t\t{ \"px\": [1552,240], \"src\": [352,112], \"f\": 0, \"d\": [1987,246] },\n\t\t\t\t\t{ \"px\": [992,256], \"src\": [64,272], \"f\": 0, \"d\": [2078,548] },\n\t\t\t\t\t{ \"px\": [1008,256], \"src\": [80,272], \"f\": 0, \"d\": [2079,549] },\n\t\t\t\t\t{ \"px\": [1024,256], \"src\": [80,272], \"f\": 0, \"d\": [2080,549] },\n\t\t\t\t\t{ \"px\": [1040,256], \"src\": [80,272], \"f\": 0, \"d\": [2081,549] },\n\t\t\t\t\t{ \"px\": [1056,256], \"src\": [80,272], \"f\": 0, \"d\": [2082,549] },\n\t\t\t\t\t{ \"px\": [1072,256], \"src\": [96,272], \"f\": 0, \"d\": [2083,550] },\n\t\t\t\t\t{ \"px\": [1088,256], \"src\": [112,272], \"f\": 0, \"d\": [2084,551] },\n\t\t\t\t\t{ \"px\": [1248,256], \"src\": [224,64], \"f\": 0, \"d\": [2094,142] },\n\t\t\t\t\t{ \"px\": [1264,256], \"src\": [240,64], \"f\": 0, \"d\": [2095,143] },\n\t\t\t\t\t{ \"px\": [1280,256], \"src\": [256,64], \"f\": 0, \"d\": [2096,144] },\n\t\t\t\t\t{ \"px\": [1296,256], \"src\": [272,64], \"f\": 0, \"d\": [2097,145] },\n\t\t\t\t\t{ \"px\": [1312,256], \"src\": [288,64], \"f\": 0, \"d\": [2098,146] },\n\t\t\t\t\t{ \"px\": [1424,256], \"src\": [224,112], \"f\": 0, \"d\": [2105,238] },\n\t\t\t\t\t{ \"px\": [1440,256], \"src\": [240,112], \"f\": 0, \"d\": [2106,239] },\n\t\t\t\t\t{ \"px\": [1456,256], \"src\": [256,112], \"f\": 0, \"d\": [2107,240] },\n\t\t\t\t\t{ \"px\": [1472,256], \"src\": [272,112], \"f\": 0, \"d\": [2108,241] },\n\t\t\t\t\t{ \"px\": [1488,256], \"src\": [240,64], \"f\": 0, \"d\": [2109,143] },\n\t\t\t\t\t{ \"px\": [1504,256], \"src\": [256,64], \"f\": 0, \"d\": [2110,144] },\n\t\t\t\t\t{ \"px\": [1520,256], \"src\": [272,64], \"f\": 0, \"d\": [2111,145] },\n\t\t\t\t\t{ \"px\": [1536,256], \"src\": [288,64], \"f\": 0, \"d\": [2112,146] },\n\t\t\t\t\t{ \"px\": [256,272], \"src\": [320,128], \"f\": 0, \"d\": [2158,276] },\n\t\t\t\t\t{ \"px\": [272,272], \"src\": [336,128], \"f\": 0, \"d\": [2159,277] },\n\t\t\t\t\t{ \"px\": [288,272], \"src\": [352,128], \"f\": 0, \"d\": [2160,278] },\n\t\t\t\t\t{ \"px\": [304,272], \"src\": [368,128], \"f\": 0, \"d\": [2161,279] },\n\t\t\t\t\t{ \"px\": [976,272], \"src\": [64,272], \"f\": 0, \"d\": [2203,548] },\n\t\t\t\t\t{ \"px\": [992,272], \"src\": [64,288], \"f\": 0, \"d\": [2204,580] },\n\t\t\t\t\t{ \"px\": [1008,272], \"src\": [48,208], \"f\": 0, \"d\": [2205,419] },\n\t\t\t\t\t{ \"px\": [1024,272], \"src\": [64,208], \"f\": 0, \"d\": [2206,420] },\n\t\t\t\t\t{ \"px\": [1040,272], \"src\": [64,208], \"f\": 0, \"d\": [2207,420] },\n\t\t\t\t\t{ \"px\": [1056,272], \"src\": [80,208], \"f\": 0, \"d\": [2208,421] },\n\t\t\t\t\t{ \"px\": [1072,272], \"src\": [96,288], \"f\": 0, \"d\": [2209,582] },\n\t\t\t\t\t{ \"px\": [1088,272], \"src\": [96,272], \"f\": 0, \"d\": [2210,550] },\n\t\t\t\t\t{ \"px\": [1200,272], \"src\": [112,272], \"f\": 0, \"d\": [2217,551] },\n\t\t\t\t\t{ \"px\": [1248,272], \"src\": [224,80], \"f\": 0, \"d\": [2220,174] },\n\t\t\t\t\t{ \"px\": [1264,272], \"src\": [240,80], \"f\": 0, \"d\": [2221,175] },\n\t\t\t\t\t{ \"px\": [1280,272], \"src\": [256,80], \"f\": 0, \"d\": [2222,176] },\n\t\t\t\t\t{ \"px\": [1296,272], \"src\": [272,80], \"f\": 0, \"d\": [2223,177] },\n\t\t\t\t\t{ \"px\": [1312,272], \"src\": [288,80], \"f\": 0, \"d\": [2224,178] },\n\t\t\t\t\t{ \"px\": [1472,272], \"src\": [224,80], \"f\": 0, \"d\": [2234,174] },\n\t\t\t\t\t{ \"px\": [1488,272], \"src\": [240,80], \"f\": 0, \"d\": [2235,175] },\n\t\t\t\t\t{ \"px\": [1504,272], \"src\": [256,80], \"f\": 0, \"d\": [2236,176] },\n\t\t\t\t\t{ \"px\": [1520,272], \"src\": [272,80], \"f\": 0, \"d\": [2237,177] },\n\t\t\t\t\t{ \"px\": [1536,272], \"src\": [288,80], \"f\": 0, \"d\": [2238,178] },\n\t\t\t\t\t{ \"px\": [256,288], \"src\": [320,144], \"f\": 0, \"d\": [2284,308] },\n\t\t\t\t\t{ \"px\": [272,288], \"src\": [336,144], \"f\": 0, \"d\": [2285,309] },\n\t\t\t\t\t{ \"px\": [288,288], \"src\": [352,144], \"f\": 0, \"d\": [2286,310] },\n\t\t\t\t\t{ \"px\": [304,288], \"src\": [368,144], \"f\": 0, \"d\": [2287,311] },\n\t\t\t\t\t{ \"px\": [960,288], \"src\": [48,288], \"f\": 0, \"d\": [2328,579] },\n\t\t\t\t\t{ \"px\": [976,288], \"src\": [64,288], \"f\": 0, \"d\": [2329,580] },\n\t\t\t\t\t{ \"px\": [992,288], \"src\": [80,176], \"f\": 0, \"d\": [2330,357] },\n\t\t\t\t\t{ \"px\": [1008,288], \"src\": [96,128], \"f\": 0, \"d\": [2331,262] },\n\t\t\t\t\t{ \"px\": [1024,288], \"src\": [96,128], \"f\": 0, \"d\": [2332,262] },\n\t\t\t\t\t{ \"px\": [1040,288], \"src\": [96,128], \"f\": 0, \"d\": [2333,262] },\n\t\t\t\t\t{ \"px\": [1056,288], \"src\": [96,128], \"f\": 0, \"d\": [2334,262] },\n\t\t\t\t\t{ \"px\": [1072,288], \"src\": [80,176], \"f\": 0, \"d\": [2335,357] },\n\t\t\t\t\t{ \"px\": [1088,288], \"src\": [96,288], \"f\": 0, \"d\": [2336,582] },\n\t\t\t\t\t{ \"px\": [1104,288], \"src\": [112,288], \"f\": 0, \"d\": [2337,583] },\n\t\t\t\t\t{ \"px\": [1248,288], \"src\": [224,96], \"f\": 0, \"d\": [2346,206] },\n\t\t\t\t\t{ \"px\": [1264,288], \"src\": [240,96], \"f\": 0, \"d\": [2347,207] },\n\t\t\t\t\t{ \"px\": [1280,288], \"src\": [256,96], \"f\": 0, \"d\": [2348,208] },\n\t\t\t\t\t{ \"px\": [1296,288], \"src\": [272,96], \"f\": 0, \"d\": [2349,209] },\n\t\t\t\t\t{ \"px\": [1312,288], \"src\": [288,96], \"f\": 0, \"d\": [2350,210] },\n\t\t\t\t\t{ \"px\": [1472,288], \"src\": [224,96], \"f\": 0, \"d\": [2360,206] },\n\t\t\t\t\t{ \"px\": [1488,288], \"src\": [240,96], \"f\": 0, \"d\": [2361,207] },\n\t\t\t\t\t{ \"px\": [1504,288], \"src\": [256,96], \"f\": 0, \"d\": [2362,208] },\n\t\t\t\t\t{ \"px\": [1520,288], \"src\": [272,96], \"f\": 0, \"d\": [2363,209] },\n\t\t\t\t\t{ \"px\": [1536,288], \"src\": [288,96], \"f\": 0, \"d\": [2364,210] },\n\t\t\t\t\t{ \"px\": [256,304], \"src\": [320,160], \"f\": 0, \"d\": [2410,340] },\n\t\t\t\t\t{ \"px\": [272,304], \"src\": [336,160], \"f\": 0, \"d\": [2411,341] },\n\t\t\t\t\t{ \"px\": [288,304], \"src\": [352,160], \"f\": 0, \"d\": [2412,342] },\n\t\t\t\t\t{ \"px\": [304,304], \"src\": [368,160], \"f\": 0, \"d\": [2413,343] },\n\t\t\t\t\t{ \"px\": [992,304], \"src\": [80,192], \"f\": 0, \"d\": [2456,389] },\n\t\t\t\t\t{ \"px\": [1008,304], \"src\": [96,144], \"f\": 0, \"d\": [2457,294] },\n\t\t\t\t\t{ \"px\": [1024,304], \"src\": [96,144], \"f\": 0, \"d\": [2458,294] },\n\t\t\t\t\t{ \"px\": [1040,304], \"src\": [96,144], \"f\": 0, \"d\": [2459,294] },\n\t\t\t\t\t{ \"px\": [1056,304], \"src\": [96,144], \"f\": 0, \"d\": [2460,294] },\n\t\t\t\t\t{ \"px\": [1072,304], \"src\": [80,192], \"f\": 0, \"d\": [2461,389] },\n\t\t\t\t\t{ \"px\": [1248,304], \"src\": [224,112], \"f\": 0, \"d\": [2472,238] },\n\t\t\t\t\t{ \"px\": [1264,304], \"src\": [240,112], \"f\": 0, \"d\": [2473,239] },\n\t\t\t\t\t{ \"px\": [1280,304], \"src\": [256,112], \"f\": 0, \"d\": [2474,240] },\n\t\t\t\t\t{ \"px\": [1296,304], \"src\": [272,112], \"f\": 0, \"d\": [2475,241] },\n\t\t\t\t\t{ \"px\": [1312,304], \"src\": [288,112], \"f\": 0, \"d\": [2476,242] },\n\t\t\t\t\t{ \"px\": [1472,304], \"src\": [224,112], \"f\": 0, \"d\": [2486,238] },\n\t\t\t\t\t{ \"px\": [1488,304], \"src\": [240,112], \"f\": 0, \"d\": [2487,239] },\n\t\t\t\t\t{ \"px\": [1504,304], \"src\": [256,112], \"f\": 0, \"d\": [2488,240] },\n\t\t\t\t\t{ \"px\": [1520,304], \"src\": [272,112], \"f\": 0, \"d\": [2489,241] },\n\t\t\t\t\t{ \"px\": [1536,304], \"src\": [288,112], \"f\": 0, \"d\": [2490,242] },\n\t\t\t\t\t{ \"px\": [976,320], \"src\": [48,256], \"f\": 0, \"d\": [2581,515] },\n\t\t\t\t\t{ \"px\": [992,320], \"src\": [48,256], \"f\": 0, \"d\": [2582,515] },\n\t\t\t\t\t{ \"px\": [1008,320], \"src\": [48,256], \"f\": 0, \"d\": [2583,515] },\n\t\t\t\t\t{ \"px\": [1024,320], \"src\": [48,256], \"f\": 0, \"d\": [2584,515] },\n\t\t\t\t\t{ \"px\": [1040,320], \"src\": [48,256], \"f\": 0, \"d\": [2585,515] },\n\t\t\t\t\t{ \"px\": [1056,320], \"src\": [48,256], \"f\": 0, \"d\": [2586,515] },\n\t\t\t\t\t{ \"px\": [1072,320], \"src\": [48,256], \"f\": 0, \"d\": [2587,515] },\n\t\t\t\t\t{ \"px\": [1088,320], \"src\": [48,256], \"f\": 0, \"d\": [2588,515] },\n\t\t\t\t\t{ \"px\": [1264,320], \"src\": [320,128], \"f\": 0, \"d\": [2599,276] },\n\t\t\t\t\t{ \"px\": [1280,320], \"src\": [336,128], \"f\": 0, \"d\": [2600,277] },\n\t\t\t\t\t{ \"px\": [1296,320], \"src\": [352,128], \"f\": 0, \"d\": [2601,278] },\n\t\t\t\t\t{ \"px\": [1312,320], \"src\": [368,128], \"f\": 0, \"d\": [2602,279] },\n\t\t\t\t\t{ \"px\": [1488,320], \"src\": [320,128], \"f\": 0, \"d\": [2613,276] },\n\t\t\t\t\t{ \"px\": [1504,320], \"src\": [336,128], \"f\": 0, \"d\": [2614,277] },\n\t\t\t\t\t{ \"px\": [1520,320], \"src\": [352,128], \"f\": 0, \"d\": [2615,278] },\n\t\t\t\t\t{ \"px\": [1536,320], \"src\": [368,128], \"f\": 0, \"d\": [2616,279] },\n\t\t\t\t\t{ \"px\": [976,336], \"src\": [48,224], \"f\": 0, \"d\": [2707,451] },\n\t\t\t\t\t{ \"px\": [992,336], \"src\": [64,192], \"f\": 0, \"d\": [2708,388] },\n\t\t\t\t\t{ \"px\": [1008,336], \"src\": [96,128], \"f\": 0, \"d\": [2709,262] },\n\t\t\t\t\t{ \"px\": [1024,336], \"src\": [96,128], \"f\": 0, \"d\": [2710,262] },\n\t\t\t\t\t{ \"px\": [1040,336], \"src\": [96,128], \"f\": 0, \"d\": [2711,262] },\n\t\t\t\t\t{ \"px\": [1056,336], \"src\": [96,128], \"f\": 0, \"d\": [2712,262] },\n\t\t\t\t\t{ \"px\": [1072,336], \"src\": [64,192], \"f\": 0, \"d\": [2713,388] },\n\t\t\t\t\t{ \"px\": [1088,336], \"src\": [80,224], \"f\": 0, \"d\": [2714,453] },\n\t\t\t\t\t{ \"px\": [1264,336], \"src\": [320,144], \"f\": 0, \"d\": [2725,308] },\n\t\t\t\t\t{ \"px\": [1280,336], \"src\": [336,144], \"f\": 0, \"d\": [2726,309] },\n\t\t\t\t\t{ \"px\": [1296,336], \"src\": [352,144], \"f\": 0, \"d\": [2727,310] },\n\t\t\t\t\t{ \"px\": [1312,336], \"src\": [368,144], \"f\": 0, \"d\": [2728,311] },\n\t\t\t\t\t{ \"px\": [1488,336], \"src\": [320,144], \"f\": 0, \"d\": [2739,308] },\n\t\t\t\t\t{ \"px\": [1504,336], \"src\": [336,144], \"f\": 0, \"d\": [2740,309] },\n\t\t\t\t\t{ \"px\": [1520,336], \"src\": [352,144], \"f\": 0, \"d\": [2741,310] },\n\t\t\t\t\t{ \"px\": [1536,336], \"src\": [368,144], \"f\": 0, \"d\": [2742,311] },\n\t\t\t\t\t{ \"px\": [976,352], \"src\": [48,224], \"f\": 0, \"d\": [2833,451] },\n\t\t\t\t\t{ \"px\": [992,352], \"src\": [80,176], \"f\": 0, \"d\": [2834,357] },\n\t\t\t\t\t{ \"px\": [1008,352], \"src\": [96,144], \"f\": 0, \"d\": [2835,294] },\n\t\t\t\t\t{ \"px\": [1024,352], \"src\": [96,144], \"f\": 0, \"d\": [2836,294] },\n\t\t\t\t\t{ \"px\": [1040,352], \"src\": [96,144], \"f\": 0, \"d\": [2837,294] },\n\t\t\t\t\t{ \"px\": [1056,352], \"src\": [96,144], \"f\": 0, \"d\": [2838,294] },\n\t\t\t\t\t{ \"px\": [1072,352], \"src\": [80,176], \"f\": 0, \"d\": [2839,357] },\n\t\t\t\t\t{ \"px\": [1088,352], \"src\": [80,240], \"f\": 0, \"d\": [2840,485] },\n\t\t\t\t\t{ \"px\": [1264,352], \"src\": [320,160], \"f\": 0, \"d\": [2851,340] },\n\t\t\t\t\t{ \"px\": [1280,352], \"src\": [336,160], \"f\": 0, \"d\": [2852,341] },\n\t\t\t\t\t{ \"px\": [1296,352], \"src\": [352,160], \"f\": 0, \"d\": [2853,342] },\n\t\t\t\t\t{ \"px\": [1312,352], \"src\": [368,160], \"f\": 0, \"d\": [2854,343] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [320,160], \"f\": 0, \"d\": [2865,340] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [336,160], \"f\": 0, \"d\": [2866,341] },\n\t\t\t\t\t{ \"px\": [1520,352], \"src\": [352,160], \"f\": 0, \"d\": [2867,342] },\n\t\t\t\t\t{ \"px\": [1536,352], \"src\": [368,160], \"f\": 0, \"d\": [2868,343] },\n\t\t\t\t\t{ \"px\": [976,368], \"src\": [48,240], \"f\": 0, \"d\": [2959,483] },\n\t\t\t\t\t{ \"px\": [992,368], \"src\": [80,192], \"f\": 0, \"d\": [2960,389] },\n\t\t\t\t\t{ \"px\": [1072,368], \"src\": [80,192], \"f\": 0, \"d\": [2965,389] },\n\t\t\t\t\t{ \"px\": [1088,368], \"src\": [80,240], \"f\": 0, \"d\": [2966,485] }\n\t\t\t\t],\n\t\t\t\t\"entityInstances\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__identifier\": \"TilesMain\",\n\t\t\t\t\"__type\": \"Tiles\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 1,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 95,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [],\n\t\t\t\t\"autoLayerTiles\": [],\n\t\t\t\t\"seed\": 3046823,\n\t\t\t\t\"gridTiles\": [\n\t\t\t\t\t{ \"px\": [256,160], \"src\": [224,64], \"f\": 0, \"d\": [1276,142] },\n\t\t\t\t\t{ \"px\": [272,160], \"src\": [240,64], \"f\": 0, \"d\": [1277,143] },\n\t\t\t\t\t{ \"px\": [288,160], \"src\": [256,64], \"f\": 0, \"d\": [1278,144] },\n\t\t\t\t\t{ \"px\": [304,160], \"src\": [272,64], \"f\": 0, \"d\": [1279,145] },\n\t\t\t\t\t{ \"px\": [320,160], \"src\": [288,64], \"f\": 0, \"d\": [1280,146] },\n\t\t\t\t\t{ \"px\": [1536,160], \"src\": [224,64], \"f\": 0, \"d\": [1356,142] },\n\t\t\t\t\t{ \"px\": [1552,160], \"src\": [240,64], \"f\": 0, \"d\": [1357,143] },\n\t\t\t\t\t{ \"px\": [1568,160], \"src\": [256,64], \"f\": 0, \"d\": [1358,144] },\n\t\t\t\t\t{ \"px\": [1584,160], \"src\": [272,64], \"f\": 0, \"d\": [1359,145] },\n\t\t\t\t\t{ \"px\": [1600,160], \"src\": [304,64], \"f\": 0, \"d\": [1360,147] },\n\t\t\t\t\t{ \"px\": [1616,160], \"src\": [320,64], \"f\": 0, \"d\": [1361,148] },\n\t\t\t\t\t{ \"px\": [1632,160], \"src\": [336,64], \"f\": 0, \"d\": [1362,149] },\n\t\t\t\t\t{ \"px\": [1648,160], \"src\": [352,64], \"f\": 0, \"d\": [1363,150] },\n\t\t\t\t\t{ \"px\": [1664,160], \"src\": [368,64], \"f\": 0, \"d\": [1364,151] },\n\t\t\t\t\t{ \"px\": [256,176], \"src\": [224,80], \"f\": 0, \"d\": [1402,174] },\n\t\t\t\t\t{ \"px\": [272,176], \"src\": [240,80], \"f\": 0, \"d\": [1403,175] },\n\t\t\t\t\t{ \"px\": [288,176], \"src\": [256,80], \"f\": 0, \"d\": [1404,176] },\n\t\t\t\t\t{ \"px\": [304,176], \"src\": [272,80], \"f\": 0, \"d\": [1405,177] },\n\t\t\t\t\t{ \"px\": [320,176], \"src\": [288,80], \"f\": 0, \"d\": [1406,178] },\n\t\t\t\t\t{ \"px\": [1536,176], \"src\": [224,80], \"f\": 0, \"d\": [1482,174] },\n\t\t\t\t\t{ \"px\": [1552,176], \"src\": [240,80], \"f\": 0, \"d\": [1483,175] },\n\t\t\t\t\t{ \"px\": [1568,176], \"src\": [256,80], \"f\": 0, \"d\": [1484,176] },\n\t\t\t\t\t{ \"px\": [1584,176], \"src\": [272,80], \"f\": 0, \"d\": [1485,177] },\n\t\t\t\t\t{ \"px\": [1600,176], \"src\": [304,80], \"f\": 0, \"d\": [1486,179] },\n\t\t\t\t\t{ \"px\": [1616,176], \"src\": [320,80], \"f\": 0, \"d\": [1487,180] },\n\t\t\t\t\t{ \"px\": [1632,176], \"src\": [336,80], \"f\": 0, \"d\": [1488,181] },\n\t\t\t\t\t{ \"px\": [1648,176], \"src\": [352,80], \"f\": 0, \"d\": [1489,182] },\n\t\t\t\t\t{ \"px\": [1664,176], \"src\": [368,80], \"f\": 0, \"d\": [1490,183] },\n\t\t\t\t\t{ \"px\": [256,192], \"src\": [224,96], \"f\": 0, \"d\": [1528,206] },\n\t\t\t\t\t{ \"px\": [272,192], \"src\": [240,96], \"f\": 0, \"d\": [1529,207] },\n\t\t\t\t\t{ \"px\": [288,192], \"src\": [256,96], \"f\": 0, \"d\": [1530,208] },\n\t\t\t\t\t{ \"px\": [304,192], \"src\": [272,96], \"f\": 0, \"d\": [1531,209] },\n\t\t\t\t\t{ \"px\": [320,192], \"src\": [288,96], \"f\": 0, \"d\": [1532,210] },\n\t\t\t\t\t{ \"px\": [1536,192], \"src\": [224,96], \"f\": 0, \"d\": [1608,206] },\n\t\t\t\t\t{ \"px\": [1552,192], \"src\": [240,96], \"f\": 0, \"d\": [1609,207] },\n\t\t\t\t\t{ \"px\": [1568,192], \"src\": [256,96], \"f\": 0, \"d\": [1610,208] },\n\t\t\t\t\t{ \"px\": [1584,192], \"src\": [272,96], \"f\": 0, \"d\": [1611,209] },\n\t\t\t\t\t{ \"px\": [1600,192], \"src\": [304,96], \"f\": 0, \"d\": [1612,211] },\n\t\t\t\t\t{ \"px\": [1616,192], \"src\": [320,96], \"f\": 0, \"d\": [1613,212] },\n\t\t\t\t\t{ \"px\": [1632,192], \"src\": [336,96], \"f\": 0, \"d\": [1614,213] },\n\t\t\t\t\t{ \"px\": [1648,192], \"src\": [352,96], \"f\": 0, \"d\": [1615,214] },\n\t\t\t\t\t{ \"px\": [1664,192], \"src\": [368,96], \"f\": 0, \"d\": [1616,215] },\n\t\t\t\t\t{ \"px\": [208,208], \"src\": [224,64], \"f\": 0, \"d\": [1651,142] },\n\t\t\t\t\t{ \"px\": [224,208], \"src\": [240,64], \"f\": 0, \"d\": [1652,143] },\n\t\t\t\t\t{ \"px\": [240,208], \"src\": [256,64], \"f\": 0, \"d\": [1653,144] },\n\t\t\t\t\t{ \"px\": [256,208], \"src\": [224,112], \"f\": 0, \"d\": [1654,238] },\n\t\t\t\t\t{ \"px\": [272,208], \"src\": [240,112], \"f\": 0, \"d\": [1655,239] },\n\t\t\t\t\t{ \"px\": [288,208], \"src\": [224,64], \"f\": 0, \"d\": [1656,142] },\n\t\t\t\t\t{ \"px\": [304,208], \"src\": [240,64], \"f\": 0, \"d\": [1657,143] },\n\t\t\t\t\t{ \"px\": [320,208], \"src\": [256,64], \"f\": 0, \"d\": [1658,144] },\n\t\t\t\t\t{ \"px\": [336,208], \"src\": [272,64], \"f\": 0, \"d\": [1659,145] },\n\t\t\t\t\t{ \"px\": [352,208], \"src\": [288,64], \"f\": 0, \"d\": [1660,146] },\n\t\t\t\t\t{ \"px\": [1408,208], \"src\": [304,64], \"f\": 0, \"d\": [1726,147] },\n\t\t\t\t\t{ \"px\": [1424,208], \"src\": [320,64], \"f\": 0, \"d\": [1727,148] },\n\t\t\t\t\t{ \"px\": [1440,208], \"src\": [336,64], \"f\": 0, \"d\": [1728,149] },\n\t\t\t\t\t{ \"px\": [1456,208], \"src\": [352,64], \"f\": 0, \"d\": [1729,150] },\n\t\t\t\t\t{ \"px\": [1472,208], \"src\": [368,64], \"f\": 0, \"d\": [1730,151] },\n\t\t\t\t\t{ \"px\": [1536,208], \"src\": [224,112], \"f\": 0, \"d\": [1734,238] },\n\t\t\t\t\t{ \"px\": [1552,208], \"src\": [240,112], \"f\": 0, \"d\": [1735,239] },\n\t\t\t\t\t{ \"px\": [1568,208], \"src\": [256,112], \"f\": 0, \"d\": [1736,240] },\n\t\t\t\t\t{ \"px\": [1584,208], \"src\": [272,112], \"f\": 0, \"d\": [1737,241] },\n\t\t\t\t\t{ \"px\": [1600,208], \"src\": [304,112], \"f\": 0, \"d\": [1738,243] },\n\t\t\t\t\t{ \"px\": [1616,208], \"src\": [320,112], \"f\": 0, \"d\": [1739,244] },\n\t\t\t\t\t{ \"px\": [1632,208], \"src\": [336,112], \"f\": 0, \"d\": [1740,245] },\n\t\t\t\t\t{ \"px\": [1648,208], \"src\": [352,112], \"f\": 0, \"d\": [1741,246] },\n\t\t\t\t\t{ \"px\": [208,224], \"src\": [224,80], \"f\": 0, \"d\": [1777,174] },\n\t\t\t\t\t{ \"px\": [224,224], \"src\": [240,80], \"f\": 0, \"d\": [1778,175] },\n\t\t\t\t\t{ \"px\": [240,224], \"src\": [256,80], \"f\": 0, \"d\": [1779,176] },\n\t\t\t\t\t{ \"px\": [256,224], \"src\": [272,80], \"f\": 0, \"d\": [1780,177] },\n\t\t\t\t\t{ \"px\": [272,224], \"src\": [288,80], \"f\": 0, \"d\": [1781,178] },\n\t\t\t\t\t{ \"px\": [288,224], \"src\": [224,80], \"f\": 0, \"d\": [1782,174] },\n\t\t\t\t\t{ \"px\": [304,224], \"src\": [240,80], \"f\": 0, \"d\": [1783,175] },\n\t\t\t\t\t{ \"px\": [320,224], \"src\": [256,80], \"f\": 0, \"d\": [1784,176] },\n\t\t\t\t\t{ \"px\": [336,224], \"src\": [272,80], \"f\": 0, \"d\": [1785,177] },\n\t\t\t\t\t{ \"px\": [352,224], \"src\": [288,80], \"f\": 0, \"d\": [1786,178] },\n\t\t\t\t\t{ \"px\": [1280,224], \"src\": [224,64], \"f\": 0, \"d\": [1844,142] },\n\t\t\t\t\t{ \"px\": [1296,224], \"src\": [240,64], \"f\": 0, \"d\": [1845,143] },\n\t\t\t\t\t{ \"px\": [1312,224], \"src\": [256,64], \"f\": 0, \"d\": [1846,144] },\n\t\t\t\t\t{ \"px\": [1328,224], \"src\": [272,64], \"f\": 0, \"d\": [1847,145] },\n\t\t\t\t\t{ \"px\": [1344,224], \"src\": [288,64], \"f\": 0, \"d\": [1848,146] },\n\t\t\t\t\t{ \"px\": [1408,224], \"src\": [304,80], \"f\": 0, \"d\": [1852,179] },\n\t\t\t\t\t{ \"px\": [1424,224], \"src\": [320,80], \"f\": 0, \"d\": [1853,180] },\n\t\t\t\t\t{ \"px\": [1440,224], \"src\": [336,80], \"f\": 0, \"d\": [1854,181] },\n\t\t\t\t\t{ \"px\": [1456,224], \"src\": [352,80], \"f\": 0, \"d\": [1855,182] },\n\t\t\t\t\t{ \"px\": [1472,224], \"src\": [368,80], \"f\": 0, \"d\": [1856,183] },\n\t\t\t\t\t{ \"px\": [208,240], \"src\": [224,96], \"f\": 0, \"d\": [1903,206] },\n\t\t\t\t\t{ \"px\": [224,240], \"src\": [240,96], \"f\": 0, \"d\": [1904,207] },\n\t\t\t\t\t{ \"px\": [240,240], \"src\": [256,96], \"f\": 0, \"d\": [1905,208] },\n\t\t\t\t\t{ \"px\": [256,240], \"src\": [272,96], \"f\": 0, \"d\": [1906,209] },\n\t\t\t\t\t{ \"px\": [272,240], \"src\": [288,96], \"f\": 0, \"d\": [1907,210] },\n\t\t\t\t\t{ \"px\": [288,240], \"src\": [224,96], \"f\": 0, \"d\": [1908,206] },\n\t\t\t\t\t{ \"px\": [304,240], \"src\": [240,96], \"f\": 0, \"d\": [1909,207] },\n\t\t\t\t\t{ \"px\": [320,240], \"src\": [256,96], \"f\": 0, \"d\": [1910,208] },\n\t\t\t\t\t{ \"px\": [336,240], \"src\": [272,96], \"f\": 0, \"d\": [1911,209] },\n\t\t\t\t\t{ \"px\": [352,240], \"src\": [288,96], \"f\": 0, \"d\": [1912,210] },\n\t\t\t\t\t{ \"px\": [1280,240], \"src\": [224,80], \"f\": 0, \"d\": [1970,174] },\n\t\t\t\t\t{ \"px\": [1296,240], \"src\": [240,80], \"f\": 0, \"d\": [1971,175] },\n\t\t\t\t\t{ \"px\": [1312,240], \"src\": [256,80], \"f\": 0, \"d\": [1972,176] },\n\t\t\t\t\t{ \"px\": [1328,240], \"src\": [272,80], \"f\": 0, \"d\": [1973,177] },\n\t\t\t\t\t{ \"px\": [1344,240], \"src\": [288,80], \"f\": 0, \"d\": [1974,178] },\n\t\t\t\t\t{ \"px\": [1408,240], \"src\": [304,96], \"f\": 0, \"d\": [1978,211] },\n\t\t\t\t\t{ \"px\": [1424,240], \"src\": [320,96], \"f\": 0, \"d\": [1979,212] },\n\t\t\t\t\t{ \"px\": [1440,240], \"src\": [336,96], \"f\": 0, \"d\": [1980,213] },\n\t\t\t\t\t{ \"px\": [1456,240], \"src\": [352,96], \"f\": 0, \"d\": [1981,214] },\n\t\t\t\t\t{ \"px\": [1472,240], \"src\": [368,96], \"f\": 0, \"d\": [1982,215] },\n\t\t\t\t\t{ \"px\": [208,256], \"src\": [224,112], \"f\": 0, \"d\": [2029,238] },\n\t\t\t\t\t{ \"px\": [224,256], \"src\": [240,112], \"f\": 0, \"d\": [2030,239] },\n\t\t\t\t\t{ \"px\": [240,256], \"src\": [256,112], \"f\": 0, \"d\": [2031,240] },\n\t\t\t\t\t{ \"px\": [256,256], \"src\": [272,112], \"f\": 0, \"d\": [2032,241] },\n\t\t\t\t\t{ \"px\": [272,256], \"src\": [288,112], \"f\": 0, \"d\": [2033,242] },\n\t\t\t\t\t{ \"px\": [288,256], \"src\": [224,112], \"f\": 0, \"d\": [2034,238] },\n\t\t\t\t\t{ \"px\": [304,256], \"src\": [240,112], \"f\": 0, \"d\": [2035,239] },\n\t\t\t\t\t{ \"px\": [320,256], \"src\": [256,112], \"f\": 0, \"d\": [2036,240] },\n\t\t\t\t\t{ \"px\": [336,256], \"src\": [272,112], \"f\": 0, \"d\": [2037,241] },\n\t\t\t\t\t{ \"px\": [352,256], \"src\": [288,112], \"f\": 0, \"d\": [2038,242] },\n\t\t\t\t\t{ \"px\": [992,256], \"src\": [16,192], \"f\": 0, \"d\": [2078,385] },\n\t\t\t\t\t{ \"px\": [1008,256], \"src\": [16,240], \"f\": 0, \"d\": [2079,481] },\n\t\t\t\t\t{ \"px\": [1024,256], \"src\": [32,224], \"f\": 0, \"d\": [2080,450] },\n\t\t\t\t\t{ \"px\": [1040,256], \"src\": [32,240], \"f\": 0, \"d\": [2081,482] },\n\t\t\t\t\t{ \"px\": [1056,256], \"src\": [32,224], \"f\": 0, \"d\": [2082,450] },\n\t\t\t\t\t{ \"px\": [1072,256], \"src\": [32,192], \"f\": 0, \"d\": [2083,386] },\n\t\t\t\t\t{ \"px\": [1216,256], \"src\": [304,64], \"f\": 0, \"d\": [2092,147] },\n\t\t\t\t\t{ \"px\": [1232,256], \"src\": [320,64], \"f\": 0, \"d\": [2093,148] },\n\t\t\t\t\t{ \"px\": [1248,256], \"src\": [336,64], \"f\": 0, \"d\": [2094,149] },\n\t\t\t\t\t{ \"px\": [1264,256], \"src\": [352,64], \"f\": 0, \"d\": [2095,150] },\n\t\t\t\t\t{ \"px\": [1280,256], \"src\": [224,96], \"f\": 0, \"d\": [2096,206] },\n\t\t\t\t\t{ \"px\": [1296,256], \"src\": [240,96], \"f\": 0, \"d\": [2097,207] },\n\t\t\t\t\t{ \"px\": [1312,256], \"src\": [256,96], \"f\": 0, \"d\": [2098,208] },\n\t\t\t\t\t{ \"px\": [1328,256], \"src\": [272,96], \"f\": 0, \"d\": [2099,209] },\n\t\t\t\t\t{ \"px\": [1344,256], \"src\": [288,96], \"f\": 0, \"d\": [2100,210] },\n\t\t\t\t\t{ \"px\": [1408,256], \"src\": [304,112], \"f\": 0, \"d\": [2104,243] },\n\t\t\t\t\t{ \"px\": [1424,256], \"src\": [320,112], \"f\": 0, \"d\": [2105,244] },\n\t\t\t\t\t{ \"px\": [1440,256], \"src\": [336,112], \"f\": 0, \"d\": [2106,245] },\n\t\t\t\t\t{ \"px\": [1456,256], \"src\": [352,112], \"f\": 0, \"d\": [2107,246] },\n\t\t\t\t\t{ \"px\": [1504,256], \"src\": [304,64], \"f\": 0, \"d\": [2110,147] },\n\t\t\t\t\t{ \"px\": [1520,256], \"src\": [320,64], \"f\": 0, \"d\": [2111,148] },\n\t\t\t\t\t{ \"px\": [1536,256], \"src\": [336,64], \"f\": 0, \"d\": [2112,149] },\n\t\t\t\t\t{ \"px\": [1552,256], \"src\": [352,64], \"f\": 0, \"d\": [2113,150] },\n\t\t\t\t\t{ \"px\": [1568,256], \"src\": [368,64], \"f\": 0, \"d\": [2114,151] },\n\t\t\t\t\t{ \"px\": [976,272], \"src\": [16,192], \"f\": 0, \"d\": [2203,385] },\n\t\t\t\t\t{ \"px\": [992,272], \"src\": [16,256], \"f\": 0, \"d\": [2204,513] },\n\t\t\t\t\t{ \"px\": [1008,272], \"src\": [16,256], \"f\": 0, \"d\": [2205,513] },\n\t\t\t\t\t{ \"px\": [1024,272], \"src\": [16,256], \"f\": 0, \"d\": [2206,513] },\n\t\t\t\t\t{ \"px\": [1040,272], \"src\": [16,256], \"f\": 0, \"d\": [2207,513] },\n\t\t\t\t\t{ \"px\": [1056,272], \"src\": [16,256], \"f\": 0, \"d\": [2208,513] },\n\t\t\t\t\t{ \"px\": [1072,272], \"src\": [16,256], \"f\": 0, \"d\": [2209,513] },\n\t\t\t\t\t{ \"px\": [1088,272], \"src\": [32,192], \"f\": 0, \"d\": [2210,386] },\n\t\t\t\t\t{ \"px\": [1216,272], \"src\": [304,80], \"f\": 0, \"d\": [2218,179] },\n\t\t\t\t\t{ \"px\": [1232,272], \"src\": [320,80], \"f\": 0, \"d\": [2219,180] },\n\t\t\t\t\t{ \"px\": [1248,272], \"src\": [336,80], \"f\": 0, \"d\": [2220,181] },\n\t\t\t\t\t{ \"px\": [1264,272], \"src\": [352,80], \"f\": 0, \"d\": [2221,182] },\n\t\t\t\t\t{ \"px\": [1280,272], \"src\": [224,112], \"f\": 0, \"d\": [2222,238] },\n\t\t\t\t\t{ \"px\": [1296,272], \"src\": [240,112], \"f\": 0, \"d\": [2223,239] },\n\t\t\t\t\t{ \"px\": [1312,272], \"src\": [256,112], \"f\": 0, \"d\": [2224,240] },\n\t\t\t\t\t{ \"px\": [1328,272], \"src\": [272,112], \"f\": 0, \"d\": [2225,241] },\n\t\t\t\t\t{ \"px\": [1344,272], \"src\": [288,112], \"f\": 0, \"d\": [2226,242] },\n\t\t\t\t\t{ \"px\": [1440,272], \"src\": [224,64], \"f\": 0, \"d\": [2232,142] },\n\t\t\t\t\t{ \"px\": [1456,272], \"src\": [240,64], \"f\": 0, \"d\": [2233,143] },\n\t\t\t\t\t{ \"px\": [1472,272], \"src\": [256,64], \"f\": 0, \"d\": [2234,144] },\n\t\t\t\t\t{ \"px\": [1488,272], \"src\": [272,64], \"f\": 0, \"d\": [2235,145] },\n\t\t\t\t\t{ \"px\": [1504,272], \"src\": [304,80], \"f\": 0, \"d\": [2236,179] },\n\t\t\t\t\t{ \"px\": [1520,272], \"src\": [320,80], \"f\": 0, \"d\": [2237,180] },\n\t\t\t\t\t{ \"px\": [1536,272], \"src\": [336,80], \"f\": 0, \"d\": [2238,181] },\n\t\t\t\t\t{ \"px\": [1552,272], \"src\": [352,80], \"f\": 0, \"d\": [2239,182] },\n\t\t\t\t\t{ \"px\": [1568,272], \"src\": [368,80], \"f\": 0, \"d\": [2240,183] },\n\t\t\t\t\t{ \"px\": [976,288], \"src\": [16,208], \"f\": 0, \"d\": [2329,417] },\n\t\t\t\t\t{ \"px\": [992,288], \"src\": [32,208], \"f\": 0, \"d\": [2330,418] },\n\t\t\t\t\t{ \"px\": [1008,288], \"src\": [112,224], \"f\": 0, \"d\": [2331,455] },\n\t\t\t\t\t{ \"px\": [1024,288], \"src\": [144,224], \"f\": 0, \"d\": [2332,457] },\n\t\t\t\t\t{ \"px\": [1040,288], \"src\": [144,224], \"f\": 0, \"d\": [2333,457] },\n\t\t\t\t\t{ \"px\": [1056,288], \"src\": [112,224], \"f\": 0, \"d\": [2334,455] },\n\t\t\t\t\t{ \"px\": [1072,288], \"src\": [16,208], \"f\": 0, \"d\": [2335,417] },\n\t\t\t\t\t{ \"px\": [1088,288], \"src\": [32,208], \"f\": 0, \"d\": [2336,418] },\n\t\t\t\t\t{ \"px\": [1216,288], \"src\": [304,96], \"f\": 0, \"d\": [2344,211] },\n\t\t\t\t\t{ \"px\": [1232,288], \"src\": [320,96], \"f\": 0, \"d\": [2345,212] },\n\t\t\t\t\t{ \"px\": [1248,288], \"src\": [336,96], \"f\": 0, \"d\": [2346,213] },\n\t\t\t\t\t{ \"px\": [1264,288], \"src\": [352,96], \"f\": 0, \"d\": [2347,214] },\n\t\t\t\t\t{ \"px\": [1280,288], \"src\": [304,64], \"f\": 0, \"d\": [2348,147] },\n\t\t\t\t\t{ \"px\": [1296,288], \"src\": [320,64], \"f\": 0, \"d\": [2349,148] },\n\t\t\t\t\t{ \"px\": [1312,288], \"src\": [336,64], \"f\": 0, \"d\": [2350,149] },\n\t\t\t\t\t{ \"px\": [1328,288], \"src\": [352,64], \"f\": 0, \"d\": [2351,150] },\n\t\t\t\t\t{ \"px\": [1344,288], \"src\": [368,64], \"f\": 0, \"d\": [2352,151] },\n\t\t\t\t\t{ \"px\": [1440,288], \"src\": [224,80], \"f\": 0, \"d\": [2358,174] },\n\t\t\t\t\t{ \"px\": [1456,288], \"src\": [240,80], \"f\": 0, \"d\": [2359,175] },\n\t\t\t\t\t{ \"px\": [1472,288], \"src\": [256,80], \"f\": 0, \"d\": [2360,176] },\n\t\t\t\t\t{ \"px\": [1488,288], \"src\": [272,80], \"f\": 0, \"d\": [2361,177] },\n\t\t\t\t\t{ \"px\": [1504,288], \"src\": [304,96], \"f\": 0, \"d\": [2362,211] },\n\t\t\t\t\t{ \"px\": [1520,288], \"src\": [320,96], \"f\": 0, \"d\": [2363,212] },\n\t\t\t\t\t{ \"px\": [1536,288], \"src\": [336,96], \"f\": 0, \"d\": [2364,213] },\n\t\t\t\t\t{ \"px\": [1552,288], \"src\": [352,96], \"f\": 0, \"d\": [2365,214] },\n\t\t\t\t\t{ \"px\": [1568,288], \"src\": [368,96], \"f\": 0, \"d\": [2366,215] },\n\t\t\t\t\t{ \"px\": [976,304], \"src\": [16,208], \"f\": 0, \"d\": [2455,417] },\n\t\t\t\t\t{ \"px\": [992,304], \"src\": [32,208], \"f\": 0, \"d\": [2456,418] },\n\t\t\t\t\t{ \"px\": [1008,304], \"src\": [112,240], \"f\": 0, \"d\": [2457,487] },\n\t\t\t\t\t{ \"px\": [1024,304], \"src\": [128,240], \"f\": 0, \"d\": [2458,488] },\n\t\t\t\t\t{ \"px\": [1040,304], \"src\": [128,240], \"f\": 0, \"d\": [2459,488] },\n\t\t\t\t\t{ \"px\": [1056,304], \"src\": [112,240], \"f\": 0, \"d\": [2460,487] },\n\t\t\t\t\t{ \"px\": [1072,304], \"src\": [16,208], \"f\": 0, \"d\": [2461,417] },\n\t\t\t\t\t{ \"px\": [1088,304], \"src\": [32,208], \"f\": 0, \"d\": [2462,418] },\n\t\t\t\t\t{ \"px\": [1216,304], \"src\": [304,112], \"f\": 0, \"d\": [2470,243] },\n\t\t\t\t\t{ \"px\": [1232,304], \"src\": [320,112], \"f\": 0, \"d\": [2471,244] },\n\t\t\t\t\t{ \"px\": [1248,304], \"src\": [336,112], \"f\": 0, \"d\": [2472,245] },\n\t\t\t\t\t{ \"px\": [1264,304], \"src\": [352,112], \"f\": 0, \"d\": [2473,246] },\n\t\t\t\t\t{ \"px\": [1280,304], \"src\": [304,80], \"f\": 0, \"d\": [2474,179] },\n\t\t\t\t\t{ \"px\": [1296,304], \"src\": [320,80], \"f\": 0, \"d\": [2475,180] },\n\t\t\t\t\t{ \"px\": [1312,304], \"src\": [336,80], \"f\": 0, \"d\": [2476,181] },\n\t\t\t\t\t{ \"px\": [1328,304], \"src\": [352,80], \"f\": 0, \"d\": [2477,182] },\n\t\t\t\t\t{ \"px\": [1344,304], \"src\": [368,80], \"f\": 0, \"d\": [2478,183] },\n\t\t\t\t\t{ \"px\": [1440,304], \"src\": [224,96], \"f\": 0, \"d\": [2484,206] },\n\t\t\t\t\t{ \"px\": [1456,304], \"src\": [240,96], \"f\": 0, \"d\": [2485,207] },\n\t\t\t\t\t{ \"px\": [1472,304], \"src\": [256,96], \"f\": 0, \"d\": [2486,208] },\n\t\t\t\t\t{ \"px\": [1488,304], \"src\": [272,96], \"f\": 0, \"d\": [2487,209] },\n\t\t\t\t\t{ \"px\": [1504,304], \"src\": [304,112], \"f\": 0, \"d\": [2488,243] },\n\t\t\t\t\t{ \"px\": [1520,304], \"src\": [320,112], \"f\": 0, \"d\": [2489,244] },\n\t\t\t\t\t{ \"px\": [1536,304], \"src\": [336,112], \"f\": 0, \"d\": [2490,245] },\n\t\t\t\t\t{ \"px\": [1552,304], \"src\": [352,112], \"f\": 0, \"d\": [2491,246] },\n\t\t\t\t\t{ \"px\": [1568,304], \"src\": [368,112], \"f\": 0, \"d\": [2492,247] },\n\t\t\t\t\t{ \"px\": [976,320], \"src\": [16,240], \"f\": 0, \"d\": [2581,481] },\n\t\t\t\t\t{ \"px\": [992,320], \"src\": [32,240], \"f\": 0, \"d\": [2582,482] },\n\t\t\t\t\t{ \"px\": [1008,320], \"src\": [16,224], \"f\": 0, \"d\": [2583,449] },\n\t\t\t\t\t{ \"px\": [1024,320], \"src\": [32,224], \"f\": 0, \"d\": [2584,450] },\n\t\t\t\t\t{ \"px\": [1040,320], \"src\": [32,224], \"f\": 0, \"d\": [2585,450] },\n\t\t\t\t\t{ \"px\": [1056,320], \"src\": [16,224], \"f\": 0, \"d\": [2586,449] },\n\t\t\t\t\t{ \"px\": [1072,320], \"src\": [32,224], \"f\": 0, \"d\": [2587,450] },\n\t\t\t\t\t{ \"px\": [1088,320], \"src\": [16,240], \"f\": 0, \"d\": [2588,481] },\n\t\t\t\t\t{ \"px\": [1280,320], \"src\": [304,96], \"f\": 0, \"d\": [2600,211] },\n\t\t\t\t\t{ \"px\": [1296,320], \"src\": [320,96], \"f\": 0, \"d\": [2601,212] },\n\t\t\t\t\t{ \"px\": [1312,320], \"src\": [336,96], \"f\": 0, \"d\": [2602,213] },\n\t\t\t\t\t{ \"px\": [1328,320], \"src\": [352,96], \"f\": 0, \"d\": [2603,214] },\n\t\t\t\t\t{ \"px\": [1344,320], \"src\": [368,96], \"f\": 0, \"d\": [2604,215] },\n\t\t\t\t\t{ \"px\": [1440,320], \"src\": [224,112], \"f\": 0, \"d\": [2610,238] },\n\t\t\t\t\t{ \"px\": [1456,320], \"src\": [240,112], \"f\": 0, \"d\": [2611,239] },\n\t\t\t\t\t{ \"px\": [1472,320], \"src\": [256,112], \"f\": 0, \"d\": [2612,240] },\n\t\t\t\t\t{ \"px\": [1488,320], \"src\": [272,112], \"f\": 0, \"d\": [2613,241] },\n\t\t\t\t\t{ \"px\": [1504,320], \"src\": [288,112], \"f\": 0, \"d\": [2614,242] },\n\t\t\t\t\t{ \"px\": [1536,320], \"src\": [368,128], \"f\": 0, \"d\": [2616,279] },\n\t\t\t\t\t{ \"px\": [1584,320], \"src\": [368,112], \"f\": 0, \"d\": [2619,247] },\n\t\t\t\t\t{ \"px\": [976,336], \"src\": [16,224], \"f\": 0, \"d\": [2707,449] },\n\t\t\t\t\t{ \"px\": [992,336], \"src\": [16,224], \"f\": 0, \"d\": [2708,449] },\n\t\t\t\t\t{ \"px\": [1008,336], \"src\": [112,240], \"f\": 0, \"d\": [2709,487] },\n\t\t\t\t\t{ \"px\": [1024,336], \"src\": [128,240], \"f\": 0, \"d\": [2710,488] },\n\t\t\t\t\t{ \"px\": [1040,336], \"src\": [128,240], \"f\": 0, \"d\": [2711,488] },\n\t\t\t\t\t{ \"px\": [1056,336], \"src\": [112,240], \"f\": 0, \"d\": [2712,487] },\n\t\t\t\t\t{ \"px\": [1072,336], \"src\": [32,224], \"f\": 0, \"d\": [2713,450] },\n\t\t\t\t\t{ \"px\": [1088,336], \"src\": [16,224], \"f\": 0, \"d\": [2714,449] },\n\t\t\t\t\t{ \"px\": [1280,336], \"src\": [304,112], \"f\": 0, \"d\": [2726,243] },\n\t\t\t\t\t{ \"px\": [1296,336], \"src\": [320,112], \"f\": 0, \"d\": [2727,244] },\n\t\t\t\t\t{ \"px\": [1312,336], \"src\": [336,112], \"f\": 0, \"d\": [2728,245] },\n\t\t\t\t\t{ \"px\": [1328,336], \"src\": [352,112], \"f\": 0, \"d\": [2729,246] },\n\t\t\t\t\t{ \"px\": [1344,336], \"src\": [368,112], \"f\": 0, \"d\": [2730,247] },\n\t\t\t\t\t{ \"px\": [1488,336], \"src\": [320,144], \"f\": 0, \"d\": [2739,308] },\n\t\t\t\t\t{ \"px\": [976,352], \"src\": [32,240], \"f\": 0, \"d\": [2833,482] },\n\t\t\t\t\t{ \"px\": [992,352], \"src\": [32,224], \"f\": 0, \"d\": [2834,450] },\n\t\t\t\t\t{ \"px\": [1008,352], \"src\": [112,240], \"f\": 0, \"d\": [2835,487] },\n\t\t\t\t\t{ \"px\": [1024,352], \"src\": [128,240], \"f\": 0, \"d\": [2836,488] },\n\t\t\t\t\t{ \"px\": [1040,352], \"src\": [128,240], \"f\": 0, \"d\": [2837,488] },\n\t\t\t\t\t{ \"px\": [1056,352], \"src\": [112,240], \"f\": 0, \"d\": [2838,487] },\n\t\t\t\t\t{ \"px\": [1072,352], \"src\": [16,224], \"f\": 0, \"d\": [2839,449] },\n\t\t\t\t\t{ \"px\": [1088,352], \"src\": [32,224], \"f\": 0, \"d\": [2840,450] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [320,160], \"f\": 0, \"d\": [2865,340] },\n\t\t\t\t\t{ \"px\": [1536,352], \"src\": [368,160], \"f\": 0, \"d\": [2868,343] },\n\t\t\t\t\t{ \"px\": [976,368], \"src\": [32,224], \"f\": 0, \"d\": [2959,450] },\n\t\t\t\t\t{ \"px\": [992,368], \"src\": [16,224], \"f\": 0, \"d\": [2960,449] },\n\t\t\t\t\t{ \"px\": [1008,368], \"src\": [112,224], \"f\": 0, \"d\": [2961,455] },\n\t\t\t\t\t{ \"px\": [1024,368], \"src\": [128,240], \"f\": 0, \"d\": [2962,488] },\n\t\t\t\t\t{ \"px\": [1040,368], \"src\": [144,224], \"f\": 0, \"d\": [2963,457] },\n\t\t\t\t\t{ \"px\": [1056,368], \"src\": [112,224], \"f\": 0, \"d\": [2964,455] },\n\t\t\t\t\t{ \"px\": [1072,368], \"src\": [32,224], \"f\": 0, \"d\": [2965,450] },\n\t\t\t\t\t{ \"px\": [1088,368], \"src\": [16,224], \"f\": 0, \"d\": [2966,449] }\n\t\t\t\t],\n\t\t\t\t\"entityInstances\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__identifier\": \"Collisions\",\n\t\t\t\t\"__type\": \"IntGrid\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 1,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 1,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [\n\t\t\t\t\t{ \"coordId\": 0, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 4, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 5, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 6, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 7, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 8, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 9, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 10, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 11, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 12, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 13, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 14, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 15, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 16, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 17, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 18, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 19, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 20, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 21, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 22, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 23, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 24, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 25, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 26, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 27, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 28, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 29, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 30, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 31, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 32, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 33, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 34, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 35, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 36, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 37, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 38, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 39, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 40, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 41, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 42, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 43, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 44, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 45, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 46, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 106, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 107, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 108, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 109, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 110, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 111, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 112, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 113, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 114, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 115, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 116, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 117, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 118, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 119, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 120, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 121, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 122, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 123, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 124, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 125, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 126, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 127, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 128, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 129, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 130, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 131, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 132, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 133, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 134, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 135, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 136, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 137, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 138, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 139, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 140, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 141, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 142, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 143, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 144, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 145, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 146, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 147, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 148, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 149, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 150, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 151, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 152, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 153, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 154, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 155, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 156, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 157, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 158, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 159, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 160, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 161, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 162, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 163, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 164, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 165, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 166, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 167, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 168, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 169, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 170, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 171, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 172, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 232, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 233, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 234, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 235, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 236, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 237, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 238, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 239, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 240, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 241, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 242, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 243, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 244, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 245, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 246, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 247, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 248, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 249, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 250, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 251, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 252, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 253, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 254, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 255, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 256, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 257, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 258, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 259, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 260, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 261, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 262, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 263, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 264, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 265, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 266, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 267, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 268, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 269, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 270, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 271, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 272, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 273, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 274, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 275, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 276, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 277, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 278, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 279, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 280, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 281, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 282, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 283, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 284, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 285, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 286, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 287, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 288, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 289, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 290, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 291, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 292, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 293, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 294, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 295, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 296, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 297, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 298, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 358, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 359, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 360, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 361, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 362, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 363, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 364, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 365, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 366, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 367, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 368, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 369, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 370, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 371, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 372, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 373, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 374, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 375, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 376, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 377, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 378, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 379, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 380, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 381, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 382, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 383, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 384, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 385, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 386, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 387, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 388, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 389, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 390, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 391, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 392, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 393, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 394, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 395, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 396, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 397, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 398, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 399, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 400, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 401, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 402, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 403, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 404, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 405, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 406, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 407, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 408, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 409, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 410, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 411, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 412, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 413, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 414, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 415, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 416, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 417, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 418, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 419, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 420, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 421, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 422, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 423, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 424, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 475, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 476, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 477, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 478, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 479, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 480, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 481, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 482, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 483, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 484, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 485, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 486, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 487, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 488, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 489, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 490, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 491, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 492, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 493, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 494, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 495, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 496, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 497, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 498, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 499, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 500, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 501, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 502, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 503, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 504, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 505, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 506, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 507, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 508, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 509, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 510, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 511, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 512, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 513, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 514, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 515, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 516, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 517, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 518, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 519, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 520, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 521, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 522, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 523, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 524, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 525, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 526, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 527, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 528, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 529, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 530, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 531, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 532, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 533, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 534, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 535, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 536, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 537, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 538, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 539, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 540, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 541, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 542, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 543, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 544, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 545, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 546, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 547, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 548, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 549, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 550, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 601, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 602, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 603, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 604, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 605, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 606, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 607, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 608, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 609, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 610, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 611, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 612, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 613, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 614, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 615, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 616, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 617, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 618, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 619, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 620, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 621, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 622, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 623, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 624, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 625, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 626, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 627, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 628, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 629, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 630, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 631, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 632, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 633, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 634, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 635, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 636, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 637, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 638, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 639, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 640, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 641, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 642, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 643, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 644, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 645, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 646, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 647, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 648, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 649, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 650, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 651, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 652, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 653, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 654, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 655, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 656, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 657, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 658, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 659, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 660, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 661, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 662, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 663, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 664, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 665, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 666, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 667, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 668, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 669, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 670, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 671, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 672, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 673, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 674, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 675, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 676, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 727, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 728, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 729, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 730, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 731, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 732, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 733, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 734, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 735, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 736, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 737, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 738, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 739, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 740, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 741, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 742, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 743, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 744, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 745, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 746, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 747, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 748, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 749, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 750, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 751, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 752, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 753, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 754, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 755, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 756, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 757, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 758, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 759, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 760, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 761, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 762, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 763, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 764, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 765, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 766, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 767, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 768, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 769, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 770, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 771, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 772, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 773, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 774, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 775, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 776, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 777, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 778, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 779, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 780, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 781, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 782, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 783, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 784, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 785, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 786, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 787, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 788, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 789, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 790, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 791, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 792, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 793, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 794, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 795, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 796, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 797, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 798, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 799, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 800, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 801, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 802, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 853, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 854, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 855, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 856, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 857, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 858, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 859, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 860, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 861, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 862, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 863, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 864, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 865, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 866, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 867, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 868, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 869, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 870, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 871, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 872, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 873, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 874, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 875, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 876, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 877, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 878, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 879, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 880, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 881, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 882, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 883, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 884, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 885, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 886, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 887, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 888, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 889, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 890, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 891, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 892, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 906, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 907, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 910, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 911, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 914, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 915, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 918, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 919, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 920, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 923, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 924, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 927, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 928, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 980, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 981, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 984, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 985, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 988, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 989, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 992, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 993, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 999, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1000, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1001, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1002, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1003, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1004, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1005, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1006, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1007, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1008, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1009, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1010, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1011, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1012, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1013, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1014, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1015, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1016, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1017, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1018, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1032, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1033, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1036, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1037, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1040, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1041, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1044, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1045, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1046, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1049, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1050, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1053, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1054, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1106, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1107, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1110, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1111, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1114, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1115, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1118, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1119, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1125, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1126, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1127, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1128, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1129, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1130, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1131, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1132, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1133, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1134, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1135, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1136, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1137, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1138, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1139, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1140, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1141, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1142, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1143, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1144, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1145, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1146, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1147, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1148, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1149, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1150, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1151, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1152, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1153, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1154, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1155, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1156, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1157, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1158, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1159, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1160, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1161, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1162, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1163, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1164, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1165, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1166, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1167, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1168, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1169, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1170, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1171, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1172, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1173, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1174, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1175, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1176, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1177, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1178, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1179, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1180, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1232, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1233, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1236, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1237, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1240, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1241, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1244, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1245, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1251, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1252, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1253, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1254, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1255, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1256, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1257, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1258, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1259, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1260, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1261, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1262, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1263, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1264, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1265, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1266, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1267, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1268, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1269, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1270, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1271, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1272, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1273, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1274, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1275, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1276, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1277, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1278, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1279, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1280, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1281, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1282, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1283, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1284, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1285, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1286, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1287, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1288, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1289, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1290, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1291, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1292, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1293, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1294, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1295, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1296, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1297, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1298, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1299, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1300, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1301, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1302, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1303, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1304, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1305, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1306, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1358, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1359, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1362, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1363, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1366, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1367, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1370, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1371, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1377, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1378, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1379, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1380, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1381, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1382, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1383, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1384, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1385, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1386, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1387, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1388, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1389, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1390, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1391, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1392, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1393, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1394, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1395, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1411, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1412, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1413, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1414, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1415, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1416, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1417, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1418, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1419, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1420, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1421, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1422, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1423, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1424, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1425, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1426, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1427, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1428, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1429, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1430, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1431, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1432, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1483, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1484, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1485, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1486, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1487, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1488, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1489, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1490, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1491, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1492, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1493, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1494, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1495, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1496, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1497, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1498, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1503, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1504, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1505, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1506, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1507, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1508, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1509, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1510, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1511, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1512, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1513, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1514, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1515, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1516, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1517, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1518, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1519, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1520, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1521, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1537, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1538, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1539, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1540, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1541, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1542, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1543, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1544, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1545, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1546, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1547, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1548, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1549, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1550, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1551, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1552, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1553, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1554, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1555, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1556, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1557, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1558, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1559, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1609, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1610, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1613, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1617, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1618, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1619, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1620, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1621, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1622, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1623, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1624, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1629, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1630, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1631, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1632, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1633, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1634, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1635, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1636, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1637, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1638, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1639, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1640, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1641, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1642, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1643, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1644, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1645, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1646, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1647, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1663, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1664, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1665, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1666, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1667, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1668, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1669, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1670, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1671, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1672, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1673, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1674, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1675, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1676, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1677, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1678, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1679, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1680, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1681, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1682, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1683, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1684, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1685, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1731, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1733, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1734, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1735, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1743, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1744, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1745, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1746, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1747, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1748, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1749, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1750, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1751, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1752, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1753, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1754, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1755, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1756, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1757, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1758, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1759, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1760, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1761, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1762, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1763, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1764, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1765, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1766, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1767, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1768, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1769, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1770, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1771, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1772, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1773, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1781, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1789, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1790, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1791, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1792, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1793, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1794, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1795, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1796, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1797, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1798, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1799, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1800, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1801, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1802, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1803, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1804, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1805, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1806, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1807, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1808, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1809, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1810, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1811, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1812, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1813, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1814, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1815, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1816, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1817, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1818, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1819, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1820, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1821, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1822, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1823, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1854, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1855, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1856, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1857, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1858, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1859, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1869, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1870, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1871, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1872, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1873, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1874, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1875, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1876, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1877, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1878, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1879, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1880, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1881, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1882, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1883, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1884, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1885, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1886, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1887, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1888, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1889, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1890, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1891, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1892, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1893, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1894, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1895, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1896, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1897, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1898, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1899, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1905, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1910, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1915, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1916, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1917, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1918, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1919, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1920, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1921, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1922, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1923, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1924, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1925, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1926, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1927, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1928, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1929, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1930, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1931, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1932, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1933, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1934, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1935, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1936, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1937, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1938, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1939, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1952, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1973, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1974, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1975, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1976, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1977, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1978, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 1979, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1980, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1981, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1982, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1983, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1984, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1985, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 1986, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 1997, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1998, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 1999, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2000, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2001, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2002, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2003, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2004, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2005, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2006, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2007, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2008, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2009, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2010, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2011, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2012, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2013, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2014, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2015, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2016, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2017, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2018, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2019, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2020, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2021, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2022, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2023, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2024, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2025, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2034, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2041, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2042, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2043, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2044, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2045, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2046, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2047, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2048, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2049, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2050, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2051, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2052, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2053, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2054, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2055, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2056, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2057, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2058, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2059, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2060, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2061, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2062, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2063, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2064, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2065, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2079, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2080, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2081, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2082, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2097, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2098, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2099, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2105, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2108, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2123, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2124, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2125, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2126, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2127, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2128, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2129, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2130, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2131, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2132, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2133, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2134, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2135, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2136, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2137, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2138, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2139, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2140, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2141, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2142, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2143, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2144, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2145, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2146, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2147, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2148, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2149, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2150, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2151, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2167, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2168, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2169, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2170, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2171, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2172, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2173, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2174, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2175, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2176, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2177, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2178, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2179, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2180, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2181, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2182, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2183, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2184, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2185, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2186, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2187, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2188, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2189, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2190, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2191, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2202, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2204, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2205, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2206, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2207, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2208, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2209, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2219, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2220, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2221, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2222, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2223, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2224, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2225, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2236, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2249, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2250, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2251, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2252, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2253, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2254, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2255, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2256, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2257, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2258, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2259, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2260, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2261, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2262, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2263, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2264, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2265, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2266, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2267, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2268, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2269, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2270, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2271, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2272, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2273, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2274, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2275, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2276, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2277, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2293, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2294, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2295, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2296, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2297, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2298, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2299, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2300, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2301, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2302, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2303, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2304, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2305, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2306, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2307, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2308, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2309, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2310, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2311, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2312, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2313, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2314, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2315, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2316, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2329, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2330, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2335, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2336, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2338, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2339, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2340, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2341, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2342, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2343, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2344, \"v\": 4 },\n\t\t\t\t\t{ \"coordId\": 2345, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2346, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2347, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2348, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2365, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2375, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2376, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2377, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2378, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2379, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2380, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2381, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2382, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2383, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2384, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2385, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2386, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2387, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2388, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2389, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2390, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2391, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2392, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2393, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2394, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2395, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2396, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2397, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2398, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2399, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2400, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2401, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2402, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2403, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2419, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2420, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2421, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2422, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2423, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2424, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2425, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2426, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2427, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2428, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2429, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2430, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2431, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2432, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2433, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2434, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2435, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2436, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2437, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2438, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2439, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2440, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2441, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2469, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2470, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2471, \"v\": 2 },\n\t\t\t\t\t{ \"coordId\": 2474, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2476, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2486, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2490, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2493, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2494, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2495, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2496, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2497, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2498, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2501, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2502, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2503, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2504, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2505, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2506, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2507, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2508, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2509, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2510, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2511, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2512, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2513, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2514, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2515, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2516, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2517, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2518, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2519, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2520, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2521, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2522, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2523, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2524, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2525, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2526, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2527, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2528, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2529, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2530, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2531, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2532, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2533, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2534, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2535, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2536, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2537, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2538, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2539, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2540, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2541, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2542, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2543, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2544, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2545, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2546, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2547, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2548, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2549, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2550, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2551, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2552, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2553, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2554, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2555, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2556, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2557, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2558, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2559, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2560, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2561, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2562, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2563, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2564, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2565, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2566, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2567, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2580, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2599, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2614, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2619, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2620, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2621, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2622, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2623, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2624, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2627, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2628, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2629, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2630, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2631, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2632, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2633, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2634, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2635, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2636, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2637, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2638, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2639, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2640, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2641, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2642, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2643, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2644, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2645, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2646, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2647, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2648, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2649, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2650, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2651, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2652, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2653, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2654, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2655, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2656, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2657, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2658, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2659, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2660, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2661, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2662, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2663, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2664, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2665, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2666, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2667, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2668, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2669, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2670, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2671, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2672, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2673, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2674, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2675, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2676, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2677, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2678, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2679, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2680, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2681, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2682, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2683, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2684, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2685, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2686, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2687, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2688, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2689, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2690, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2691, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2692, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2693, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2715, \"v\": 3 },\n\t\t\t\t\t{ \"coordId\": 2745, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2746, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2747, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2748, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2749, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2750, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2751, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2752, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2753, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2754, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2755, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2756, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2757, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2758, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2759, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2760, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2761, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2762, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2763, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2764, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2765, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2766, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2767, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2768, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2769, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2770, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2771, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2772, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2773, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2774, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2775, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2776, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2777, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2778, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2779, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2780, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2781, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2782, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2783, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2784, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2785, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2786, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2787, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2788, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2789, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2790, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2791, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2792, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2793, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2794, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2795, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2796, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2797, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2798, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2799, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2800, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2801, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2802, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2803, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2804, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2805, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2806, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2807, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2808, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2809, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2810, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2811, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2812, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2813, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2814, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2815, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2816, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2817, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2818, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2819, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2850, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2851, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2852, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2853, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2854, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2855, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2862, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2863, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2864, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2865, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2866, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2867, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2868, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2869, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2870, \"v\": 1 },\n\t\t\t\t\t{ \"coordId\": 2871, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2872, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2873, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2874, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2875, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2876, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2877, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2878, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2879, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2880, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2881, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2882, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2883, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2884, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2885, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2886, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2887, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2888, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2889, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2890, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2891, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2892, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2893, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2894, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2895, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2896, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2897, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2898, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2899, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2900, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2901, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2902, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2903, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2904, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2905, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2906, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2907, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2908, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2909, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2910, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2911, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2912, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2913, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2914, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2915, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2916, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2917, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2918, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2919, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2920, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2921, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2922, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2923, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2924, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2925, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2926, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2927, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2928, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2929, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2930, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2931, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2932, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2933, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2934, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2935, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2936, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2937, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2938, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2939, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2940, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2941, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2942, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2943, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2944, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2945, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2946, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2975, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2976, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2977, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2978, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2979, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2980, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2981, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2982, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2983, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2984, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2985, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2986, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2987, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2988, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2989, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2990, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2991, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2992, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2993, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2994, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2995, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2996, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2997, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2998, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2999, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3000, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3001, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3002, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3003, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3004, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3005, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3006, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3007, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3008, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3009, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3010, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3011, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3012, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3013, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3014, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3015, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3016, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3017, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3018, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3019, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3020, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3021, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3022, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3023, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3024, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3025, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3026, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3027, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3028, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3029, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3030, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3031, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3032, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3033, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3034, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3035, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3036, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3037, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3038, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3039, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3040, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3041, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3042, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3043, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3044, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3045, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3046, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3047, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3048, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3049, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3050, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3051, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3052, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3053, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3054, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3055, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3056, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3057, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3058, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3059, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3060, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3061, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3062, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3063, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3064, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3065, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3066, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3067, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3068, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3069, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3070, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3071, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3072, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3073, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3074, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3075, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3076, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3077, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3078, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3079, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3080, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3081, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3082, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3083, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3084, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3085, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3086, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3087, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3088, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3089, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3090, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3091, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3092, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3093, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3094, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3095, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3096, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3097, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3098, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3099, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3100, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3101, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3102, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3103, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3104, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3105, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3106, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3107, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3108, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3109, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3110, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3111, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3112, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3113, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3114, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3115, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3116, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3117, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3118, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3119, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3120, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3121, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3122, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3123, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3124, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3125, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3126, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3127, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3128, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3129, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3130, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3131, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3132, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3133, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3134, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3135, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3136, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3137, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3138, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3139, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3140, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3141, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3142, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3143, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3144, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3145, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3146, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3147, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3148, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3149, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3150, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3151, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3152, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3153, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3154, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3155, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3156, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3157, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3158, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3159, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3160, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3161, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3162, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3163, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3164, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3165, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3166, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3167, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3168, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3169, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3170, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3171, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3172, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3173, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3174, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3175, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3176, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3177, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3178, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3179, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3180, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3181, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3182, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3183, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3184, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3185, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3186, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3187, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3188, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3189, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3190, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3191, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3192, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3193, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3194, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3195, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3196, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3197, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3198, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3199, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3200, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3201, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3202, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3203, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3204, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3205, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3206, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3207, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3208, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3209, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3210, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3211, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3212, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3213, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3214, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3215, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3216, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3217, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3218, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3219, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3220, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3221, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3222, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3223, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3224, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3225, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3226, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3227, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3228, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3229, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3230, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3231, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3232, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3233, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3234, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3235, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3236, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3237, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3238, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3239, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3240, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3241, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3242, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3243, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3244, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3245, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3246, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3247, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3248, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3249, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3250, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3251, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3252, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3253, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3254, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3255, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3256, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3257, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3258, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3259, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3260, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3261, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3262, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3263, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3264, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3265, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3266, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3267, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3268, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3269, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3270, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3271, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3272, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3273, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3274, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3275, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3276, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3277, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3278, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3279, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3280, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3281, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3282, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3283, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3284, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3285, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3286, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3287, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3288, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3289, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3290, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3291, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3292, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3293, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3294, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3295, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3296, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3297, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3298, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3299, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3300, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3301, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3302, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3303, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3304, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3305, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3306, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3307, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3308, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3309, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3310, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3311, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3312, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3313, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3314, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3315, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3316, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3317, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3318, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3319, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3320, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3321, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3322, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3323, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3324, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3325, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3326, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3327, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3328, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3329, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3330, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3331, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3332, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3333, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3334, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3335, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3336, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3337, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3338, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3339, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3340, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3341, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3342, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3343, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3344, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3345, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3346, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3347, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3348, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3349, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3350, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3351, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3352, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3353, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3354, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3355, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3356, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3357, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3358, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3359, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3360, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3361, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3362, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3363, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3364, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3365, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3366, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3367, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3368, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3369, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3370, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3371, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3372, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3373, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3374, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3375, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3376, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3377, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3378, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3379, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3380, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3381, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3382, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3383, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3384, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3385, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3386, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3387, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3388, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3389, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3390, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3391, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3392, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3393, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3394, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3395, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3396, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3397, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3398, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3399, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3400, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3401, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3402, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3403, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3404, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3405, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3406, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3407, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3408, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3409, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3410, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3411, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3412, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3413, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3414, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3415, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3416, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3417, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3418, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3419, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3420, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3421, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3422, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3423, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3424, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3425, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3426, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3427, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3428, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3429, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3430, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3431, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3432, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3433, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3434, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3435, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3436, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3437, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3438, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3439, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3440, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3441, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3442, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3443, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3444, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3445, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3446, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3447, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3448, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3449, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3450, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3451, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3452, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3453, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3454, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3455, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3456, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3457, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3458, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3459, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3460, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3461, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3462, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3463, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3464, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3465, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3466, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3467, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3468, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3469, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3470, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3471, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3472, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3473, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3474, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3475, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3476, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3477, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3478, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3479, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3480, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3481, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3482, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3483, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3484, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3485, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3486, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3487, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3488, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3489, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3490, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3491, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3492, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3493, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3494, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3495, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3496, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3497, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3498, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3499, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3500, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3501, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3502, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3503, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3504, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3505, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3506, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3507, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3508, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3509, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3510, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3511, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3512, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3513, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3514, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3515, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3516, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3517, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3518, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3519, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3520, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3521, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3522, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3523, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3524, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3525, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3526, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3527, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3528, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3529, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3530, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3531, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3532, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3533, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3534, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3535, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3536, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3537, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3538, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3539, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3540, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3541, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3542, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3543, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3544, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3545, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3546, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3547, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3548, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3549, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3550, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3551, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3552, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3553, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3554, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3555, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3556, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3557, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3558, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3559, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3560, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3561, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3562, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3563, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3564, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3565, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3566, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3567, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3568, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3569, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3570, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3571, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3572, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3573, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3574, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3575, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3576, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3577, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3578, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3579, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3580, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3581, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3582, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3583, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3584, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3585, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3586, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3587, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3588, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3589, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3590, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3591, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3592, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3593, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3594, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3595, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3596, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3597, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3598, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3599, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3600, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3601, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3602, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3603, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3604, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3605, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3606, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3607, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3608, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3609, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3610, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3611, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3612, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3613, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3614, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3615, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3616, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3617, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3618, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3619, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3620, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3621, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3622, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3623, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3624, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3625, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3626, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3627, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3628, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3629, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3630, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3631, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3632, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3633, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3634, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3635, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3636, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3637, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3638, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3639, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3640, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3641, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3642, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3643, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3644, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3645, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3646, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3647, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3648, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3649, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3650, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3651, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3652, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3653, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3654, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3655, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3656, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3657, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3658, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3659, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3660, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3661, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3662, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3663, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3664, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3665, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3666, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3667, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3668, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3669, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3670, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3671, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3672, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3673, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3674, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3675, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3676, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3677, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3678, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3679, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3680, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3681, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3682, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3683, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3684, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3685, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3686, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3687, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3688, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3689, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3690, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3691, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3692, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3693, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3694, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3695, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3696, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3697, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3698, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3699, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3700, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3701, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3702, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3703, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3704, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3705, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3706, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3707, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3708, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3709, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3710, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3711, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3712, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3713, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3714, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3715, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3716, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3717, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3718, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3719, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3720, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3721, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3722, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3723, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3724, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3725, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3726, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3727, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3728, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3729, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3730, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3731, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3732, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3733, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3734, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3735, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3736, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3737, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3738, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3739, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3740, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3741, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3742, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3743, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3744, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3745, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3746, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3747, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3748, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3749, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3750, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3751, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3752, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3753, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3754, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3755, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3756, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3757, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3758, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3759, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3760, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3761, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3762, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3763, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3764, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3765, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3766, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3767, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3768, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3769, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3770, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3771, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3772, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3773, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3774, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3775, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3776, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3777, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3778, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3779, \"v\": 0 }\n\t\t\t\t],\n\t\t\t\t\"autoLayerTiles\": [\n\t\t\t\t\t{ \"px\": [0,0], \"src\": [0,64], \"f\": 0, \"d\": [42,0,128] },\n\t\t\t\t\t{ \"px\": [16,0], \"src\": [0,64], \"f\": 0, \"d\": [42,1,128] },\n\t\t\t\t\t{ \"px\": [32,0], \"src\": [0,64], \"f\": 0, \"d\": [42,2,128] },\n\t\t\t\t\t{ \"px\": [48,0], \"src\": [0,64], \"f\": 0, \"d\": [42,3,128] },\n\t\t\t\t\t{ \"px\": [64,0], \"src\": [0,64], \"f\": 0, \"d\": [42,4,128] },\n\t\t\t\t\t{ \"px\": [80,0], \"src\": [0,64], \"f\": 0, \"d\": [42,5,128] },\n\t\t\t\t\t{ \"px\": [96,0], \"src\": [0,64], \"f\": 0, \"d\": [42,6,128] },\n\t\t\t\t\t{ \"px\": [112,0], \"src\": [0,64], \"f\": 0, \"d\": [42,7,128] },\n\t\t\t\t\t{ \"px\": [128,0], \"src\": [0,64], \"f\": 0, \"d\": [42,8,128] },\n\t\t\t\t\t{ \"px\": [144,0], \"src\": [0,64], \"f\": 0, \"d\": [42,9,128] },\n\t\t\t\t\t{ \"px\": [160,0], \"src\": [0,64], \"f\": 0, \"d\": [42,10,128] },\n\t\t\t\t\t{ \"px\": [176,0], \"src\": [0,64], \"f\": 0, \"d\": [42,11,128] },\n\t\t\t\t\t{ \"px\": [192,0], \"src\": [0,64], \"f\": 0, \"d\": [42,12,128] },\n\t\t\t\t\t{ \"px\": [208,0], \"src\": [0,64], \"f\": 0, \"d\": [42,13,128] },\n\t\t\t\t\t{ \"px\": [224,0], \"src\": [0,64], \"f\": 0, \"d\": [42,14,128] },\n\t\t\t\t\t{ \"px\": [240,0], \"src\": [0,64], \"f\": 0, \"d\": [42,15,128] },\n\t\t\t\t\t{ \"px\": [256,0], \"src\": [0,64], \"f\": 0, \"d\": [42,16,128] },\n\t\t\t\t\t{ \"px\": [272,0], \"src\": [0,64], \"f\": 0, \"d\": [42,17,128] },\n\t\t\t\t\t{ \"px\": [288,0], \"src\": [0,64], \"f\": 0, \"d\": [42,18,128] },\n\t\t\t\t\t{ \"px\": [304,0], \"src\": [0,64], \"f\": 0, \"d\": [42,19,128] },\n\t\t\t\t\t{ \"px\": [320,0], \"src\": [0,64], \"f\": 0, \"d\": [42,20,128] },\n\t\t\t\t\t{ \"px\": [336,0], \"src\": [0,64], \"f\": 0, \"d\": [42,21,128] },\n\t\t\t\t\t{ \"px\": [352,0], \"src\": [0,64], \"f\": 0, \"d\": [42,22,128] },\n\t\t\t\t\t{ \"px\": [368,0], \"src\": [0,64], \"f\": 0, \"d\": [42,23,128] },\n\t\t\t\t\t{ \"px\": [384,0], \"src\": [0,64], \"f\": 0, \"d\": [42,24,128] },\n\t\t\t\t\t{ \"px\": [400,0], \"src\": [0,64], \"f\": 0, \"d\": [42,25,128] },\n\t\t\t\t\t{ \"px\": [416,0], \"src\": [0,64], \"f\": 0, \"d\": [42,26,128] },\n\t\t\t\t\t{ \"px\": [432,0], \"src\": [0,64], \"f\": 0, \"d\": [42,27,128] },\n\t\t\t\t\t{ \"px\": [448,0], \"src\": [0,64], \"f\": 0, \"d\": [42,28,128] },\n\t\t\t\t\t{ \"px\": [464,0], \"src\": [0,64], \"f\": 0, \"d\": [42,29,128] },\n\t\t\t\t\t{ \"px\": [480,0], \"src\": [0,64], \"f\": 0, \"d\": [42,30,128] },\n\t\t\t\t\t{ \"px\": [496,0], \"src\": [0,64], \"f\": 0, \"d\": [42,31,128] },\n\t\t\t\t\t{ \"px\": [512,0], \"src\": [0,64], \"f\": 0, \"d\": [42,32,128] },\n\t\t\t\t\t{ \"px\": [528,0], \"src\": [0,64], \"f\": 0, \"d\": [42,33,128] },\n\t\t\t\t\t{ \"px\": [544,0], \"src\": [0,64], \"f\": 0, \"d\": [42,34,128] },\n\t\t\t\t\t{ \"px\": [560,0], \"src\": [0,64], \"f\": 0, \"d\": [42,35,128] },\n\t\t\t\t\t{ \"px\": [576,0], \"src\": [0,64], \"f\": 0, \"d\": [42,36,128] },\n\t\t\t\t\t{ \"px\": [592,0], \"src\": [0,64], \"f\": 0, \"d\": [42,37,128] },\n\t\t\t\t\t{ \"px\": [608,0], \"src\": [0,64], \"f\": 0, \"d\": [42,38,128] },\n\t\t\t\t\t{ \"px\": [624,0], \"src\": [0,64], \"f\": 0, \"d\": [42,39,128] },\n\t\t\t\t\t{ \"px\": [640,0], \"src\": [0,64], \"f\": 0, \"d\": [42,40,128] },\n\t\t\t\t\t{ \"px\": [656,0], \"src\": [0,64], \"f\": 0, \"d\": [42,41,128] },\n\t\t\t\t\t{ \"px\": [672,0], \"src\": [0,64], \"f\": 0, \"d\": [42,42,128] },\n\t\t\t\t\t{ \"px\": [688,0], \"src\": [0,64], \"f\": 0, \"d\": [42,43,128] },\n\t\t\t\t\t{ \"px\": [704,0], \"src\": [0,64], \"f\": 0, \"d\": [42,44,128] },\n\t\t\t\t\t{ \"px\": [720,0], \"src\": [0,64], \"f\": 0, \"d\": [42,45,128] },\n\t\t\t\t\t{ \"px\": [736,0], \"src\": [0,64], \"f\": 0, \"d\": [42,46,128] },\n\t\t\t\t\t{ \"px\": [1696,0], \"src\": [0,64], \"f\": 0, \"d\": [42,106,128] },\n\t\t\t\t\t{ \"px\": [1712,0], \"src\": [0,64], \"f\": 0, \"d\": [42,107,128] },\n\t\t\t\t\t{ \"px\": [1728,0], \"src\": [0,64], \"f\": 0, \"d\": [42,108,128] },\n\t\t\t\t\t{ \"px\": [1744,0], \"src\": [0,64], \"f\": 0, \"d\": [42,109,128] },\n\t\t\t\t\t{ \"px\": [1760,0], \"src\": [0,64], \"f\": 0, \"d\": [42,110,128] },\n\t\t\t\t\t{ \"px\": [1776,0], \"src\": [0,64], \"f\": 0, \"d\": [42,111,128] },\n\t\t\t\t\t{ \"px\": [1792,0], \"src\": [0,64], \"f\": 0, \"d\": [42,112,128] },\n\t\t\t\t\t{ \"px\": [1808,0], \"src\": [0,64], \"f\": 0, \"d\": [42,113,128] },\n\t\t\t\t\t{ \"px\": [1824,0], \"src\": [0,64], \"f\": 0, \"d\": [42,114,128] },\n\t\t\t\t\t{ \"px\": [1840,0], \"src\": [0,64], \"f\": 0, \"d\": [42,115,128] },\n\t\t\t\t\t{ \"px\": [1856,0], \"src\": [0,64], \"f\": 0, \"d\": [42,116,128] },\n\t\t\t\t\t{ \"px\": [1872,0], \"src\": [0,64], \"f\": 0, \"d\": [42,117,128] },\n\t\t\t\t\t{ \"px\": [1888,0], \"src\": [0,64], \"f\": 0, \"d\": [42,118,128] },\n\t\t\t\t\t{ \"px\": [1904,0], \"src\": [0,64], \"f\": 0, \"d\": [42,119,128] },\n\t\t\t\t\t{ \"px\": [1920,0], \"src\": [0,64], \"f\": 0, \"d\": [42,120,128] },\n\t\t\t\t\t{ \"px\": [1936,0], \"src\": [0,64], \"f\": 0, \"d\": [42,121,128] },\n\t\t\t\t\t{ \"px\": [1952,0], \"src\": [0,64], \"f\": 0, \"d\": [42,122,128] },\n\t\t\t\t\t{ \"px\": [1968,0], \"src\": [0,64], \"f\": 0, \"d\": [42,123,128] },\n\t\t\t\t\t{ \"px\": [1984,0], \"src\": [0,64], \"f\": 0, \"d\": [42,124,128] },\n\t\t\t\t\t{ \"px\": [2000,0], \"src\": [0,64], \"f\": 0, \"d\": [42,125,128] },\n\t\t\t\t\t{ \"px\": [0,16], \"src\": [0,64], \"f\": 0, \"d\": [42,126,128] },\n\t\t\t\t\t{ \"px\": [16,16], \"src\": [0,64], \"f\": 0, \"d\": [42,127,128] },\n\t\t\t\t\t{ \"px\": [32,16], \"src\": [0,64], \"f\": 0, \"d\": [42,128,128] },\n\t\t\t\t\t{ \"px\": [48,16], \"src\": [0,64], \"f\": 0, \"d\": [42,129,128] },\n\t\t\t\t\t{ \"px\": [64,16], \"src\": [0,64], \"f\": 0, \"d\": [42,130,128] },\n\t\t\t\t\t{ \"px\": [80,16], \"src\": [0,64], \"f\": 0, \"d\": [42,131,128] },\n\t\t\t\t\t{ \"px\": [96,16], \"src\": [0,64], \"f\": 0, \"d\": [42,132,128] },\n\t\t\t\t\t{ \"px\": [112,16], \"src\": [0,64], \"f\": 0, \"d\": [42,133,128] },\n\t\t\t\t\t{ \"px\": [128,16], \"src\": [0,64], \"f\": 0, \"d\": [42,134,128] },\n\t\t\t\t\t{ \"px\": [144,16], \"src\": [0,64], \"f\": 0, \"d\": [42,135,128] },\n\t\t\t\t\t{ \"px\": [160,16], \"src\": [0,64], \"f\": 0, \"d\": [42,136,128] },\n\t\t\t\t\t{ \"px\": [176,16], \"src\": [0,64], \"f\": 0, \"d\": [42,137,128] },\n\t\t\t\t\t{ \"px\": [192,16], \"src\": [0,64], \"f\": 0, \"d\": [42,138,128] },\n\t\t\t\t\t{ \"px\": [208,16], \"src\": [0,64], \"f\": 0, \"d\": [42,139,128] },\n\t\t\t\t\t{ \"px\": [224,16], \"src\": [0,64], \"f\": 0, \"d\": [42,140,128] },\n\t\t\t\t\t{ \"px\": [240,16], \"src\": [0,64], \"f\": 0, \"d\": [42,141,128] },\n\t\t\t\t\t{ \"px\": [256,16], \"src\": [0,64], \"f\": 0, \"d\": [42,142,128] },\n\t\t\t\t\t{ \"px\": [272,16], \"src\": [0,64], \"f\": 0, \"d\": [42,143,128] },\n\t\t\t\t\t{ \"px\": [288,16], \"src\": [0,64], \"f\": 0, \"d\": [42,144,128] },\n\t\t\t\t\t{ \"px\": [304,16], \"src\": [0,64], \"f\": 0, \"d\": [42,145,128] },\n\t\t\t\t\t{ \"px\": [320,16], \"src\": [0,64], \"f\": 0, \"d\": [42,146,128] },\n\t\t\t\t\t{ \"px\": [336,16], \"src\": [0,64], \"f\": 0, \"d\": [42,147,128] },\n\t\t\t\t\t{ \"px\": [352,16], \"src\": [0,64], \"f\": 0, \"d\": [42,148,128] },\n\t\t\t\t\t{ \"px\": [368,16], \"src\": [0,64], \"f\": 0, \"d\": [42,149,128] },\n\t\t\t\t\t{ \"px\": [384,16], \"src\": [0,64], \"f\": 0, \"d\": [42,150,128] },\n\t\t\t\t\t{ \"px\": [400,16], \"src\": [0,64], \"f\": 0, \"d\": [42,151,128] },\n\t\t\t\t\t{ \"px\": [416,16], \"src\": [0,64], \"f\": 0, \"d\": [42,152,128] },\n\t\t\t\t\t{ \"px\": [432,16], \"src\": [0,64], \"f\": 0, \"d\": [42,153,128] },\n\t\t\t\t\t{ \"px\": [448,16], \"src\": [0,64], \"f\": 0, \"d\": [42,154,128] },\n\t\t\t\t\t{ \"px\": [464,16], \"src\": [0,64], \"f\": 0, \"d\": [42,155,128] },\n\t\t\t\t\t{ \"px\": [480,16], \"src\": [0,64], \"f\": 0, \"d\": [42,156,128] },\n\t\t\t\t\t{ \"px\": [496,16], \"src\": [0,64], \"f\": 0, \"d\": [42,157,128] },\n\t\t\t\t\t{ \"px\": [512,16], \"src\": [0,64], \"f\": 0, \"d\": [42,158,128] },\n\t\t\t\t\t{ \"px\": [528,16], \"src\": [0,64], \"f\": 0, \"d\": [42,159,128] },\n\t\t\t\t\t{ \"px\": [544,16], \"src\": [0,64], \"f\": 0, \"d\": [42,160,128] },\n\t\t\t\t\t{ \"px\": [560,16], \"src\": [0,64], \"f\": 0, \"d\": [42,161,128] },\n\t\t\t\t\t{ \"px\": [576,16], \"src\": [0,64], \"f\": 0, \"d\": [42,162,128] },\n\t\t\t\t\t{ \"px\": [592,16], \"src\": [0,64], \"f\": 0, \"d\": [42,163,128] },\n\t\t\t\t\t{ \"px\": [608,16], \"src\": [0,64], \"f\": 0, \"d\": [42,164,128] },\n\t\t\t\t\t{ \"px\": [624,16], \"src\": [0,64], \"f\": 0, \"d\": [42,165,128] },\n\t\t\t\t\t{ \"px\": [640,16], \"src\": [0,64], \"f\": 0, \"d\": [42,166,128] },\n\t\t\t\t\t{ \"px\": [656,16], \"src\": [0,64], \"f\": 0, \"d\": [42,167,128] },\n\t\t\t\t\t{ \"px\": [672,16], \"src\": [0,64], \"f\": 0, \"d\": [42,168,128] },\n\t\t\t\t\t{ \"px\": [688,16], \"src\": [0,64], \"f\": 0, \"d\": [42,169,128] },\n\t\t\t\t\t{ \"px\": [704,16], \"src\": [0,64], \"f\": 0, \"d\": [42,170,128] },\n\t\t\t\t\t{ \"px\": [720,16], \"src\": [0,64], \"f\": 0, \"d\": [42,171,128] },\n\t\t\t\t\t{ \"px\": [736,16], \"src\": [0,64], \"f\": 0, \"d\": [42,172,128] },\n\t\t\t\t\t{ \"px\": [1696,16], \"src\": [0,64], \"f\": 0, \"d\": [42,232,128] },\n\t\t\t\t\t{ \"px\": [1712,16], \"src\": [0,64], \"f\": 0, \"d\": [42,233,128] },\n\t\t\t\t\t{ \"px\": [1728,16], \"src\": [0,64], \"f\": 0, \"d\": [42,234,128] },\n\t\t\t\t\t{ \"px\": [1744,16], \"src\": [0,64], \"f\": 0, \"d\": [42,235,128] },\n\t\t\t\t\t{ \"px\": [1760,16], \"src\": [0,64], \"f\": 0, \"d\": [42,236,128] },\n\t\t\t\t\t{ \"px\": [1776,16], \"src\": [0,64], \"f\": 0, \"d\": [42,237,128] },\n\t\t\t\t\t{ \"px\": [1792,16], \"src\": [0,64], \"f\": 0, \"d\": [42,238,128] },\n\t\t\t\t\t{ \"px\": [1808,16], \"src\": [0,64], \"f\": 0, \"d\": [42,239,128] },\n\t\t\t\t\t{ \"px\": [1824,16], \"src\": [0,64], \"f\": 0, \"d\": [42,240,128] },\n\t\t\t\t\t{ \"px\": [1840,16], \"src\": [0,64], \"f\": 0, \"d\": [42,241,128] },\n\t\t\t\t\t{ \"px\": [1856,16], \"src\": [0,64], \"f\": 0, \"d\": [42,242,128] },\n\t\t\t\t\t{ \"px\": [1872,16], \"src\": [0,64], \"f\": 0, \"d\": [42,243,128] },\n\t\t\t\t\t{ \"px\": [1888,16], \"src\": [0,64], \"f\": 0, \"d\": [42,244,128] },\n\t\t\t\t\t{ \"px\": [1904,16], \"src\": [0,64], \"f\": 0, \"d\": [42,245,128] },\n\t\t\t\t\t{ \"px\": [1920,16], \"src\": [0,64], \"f\": 0, \"d\": [42,246,128] },\n\t\t\t\t\t{ \"px\": [1936,16], \"src\": [0,64], \"f\": 0, \"d\": [42,247,128] },\n\t\t\t\t\t{ \"px\": [1952,16], \"src\": [0,64], \"f\": 0, \"d\": [42,248,128] },\n\t\t\t\t\t{ \"px\": [1968,16], \"src\": [0,64], \"f\": 0, \"d\": [42,249,128] },\n\t\t\t\t\t{ \"px\": [1984,16], \"src\": [0,64], \"f\": 0, \"d\": [42,250,128] },\n\t\t\t\t\t{ \"px\": [2000,16], \"src\": [0,64], \"f\": 0, \"d\": [42,251,128] },\n\t\t\t\t\t{ \"px\": [0,32], \"src\": [0,64], \"f\": 0, \"d\": [42,252,128] },\n\t\t\t\t\t{ \"px\": [16,32], \"src\": [0,64], \"f\": 0, \"d\": [42,253,128] },\n\t\t\t\t\t{ \"px\": [32,32], \"src\": [0,64], \"f\": 0, \"d\": [42,254,128] },\n\t\t\t\t\t{ \"px\": [48,32], \"src\": [0,64], \"f\": 0, \"d\": [42,255,128] },\n\t\t\t\t\t{ \"px\": [64,32], \"src\": [0,64], \"f\": 0, \"d\": [42,256,128] },\n\t\t\t\t\t{ \"px\": [80,32], \"src\": [0,64], \"f\": 0, \"d\": [42,257,128] },\n\t\t\t\t\t{ \"px\": [96,32], \"src\": [0,64], \"f\": 0, \"d\": [42,258,128] },\n\t\t\t\t\t{ \"px\": [112,32], \"src\": [0,64], \"f\": 0, \"d\": [42,259,128] },\n\t\t\t\t\t{ \"px\": [128,32], \"src\": [0,64], \"f\": 0, \"d\": [42,260,128] },\n\t\t\t\t\t{ \"px\": [144,32], \"src\": [0,64], \"f\": 0, \"d\": [42,261,128] },\n\t\t\t\t\t{ \"px\": [160,32], \"src\": [0,64], \"f\": 0, \"d\": [42,262,128] },\n\t\t\t\t\t{ \"px\": [176,32], \"src\": [0,64], \"f\": 0, \"d\": [42,263,128] },\n\t\t\t\t\t{ \"px\": [192,32], \"src\": [0,64], \"f\": 0, \"d\": [42,264,128] },\n\t\t\t\t\t{ \"px\": [208,32], \"src\": [0,64], \"f\": 0, \"d\": [42,265,128] },\n\t\t\t\t\t{ \"px\": [224,32], \"src\": [0,64], \"f\": 0, \"d\": [42,266,128] },\n\t\t\t\t\t{ \"px\": [240,32], \"src\": [0,64], \"f\": 0, \"d\": [42,267,128] },\n\t\t\t\t\t{ \"px\": [256,32], \"src\": [0,64], \"f\": 0, \"d\": [42,268,128] },\n\t\t\t\t\t{ \"px\": [272,32], \"src\": [0,64], \"f\": 0, \"d\": [42,269,128] },\n\t\t\t\t\t{ \"px\": [288,32], \"src\": [0,64], \"f\": 0, \"d\": [42,270,128] },\n\t\t\t\t\t{ \"px\": [304,32], \"src\": [0,64], \"f\": 0, \"d\": [42,271,128] },\n\t\t\t\t\t{ \"px\": [320,32], \"src\": [0,64], \"f\": 0, \"d\": [42,272,128] },\n\t\t\t\t\t{ \"px\": [336,32], \"src\": [0,64], \"f\": 0, \"d\": [42,273,128] },\n\t\t\t\t\t{ \"px\": [352,32], \"src\": [0,64], \"f\": 0, \"d\": [42,274,128] },\n\t\t\t\t\t{ \"px\": [368,32], \"src\": [0,64], \"f\": 0, \"d\": [42,275,128] },\n\t\t\t\t\t{ \"px\": [384,32], \"src\": [0,64], \"f\": 0, \"d\": [42,276,128] },\n\t\t\t\t\t{ \"px\": [400,32], \"src\": [0,64], \"f\": 0, \"d\": [42,277,128] },\n\t\t\t\t\t{ \"px\": [416,32], \"src\": [0,64], \"f\": 0, \"d\": [42,278,128] },\n\t\t\t\t\t{ \"px\": [432,32], \"src\": [0,64], \"f\": 0, \"d\": [42,279,128] },\n\t\t\t\t\t{ \"px\": [448,32], \"src\": [0,64], \"f\": 0, \"d\": [42,280,128] },\n\t\t\t\t\t{ \"px\": [464,32], \"src\": [0,64], \"f\": 0, \"d\": [42,281,128] },\n\t\t\t\t\t{ \"px\": [480,32], \"src\": [0,64], \"f\": 0, \"d\": [42,282,128] },\n\t\t\t\t\t{ \"px\": [496,32], \"src\": [0,64], \"f\": 0, \"d\": [42,283,128] },\n\t\t\t\t\t{ \"px\": [512,32], \"src\": [0,64], \"f\": 0, \"d\": [42,284,128] },\n\t\t\t\t\t{ \"px\": [528,32], \"src\": [0,64], \"f\": 0, \"d\": [42,285,128] },\n\t\t\t\t\t{ \"px\": [544,32], \"src\": [0,64], \"f\": 0, \"d\": [42,286,128] },\n\t\t\t\t\t{ \"px\": [560,32], \"src\": [0,64], \"f\": 0, \"d\": [42,287,128] },\n\t\t\t\t\t{ \"px\": [576,32], \"src\": [0,64], \"f\": 0, \"d\": [42,288,128] },\n\t\t\t\t\t{ \"px\": [592,32], \"src\": [0,64], \"f\": 0, \"d\": [42,289,128] },\n\t\t\t\t\t{ \"px\": [608,32], \"src\": [0,64], \"f\": 0, \"d\": [42,290,128] },\n\t\t\t\t\t{ \"px\": [624,32], \"src\": [0,64], \"f\": 0, \"d\": [42,291,128] },\n\t\t\t\t\t{ \"px\": [640,32], \"src\": [0,64], \"f\": 0, \"d\": [42,292,128] },\n\t\t\t\t\t{ \"px\": [656,32], \"src\": [0,64], \"f\": 0, \"d\": [42,293,128] },\n\t\t\t\t\t{ \"px\": [672,32], \"src\": [0,64], \"f\": 0, \"d\": [42,294,128] },\n\t\t\t\t\t{ \"px\": [688,32], \"src\": [0,64], \"f\": 0, \"d\": [42,295,128] },\n\t\t\t\t\t{ \"px\": [704,32], \"src\": [0,64], \"f\": 0, \"d\": [42,296,128] },\n\t\t\t\t\t{ \"px\": [720,32], \"src\": [0,64], \"f\": 0, \"d\": [42,297,128] },\n\t\t\t\t\t{ \"px\": [736,32], \"src\": [0,64], \"f\": 0, \"d\": [42,298,128] },\n\t\t\t\t\t{ \"px\": [1696,32], \"src\": [0,64], \"f\": 0, \"d\": [42,358,128] },\n\t\t\t\t\t{ \"px\": [1712,32], \"src\": [0,64], \"f\": 0, \"d\": [42,359,128] },\n\t\t\t\t\t{ \"px\": [1728,32], \"src\": [0,64], \"f\": 0, \"d\": [42,360,128] },\n\t\t\t\t\t{ \"px\": [1744,32], \"src\": [0,64], \"f\": 0, \"d\": [42,361,128] },\n\t\t\t\t\t{ \"px\": [1760,32], \"src\": [0,64], \"f\": 0, \"d\": [42,362,128] },\n\t\t\t\t\t{ \"px\": [1776,32], \"src\": [0,64], \"f\": 0, \"d\": [42,363,128] },\n\t\t\t\t\t{ \"px\": [1792,32], \"src\": [0,64], \"f\": 0, \"d\": [42,364,128] },\n\t\t\t\t\t{ \"px\": [1808,32], \"src\": [0,64], \"f\": 0, \"d\": [42,365,128] },\n\t\t\t\t\t{ \"px\": [1824,32], \"src\": [0,64], \"f\": 0, \"d\": [42,366,128] },\n\t\t\t\t\t{ \"px\": [1840,32], \"src\": [0,64], \"f\": 0, \"d\": [42,367,128] },\n\t\t\t\t\t{ \"px\": [1856,32], \"src\": [0,64], \"f\": 0, \"d\": [42,368,128] },\n\t\t\t\t\t{ \"px\": [1872,32], \"src\": [0,64], \"f\": 0, \"d\": [42,369,128] },\n\t\t\t\t\t{ \"px\": [1888,32], \"src\": [0,64], \"f\": 0, \"d\": [42,370,128] },\n\t\t\t\t\t{ \"px\": [1904,32], \"src\": [0,64], \"f\": 0, \"d\": [42,371,128] },\n\t\t\t\t\t{ \"px\": [1920,32], \"src\": [0,64], \"f\": 0, \"d\": [42,372,128] },\n\t\t\t\t\t{ \"px\": [1936,32], \"src\": [0,64], \"f\": 0, \"d\": [42,373,128] },\n\t\t\t\t\t{ \"px\": [1952,32], \"src\": [0,64], \"f\": 0, \"d\": [42,374,128] },\n\t\t\t\t\t{ \"px\": [1968,32], \"src\": [0,64], \"f\": 0, \"d\": [42,375,128] },\n\t\t\t\t\t{ \"px\": [1984,32], \"src\": [0,64], \"f\": 0, \"d\": [42,376,128] },\n\t\t\t\t\t{ \"px\": [2000,32], \"src\": [0,64], \"f\": 0, \"d\": [42,377,128] },\n\t\t\t\t\t{ \"px\": [0,48], \"src\": [0,64], \"f\": 0, \"d\": [42,378,128] },\n\t\t\t\t\t{ \"px\": [16,48], \"src\": [0,64], \"f\": 0, \"d\": [42,379,128] },\n\t\t\t\t\t{ \"px\": [32,48], \"src\": [0,64], \"f\": 0, \"d\": [42,380,128] },\n\t\t\t\t\t{ \"px\": [48,48], \"src\": [0,64], \"f\": 0, \"d\": [42,381,128] },\n\t\t\t\t\t{ \"px\": [64,48], \"src\": [0,64], \"f\": 0, \"d\": [42,382,128] },\n\t\t\t\t\t{ \"px\": [80,48], \"src\": [0,64], \"f\": 0, \"d\": [42,383,128] },\n\t\t\t\t\t{ \"px\": [96,48], \"src\": [0,64], \"f\": 0, \"d\": [42,384,128] },\n\t\t\t\t\t{ \"px\": [112,48], \"src\": [0,64], \"f\": 0, \"d\": [42,385,128] },\n\t\t\t\t\t{ \"px\": [128,48], \"src\": [0,64], \"f\": 0, \"d\": [42,386,128] },\n\t\t\t\t\t{ \"px\": [144,48], \"src\": [0,64], \"f\": 0, \"d\": [42,387,128] },\n\t\t\t\t\t{ \"px\": [160,48], \"src\": [0,64], \"f\": 0, \"d\": [42,388,128] },\n\t\t\t\t\t{ \"px\": [176,48], \"src\": [0,64], \"f\": 0, \"d\": [42,389,128] },\n\t\t\t\t\t{ \"px\": [192,48], \"src\": [0,64], \"f\": 0, \"d\": [42,390,128] },\n\t\t\t\t\t{ \"px\": [208,48], \"src\": [0,64], \"f\": 0, \"d\": [42,391,128] },\n\t\t\t\t\t{ \"px\": [224,48], \"src\": [0,64], \"f\": 0, \"d\": [42,392,128] },\n\t\t\t\t\t{ \"px\": [240,48], \"src\": [0,64], \"f\": 0, \"d\": [42,393,128] },\n\t\t\t\t\t{ \"px\": [256,48], \"src\": [0,64], \"f\": 0, \"d\": [42,394,128] },\n\t\t\t\t\t{ \"px\": [272,48], \"src\": [0,64], \"f\": 0, \"d\": [42,395,128] },\n\t\t\t\t\t{ \"px\": [288,48], \"src\": [0,64], \"f\": 0, \"d\": [42,396,128] },\n\t\t\t\t\t{ \"px\": [304,48], \"src\": [0,64], \"f\": 0, \"d\": [42,397,128] },\n\t\t\t\t\t{ \"px\": [320,48], \"src\": [0,64], \"f\": 0, \"d\": [42,398,128] },\n\t\t\t\t\t{ \"px\": [336,48], \"src\": [0,64], \"f\": 0, \"d\": [42,399,128] },\n\t\t\t\t\t{ \"px\": [352,48], \"src\": [0,64], \"f\": 0, \"d\": [42,400,128] },\n\t\t\t\t\t{ \"px\": [368,48], \"src\": [0,64], \"f\": 0, \"d\": [42,401,128] },\n\t\t\t\t\t{ \"px\": [384,48], \"src\": [0,64], \"f\": 0, \"d\": [42,402,128] },\n\t\t\t\t\t{ \"px\": [400,48], \"src\": [0,64], \"f\": 0, \"d\": [42,403,128] },\n\t\t\t\t\t{ \"px\": [416,48], \"src\": [0,64], \"f\": 0, \"d\": [42,404,128] },\n\t\t\t\t\t{ \"px\": [432,48], \"src\": [0,64], \"f\": 0, \"d\": [42,405,128] },\n\t\t\t\t\t{ \"px\": [448,48], \"src\": [0,64], \"f\": 0, \"d\": [42,406,128] },\n\t\t\t\t\t{ \"px\": [464,48], \"src\": [0,64], \"f\": 0, \"d\": [42,407,128] },\n\t\t\t\t\t{ \"px\": [480,48], \"src\": [0,64], \"f\": 0, \"d\": [42,408,128] },\n\t\t\t\t\t{ \"px\": [496,48], \"src\": [0,64], \"f\": 0, \"d\": [42,409,128] },\n\t\t\t\t\t{ \"px\": [512,48], \"src\": [0,64], \"f\": 0, \"d\": [42,410,128] },\n\t\t\t\t\t{ \"px\": [528,48], \"src\": [0,64], \"f\": 0, \"d\": [42,411,128] },\n\t\t\t\t\t{ \"px\": [544,48], \"src\": [0,64], \"f\": 0, \"d\": [42,412,128] },\n\t\t\t\t\t{ \"px\": [560,48], \"src\": [0,64], \"f\": 0, \"d\": [42,413,128] },\n\t\t\t\t\t{ \"px\": [576,48], \"src\": [0,64], \"f\": 0, \"d\": [42,414,128] },\n\t\t\t\t\t{ \"px\": [592,48], \"src\": [0,64], \"f\": 0, \"d\": [42,415,128] },\n\t\t\t\t\t{ \"px\": [608,48], \"src\": [0,64], \"f\": 0, \"d\": [42,416,128] },\n\t\t\t\t\t{ \"px\": [624,48], \"src\": [0,64], \"f\": 0, \"d\": [42,417,128] },\n\t\t\t\t\t{ \"px\": [640,48], \"src\": [0,64], \"f\": 0, \"d\": [42,418,128] },\n\t\t\t\t\t{ \"px\": [656,48], \"src\": [0,64], \"f\": 0, \"d\": [42,419,128] },\n\t\t\t\t\t{ \"px\": [672,48], \"src\": [0,64], \"f\": 0, \"d\": [42,420,128] },\n\t\t\t\t\t{ \"px\": [688,48], \"src\": [0,64], \"f\": 0, \"d\": [42,421,128] },\n\t\t\t\t\t{ \"px\": [704,48], \"src\": [0,64], \"f\": 0, \"d\": [42,422,128] },\n\t\t\t\t\t{ \"px\": [720,48], \"src\": [0,64], \"f\": 0, \"d\": [42,423,128] },\n\t\t\t\t\t{ \"px\": [736,48], \"src\": [0,64], \"f\": 0, \"d\": [42,424,128] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [0,64], \"f\": 0, \"d\": [42,475,128] },\n\t\t\t\t\t{ \"px\": [1568,48], \"src\": [0,64], \"f\": 0, \"d\": [42,476,128] },\n\t\t\t\t\t{ \"px\": [1584,48], \"src\": [0,64], \"f\": 0, \"d\": [42,477,128] },\n\t\t\t\t\t{ \"px\": [1600,48], \"src\": [0,64], \"f\": 0, \"d\": [42,478,128] },\n\t\t\t\t\t{ \"px\": [1616,48], \"src\": [0,64], \"f\": 0, \"d\": [42,479,128] },\n\t\t\t\t\t{ \"px\": [1632,48], \"src\": [0,64], \"f\": 0, \"d\": [42,480,128] },\n\t\t\t\t\t{ \"px\": [1648,48], \"src\": [0,64], \"f\": 0, \"d\": [42,481,128] },\n\t\t\t\t\t{ \"px\": [1664,48], \"src\": [0,64], \"f\": 0, \"d\": [42,482,128] },\n\t\t\t\t\t{ \"px\": [1680,48], \"src\": [0,64], \"f\": 0, \"d\": [42,483,128] },\n\t\t\t\t\t{ \"px\": [1696,48], \"src\": [0,64], \"f\": 0, \"d\": [42,484,128] },\n\t\t\t\t\t{ \"px\": [1712,48], \"src\": [0,64], \"f\": 0, \"d\": [42,485,128] },\n\t\t\t\t\t{ \"px\": [1728,48], \"src\": [0,64], \"f\": 0, \"d\": [42,486,128] },\n\t\t\t\t\t{ \"px\": [1744,48], \"src\": [0,64], \"f\": 0, \"d\": [42,487,128] },\n\t\t\t\t\t{ \"px\": [1760,48], \"src\": [0,64], \"f\": 0, \"d\": [42,488,128] },\n\t\t\t\t\t{ \"px\": [1776,48], \"src\": [0,64], \"f\": 0, \"d\": [42,489,128] },\n\t\t\t\t\t{ \"px\": [1792,48], \"src\": [0,64], \"f\": 0, \"d\": [42,490,128] },\n\t\t\t\t\t{ \"px\": [1808,48], \"src\": [0,64], \"f\": 0, \"d\": [42,491,128] },\n\t\t\t\t\t{ \"px\": [1824,48], \"src\": [0,64], \"f\": 0, \"d\": [42,492,128] },\n\t\t\t\t\t{ \"px\": [1840,48], \"src\": [0,64], \"f\": 0, \"d\": [42,493,128] },\n\t\t\t\t\t{ \"px\": [1856,48], \"src\": [0,64], \"f\": 0, \"d\": [42,494,128] },\n\t\t\t\t\t{ \"px\": [1872,48], \"src\": [0,64], \"f\": 0, \"d\": [42,495,128] },\n\t\t\t\t\t{ \"px\": [1888,48], \"src\": [0,64], \"f\": 0, \"d\": [42,496,128] },\n\t\t\t\t\t{ \"px\": [1904,48], \"src\": [0,64], \"f\": 0, \"d\": [42,497,128] },\n\t\t\t\t\t{ \"px\": [1920,48], \"src\": [0,64], \"f\": 0, \"d\": [42,498,128] },\n\t\t\t\t\t{ \"px\": [1936,48], \"src\": [0,64], \"f\": 0, \"d\": [42,499,128] },\n\t\t\t\t\t{ \"px\": [1952,48], \"src\": [0,64], \"f\": 0, \"d\": [42,500,128] },\n\t\t\t\t\t{ \"px\": [1968,48], \"src\": [0,64], \"f\": 0, \"d\": [42,501,128] },\n\t\t\t\t\t{ \"px\": [1984,48], \"src\": [0,64], \"f\": 0, \"d\": [42,502,128] },\n\t\t\t\t\t{ \"px\": [2000,48], \"src\": [0,64], \"f\": 0, \"d\": [42,503,128] },\n\t\t\t\t\t{ \"px\": [0,64], \"src\": [0,64], \"f\": 0, \"d\": [42,504,128] },\n\t\t\t\t\t{ \"px\": [16,64], \"src\": [0,64], \"f\": 0, \"d\": [42,505,128] },\n\t\t\t\t\t{ \"px\": [32,64], \"src\": [0,64], \"f\": 0, \"d\": [42,506,128] },\n\t\t\t\t\t{ \"px\": [48,64], \"src\": [0,64], \"f\": 0, \"d\": [42,507,128] },\n\t\t\t\t\t{ \"px\": [64,64], \"src\": [0,64], \"f\": 0, \"d\": [42,508,128] },\n\t\t\t\t\t{ \"px\": [80,64], \"src\": [0,64], \"f\": 0, \"d\": [42,509,128] },\n\t\t\t\t\t{ \"px\": [96,64], \"src\": [0,64], \"f\": 0, \"d\": [42,510,128] },\n\t\t\t\t\t{ \"px\": [112,64], \"src\": [0,64], \"f\": 0, \"d\": [42,511,128] },\n\t\t\t\t\t{ \"px\": [128,64], \"src\": [0,64], \"f\": 0, \"d\": [42,512,128] },\n\t\t\t\t\t{ \"px\": [144,64], \"src\": [0,64], \"f\": 0, \"d\": [42,513,128] },\n\t\t\t\t\t{ \"px\": [160,64], \"src\": [0,64], \"f\": 0, \"d\": [42,514,128] },\n\t\t\t\t\t{ \"px\": [176,64], \"src\": [0,64], \"f\": 0, \"d\": [42,515,128] },\n\t\t\t\t\t{ \"px\": [192,64], \"src\": [0,64], \"f\": 0, \"d\": [42,516,128] },\n\t\t\t\t\t{ \"px\": [208,64], \"src\": [0,64], \"f\": 0, \"d\": [42,517,128] },\n\t\t\t\t\t{ \"px\": [224,64], \"src\": [0,64], \"f\": 0, \"d\": [42,518,128] },\n\t\t\t\t\t{ \"px\": [240,64], \"src\": [0,64], \"f\": 0, \"d\": [42,519,128] },\n\t\t\t\t\t{ \"px\": [256,64], \"src\": [0,64], \"f\": 0, \"d\": [42,520,128] },\n\t\t\t\t\t{ \"px\": [272,64], \"src\": [0,64], \"f\": 0, \"d\": [42,521,128] },\n\t\t\t\t\t{ \"px\": [288,64], \"src\": [0,64], \"f\": 0, \"d\": [42,522,128] },\n\t\t\t\t\t{ \"px\": [304,64], \"src\": [0,64], \"f\": 0, \"d\": [42,523,128] },\n\t\t\t\t\t{ \"px\": [320,64], \"src\": [0,64], \"f\": 0, \"d\": [42,524,128] },\n\t\t\t\t\t{ \"px\": [336,64], \"src\": [0,64], \"f\": 0, \"d\": [42,525,128] },\n\t\t\t\t\t{ \"px\": [352,64], \"src\": [0,64], \"f\": 0, \"d\": [42,526,128] },\n\t\t\t\t\t{ \"px\": [368,64], \"src\": [0,64], \"f\": 0, \"d\": [42,527,128] },\n\t\t\t\t\t{ \"px\": [384,64], \"src\": [0,64], \"f\": 0, \"d\": [42,528,128] },\n\t\t\t\t\t{ \"px\": [400,64], \"src\": [0,64], \"f\": 0, \"d\": [42,529,128] },\n\t\t\t\t\t{ \"px\": [416,64], \"src\": [0,64], \"f\": 0, \"d\": [42,530,128] },\n\t\t\t\t\t{ \"px\": [432,64], \"src\": [0,64], \"f\": 0, \"d\": [42,531,128] },\n\t\t\t\t\t{ \"px\": [448,64], \"src\": [0,64], \"f\": 0, \"d\": [42,532,128] },\n\t\t\t\t\t{ \"px\": [464,64], \"src\": [0,64], \"f\": 0, \"d\": [42,533,128] },\n\t\t\t\t\t{ \"px\": [480,64], \"src\": [0,64], \"f\": 0, \"d\": [42,534,128] },\n\t\t\t\t\t{ \"px\": [496,64], \"src\": [0,64], \"f\": 0, \"d\": [42,535,128] },\n\t\t\t\t\t{ \"px\": [512,64], \"src\": [0,64], \"f\": 0, \"d\": [42,536,128] },\n\t\t\t\t\t{ \"px\": [528,64], \"src\": [0,64], \"f\": 0, \"d\": [42,537,128] },\n\t\t\t\t\t{ \"px\": [544,64], \"src\": [0,64], \"f\": 0, \"d\": [42,538,128] },\n\t\t\t\t\t{ \"px\": [560,64], \"src\": [0,64], \"f\": 0, \"d\": [42,539,128] },\n\t\t\t\t\t{ \"px\": [576,64], \"src\": [0,64], \"f\": 0, \"d\": [42,540,128] },\n\t\t\t\t\t{ \"px\": [592,64], \"src\": [0,64], \"f\": 0, \"d\": [42,541,128] },\n\t\t\t\t\t{ \"px\": [608,64], \"src\": [0,64], \"f\": 0, \"d\": [42,542,128] },\n\t\t\t\t\t{ \"px\": [624,64], \"src\": [0,64], \"f\": 0, \"d\": [42,543,128] },\n\t\t\t\t\t{ \"px\": [640,64], \"src\": [0,64], \"f\": 0, \"d\": [42,544,128] },\n\t\t\t\t\t{ \"px\": [656,64], \"src\": [0,64], \"f\": 0, \"d\": [42,545,128] },\n\t\t\t\t\t{ \"px\": [672,64], \"src\": [0,64], \"f\": 0, \"d\": [42,546,128] },\n\t\t\t\t\t{ \"px\": [688,64], \"src\": [0,64], \"f\": 0, \"d\": [42,547,128] },\n\t\t\t\t\t{ \"px\": [704,64], \"src\": [0,64], \"f\": 0, \"d\": [42,548,128] },\n\t\t\t\t\t{ \"px\": [720,64], \"src\": [0,64], \"f\": 0, \"d\": [42,549,128] },\n\t\t\t\t\t{ \"px\": [736,64], \"src\": [0,64], \"f\": 0, \"d\": [42,550,128] },\n\t\t\t\t\t{ \"px\": [1552,64], \"src\": [0,64], \"f\": 0, \"d\": [42,601,128] },\n\t\t\t\t\t{ \"px\": [1568,64], \"src\": [0,64], \"f\": 0, \"d\": [42,602,128] },\n\t\t\t\t\t{ \"px\": [1584,64], \"src\": [0,64], \"f\": 0, \"d\": [42,603,128] },\n\t\t\t\t\t{ \"px\": [1600,64], \"src\": [0,64], \"f\": 0, \"d\": [42,604,128] },\n\t\t\t\t\t{ \"px\": [1616,64], \"src\": [0,64], \"f\": 0, \"d\": [42,605,128] },\n\t\t\t\t\t{ \"px\": [1632,64], \"src\": [0,64], \"f\": 0, \"d\": [42,606,128] },\n\t\t\t\t\t{ \"px\": [1648,64], \"src\": [0,64], \"f\": 0, \"d\": [42,607,128] },\n\t\t\t\t\t{ \"px\": [1664,64], \"src\": [0,64], \"f\": 0, \"d\": [42,608,128] },\n\t\t\t\t\t{ \"px\": [1680,64], \"src\": [0,64], \"f\": 0, \"d\": [42,609,128] },\n\t\t\t\t\t{ \"px\": [1696,64], \"src\": [0,64], \"f\": 0, \"d\": [42,610,128] },\n\t\t\t\t\t{ \"px\": [1712,64], \"src\": [0,64], \"f\": 0, \"d\": [42,611,128] },\n\t\t\t\t\t{ \"px\": [1728,64], \"src\": [0,64], \"f\": 0, \"d\": [42,612,128] },\n\t\t\t\t\t{ \"px\": [1744,64], \"src\": [0,64], \"f\": 0, \"d\": [42,613,128] },\n\t\t\t\t\t{ \"px\": [1760,64], \"src\": [0,64], \"f\": 0, \"d\": [42,614,128] },\n\t\t\t\t\t{ \"px\": [1776,64], \"src\": [0,64], \"f\": 0, \"d\": [42,615,128] },\n\t\t\t\t\t{ \"px\": [1792,64], \"src\": [0,64], \"f\": 0, \"d\": [42,616,128] },\n\t\t\t\t\t{ \"px\": [1808,64], \"src\": [0,64], \"f\": 0, \"d\": [42,617,128] },\n\t\t\t\t\t{ \"px\": [1824,64], \"src\": [0,64], \"f\": 0, \"d\": [42,618,128] },\n\t\t\t\t\t{ \"px\": [1840,64], \"src\": [0,64], \"f\": 0, \"d\": [42,619,128] },\n\t\t\t\t\t{ \"px\": [1856,64], \"src\": [0,64], \"f\": 0, \"d\": [42,620,128] },\n\t\t\t\t\t{ \"px\": [1872,64], \"src\": [0,64], \"f\": 0, \"d\": [42,621,128] },\n\t\t\t\t\t{ \"px\": [1888,64], \"src\": [0,64], \"f\": 0, \"d\": [42,622,128] },\n\t\t\t\t\t{ \"px\": [1904,64], \"src\": [0,64], \"f\": 0, \"d\": [42,623,128] },\n\t\t\t\t\t{ \"px\": [1920,64], \"src\": [0,64], \"f\": 0, \"d\": [42,624,128] },\n\t\t\t\t\t{ \"px\": [1936,64], \"src\": [0,64], \"f\": 0, \"d\": [42,625,128] },\n\t\t\t\t\t{ \"px\": [1952,64], \"src\": [0,64], \"f\": 0, \"d\": [42,626,128] },\n\t\t\t\t\t{ \"px\": [1968,64], \"src\": [0,64], \"f\": 0, \"d\": [42,627,128] },\n\t\t\t\t\t{ \"px\": [1984,64], \"src\": [0,64], \"f\": 0, \"d\": [42,628,128] },\n\t\t\t\t\t{ \"px\": [2000,64], \"src\": [0,64], \"f\": 0, \"d\": [42,629,128] },\n\t\t\t\t\t{ \"px\": [0,80], \"src\": [0,64], \"f\": 0, \"d\": [42,630,128] },\n\t\t\t\t\t{ \"px\": [16,80], \"src\": [0,64], \"f\": 0, \"d\": [42,631,128] },\n\t\t\t\t\t{ \"px\": [32,80], \"src\": [0,64], \"f\": 0, \"d\": [42,632,128] },\n\t\t\t\t\t{ \"px\": [48,80], \"src\": [0,64], \"f\": 0, \"d\": [42,633,128] },\n\t\t\t\t\t{ \"px\": [64,80], \"src\": [0,64], \"f\": 0, \"d\": [42,634,128] },\n\t\t\t\t\t{ \"px\": [80,80], \"src\": [0,64], \"f\": 0, \"d\": [42,635,128] },\n\t\t\t\t\t{ \"px\": [96,80], \"src\": [0,64], \"f\": 0, \"d\": [42,636,128] },\n\t\t\t\t\t{ \"px\": [112,80], \"src\": [0,64], \"f\": 0, \"d\": [42,637,128] },\n\t\t\t\t\t{ \"px\": [128,80], \"src\": [0,64], \"f\": 0, \"d\": [42,638,128] },\n\t\t\t\t\t{ \"px\": [144,80], \"src\": [0,64], \"f\": 0, \"d\": [42,639,128] },\n\t\t\t\t\t{ \"px\": [160,80], \"src\": [0,64], \"f\": 0, \"d\": [42,640,128] },\n\t\t\t\t\t{ \"px\": [176,80], \"src\": [0,64], \"f\": 0, \"d\": [42,641,128] },\n\t\t\t\t\t{ \"px\": [192,80], \"src\": [0,64], \"f\": 0, \"d\": [42,642,128] },\n\t\t\t\t\t{ \"px\": [208,80], \"src\": [0,64], \"f\": 0, \"d\": [42,643,128] },\n\t\t\t\t\t{ \"px\": [224,80], \"src\": [0,64], \"f\": 0, \"d\": [42,644,128] },\n\t\t\t\t\t{ \"px\": [240,80], \"src\": [0,64], \"f\": 0, \"d\": [42,645,128] },\n\t\t\t\t\t{ \"px\": [256,80], \"src\": [0,64], \"f\": 0, \"d\": [42,646,128] },\n\t\t\t\t\t{ \"px\": [272,80], \"src\": [0,64], \"f\": 0, \"d\": [42,647,128] },\n\t\t\t\t\t{ \"px\": [288,80], \"src\": [0,64], \"f\": 0, \"d\": [42,648,128] },\n\t\t\t\t\t{ \"px\": [304,80], \"src\": [0,64], \"f\": 0, \"d\": [42,649,128] },\n\t\t\t\t\t{ \"px\": [320,80], \"src\": [0,64], \"f\": 0, \"d\": [42,650,128] },\n\t\t\t\t\t{ \"px\": [336,80], \"src\": [0,64], \"f\": 0, \"d\": [42,651,128] },\n\t\t\t\t\t{ \"px\": [352,80], \"src\": [0,64], \"f\": 0, \"d\": [42,652,128] },\n\t\t\t\t\t{ \"px\": [368,80], \"src\": [0,64], \"f\": 0, \"d\": [42,653,128] },\n\t\t\t\t\t{ \"px\": [384,80], \"src\": [0,64], \"f\": 0, \"d\": [42,654,128] },\n\t\t\t\t\t{ \"px\": [400,80], \"src\": [0,64], \"f\": 0, \"d\": [42,655,128] },\n\t\t\t\t\t{ \"px\": [416,80], \"src\": [0,64], \"f\": 0, \"d\": [42,656,128] },\n\t\t\t\t\t{ \"px\": [432,80], \"src\": [0,64], \"f\": 0, \"d\": [42,657,128] },\n\t\t\t\t\t{ \"px\": [448,80], \"src\": [0,64], \"f\": 0, \"d\": [42,658,128] },\n\t\t\t\t\t{ \"px\": [464,80], \"src\": [0,64], \"f\": 0, \"d\": [42,659,128] },\n\t\t\t\t\t{ \"px\": [480,80], \"src\": [0,64], \"f\": 0, \"d\": [42,660,128] },\n\t\t\t\t\t{ \"px\": [496,80], \"src\": [0,64], \"f\": 0, \"d\": [42,661,128] },\n\t\t\t\t\t{ \"px\": [512,80], \"src\": [0,64], \"f\": 0, \"d\": [42,662,128] },\n\t\t\t\t\t{ \"px\": [528,80], \"src\": [0,64], \"f\": 0, \"d\": [42,663,128] },\n\t\t\t\t\t{ \"px\": [544,80], \"src\": [0,64], \"f\": 0, \"d\": [42,664,128] },\n\t\t\t\t\t{ \"px\": [560,80], \"src\": [0,64], \"f\": 0, \"d\": [42,665,128] },\n\t\t\t\t\t{ \"px\": [576,80], \"src\": [0,64], \"f\": 0, \"d\": [42,666,128] },\n\t\t\t\t\t{ \"px\": [592,80], \"src\": [0,64], \"f\": 0, \"d\": [42,667,128] },\n\t\t\t\t\t{ \"px\": [608,80], \"src\": [0,64], \"f\": 0, \"d\": [42,668,128] },\n\t\t\t\t\t{ \"px\": [624,80], \"src\": [0,64], \"f\": 0, \"d\": [42,669,128] },\n\t\t\t\t\t{ \"px\": [640,80], \"src\": [0,64], \"f\": 0, \"d\": [42,670,128] },\n\t\t\t\t\t{ \"px\": [656,80], \"src\": [0,64], \"f\": 0, \"d\": [42,671,128] },\n\t\t\t\t\t{ \"px\": [672,80], \"src\": [0,64], \"f\": 0, \"d\": [42,672,128] },\n\t\t\t\t\t{ \"px\": [688,80], \"src\": [0,64], \"f\": 0, \"d\": [42,673,128] },\n\t\t\t\t\t{ \"px\": [704,80], \"src\": [0,64], \"f\": 0, \"d\": [42,674,128] },\n\t\t\t\t\t{ \"px\": [720,80], \"src\": [0,64], \"f\": 0, \"d\": [42,675,128] },\n\t\t\t\t\t{ \"px\": [736,80], \"src\": [0,64], \"f\": 0, \"d\": [42,676,128] },\n\t\t\t\t\t{ \"px\": [1552,80], \"src\": [0,64], \"f\": 0, \"d\": [42,727,128] },\n\t\t\t\t\t{ \"px\": [1568,80], \"src\": [0,64], \"f\": 0, \"d\": [42,728,128] },\n\t\t\t\t\t{ \"px\": [1584,80], \"src\": [0,64], \"f\": 0, \"d\": [42,729,128] },\n\t\t\t\t\t{ \"px\": [1600,80], \"src\": [0,64], \"f\": 0, \"d\": [42,730,128] },\n\t\t\t\t\t{ \"px\": [1616,80], \"src\": [0,64], \"f\": 0, \"d\": [42,731,128] },\n\t\t\t\t\t{ \"px\": [1632,80], \"src\": [0,64], \"f\": 0, \"d\": [42,732,128] },\n\t\t\t\t\t{ \"px\": [1648,80], \"src\": [0,64], \"f\": 0, \"d\": [42,733,128] },\n\t\t\t\t\t{ \"px\": [1664,80], \"src\": [0,64], \"f\": 0, \"d\": [42,734,128] },\n\t\t\t\t\t{ \"px\": [1680,80], \"src\": [0,64], \"f\": 0, \"d\": [42,735,128] },\n\t\t\t\t\t{ \"px\": [1696,80], \"src\": [0,64], \"f\": 0, \"d\": [42,736,128] },\n\t\t\t\t\t{ \"px\": [1712,80], \"src\": [0,64], \"f\": 0, \"d\": [42,737,128] },\n\t\t\t\t\t{ \"px\": [1728,80], \"src\": [0,64], \"f\": 0, \"d\": [42,738,128] },\n\t\t\t\t\t{ \"px\": [1744,80], \"src\": [0,64], \"f\": 0, \"d\": [42,739,128] },\n\t\t\t\t\t{ \"px\": [1760,80], \"src\": [0,64], \"f\": 0, \"d\": [42,740,128] },\n\t\t\t\t\t{ \"px\": [1776,80], \"src\": [0,64], \"f\": 0, \"d\": [42,741,128] },\n\t\t\t\t\t{ \"px\": [1792,80], \"src\": [0,64], \"f\": 0, \"d\": [42,742,128] },\n\t\t\t\t\t{ \"px\": [1808,80], \"src\": [0,64], \"f\": 0, \"d\": [42,743,128] },\n\t\t\t\t\t{ \"px\": [1824,80], \"src\": [0,64], \"f\": 0, \"d\": [42,744,128] },\n\t\t\t\t\t{ \"px\": [1840,80], \"src\": [0,64], \"f\": 0, \"d\": [42,745,128] },\n\t\t\t\t\t{ \"px\": [1856,80], \"src\": [0,64], \"f\": 0, \"d\": [42,746,128] },\n\t\t\t\t\t{ \"px\": [1872,80], \"src\": [0,64], \"f\": 0, \"d\": [42,747,128] },\n\t\t\t\t\t{ \"px\": [1888,80], \"src\": [0,64], \"f\": 0, \"d\": [42,748,128] },\n\t\t\t\t\t{ \"px\": [1904,80], \"src\": [0,64], \"f\": 0, \"d\": [42,749,128] },\n\t\t\t\t\t{ \"px\": [1920,80], \"src\": [0,64], \"f\": 0, \"d\": [42,750,128] },\n\t\t\t\t\t{ \"px\": [1936,80], \"src\": [0,64], \"f\": 0, \"d\": [42,751,128] },\n\t\t\t\t\t{ \"px\": [1952,80], \"src\": [0,64], \"f\": 0, \"d\": [42,752,128] },\n\t\t\t\t\t{ \"px\": [1968,80], \"src\": [0,64], \"f\": 0, \"d\": [42,753,128] },\n\t\t\t\t\t{ \"px\": [1984,80], \"src\": [0,64], \"f\": 0, \"d\": [42,754,128] },\n\t\t\t\t\t{ \"px\": [2000,80], \"src\": [0,64], \"f\": 0, \"d\": [42,755,128] },\n\t\t\t\t\t{ \"px\": [0,96], \"src\": [0,64], \"f\": 0, \"d\": [42,756,128] },\n\t\t\t\t\t{ \"px\": [16,96], \"src\": [0,64], \"f\": 0, \"d\": [42,757,128] },\n\t\t\t\t\t{ \"px\": [32,96], \"src\": [0,64], \"f\": 0, \"d\": [42,758,128] },\n\t\t\t\t\t{ \"px\": [48,96], \"src\": [0,64], \"f\": 0, \"d\": [42,759,128] },\n\t\t\t\t\t{ \"px\": [64,96], \"src\": [0,64], \"f\": 0, \"d\": [42,760,128] },\n\t\t\t\t\t{ \"px\": [736,96], \"src\": [0,64], \"f\": 0, \"d\": [42,802,128] },\n\t\t\t\t\t{ \"px\": [1552,96], \"src\": [0,64], \"f\": 0, \"d\": [42,853,128] },\n\t\t\t\t\t{ \"px\": [1568,96], \"src\": [0,64], \"f\": 0, \"d\": [42,854,128] },\n\t\t\t\t\t{ \"px\": [1584,96], \"src\": [0,64], \"f\": 0, \"d\": [42,855,128] },\n\t\t\t\t\t{ \"px\": [1600,96], \"src\": [0,64], \"f\": 0, \"d\": [42,856,128] },\n\t\t\t\t\t{ \"px\": [1616,96], \"src\": [0,64], \"f\": 0, \"d\": [42,857,128] },\n\t\t\t\t\t{ \"px\": [1632,96], \"src\": [0,64], \"f\": 0, \"d\": [42,858,128] },\n\t\t\t\t\t{ \"px\": [1648,96], \"src\": [0,64], \"f\": 0, \"d\": [42,859,128] },\n\t\t\t\t\t{ \"px\": [1664,96], \"src\": [0,64], \"f\": 0, \"d\": [42,860,128] },\n\t\t\t\t\t{ \"px\": [1680,96], \"src\": [0,64], \"f\": 0, \"d\": [42,861,128] },\n\t\t\t\t\t{ \"px\": [1696,96], \"src\": [0,64], \"f\": 0, \"d\": [42,862,128] },\n\t\t\t\t\t{ \"px\": [1712,96], \"src\": [0,64], \"f\": 0, \"d\": [42,863,128] },\n\t\t\t\t\t{ \"px\": [1728,96], \"src\": [0,64], \"f\": 0, \"d\": [42,864,128] },\n\t\t\t\t\t{ \"px\": [1744,96], \"src\": [0,64], \"f\": 0, \"d\": [42,865,128] },\n\t\t\t\t\t{ \"px\": [1760,96], \"src\": [0,64], \"f\": 0, \"d\": [42,866,128] },\n\t\t\t\t\t{ \"px\": [1776,96], \"src\": [0,64], \"f\": 0, \"d\": [42,867,128] },\n\t\t\t\t\t{ \"px\": [1792,96], \"src\": [0,64], \"f\": 0, \"d\": [42,868,128] },\n\t\t\t\t\t{ \"px\": [1808,96], \"src\": [0,64], \"f\": 0, \"d\": [42,869,128] },\n\t\t\t\t\t{ \"px\": [1824,96], \"src\": [0,64], \"f\": 0, \"d\": [42,870,128] },\n\t\t\t\t\t{ \"px\": [1840,96], \"src\": [0,64], \"f\": 0, \"d\": [42,871,128] },\n\t\t\t\t\t{ \"px\": [1856,96], \"src\": [0,64], \"f\": 0, \"d\": [42,872,128] },\n\t\t\t\t\t{ \"px\": [1872,96], \"src\": [0,64], \"f\": 0, \"d\": [42,873,128] },\n\t\t\t\t\t{ \"px\": [1888,96], \"src\": [0,64], \"f\": 0, \"d\": [42,874,128] },\n\t\t\t\t\t{ \"px\": [1904,96], \"src\": [0,64], \"f\": 0, \"d\": [42,875,128] },\n\t\t\t\t\t{ \"px\": [1920,96], \"src\": [0,64], \"f\": 0, \"d\": [42,876,128] },\n\t\t\t\t\t{ \"px\": [1936,96], \"src\": [0,64], \"f\": 0, \"d\": [42,877,128] },\n\t\t\t\t\t{ \"px\": [1952,96], \"src\": [0,64], \"f\": 0, \"d\": [42,878,128] },\n\t\t\t\t\t{ \"px\": [1968,96], \"src\": [0,64], \"f\": 0, \"d\": [42,879,128] },\n\t\t\t\t\t{ \"px\": [1984,96], \"src\": [0,64], \"f\": 0, \"d\": [42,880,128] },\n\t\t\t\t\t{ \"px\": [2000,96], \"src\": [0,64], \"f\": 0, \"d\": [42,881,128] },\n\t\t\t\t\t{ \"px\": [0,112], \"src\": [0,64], \"f\": 0, \"d\": [42,882,128] },\n\t\t\t\t\t{ \"px\": [16,112], \"src\": [0,64], \"f\": 0, \"d\": [42,883,128] },\n\t\t\t\t\t{ \"px\": [32,112], \"src\": [0,64], \"f\": 0, \"d\": [42,884,128] },\n\t\t\t\t\t{ \"px\": [48,112], \"src\": [0,64], \"f\": 0, \"d\": [42,885,128] },\n\t\t\t\t\t{ \"px\": [64,112], \"src\": [0,64], \"f\": 0, \"d\": [42,886,128] },\n\t\t\t\t\t{ \"px\": [1872,112], \"src\": [0,64], \"f\": 0, \"d\": [42,999,128] },\n\t\t\t\t\t{ \"px\": [1888,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1000,128] },\n\t\t\t\t\t{ \"px\": [1904,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1001,128] },\n\t\t\t\t\t{ \"px\": [1920,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1002,128] },\n\t\t\t\t\t{ \"px\": [1936,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1003,128] },\n\t\t\t\t\t{ \"px\": [1952,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1004,128] },\n\t\t\t\t\t{ \"px\": [1968,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1005,128] },\n\t\t\t\t\t{ \"px\": [1984,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1006,128] },\n\t\t\t\t\t{ \"px\": [2000,112], \"src\": [0,64], \"f\": 0, \"d\": [42,1007,128] },\n\t\t\t\t\t{ \"px\": [0,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1008,128] },\n\t\t\t\t\t{ \"px\": [16,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1009,128] },\n\t\t\t\t\t{ \"px\": [32,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1010,128] },\n\t\t\t\t\t{ \"px\": [48,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1011,128] },\n\t\t\t\t\t{ \"px\": [64,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1012,128] },\n\t\t\t\t\t{ \"px\": [1872,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1125,128] },\n\t\t\t\t\t{ \"px\": [1888,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1126,128] },\n\t\t\t\t\t{ \"px\": [1904,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1127,128] },\n\t\t\t\t\t{ \"px\": [1920,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1128,128] },\n\t\t\t\t\t{ \"px\": [1936,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1129,128] },\n\t\t\t\t\t{ \"px\": [1952,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1130,128] },\n\t\t\t\t\t{ \"px\": [1968,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1131,128] },\n\t\t\t\t\t{ \"px\": [1984,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1132,128] },\n\t\t\t\t\t{ \"px\": [2000,128], \"src\": [0,64], \"f\": 0, \"d\": [42,1133,128] },\n\t\t\t\t\t{ \"px\": [0,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1134,128] },\n\t\t\t\t\t{ \"px\": [16,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1135,128] },\n\t\t\t\t\t{ \"px\": [32,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1136,128] },\n\t\t\t\t\t{ \"px\": [48,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1137,128] },\n\t\t\t\t\t{ \"px\": [64,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1138,128] },\n\t\t\t\t\t{ \"px\": [1872,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1251,128] },\n\t\t\t\t\t{ \"px\": [1888,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1252,128] },\n\t\t\t\t\t{ \"px\": [1904,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1253,128] },\n\t\t\t\t\t{ \"px\": [1920,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1254,128] },\n\t\t\t\t\t{ \"px\": [1936,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1255,128] },\n\t\t\t\t\t{ \"px\": [1952,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1256,128] },\n\t\t\t\t\t{ \"px\": [1968,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1257,128] },\n\t\t\t\t\t{ \"px\": [1984,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1258,128] },\n\t\t\t\t\t{ \"px\": [2000,144], \"src\": [0,64], \"f\": 0, \"d\": [42,1259,128] },\n\t\t\t\t\t{ \"px\": [0,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1260,128] },\n\t\t\t\t\t{ \"px\": [16,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1261,128] },\n\t\t\t\t\t{ \"px\": [32,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1262,128] },\n\t\t\t\t\t{ \"px\": [48,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1263,128] },\n\t\t\t\t\t{ \"px\": [64,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1264,128] },\n\t\t\t\t\t{ \"px\": [80,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1265,128] },\n\t\t\t\t\t{ \"px\": [96,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1266,128] },\n\t\t\t\t\t{ \"px\": [112,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1267,128] },\n\t\t\t\t\t{ \"px\": [128,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1268,128] },\n\t\t\t\t\t{ \"px\": [144,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1269,128] },\n\t\t\t\t\t{ \"px\": [400,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1285,128] },\n\t\t\t\t\t{ \"px\": [416,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1286,128] },\n\t\t\t\t\t{ \"px\": [432,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1287,128] },\n\t\t\t\t\t{ \"px\": [448,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1288,128] },\n\t\t\t\t\t{ \"px\": [464,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1289,128] },\n\t\t\t\t\t{ \"px\": [480,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1290,128] },\n\t\t\t\t\t{ \"px\": [496,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1291,128] },\n\t\t\t\t\t{ \"px\": [512,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1292,128] },\n\t\t\t\t\t{ \"px\": [528,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1293,128] },\n\t\t\t\t\t{ \"px\": [544,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1294,128] },\n\t\t\t\t\t{ \"px\": [560,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1295,128] },\n\t\t\t\t\t{ \"px\": [576,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1296,128] },\n\t\t\t\t\t{ \"px\": [592,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1297,128] },\n\t\t\t\t\t{ \"px\": [608,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1298,128] },\n\t\t\t\t\t{ \"px\": [624,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1299,128] },\n\t\t\t\t\t{ \"px\": [640,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1300,128] },\n\t\t\t\t\t{ \"px\": [656,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1301,128] },\n\t\t\t\t\t{ \"px\": [672,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1302,128] },\n\t\t\t\t\t{ \"px\": [688,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1303,128] },\n\t\t\t\t\t{ \"px\": [704,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1304,128] },\n\t\t\t\t\t{ \"px\": [720,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1305,128] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1306,128] },\n\t\t\t\t\t{ \"px\": [1872,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1377,128] },\n\t\t\t\t\t{ \"px\": [1888,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1378,128] },\n\t\t\t\t\t{ \"px\": [1904,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1379,128] },\n\t\t\t\t\t{ \"px\": [1920,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1380,128] },\n\t\t\t\t\t{ \"px\": [1936,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1381,128] },\n\t\t\t\t\t{ \"px\": [1952,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1382,128] },\n\t\t\t\t\t{ \"px\": [1968,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1383,128] },\n\t\t\t\t\t{ \"px\": [1984,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1384,128] },\n\t\t\t\t\t{ \"px\": [2000,160], \"src\": [0,64], \"f\": 0, \"d\": [42,1385,128] },\n\t\t\t\t\t{ \"px\": [0,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1386,128] },\n\t\t\t\t\t{ \"px\": [16,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1387,128] },\n\t\t\t\t\t{ \"px\": [32,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1388,128] },\n\t\t\t\t\t{ \"px\": [48,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1389,128] },\n\t\t\t\t\t{ \"px\": [64,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1390,128] },\n\t\t\t\t\t{ \"px\": [80,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1391,128] },\n\t\t\t\t\t{ \"px\": [96,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1392,128] },\n\t\t\t\t\t{ \"px\": [112,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1393,128] },\n\t\t\t\t\t{ \"px\": [128,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1394,128] },\n\t\t\t\t\t{ \"px\": [144,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1395,128] },\n\t\t\t\t\t{ \"px\": [400,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1411,128] },\n\t\t\t\t\t{ \"px\": [416,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1412,128] },\n\t\t\t\t\t{ \"px\": [432,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1413,128] },\n\t\t\t\t\t{ \"px\": [448,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1414,128] },\n\t\t\t\t\t{ \"px\": [464,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1415,128] },\n\t\t\t\t\t{ \"px\": [480,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1416,128] },\n\t\t\t\t\t{ \"px\": [496,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1417,128] },\n\t\t\t\t\t{ \"px\": [512,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1418,128] },\n\t\t\t\t\t{ \"px\": [528,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1419,128] },\n\t\t\t\t\t{ \"px\": [544,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1420,128] },\n\t\t\t\t\t{ \"px\": [560,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1421,128] },\n\t\t\t\t\t{ \"px\": [576,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1422,128] },\n\t\t\t\t\t{ \"px\": [592,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1423,128] },\n\t\t\t\t\t{ \"px\": [608,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1424,128] },\n\t\t\t\t\t{ \"px\": [624,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1425,128] },\n\t\t\t\t\t{ \"px\": [640,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1426,128] },\n\t\t\t\t\t{ \"px\": [656,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1427,128] },\n\t\t\t\t\t{ \"px\": [672,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1428,128] },\n\t\t\t\t\t{ \"px\": [688,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1429,128] },\n\t\t\t\t\t{ \"px\": [704,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1430,128] },\n\t\t\t\t\t{ \"px\": [720,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1431,128] },\n\t\t\t\t\t{ \"px\": [736,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1432,128] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1491,128] },\n\t\t\t\t\t{ \"px\": [1696,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1492,128] },\n\t\t\t\t\t{ \"px\": [1712,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1493,128] },\n\t\t\t\t\t{ \"px\": [1728,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1494,128] },\n\t\t\t\t\t{ \"px\": [1744,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1495,128] },\n\t\t\t\t\t{ \"px\": [1760,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1496,128] },\n\t\t\t\t\t{ \"px\": [1776,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1497,128] },\n\t\t\t\t\t{ \"px\": [1792,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1498,128] },\n\t\t\t\t\t{ \"px\": [1872,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1503,128] },\n\t\t\t\t\t{ \"px\": [1888,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1504,128] },\n\t\t\t\t\t{ \"px\": [1904,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1505,128] },\n\t\t\t\t\t{ \"px\": [1920,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1506,128] },\n\t\t\t\t\t{ \"px\": [1936,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1507,128] },\n\t\t\t\t\t{ \"px\": [1952,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1508,128] },\n\t\t\t\t\t{ \"px\": [1968,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1509,128] },\n\t\t\t\t\t{ \"px\": [1984,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1510,128] },\n\t\t\t\t\t{ \"px\": [2000,176], \"src\": [0,64], \"f\": 0, \"d\": [42,1511,128] },\n\t\t\t\t\t{ \"px\": [0,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1512,128] },\n\t\t\t\t\t{ \"px\": [16,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1513,128] },\n\t\t\t\t\t{ \"px\": [32,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1514,128] },\n\t\t\t\t\t{ \"px\": [48,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1515,128] },\n\t\t\t\t\t{ \"px\": [64,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1516,128] },\n\t\t\t\t\t{ \"px\": [128,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1520,128] },\n\t\t\t\t\t{ \"px\": [144,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1521,128] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1542,128] },\n\t\t\t\t\t{ \"px\": [496,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1543,128] },\n\t\t\t\t\t{ \"px\": [512,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1544,128] },\n\t\t\t\t\t{ \"px\": [528,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1545,128] },\n\t\t\t\t\t{ \"px\": [544,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1546,128] },\n\t\t\t\t\t{ \"px\": [560,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1547,128] },\n\t\t\t\t\t{ \"px\": [576,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1548,128] },\n\t\t\t\t\t{ \"px\": [592,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1549,128] },\n\t\t\t\t\t{ \"px\": [608,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1550,128] },\n\t\t\t\t\t{ \"px\": [624,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1551,128] },\n\t\t\t\t\t{ \"px\": [640,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1552,128] },\n\t\t\t\t\t{ \"px\": [656,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1553,128] },\n\t\t\t\t\t{ \"px\": [672,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1554,128] },\n\t\t\t\t\t{ \"px\": [688,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1555,128] },\n\t\t\t\t\t{ \"px\": [704,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1556,128] },\n\t\t\t\t\t{ \"px\": [720,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1557,128] },\n\t\t\t\t\t{ \"px\": [736,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1558,128] },\n\t\t\t\t\t{ \"px\": [752,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1559,128] },\n\t\t\t\t\t{ \"px\": [1680,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1617,128] },\n\t\t\t\t\t{ \"px\": [1696,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1618,128] },\n\t\t\t\t\t{ \"px\": [1712,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1619,128] },\n\t\t\t\t\t{ \"px\": [1728,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1620,128] },\n\t\t\t\t\t{ \"px\": [1744,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1621,128] },\n\t\t\t\t\t{ \"px\": [1760,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1622,128] },\n\t\t\t\t\t{ \"px\": [1776,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1623,128] },\n\t\t\t\t\t{ \"px\": [1792,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1624,128] },\n\t\t\t\t\t{ \"px\": [1872,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1629,128] },\n\t\t\t\t\t{ \"px\": [1888,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1630,128] },\n\t\t\t\t\t{ \"px\": [1904,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1631,128] },\n\t\t\t\t\t{ \"px\": [1920,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1632,128] },\n\t\t\t\t\t{ \"px\": [1936,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1633,128] },\n\t\t\t\t\t{ \"px\": [1952,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1634,128] },\n\t\t\t\t\t{ \"px\": [1968,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1635,128] },\n\t\t\t\t\t{ \"px\": [1984,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1636,128] },\n\t\t\t\t\t{ \"px\": [2000,192], \"src\": [0,64], \"f\": 0, \"d\": [42,1637,128] },\n\t\t\t\t\t{ \"px\": [0,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1638,128] },\n\t\t\t\t\t{ \"px\": [16,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1639,128] },\n\t\t\t\t\t{ \"px\": [32,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1640,128] },\n\t\t\t\t\t{ \"px\": [48,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1641,128] },\n\t\t\t\t\t{ \"px\": [64,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1642,128] },\n\t\t\t\t\t{ \"px\": [128,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1646,128] },\n\t\t\t\t\t{ \"px\": [144,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1647,128] },\n\t\t\t\t\t{ \"px\": [512,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1670,128] },\n\t\t\t\t\t{ \"px\": [528,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1671,128] },\n\t\t\t\t\t{ \"px\": [544,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1672,128] },\n\t\t\t\t\t{ \"px\": [560,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1673,128] },\n\t\t\t\t\t{ \"px\": [576,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1674,128] },\n\t\t\t\t\t{ \"px\": [592,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1675,128] },\n\t\t\t\t\t{ \"px\": [608,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1676,128] },\n\t\t\t\t\t{ \"px\": [624,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1677,128] },\n\t\t\t\t\t{ \"px\": [640,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1678,128] },\n\t\t\t\t\t{ \"px\": [656,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1679,128] },\n\t\t\t\t\t{ \"px\": [672,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1680,128] },\n\t\t\t\t\t{ \"px\": [688,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1681,128] },\n\t\t\t\t\t{ \"px\": [704,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1682,128] },\n\t\t\t\t\t{ \"px\": [720,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1683,128] },\n\t\t\t\t\t{ \"px\": [736,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1684,128] },\n\t\t\t\t\t{ \"px\": [752,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1685,128] },\n\t\t\t\t\t{ \"px\": [1680,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1743,128] },\n\t\t\t\t\t{ \"px\": [1696,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1744,128] },\n\t\t\t\t\t{ \"px\": [1712,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1745,128] },\n\t\t\t\t\t{ \"px\": [1728,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1746,128] },\n\t\t\t\t\t{ \"px\": [1744,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1747,128] },\n\t\t\t\t\t{ \"px\": [1760,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1748,128] },\n\t\t\t\t\t{ \"px\": [1776,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1749,128] },\n\t\t\t\t\t{ \"px\": [1792,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1750,128] },\n\t\t\t\t\t{ \"px\": [1872,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1755,128] },\n\t\t\t\t\t{ \"px\": [1888,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1756,128] },\n\t\t\t\t\t{ \"px\": [1904,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1757,128] },\n\t\t\t\t\t{ \"px\": [1920,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1758,128] },\n\t\t\t\t\t{ \"px\": [1936,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1759,128] },\n\t\t\t\t\t{ \"px\": [1952,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1760,128] },\n\t\t\t\t\t{ \"px\": [1968,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1761,128] },\n\t\t\t\t\t{ \"px\": [1984,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1762,128] },\n\t\t\t\t\t{ \"px\": [2000,208], \"src\": [0,64], \"f\": 0, \"d\": [42,1763,128] },\n\t\t\t\t\t{ \"px\": [0,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1764,128] },\n\t\t\t\t\t{ \"px\": [16,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1765,128] },\n\t\t\t\t\t{ \"px\": [32,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1766,128] },\n\t\t\t\t\t{ \"px\": [48,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1767,128] },\n\t\t\t\t\t{ \"px\": [64,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1768,128] },\n\t\t\t\t\t{ \"px\": [128,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1772,128] },\n\t\t\t\t\t{ \"px\": [144,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1773,128] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1800,128] },\n\t\t\t\t\t{ \"px\": [592,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1801,128] },\n\t\t\t\t\t{ \"px\": [608,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1802,128] },\n\t\t\t\t\t{ \"px\": [624,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1803,128] },\n\t\t\t\t\t{ \"px\": [640,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1804,128] },\n\t\t\t\t\t{ \"px\": [656,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1805,128] },\n\t\t\t\t\t{ \"px\": [672,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1806,128] },\n\t\t\t\t\t{ \"px\": [688,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1807,128] },\n\t\t\t\t\t{ \"px\": [704,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1808,128] },\n\t\t\t\t\t{ \"px\": [720,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1809,128] },\n\t\t\t\t\t{ \"px\": [736,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1810,128] },\n\t\t\t\t\t{ \"px\": [752,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1811,128] },\n\t\t\t\t\t{ \"px\": [768,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1812,128] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1813,128] },\n\t\t\t\t\t{ \"px\": [1680,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1869,128] },\n\t\t\t\t\t{ \"px\": [1696,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1870,128] },\n\t\t\t\t\t{ \"px\": [1712,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1871,128] },\n\t\t\t\t\t{ \"px\": [1728,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1872,128] },\n\t\t\t\t\t{ \"px\": [1744,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1873,128] },\n\t\t\t\t\t{ \"px\": [1760,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1874,128] },\n\t\t\t\t\t{ \"px\": [1776,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1875,128] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1876,128] },\n\t\t\t\t\t{ \"px\": [1872,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1881,128] },\n\t\t\t\t\t{ \"px\": [1888,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1882,128] },\n\t\t\t\t\t{ \"px\": [1904,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1883,128] },\n\t\t\t\t\t{ \"px\": [1920,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1884,128] },\n\t\t\t\t\t{ \"px\": [1936,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1885,128] },\n\t\t\t\t\t{ \"px\": [1952,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1886,128] },\n\t\t\t\t\t{ \"px\": [1968,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1887,128] },\n\t\t\t\t\t{ \"px\": [1984,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1888,128] },\n\t\t\t\t\t{ \"px\": [2000,224], \"src\": [0,64], \"f\": 0, \"d\": [42,1889,128] },\n\t\t\t\t\t{ \"px\": [0,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1890,128] },\n\t\t\t\t\t{ \"px\": [16,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1891,128] },\n\t\t\t\t\t{ \"px\": [32,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1892,128] },\n\t\t\t\t\t{ \"px\": [48,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1893,128] },\n\t\t\t\t\t{ \"px\": [64,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1894,128] },\n\t\t\t\t\t{ \"px\": [608,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1928,128] },\n\t\t\t\t\t{ \"px\": [624,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1929,128] },\n\t\t\t\t\t{ \"px\": [640,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1930,128] },\n\t\t\t\t\t{ \"px\": [656,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1931,128] },\n\t\t\t\t\t{ \"px\": [672,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1932,128] },\n\t\t\t\t\t{ \"px\": [688,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1933,128] },\n\t\t\t\t\t{ \"px\": [704,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1934,128] },\n\t\t\t\t\t{ \"px\": [720,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1935,128] },\n\t\t\t\t\t{ \"px\": [736,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1936,128] },\n\t\t\t\t\t{ \"px\": [752,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1937,128] },\n\t\t\t\t\t{ \"px\": [768,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1938,128] },\n\t\t\t\t\t{ \"px\": [784,240], \"src\": [0,64], \"f\": 0, \"d\": [42,1939,128] },\n\t\t\t\t\t{ \"px\": [1872,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2007,128] },\n\t\t\t\t\t{ \"px\": [1888,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2008,128] },\n\t\t\t\t\t{ \"px\": [1904,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2009,128] },\n\t\t\t\t\t{ \"px\": [1920,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2010,128] },\n\t\t\t\t\t{ \"px\": [1936,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2011,128] },\n\t\t\t\t\t{ \"px\": [1952,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2012,128] },\n\t\t\t\t\t{ \"px\": [1968,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2013,128] },\n\t\t\t\t\t{ \"px\": [1984,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2014,128] },\n\t\t\t\t\t{ \"px\": [2000,240], \"src\": [0,64], \"f\": 0, \"d\": [42,2015,128] },\n\t\t\t\t\t{ \"px\": [0,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2016,128] },\n\t\t\t\t\t{ \"px\": [16,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2017,128] },\n\t\t\t\t\t{ \"px\": [32,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2018,128] },\n\t\t\t\t\t{ \"px\": [48,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2019,128] },\n\t\t\t\t\t{ \"px\": [64,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2020,128] },\n\t\t\t\t\t{ \"px\": [608,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2054,128] },\n\t\t\t\t\t{ \"px\": [624,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2055,128] },\n\t\t\t\t\t{ \"px\": [640,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2056,128] },\n\t\t\t\t\t{ \"px\": [656,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2057,128] },\n\t\t\t\t\t{ \"px\": [672,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2058,128] },\n\t\t\t\t\t{ \"px\": [688,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2059,128] },\n\t\t\t\t\t{ \"px\": [704,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2060,128] },\n\t\t\t\t\t{ \"px\": [720,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2061,128] },\n\t\t\t\t\t{ \"px\": [736,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2062,128] },\n\t\t\t\t\t{ \"px\": [752,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2063,128] },\n\t\t\t\t\t{ \"px\": [768,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2064,128] },\n\t\t\t\t\t{ \"px\": [784,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2065,128] },\n\t\t\t\t\t{ \"px\": [1872,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2133,128] },\n\t\t\t\t\t{ \"px\": [1888,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2134,128] },\n\t\t\t\t\t{ \"px\": [1904,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2135,128] },\n\t\t\t\t\t{ \"px\": [1920,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2136,128] },\n\t\t\t\t\t{ \"px\": [1936,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2137,128] },\n\t\t\t\t\t{ \"px\": [1952,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2138,128] },\n\t\t\t\t\t{ \"px\": [1968,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2139,128] },\n\t\t\t\t\t{ \"px\": [1984,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2140,128] },\n\t\t\t\t\t{ \"px\": [2000,256], \"src\": [0,64], \"f\": 0, \"d\": [42,2141,128] },\n\t\t\t\t\t{ \"px\": [0,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2142,128] },\n\t\t\t\t\t{ \"px\": [16,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2143,128] },\n\t\t\t\t\t{ \"px\": [32,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2144,128] },\n\t\t\t\t\t{ \"px\": [48,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2145,128] },\n\t\t\t\t\t{ \"px\": [64,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2146,128] },\n\t\t\t\t\t{ \"px\": [672,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2184,128] },\n\t\t\t\t\t{ \"px\": [688,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2185,128] },\n\t\t\t\t\t{ \"px\": [704,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2186,128] },\n\t\t\t\t\t{ \"px\": [720,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2187,128] },\n\t\t\t\t\t{ \"px\": [736,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2188,128] },\n\t\t\t\t\t{ \"px\": [752,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2189,128] },\n\t\t\t\t\t{ \"px\": [768,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2190,128] },\n\t\t\t\t\t{ \"px\": [784,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2191,128] },\n\t\t\t\t\t{ \"px\": [1872,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2259,128] },\n\t\t\t\t\t{ \"px\": [1888,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2260,128] },\n\t\t\t\t\t{ \"px\": [1904,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2261,128] },\n\t\t\t\t\t{ \"px\": [1920,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2262,128] },\n\t\t\t\t\t{ \"px\": [1936,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2263,128] },\n\t\t\t\t\t{ \"px\": [1952,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2264,128] },\n\t\t\t\t\t{ \"px\": [1968,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2265,128] },\n\t\t\t\t\t{ \"px\": [1984,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2266,128] },\n\t\t\t\t\t{ \"px\": [2000,272], \"src\": [0,64], \"f\": 0, \"d\": [42,2267,128] },\n\t\t\t\t\t{ \"px\": [0,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2268,128] },\n\t\t\t\t\t{ \"px\": [16,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2269,128] },\n\t\t\t\t\t{ \"px\": [32,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2270,128] },\n\t\t\t\t\t{ \"px\": [48,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2271,128] },\n\t\t\t\t\t{ \"px\": [64,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2272,128] },\n\t\t\t\t\t{ \"px\": [80,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2273,128] },\n\t\t\t\t\t{ \"px\": [96,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2274,128] },\n\t\t\t\t\t{ \"px\": [112,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2275,128] },\n\t\t\t\t\t{ \"px\": [128,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2276,128] },\n\t\t\t\t\t{ \"px\": [144,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2277,128] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2293,128] },\n\t\t\t\t\t{ \"px\": [416,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2294,128] },\n\t\t\t\t\t{ \"px\": [432,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2295,128] },\n\t\t\t\t\t{ \"px\": [448,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2296,128] },\n\t\t\t\t\t{ \"px\": [464,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2297,128] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2298,128] },\n\t\t\t\t\t{ \"px\": [672,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2310,128] },\n\t\t\t\t\t{ \"px\": [688,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2311,128] },\n\t\t\t\t\t{ \"px\": [704,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2312,128] },\n\t\t\t\t\t{ \"px\": [720,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2313,128] },\n\t\t\t\t\t{ \"px\": [736,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2314,128] },\n\t\t\t\t\t{ \"px\": [752,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2315,128] },\n\t\t\t\t\t{ \"px\": [768,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2316,128] },\n\t\t\t\t\t{ \"px\": [1872,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2385,128] },\n\t\t\t\t\t{ \"px\": [1888,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2386,128] },\n\t\t\t\t\t{ \"px\": [1904,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2387,128] },\n\t\t\t\t\t{ \"px\": [1920,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2388,128] },\n\t\t\t\t\t{ \"px\": [1936,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2389,128] },\n\t\t\t\t\t{ \"px\": [1952,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2390,128] },\n\t\t\t\t\t{ \"px\": [1968,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2391,128] },\n\t\t\t\t\t{ \"px\": [1984,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2392,128] },\n\t\t\t\t\t{ \"px\": [2000,288], \"src\": [0,64], \"f\": 0, \"d\": [42,2393,128] },\n\t\t\t\t\t{ \"px\": [0,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2394,128] },\n\t\t\t\t\t{ \"px\": [16,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2395,128] },\n\t\t\t\t\t{ \"px\": [32,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2396,128] },\n\t\t\t\t\t{ \"px\": [48,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2397,128] },\n\t\t\t\t\t{ \"px\": [64,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2398,128] },\n\t\t\t\t\t{ \"px\": [80,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2399,128] },\n\t\t\t\t\t{ \"px\": [96,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2400,128] },\n\t\t\t\t\t{ \"px\": [112,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2401,128] },\n\t\t\t\t\t{ \"px\": [128,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2402,128] },\n\t\t\t\t\t{ \"px\": [144,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2403,128] },\n\t\t\t\t\t{ \"px\": [400,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2419,128] },\n\t\t\t\t\t{ \"px\": [416,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2420,128] },\n\t\t\t\t\t{ \"px\": [432,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2421,128] },\n\t\t\t\t\t{ \"px\": [448,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2422,128] },\n\t\t\t\t\t{ \"px\": [464,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2423,128] },\n\t\t\t\t\t{ \"px\": [480,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2424,128] },\n\t\t\t\t\t{ \"px\": [496,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2425,128] },\n\t\t\t\t\t{ \"px\": [512,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2426,128] },\n\t\t\t\t\t{ \"px\": [528,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2427,128] },\n\t\t\t\t\t{ \"px\": [544,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2428,128] },\n\t\t\t\t\t{ \"px\": [560,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2429,128] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2430,128] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2493,128] },\n\t\t\t\t\t{ \"px\": [1600,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2494,128] },\n\t\t\t\t\t{ \"px\": [1616,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2495,128] },\n\t\t\t\t\t{ \"px\": [1632,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2496,128] },\n\t\t\t\t\t{ \"px\": [1648,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2497,128] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2498,128] },\n\t\t\t\t\t{ \"px\": [1872,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2511,128] },\n\t\t\t\t\t{ \"px\": [1888,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2512,128] },\n\t\t\t\t\t{ \"px\": [1904,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2513,128] },\n\t\t\t\t\t{ \"px\": [1920,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2514,128] },\n\t\t\t\t\t{ \"px\": [1936,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2515,128] },\n\t\t\t\t\t{ \"px\": [1952,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2516,128] },\n\t\t\t\t\t{ \"px\": [1968,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2517,128] },\n\t\t\t\t\t{ \"px\": [1984,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2518,128] },\n\t\t\t\t\t{ \"px\": [2000,304], \"src\": [0,64], \"f\": 0, \"d\": [42,2519,128] },\n\t\t\t\t\t{ \"px\": [0,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2520,128] },\n\t\t\t\t\t{ \"px\": [16,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2521,128] },\n\t\t\t\t\t{ \"px\": [32,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2522,128] },\n\t\t\t\t\t{ \"px\": [48,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2523,128] },\n\t\t\t\t\t{ \"px\": [64,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2524,128] },\n\t\t\t\t\t{ \"px\": [80,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2525,128] },\n\t\t\t\t\t{ \"px\": [96,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2526,128] },\n\t\t\t\t\t{ \"px\": [112,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2527,128] },\n\t\t\t\t\t{ \"px\": [128,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2528,128] },\n\t\t\t\t\t{ \"px\": [144,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2529,128] },\n\t\t\t\t\t{ \"px\": [160,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2530,128] },\n\t\t\t\t\t{ \"px\": [176,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2531,128] },\n\t\t\t\t\t{ \"px\": [192,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2532,128] },\n\t\t\t\t\t{ \"px\": [208,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2533,128] },\n\t\t\t\t\t{ \"px\": [224,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2534,128] },\n\t\t\t\t\t{ \"px\": [240,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2535,128] },\n\t\t\t\t\t{ \"px\": [256,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2536,128] },\n\t\t\t\t\t{ \"px\": [272,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2537,128] },\n\t\t\t\t\t{ \"px\": [288,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2538,128] },\n\t\t\t\t\t{ \"px\": [304,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2539,128] },\n\t\t\t\t\t{ \"px\": [320,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2540,128] },\n\t\t\t\t\t{ \"px\": [336,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2541,128] },\n\t\t\t\t\t{ \"px\": [352,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2542,128] },\n\t\t\t\t\t{ \"px\": [368,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2543,128] },\n\t\t\t\t\t{ \"px\": [384,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2544,128] },\n\t\t\t\t\t{ \"px\": [400,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2545,128] },\n\t\t\t\t\t{ \"px\": [416,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2546,128] },\n\t\t\t\t\t{ \"px\": [432,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2547,128] },\n\t\t\t\t\t{ \"px\": [448,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2548,128] },\n\t\t\t\t\t{ \"px\": [464,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2549,128] },\n\t\t\t\t\t{ \"px\": [480,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2550,128] },\n\t\t\t\t\t{ \"px\": [496,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2551,128] },\n\t\t\t\t\t{ \"px\": [512,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2552,128] },\n\t\t\t\t\t{ \"px\": [528,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2553,128] },\n\t\t\t\t\t{ \"px\": [544,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2554,128] },\n\t\t\t\t\t{ \"px\": [560,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2555,128] },\n\t\t\t\t\t{ \"px\": [576,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2556,128] },\n\t\t\t\t\t{ \"px\": [1584,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2619,128] },\n\t\t\t\t\t{ \"px\": [1600,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2620,128] },\n\t\t\t\t\t{ \"px\": [1616,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2621,128] },\n\t\t\t\t\t{ \"px\": [1632,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2622,128] },\n\t\t\t\t\t{ \"px\": [1648,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2623,128] },\n\t\t\t\t\t{ \"px\": [1664,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2624,128] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2634,128] },\n\t\t\t\t\t{ \"px\": [1840,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2635,128] },\n\t\t\t\t\t{ \"px\": [1856,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2636,128] },\n\t\t\t\t\t{ \"px\": [1872,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2637,128] },\n\t\t\t\t\t{ \"px\": [1888,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2638,128] },\n\t\t\t\t\t{ \"px\": [1904,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2639,128] },\n\t\t\t\t\t{ \"px\": [1920,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2640,128] },\n\t\t\t\t\t{ \"px\": [1936,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2641,128] },\n\t\t\t\t\t{ \"px\": [1952,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2642,128] },\n\t\t\t\t\t{ \"px\": [1968,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2643,128] },\n\t\t\t\t\t{ \"px\": [1984,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2644,128] },\n\t\t\t\t\t{ \"px\": [2000,320], \"src\": [0,64], \"f\": 0, \"d\": [42,2645,128] },\n\t\t\t\t\t{ \"px\": [0,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2646,128] },\n\t\t\t\t\t{ \"px\": [16,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2647,128] },\n\t\t\t\t\t{ \"px\": [32,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2648,128] },\n\t\t\t\t\t{ \"px\": [48,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2649,128] },\n\t\t\t\t\t{ \"px\": [64,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2650,128] },\n\t\t\t\t\t{ \"px\": [80,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2651,128] },\n\t\t\t\t\t{ \"px\": [96,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2652,128] },\n\t\t\t\t\t{ \"px\": [112,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2653,128] },\n\t\t\t\t\t{ \"px\": [128,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2654,128] },\n\t\t\t\t\t{ \"px\": [144,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2655,128] },\n\t\t\t\t\t{ \"px\": [160,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2656,128] },\n\t\t\t\t\t{ \"px\": [176,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2657,128] },\n\t\t\t\t\t{ \"px\": [192,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2658,128] },\n\t\t\t\t\t{ \"px\": [208,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2659,128] },\n\t\t\t\t\t{ \"px\": [224,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2660,128] },\n\t\t\t\t\t{ \"px\": [240,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2661,128] },\n\t\t\t\t\t{ \"px\": [256,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2662,128] },\n\t\t\t\t\t{ \"px\": [272,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2663,128] },\n\t\t\t\t\t{ \"px\": [288,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2664,128] },\n\t\t\t\t\t{ \"px\": [304,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2665,128] },\n\t\t\t\t\t{ \"px\": [320,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2666,128] },\n\t\t\t\t\t{ \"px\": [336,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2667,128] },\n\t\t\t\t\t{ \"px\": [352,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2668,128] },\n\t\t\t\t\t{ \"px\": [368,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2669,128] },\n\t\t\t\t\t{ \"px\": [384,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2670,128] },\n\t\t\t\t\t{ \"px\": [400,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2671,128] },\n\t\t\t\t\t{ \"px\": [416,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2672,128] },\n\t\t\t\t\t{ \"px\": [432,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2673,128] },\n\t\t\t\t\t{ \"px\": [448,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2674,128] },\n\t\t\t\t\t{ \"px\": [464,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2675,128] },\n\t\t\t\t\t{ \"px\": [480,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2676,128] },\n\t\t\t\t\t{ \"px\": [496,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2677,128] },\n\t\t\t\t\t{ \"px\": [512,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2678,128] },\n\t\t\t\t\t{ \"px\": [528,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2679,128] },\n\t\t\t\t\t{ \"px\": [544,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2680,128] },\n\t\t\t\t\t{ \"px\": [560,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2681,128] },\n\t\t\t\t\t{ \"px\": [576,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2682,128] },\n\t\t\t\t\t{ \"px\": [592,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2683,128] },\n\t\t\t\t\t{ \"px\": [608,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2684,128] },\n\t\t\t\t\t{ \"px\": [624,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2685,128] },\n\t\t\t\t\t{ \"px\": [640,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2686,128] },\n\t\t\t\t\t{ \"px\": [1584,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2745,128] },\n\t\t\t\t\t{ \"px\": [1600,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2746,128] },\n\t\t\t\t\t{ \"px\": [1616,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2747,128] },\n\t\t\t\t\t{ \"px\": [1632,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2748,128] },\n\t\t\t\t\t{ \"px\": [1648,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2749,128] },\n\t\t\t\t\t{ \"px\": [1664,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2750,128] },\n\t\t\t\t\t{ \"px\": [1680,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2751,128] },\n\t\t\t\t\t{ \"px\": [1696,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2752,128] },\n\t\t\t\t\t{ \"px\": [1712,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2753,128] },\n\t\t\t\t\t{ \"px\": [1728,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2754,128] },\n\t\t\t\t\t{ \"px\": [1744,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2755,128] },\n\t\t\t\t\t{ \"px\": [1760,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2756,128] },\n\t\t\t\t\t{ \"px\": [1776,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2757,128] },\n\t\t\t\t\t{ \"px\": [1792,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2758,128] },\n\t\t\t\t\t{ \"px\": [1808,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2759,128] },\n\t\t\t\t\t{ \"px\": [1824,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2760,128] },\n\t\t\t\t\t{ \"px\": [1840,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2761,128] },\n\t\t\t\t\t{ \"px\": [1856,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2762,128] },\n\t\t\t\t\t{ \"px\": [1872,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2763,128] },\n\t\t\t\t\t{ \"px\": [1888,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2764,128] },\n\t\t\t\t\t{ \"px\": [1904,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2765,128] },\n\t\t\t\t\t{ \"px\": [1920,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2766,128] },\n\t\t\t\t\t{ \"px\": [1936,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2767,128] },\n\t\t\t\t\t{ \"px\": [1952,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2768,128] },\n\t\t\t\t\t{ \"px\": [1968,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2769,128] },\n\t\t\t\t\t{ \"px\": [1984,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2770,128] },\n\t\t\t\t\t{ \"px\": [2000,336], \"src\": [0,64], \"f\": 0, \"d\": [42,2771,128] },\n\t\t\t\t\t{ \"px\": [0,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2772,128] },\n\t\t\t\t\t{ \"px\": [16,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2773,128] },\n\t\t\t\t\t{ \"px\": [32,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2774,128] },\n\t\t\t\t\t{ \"px\": [48,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2775,128] },\n\t\t\t\t\t{ \"px\": [64,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2776,128] },\n\t\t\t\t\t{ \"px\": [80,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2777,128] },\n\t\t\t\t\t{ \"px\": [96,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2778,128] },\n\t\t\t\t\t{ \"px\": [112,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2779,128] },\n\t\t\t\t\t{ \"px\": [128,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2780,128] },\n\t\t\t\t\t{ \"px\": [144,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2781,128] },\n\t\t\t\t\t{ \"px\": [160,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2782,128] },\n\t\t\t\t\t{ \"px\": [176,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2783,128] },\n\t\t\t\t\t{ \"px\": [192,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2784,128] },\n\t\t\t\t\t{ \"px\": [208,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2785,128] },\n\t\t\t\t\t{ \"px\": [224,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2786,128] },\n\t\t\t\t\t{ \"px\": [240,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2787,128] },\n\t\t\t\t\t{ \"px\": [256,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2788,128] },\n\t\t\t\t\t{ \"px\": [272,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2789,128] },\n\t\t\t\t\t{ \"px\": [288,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2790,128] },\n\t\t\t\t\t{ \"px\": [304,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2791,128] },\n\t\t\t\t\t{ \"px\": [320,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2792,128] },\n\t\t\t\t\t{ \"px\": [336,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2793,128] },\n\t\t\t\t\t{ \"px\": [352,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2794,128] },\n\t\t\t\t\t{ \"px\": [368,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2795,128] },\n\t\t\t\t\t{ \"px\": [384,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2796,128] },\n\t\t\t\t\t{ \"px\": [400,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2797,128] },\n\t\t\t\t\t{ \"px\": [416,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2798,128] },\n\t\t\t\t\t{ \"px\": [432,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2799,128] },\n\t\t\t\t\t{ \"px\": [448,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2800,128] },\n\t\t\t\t\t{ \"px\": [464,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2801,128] },\n\t\t\t\t\t{ \"px\": [480,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2802,128] },\n\t\t\t\t\t{ \"px\": [496,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2803,128] },\n\t\t\t\t\t{ \"px\": [512,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2804,128] },\n\t\t\t\t\t{ \"px\": [528,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2805,128] },\n\t\t\t\t\t{ \"px\": [544,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2806,128] },\n\t\t\t\t\t{ \"px\": [560,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2807,128] },\n\t\t\t\t\t{ \"px\": [576,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2808,128] },\n\t\t\t\t\t{ \"px\": [592,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2809,128] },\n\t\t\t\t\t{ \"px\": [608,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2810,128] },\n\t\t\t\t\t{ \"px\": [624,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2811,128] },\n\t\t\t\t\t{ \"px\": [640,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2812,128] },\n\t\t\t\t\t{ \"px\": [1584,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2871,128] },\n\t\t\t\t\t{ \"px\": [1600,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2872,128] },\n\t\t\t\t\t{ \"px\": [1616,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2873,128] },\n\t\t\t\t\t{ \"px\": [1632,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2874,128] },\n\t\t\t\t\t{ \"px\": [1648,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2875,128] },\n\t\t\t\t\t{ \"px\": [1664,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2876,128] },\n\t\t\t\t\t{ \"px\": [1680,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2877,128] },\n\t\t\t\t\t{ \"px\": [1696,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2878,128] },\n\t\t\t\t\t{ \"px\": [1712,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2879,128] },\n\t\t\t\t\t{ \"px\": [1728,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2880,128] },\n\t\t\t\t\t{ \"px\": [1744,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2881,128] },\n\t\t\t\t\t{ \"px\": [1760,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2882,128] },\n\t\t\t\t\t{ \"px\": [1776,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2883,128] },\n\t\t\t\t\t{ \"px\": [1792,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2884,128] },\n\t\t\t\t\t{ \"px\": [1808,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2885,128] },\n\t\t\t\t\t{ \"px\": [1824,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2886,128] },\n\t\t\t\t\t{ \"px\": [1840,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2887,128] },\n\t\t\t\t\t{ \"px\": [1856,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2888,128] },\n\t\t\t\t\t{ \"px\": [1872,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2889,128] },\n\t\t\t\t\t{ \"px\": [1888,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2890,128] },\n\t\t\t\t\t{ \"px\": [1904,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2891,128] },\n\t\t\t\t\t{ \"px\": [1920,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2892,128] },\n\t\t\t\t\t{ \"px\": [1936,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2893,128] },\n\t\t\t\t\t{ \"px\": [1952,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2894,128] },\n\t\t\t\t\t{ \"px\": [1968,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2895,128] },\n\t\t\t\t\t{ \"px\": [1984,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2896,128] },\n\t\t\t\t\t{ \"px\": [2000,352], \"src\": [0,64], \"f\": 0, \"d\": [42,2897,128] },\n\t\t\t\t\t{ \"px\": [0,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2898,128] },\n\t\t\t\t\t{ \"px\": [16,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2899,128] },\n\t\t\t\t\t{ \"px\": [32,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2900,128] },\n\t\t\t\t\t{ \"px\": [48,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2901,128] },\n\t\t\t\t\t{ \"px\": [64,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2902,128] },\n\t\t\t\t\t{ \"px\": [80,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2903,128] },\n\t\t\t\t\t{ \"px\": [96,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2904,128] },\n\t\t\t\t\t{ \"px\": [112,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2905,128] },\n\t\t\t\t\t{ \"px\": [128,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2906,128] },\n\t\t\t\t\t{ \"px\": [144,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2907,128] },\n\t\t\t\t\t{ \"px\": [160,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2908,128] },\n\t\t\t\t\t{ \"px\": [176,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2909,128] },\n\t\t\t\t\t{ \"px\": [192,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2910,128] },\n\t\t\t\t\t{ \"px\": [208,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2911,128] },\n\t\t\t\t\t{ \"px\": [224,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2912,128] },\n\t\t\t\t\t{ \"px\": [240,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2913,128] },\n\t\t\t\t\t{ \"px\": [256,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2914,128] },\n\t\t\t\t\t{ \"px\": [272,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2915,128] },\n\t\t\t\t\t{ \"px\": [288,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2916,128] },\n\t\t\t\t\t{ \"px\": [304,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2917,128] },\n\t\t\t\t\t{ \"px\": [320,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2918,128] },\n\t\t\t\t\t{ \"px\": [336,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2919,128] },\n\t\t\t\t\t{ \"px\": [352,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2920,128] },\n\t\t\t\t\t{ \"px\": [368,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2921,128] },\n\t\t\t\t\t{ \"px\": [384,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2922,128] },\n\t\t\t\t\t{ \"px\": [400,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2923,128] },\n\t\t\t\t\t{ \"px\": [416,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2924,128] },\n\t\t\t\t\t{ \"px\": [432,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2925,128] },\n\t\t\t\t\t{ \"px\": [448,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2926,128] },\n\t\t\t\t\t{ \"px\": [464,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2927,128] },\n\t\t\t\t\t{ \"px\": [480,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2928,128] },\n\t\t\t\t\t{ \"px\": [496,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2929,128] },\n\t\t\t\t\t{ \"px\": [512,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2930,128] },\n\t\t\t\t\t{ \"px\": [528,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2931,128] },\n\t\t\t\t\t{ \"px\": [544,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2932,128] },\n\t\t\t\t\t{ \"px\": [560,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2933,128] },\n\t\t\t\t\t{ \"px\": [576,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2934,128] },\n\t\t\t\t\t{ \"px\": [592,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2935,128] },\n\t\t\t\t\t{ \"px\": [608,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2936,128] },\n\t\t\t\t\t{ \"px\": [624,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2937,128] },\n\t\t\t\t\t{ \"px\": [640,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2938,128] },\n\t\t\t\t\t{ \"px\": [656,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2939,128] },\n\t\t\t\t\t{ \"px\": [672,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2940,128] },\n\t\t\t\t\t{ \"px\": [688,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2941,128] },\n\t\t\t\t\t{ \"px\": [704,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2942,128] },\n\t\t\t\t\t{ \"px\": [720,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2943,128] },\n\t\t\t\t\t{ \"px\": [736,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2944,128] },\n\t\t\t\t\t{ \"px\": [752,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2945,128] },\n\t\t\t\t\t{ \"px\": [768,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2946,128] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2975,128] },\n\t\t\t\t\t{ \"px\": [1248,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2976,128] },\n\t\t\t\t\t{ \"px\": [1264,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2977,128] },\n\t\t\t\t\t{ \"px\": [1280,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2978,128] },\n\t\t\t\t\t{ \"px\": [1296,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2979,128] },\n\t\t\t\t\t{ \"px\": [1312,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2980,128] },\n\t\t\t\t\t{ \"px\": [1328,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2981,128] },\n\t\t\t\t\t{ \"px\": [1344,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2982,128] },\n\t\t\t\t\t{ \"px\": [1360,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2983,128] },\n\t\t\t\t\t{ \"px\": [1376,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2984,128] },\n\t\t\t\t\t{ \"px\": [1392,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2985,128] },\n\t\t\t\t\t{ \"px\": [1408,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2986,128] },\n\t\t\t\t\t{ \"px\": [1424,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2987,128] },\n\t\t\t\t\t{ \"px\": [1440,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2988,128] },\n\t\t\t\t\t{ \"px\": [1456,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2989,128] },\n\t\t\t\t\t{ \"px\": [1472,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2990,128] },\n\t\t\t\t\t{ \"px\": [1488,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2991,128] },\n\t\t\t\t\t{ \"px\": [1504,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2992,128] },\n\t\t\t\t\t{ \"px\": [1520,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2993,128] },\n\t\t\t\t\t{ \"px\": [1536,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2994,128] },\n\t\t\t\t\t{ \"px\": [1552,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2995,128] },\n\t\t\t\t\t{ \"px\": [1568,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2996,128] },\n\t\t\t\t\t{ \"px\": [1584,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2997,128] },\n\t\t\t\t\t{ \"px\": [1600,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2998,128] },\n\t\t\t\t\t{ \"px\": [1616,368], \"src\": [0,64], \"f\": 0, \"d\": [42,2999,128] },\n\t\t\t\t\t{ \"px\": [1632,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3000,128] },\n\t\t\t\t\t{ \"px\": [1648,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3001,128] },\n\t\t\t\t\t{ \"px\": [1664,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3002,128] },\n\t\t\t\t\t{ \"px\": [1680,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3003,128] },\n\t\t\t\t\t{ \"px\": [1696,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3004,128] },\n\t\t\t\t\t{ \"px\": [1712,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3005,128] },\n\t\t\t\t\t{ \"px\": [1728,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3006,128] },\n\t\t\t\t\t{ \"px\": [1744,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3007,128] },\n\t\t\t\t\t{ \"px\": [1760,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3008,128] },\n\t\t\t\t\t{ \"px\": [1776,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3009,128] },\n\t\t\t\t\t{ \"px\": [1792,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3010,128] },\n\t\t\t\t\t{ \"px\": [1808,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3011,128] },\n\t\t\t\t\t{ \"px\": [1824,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3012,128] },\n\t\t\t\t\t{ \"px\": [1840,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3013,128] },\n\t\t\t\t\t{ \"px\": [1856,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3014,128] },\n\t\t\t\t\t{ \"px\": [1872,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3015,128] },\n\t\t\t\t\t{ \"px\": [1888,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3016,128] },\n\t\t\t\t\t{ \"px\": [1904,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3017,128] },\n\t\t\t\t\t{ \"px\": [1920,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3018,128] },\n\t\t\t\t\t{ \"px\": [1936,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3019,128] },\n\t\t\t\t\t{ \"px\": [1952,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3020,128] },\n\t\t\t\t\t{ \"px\": [1968,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3021,128] },\n\t\t\t\t\t{ \"px\": [1984,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3022,128] },\n\t\t\t\t\t{ \"px\": [2000,368], \"src\": [0,64], \"f\": 0, \"d\": [42,3023,128] },\n\t\t\t\t\t{ \"px\": [0,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3024,128] },\n\t\t\t\t\t{ \"px\": [16,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3025,128] },\n\t\t\t\t\t{ \"px\": [32,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3026,128] },\n\t\t\t\t\t{ \"px\": [48,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3027,128] },\n\t\t\t\t\t{ \"px\": [64,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3028,128] },\n\t\t\t\t\t{ \"px\": [80,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3029,128] },\n\t\t\t\t\t{ \"px\": [96,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3030,128] },\n\t\t\t\t\t{ \"px\": [112,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3031,128] },\n\t\t\t\t\t{ \"px\": [128,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3032,128] },\n\t\t\t\t\t{ \"px\": [144,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3033,128] },\n\t\t\t\t\t{ \"px\": [160,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3034,128] },\n\t\t\t\t\t{ \"px\": [176,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3035,128] },\n\t\t\t\t\t{ \"px\": [192,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3036,128] },\n\t\t\t\t\t{ \"px\": [208,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3037,128] },\n\t\t\t\t\t{ \"px\": [224,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3038,128] },\n\t\t\t\t\t{ \"px\": [240,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3039,128] },\n\t\t\t\t\t{ \"px\": [256,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3040,128] },\n\t\t\t\t\t{ \"px\": [272,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3041,128] },\n\t\t\t\t\t{ \"px\": [288,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3042,128] },\n\t\t\t\t\t{ \"px\": [304,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3043,128] },\n\t\t\t\t\t{ \"px\": [320,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3044,128] },\n\t\t\t\t\t{ \"px\": [336,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3045,128] },\n\t\t\t\t\t{ \"px\": [352,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3046,128] },\n\t\t\t\t\t{ \"px\": [368,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3047,128] },\n\t\t\t\t\t{ \"px\": [384,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3048,128] },\n\t\t\t\t\t{ \"px\": [400,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3049,128] },\n\t\t\t\t\t{ \"px\": [416,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3050,128] },\n\t\t\t\t\t{ \"px\": [432,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3051,128] },\n\t\t\t\t\t{ \"px\": [448,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3052,128] },\n\t\t\t\t\t{ \"px\": [464,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3053,128] },\n\t\t\t\t\t{ \"px\": [480,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3054,128] },\n\t\t\t\t\t{ \"px\": [496,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3055,128] },\n\t\t\t\t\t{ \"px\": [512,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3056,128] },\n\t\t\t\t\t{ \"px\": [528,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3057,128] },\n\t\t\t\t\t{ \"px\": [544,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3058,128] },\n\t\t\t\t\t{ \"px\": [560,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3059,128] },\n\t\t\t\t\t{ \"px\": [576,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3060,128] },\n\t\t\t\t\t{ \"px\": [592,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3061,128] },\n\t\t\t\t\t{ \"px\": [608,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3062,128] },\n\t\t\t\t\t{ \"px\": [624,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3063,128] },\n\t\t\t\t\t{ \"px\": [640,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3064,128] },\n\t\t\t\t\t{ \"px\": [656,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3065,128] },\n\t\t\t\t\t{ \"px\": [672,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3066,128] },\n\t\t\t\t\t{ \"px\": [688,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3067,128] },\n\t\t\t\t\t{ \"px\": [704,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3068,128] },\n\t\t\t\t\t{ \"px\": [720,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3069,128] },\n\t\t\t\t\t{ \"px\": [736,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3070,128] },\n\t\t\t\t\t{ \"px\": [752,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3071,128] },\n\t\t\t\t\t{ \"px\": [768,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3072,128] },\n\t\t\t\t\t{ \"px\": [784,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3073,128] },\n\t\t\t\t\t{ \"px\": [800,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3074,128] },\n\t\t\t\t\t{ \"px\": [816,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3075,128] },\n\t\t\t\t\t{ \"px\": [832,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3076,128] },\n\t\t\t\t\t{ \"px\": [848,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3077,128] },\n\t\t\t\t\t{ \"px\": [864,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3078,128] },\n\t\t\t\t\t{ \"px\": [880,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3079,128] },\n\t\t\t\t\t{ \"px\": [896,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3080,128] },\n\t\t\t\t\t{ \"px\": [912,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3081,128] },\n\t\t\t\t\t{ \"px\": [928,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3082,128] },\n\t\t\t\t\t{ \"px\": [944,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3083,128] },\n\t\t\t\t\t{ \"px\": [960,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3084,128] },\n\t\t\t\t\t{ \"px\": [976,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3085,128] },\n\t\t\t\t\t{ \"px\": [992,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3086,128] },\n\t\t\t\t\t{ \"px\": [1008,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3087,128] },\n\t\t\t\t\t{ \"px\": [1024,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3088,128] },\n\t\t\t\t\t{ \"px\": [1040,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3089,128] },\n\t\t\t\t\t{ \"px\": [1056,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3090,128] },\n\t\t\t\t\t{ \"px\": [1072,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3091,128] },\n\t\t\t\t\t{ \"px\": [1088,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3092,128] },\n\t\t\t\t\t{ \"px\": [1104,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3093,128] },\n\t\t\t\t\t{ \"px\": [1120,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3094,128] },\n\t\t\t\t\t{ \"px\": [1136,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3095,128] },\n\t\t\t\t\t{ \"px\": [1152,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3096,128] },\n\t\t\t\t\t{ \"px\": [1168,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3097,128] },\n\t\t\t\t\t{ \"px\": [1184,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3098,128] },\n\t\t\t\t\t{ \"px\": [1200,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3099,128] },\n\t\t\t\t\t{ \"px\": [1216,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3100,128] },\n\t\t\t\t\t{ \"px\": [1232,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3101,128] },\n\t\t\t\t\t{ \"px\": [1248,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3102,128] },\n\t\t\t\t\t{ \"px\": [1264,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3103,128] },\n\t\t\t\t\t{ \"px\": [1280,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3104,128] },\n\t\t\t\t\t{ \"px\": [1296,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3105,128] },\n\t\t\t\t\t{ \"px\": [1312,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3106,128] },\n\t\t\t\t\t{ \"px\": [1328,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3107,128] },\n\t\t\t\t\t{ \"px\": [1344,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3108,128] },\n\t\t\t\t\t{ \"px\": [1360,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3109,128] },\n\t\t\t\t\t{ \"px\": [1376,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3110,128] },\n\t\t\t\t\t{ \"px\": [1392,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3111,128] },\n\t\t\t\t\t{ \"px\": [1408,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3112,128] },\n\t\t\t\t\t{ \"px\": [1424,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3113,128] },\n\t\t\t\t\t{ \"px\": [1440,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3114,128] },\n\t\t\t\t\t{ \"px\": [1456,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3115,128] },\n\t\t\t\t\t{ \"px\": [1472,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3116,128] },\n\t\t\t\t\t{ \"px\": [1488,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3117,128] },\n\t\t\t\t\t{ \"px\": [1504,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3118,128] },\n\t\t\t\t\t{ \"px\": [1520,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3119,128] },\n\t\t\t\t\t{ \"px\": [1536,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3120,128] },\n\t\t\t\t\t{ \"px\": [1552,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3121,128] },\n\t\t\t\t\t{ \"px\": [1568,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3122,128] },\n\t\t\t\t\t{ \"px\": [1584,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3123,128] },\n\t\t\t\t\t{ \"px\": [1600,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3124,128] },\n\t\t\t\t\t{ \"px\": [1616,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3125,128] },\n\t\t\t\t\t{ \"px\": [1632,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3126,128] },\n\t\t\t\t\t{ \"px\": [1648,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3127,128] },\n\t\t\t\t\t{ \"px\": [1664,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3128,128] },\n\t\t\t\t\t{ \"px\": [1680,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3129,128] },\n\t\t\t\t\t{ \"px\": [1696,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3130,128] },\n\t\t\t\t\t{ \"px\": [1712,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3131,128] },\n\t\t\t\t\t{ \"px\": [1728,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3132,128] },\n\t\t\t\t\t{ \"px\": [1744,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3133,128] },\n\t\t\t\t\t{ \"px\": [1760,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3134,128] },\n\t\t\t\t\t{ \"px\": [1776,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3135,128] },\n\t\t\t\t\t{ \"px\": [1792,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3136,128] },\n\t\t\t\t\t{ \"px\": [1808,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3137,128] },\n\t\t\t\t\t{ \"px\": [1824,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3138,128] },\n\t\t\t\t\t{ \"px\": [1840,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3139,128] },\n\t\t\t\t\t{ \"px\": [1856,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3140,128] },\n\t\t\t\t\t{ \"px\": [1872,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3141,128] },\n\t\t\t\t\t{ \"px\": [1888,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3142,128] },\n\t\t\t\t\t{ \"px\": [1904,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3143,128] },\n\t\t\t\t\t{ \"px\": [1920,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3144,128] },\n\t\t\t\t\t{ \"px\": [1936,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3145,128] },\n\t\t\t\t\t{ \"px\": [1952,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3146,128] },\n\t\t\t\t\t{ \"px\": [1968,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3147,128] },\n\t\t\t\t\t{ \"px\": [1984,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3148,128] },\n\t\t\t\t\t{ \"px\": [2000,384], \"src\": [0,64], \"f\": 0, \"d\": [42,3149,128] },\n\t\t\t\t\t{ \"px\": [0,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3150,128] },\n\t\t\t\t\t{ \"px\": [16,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3151,128] },\n\t\t\t\t\t{ \"px\": [32,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3152,128] },\n\t\t\t\t\t{ \"px\": [48,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3153,128] },\n\t\t\t\t\t{ \"px\": [64,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3154,128] },\n\t\t\t\t\t{ \"px\": [80,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3155,128] },\n\t\t\t\t\t{ \"px\": [96,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3156,128] },\n\t\t\t\t\t{ \"px\": [112,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3157,128] },\n\t\t\t\t\t{ \"px\": [128,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3158,128] },\n\t\t\t\t\t{ \"px\": [144,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3159,128] },\n\t\t\t\t\t{ \"px\": [160,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3160,128] },\n\t\t\t\t\t{ \"px\": [176,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3161,128] },\n\t\t\t\t\t{ \"px\": [192,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3162,128] },\n\t\t\t\t\t{ \"px\": [208,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3163,128] },\n\t\t\t\t\t{ \"px\": [224,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3164,128] },\n\t\t\t\t\t{ \"px\": [240,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3165,128] },\n\t\t\t\t\t{ \"px\": [256,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3166,128] },\n\t\t\t\t\t{ \"px\": [272,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3167,128] },\n\t\t\t\t\t{ \"px\": [288,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3168,128] },\n\t\t\t\t\t{ \"px\": [304,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3169,128] },\n\t\t\t\t\t{ \"px\": [320,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3170,128] },\n\t\t\t\t\t{ \"px\": [336,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3171,128] },\n\t\t\t\t\t{ \"px\": [352,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3172,128] },\n\t\t\t\t\t{ \"px\": [368,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3173,128] },\n\t\t\t\t\t{ \"px\": [384,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3174,128] },\n\t\t\t\t\t{ \"px\": [400,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3175,128] },\n\t\t\t\t\t{ \"px\": [416,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3176,128] },\n\t\t\t\t\t{ \"px\": [432,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3177,128] },\n\t\t\t\t\t{ \"px\": [448,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3178,128] },\n\t\t\t\t\t{ \"px\": [464,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3179,128] },\n\t\t\t\t\t{ \"px\": [480,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3180,128] },\n\t\t\t\t\t{ \"px\": [496,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3181,128] },\n\t\t\t\t\t{ \"px\": [512,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3182,128] },\n\t\t\t\t\t{ \"px\": [528,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3183,128] },\n\t\t\t\t\t{ \"px\": [544,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3184,128] },\n\t\t\t\t\t{ \"px\": [560,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3185,128] },\n\t\t\t\t\t{ \"px\": [576,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3186,128] },\n\t\t\t\t\t{ \"px\": [592,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3187,128] },\n\t\t\t\t\t{ \"px\": [608,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3188,128] },\n\t\t\t\t\t{ \"px\": [624,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3189,128] },\n\t\t\t\t\t{ \"px\": [640,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3190,128] },\n\t\t\t\t\t{ \"px\": [656,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3191,128] },\n\t\t\t\t\t{ \"px\": [672,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3192,128] },\n\t\t\t\t\t{ \"px\": [688,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3193,128] },\n\t\t\t\t\t{ \"px\": [704,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3194,128] },\n\t\t\t\t\t{ \"px\": [720,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3195,128] },\n\t\t\t\t\t{ \"px\": [736,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3196,128] },\n\t\t\t\t\t{ \"px\": [752,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3197,128] },\n\t\t\t\t\t{ \"px\": [768,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3198,128] },\n\t\t\t\t\t{ \"px\": [784,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3199,128] },\n\t\t\t\t\t{ \"px\": [800,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3200,128] },\n\t\t\t\t\t{ \"px\": [816,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3201,128] },\n\t\t\t\t\t{ \"px\": [832,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3202,128] },\n\t\t\t\t\t{ \"px\": [848,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3203,128] },\n\t\t\t\t\t{ \"px\": [864,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3204,128] },\n\t\t\t\t\t{ \"px\": [880,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3205,128] },\n\t\t\t\t\t{ \"px\": [896,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3206,128] },\n\t\t\t\t\t{ \"px\": [912,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3207,128] },\n\t\t\t\t\t{ \"px\": [928,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3208,128] },\n\t\t\t\t\t{ \"px\": [944,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3209,128] },\n\t\t\t\t\t{ \"px\": [960,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3210,128] },\n\t\t\t\t\t{ \"px\": [976,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3211,128] },\n\t\t\t\t\t{ \"px\": [992,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3212,128] },\n\t\t\t\t\t{ \"px\": [1008,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3213,128] },\n\t\t\t\t\t{ \"px\": [1024,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3214,128] },\n\t\t\t\t\t{ \"px\": [1040,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3215,128] },\n\t\t\t\t\t{ \"px\": [1056,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3216,128] },\n\t\t\t\t\t{ \"px\": [1072,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3217,128] },\n\t\t\t\t\t{ \"px\": [1088,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3218,128] },\n\t\t\t\t\t{ \"px\": [1104,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3219,128] },\n\t\t\t\t\t{ \"px\": [1120,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3220,128] },\n\t\t\t\t\t{ \"px\": [1136,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3221,128] },\n\t\t\t\t\t{ \"px\": [1152,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3222,128] },\n\t\t\t\t\t{ \"px\": [1168,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3223,128] },\n\t\t\t\t\t{ \"px\": [1184,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3224,128] },\n\t\t\t\t\t{ \"px\": [1200,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3225,128] },\n\t\t\t\t\t{ \"px\": [1216,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3226,128] },\n\t\t\t\t\t{ \"px\": [1232,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3227,128] },\n\t\t\t\t\t{ \"px\": [1248,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3228,128] },\n\t\t\t\t\t{ \"px\": [1264,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3229,128] },\n\t\t\t\t\t{ \"px\": [1280,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3230,128] },\n\t\t\t\t\t{ \"px\": [1296,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3231,128] },\n\t\t\t\t\t{ \"px\": [1312,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3232,128] },\n\t\t\t\t\t{ \"px\": [1328,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3233,128] },\n\t\t\t\t\t{ \"px\": [1344,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3234,128] },\n\t\t\t\t\t{ \"px\": [1360,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3235,128] },\n\t\t\t\t\t{ \"px\": [1376,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3236,128] },\n\t\t\t\t\t{ \"px\": [1392,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3237,128] },\n\t\t\t\t\t{ \"px\": [1408,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3238,128] },\n\t\t\t\t\t{ \"px\": [1424,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3239,128] },\n\t\t\t\t\t{ \"px\": [1440,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3240,128] },\n\t\t\t\t\t{ \"px\": [1456,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3241,128] },\n\t\t\t\t\t{ \"px\": [1472,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3242,128] },\n\t\t\t\t\t{ \"px\": [1488,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3243,128] },\n\t\t\t\t\t{ \"px\": [1504,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3244,128] },\n\t\t\t\t\t{ \"px\": [1520,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3245,128] },\n\t\t\t\t\t{ \"px\": [1536,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3246,128] },\n\t\t\t\t\t{ \"px\": [1552,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3247,128] },\n\t\t\t\t\t{ \"px\": [1568,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3248,128] },\n\t\t\t\t\t{ \"px\": [1584,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3249,128] },\n\t\t\t\t\t{ \"px\": [1600,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3250,128] },\n\t\t\t\t\t{ \"px\": [1616,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3251,128] },\n\t\t\t\t\t{ \"px\": [1632,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3252,128] },\n\t\t\t\t\t{ \"px\": [1648,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3253,128] },\n\t\t\t\t\t{ \"px\": [1664,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3254,128] },\n\t\t\t\t\t{ \"px\": [1680,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3255,128] },\n\t\t\t\t\t{ \"px\": [1696,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3256,128] },\n\t\t\t\t\t{ \"px\": [1712,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3257,128] },\n\t\t\t\t\t{ \"px\": [1728,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3258,128] },\n\t\t\t\t\t{ \"px\": [1744,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3259,128] },\n\t\t\t\t\t{ \"px\": [1760,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3260,128] },\n\t\t\t\t\t{ \"px\": [1776,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3261,128] },\n\t\t\t\t\t{ \"px\": [1792,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3262,128] },\n\t\t\t\t\t{ \"px\": [1808,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3263,128] },\n\t\t\t\t\t{ \"px\": [1824,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3264,128] },\n\t\t\t\t\t{ \"px\": [1840,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3265,128] },\n\t\t\t\t\t{ \"px\": [1856,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3266,128] },\n\t\t\t\t\t{ \"px\": [1872,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3267,128] },\n\t\t\t\t\t{ \"px\": [1888,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3268,128] },\n\t\t\t\t\t{ \"px\": [1904,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3269,128] },\n\t\t\t\t\t{ \"px\": [1920,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3270,128] },\n\t\t\t\t\t{ \"px\": [1936,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3271,128] },\n\t\t\t\t\t{ \"px\": [1952,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3272,128] },\n\t\t\t\t\t{ \"px\": [1968,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3273,128] },\n\t\t\t\t\t{ \"px\": [1984,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3274,128] },\n\t\t\t\t\t{ \"px\": [2000,400], \"src\": [0,64], \"f\": 0, \"d\": [42,3275,128] },\n\t\t\t\t\t{ \"px\": [0,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3276,128] },\n\t\t\t\t\t{ \"px\": [16,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3277,128] },\n\t\t\t\t\t{ \"px\": [32,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3278,128] },\n\t\t\t\t\t{ \"px\": [48,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3279,128] },\n\t\t\t\t\t{ \"px\": [64,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3280,128] },\n\t\t\t\t\t{ \"px\": [80,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3281,128] },\n\t\t\t\t\t{ \"px\": [96,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3282,128] },\n\t\t\t\t\t{ \"px\": [112,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3283,128] },\n\t\t\t\t\t{ \"px\": [128,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3284,128] },\n\t\t\t\t\t{ \"px\": [144,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3285,128] },\n\t\t\t\t\t{ \"px\": [160,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3286,128] },\n\t\t\t\t\t{ \"px\": [176,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3287,128] },\n\t\t\t\t\t{ \"px\": [192,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3288,128] },\n\t\t\t\t\t{ \"px\": [208,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3289,128] },\n\t\t\t\t\t{ \"px\": [224,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3290,128] },\n\t\t\t\t\t{ \"px\": [240,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3291,128] },\n\t\t\t\t\t{ \"px\": [256,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3292,128] },\n\t\t\t\t\t{ \"px\": [272,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3293,128] },\n\t\t\t\t\t{ \"px\": [288,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3294,128] },\n\t\t\t\t\t{ \"px\": [304,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3295,128] },\n\t\t\t\t\t{ \"px\": [320,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3296,128] },\n\t\t\t\t\t{ \"px\": [336,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3297,128] },\n\t\t\t\t\t{ \"px\": [352,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3298,128] },\n\t\t\t\t\t{ \"px\": [368,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3299,128] },\n\t\t\t\t\t{ \"px\": [384,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3300,128] },\n\t\t\t\t\t{ \"px\": [400,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3301,128] },\n\t\t\t\t\t{ \"px\": [416,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3302,128] },\n\t\t\t\t\t{ \"px\": [432,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3303,128] },\n\t\t\t\t\t{ \"px\": [448,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3304,128] },\n\t\t\t\t\t{ \"px\": [464,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3305,128] },\n\t\t\t\t\t{ \"px\": [480,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3306,128] },\n\t\t\t\t\t{ \"px\": [496,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3307,128] },\n\t\t\t\t\t{ \"px\": [512,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3308,128] },\n\t\t\t\t\t{ \"px\": [528,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3309,128] },\n\t\t\t\t\t{ \"px\": [544,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3310,128] },\n\t\t\t\t\t{ \"px\": [560,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3311,128] },\n\t\t\t\t\t{ \"px\": [576,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3312,128] },\n\t\t\t\t\t{ \"px\": [592,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3313,128] },\n\t\t\t\t\t{ \"px\": [608,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3314,128] },\n\t\t\t\t\t{ \"px\": [624,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3315,128] },\n\t\t\t\t\t{ \"px\": [640,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3316,128] },\n\t\t\t\t\t{ \"px\": [656,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3317,128] },\n\t\t\t\t\t{ \"px\": [672,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3318,128] },\n\t\t\t\t\t{ \"px\": [688,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3319,128] },\n\t\t\t\t\t{ \"px\": [704,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3320,128] },\n\t\t\t\t\t{ \"px\": [720,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3321,128] },\n\t\t\t\t\t{ \"px\": [736,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3322,128] },\n\t\t\t\t\t{ \"px\": [752,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3323,128] },\n\t\t\t\t\t{ \"px\": [768,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3324,128] },\n\t\t\t\t\t{ \"px\": [784,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3325,128] },\n\t\t\t\t\t{ \"px\": [800,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3326,128] },\n\t\t\t\t\t{ \"px\": [816,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3327,128] },\n\t\t\t\t\t{ \"px\": [832,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3328,128] },\n\t\t\t\t\t{ \"px\": [848,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3329,128] },\n\t\t\t\t\t{ \"px\": [864,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3330,128] },\n\t\t\t\t\t{ \"px\": [880,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3331,128] },\n\t\t\t\t\t{ \"px\": [896,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3332,128] },\n\t\t\t\t\t{ \"px\": [912,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3333,128] },\n\t\t\t\t\t{ \"px\": [928,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3334,128] },\n\t\t\t\t\t{ \"px\": [944,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3335,128] },\n\t\t\t\t\t{ \"px\": [960,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3336,128] },\n\t\t\t\t\t{ \"px\": [976,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3337,128] },\n\t\t\t\t\t{ \"px\": [992,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3338,128] },\n\t\t\t\t\t{ \"px\": [1008,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3339,128] },\n\t\t\t\t\t{ \"px\": [1024,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3340,128] },\n\t\t\t\t\t{ \"px\": [1040,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3341,128] },\n\t\t\t\t\t{ \"px\": [1056,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3342,128] },\n\t\t\t\t\t{ \"px\": [1072,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3343,128] },\n\t\t\t\t\t{ \"px\": [1088,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3344,128] },\n\t\t\t\t\t{ \"px\": [1104,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3345,128] },\n\t\t\t\t\t{ \"px\": [1120,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3346,128] },\n\t\t\t\t\t{ \"px\": [1136,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3347,128] },\n\t\t\t\t\t{ \"px\": [1152,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3348,128] },\n\t\t\t\t\t{ \"px\": [1168,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3349,128] },\n\t\t\t\t\t{ \"px\": [1184,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3350,128] },\n\t\t\t\t\t{ \"px\": [1200,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3351,128] },\n\t\t\t\t\t{ \"px\": [1216,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3352,128] },\n\t\t\t\t\t{ \"px\": [1232,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3353,128] },\n\t\t\t\t\t{ \"px\": [1248,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3354,128] },\n\t\t\t\t\t{ \"px\": [1264,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3355,128] },\n\t\t\t\t\t{ \"px\": [1280,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3356,128] },\n\t\t\t\t\t{ \"px\": [1296,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3357,128] },\n\t\t\t\t\t{ \"px\": [1312,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3358,128] },\n\t\t\t\t\t{ \"px\": [1328,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3359,128] },\n\t\t\t\t\t{ \"px\": [1344,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3360,128] },\n\t\t\t\t\t{ \"px\": [1360,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3361,128] },\n\t\t\t\t\t{ \"px\": [1376,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3362,128] },\n\t\t\t\t\t{ \"px\": [1392,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3363,128] },\n\t\t\t\t\t{ \"px\": [1408,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3364,128] },\n\t\t\t\t\t{ \"px\": [1424,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3365,128] },\n\t\t\t\t\t{ \"px\": [1440,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3366,128] },\n\t\t\t\t\t{ \"px\": [1456,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3367,128] },\n\t\t\t\t\t{ \"px\": [1472,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3368,128] },\n\t\t\t\t\t{ \"px\": [1488,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3369,128] },\n\t\t\t\t\t{ \"px\": [1504,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3370,128] },\n\t\t\t\t\t{ \"px\": [1520,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3371,128] },\n\t\t\t\t\t{ \"px\": [1536,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3372,128] },\n\t\t\t\t\t{ \"px\": [1552,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3373,128] },\n\t\t\t\t\t{ \"px\": [1568,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3374,128] },\n\t\t\t\t\t{ \"px\": [1584,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3375,128] },\n\t\t\t\t\t{ \"px\": [1600,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3376,128] },\n\t\t\t\t\t{ \"px\": [1616,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3377,128] },\n\t\t\t\t\t{ \"px\": [1632,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3378,128] },\n\t\t\t\t\t{ \"px\": [1648,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3379,128] },\n\t\t\t\t\t{ \"px\": [1664,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3380,128] },\n\t\t\t\t\t{ \"px\": [1680,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3381,128] },\n\t\t\t\t\t{ \"px\": [1696,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3382,128] },\n\t\t\t\t\t{ \"px\": [1712,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3383,128] },\n\t\t\t\t\t{ \"px\": [1728,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3384,128] },\n\t\t\t\t\t{ \"px\": [1744,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3385,128] },\n\t\t\t\t\t{ \"px\": [1760,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3386,128] },\n\t\t\t\t\t{ \"px\": [1776,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3387,128] },\n\t\t\t\t\t{ \"px\": [1792,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3388,128] },\n\t\t\t\t\t{ \"px\": [1808,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3389,128] },\n\t\t\t\t\t{ \"px\": [1824,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3390,128] },\n\t\t\t\t\t{ \"px\": [1840,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3391,128] },\n\t\t\t\t\t{ \"px\": [1856,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3392,128] },\n\t\t\t\t\t{ \"px\": [1872,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3393,128] },\n\t\t\t\t\t{ \"px\": [1888,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3394,128] },\n\t\t\t\t\t{ \"px\": [1904,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3395,128] },\n\t\t\t\t\t{ \"px\": [1920,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3396,128] },\n\t\t\t\t\t{ \"px\": [1936,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3397,128] },\n\t\t\t\t\t{ \"px\": [1952,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3398,128] },\n\t\t\t\t\t{ \"px\": [1968,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3399,128] },\n\t\t\t\t\t{ \"px\": [1984,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3400,128] },\n\t\t\t\t\t{ \"px\": [2000,416], \"src\": [0,64], \"f\": 0, \"d\": [42,3401,128] },\n\t\t\t\t\t{ \"px\": [0,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3402,128] },\n\t\t\t\t\t{ \"px\": [16,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3403,128] },\n\t\t\t\t\t{ \"px\": [32,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3404,128] },\n\t\t\t\t\t{ \"px\": [48,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3405,128] },\n\t\t\t\t\t{ \"px\": [64,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3406,128] },\n\t\t\t\t\t{ \"px\": [80,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3407,128] },\n\t\t\t\t\t{ \"px\": [96,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3408,128] },\n\t\t\t\t\t{ \"px\": [112,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3409,128] },\n\t\t\t\t\t{ \"px\": [128,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3410,128] },\n\t\t\t\t\t{ \"px\": [144,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3411,128] },\n\t\t\t\t\t{ \"px\": [160,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3412,128] },\n\t\t\t\t\t{ \"px\": [176,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3413,128] },\n\t\t\t\t\t{ \"px\": [192,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3414,128] },\n\t\t\t\t\t{ \"px\": [208,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3415,128] },\n\t\t\t\t\t{ \"px\": [224,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3416,128] },\n\t\t\t\t\t{ \"px\": [240,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3417,128] },\n\t\t\t\t\t{ \"px\": [256,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3418,128] },\n\t\t\t\t\t{ \"px\": [272,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3419,128] },\n\t\t\t\t\t{ \"px\": [288,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3420,128] },\n\t\t\t\t\t{ \"px\": [304,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3421,128] },\n\t\t\t\t\t{ \"px\": [320,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3422,128] },\n\t\t\t\t\t{ \"px\": [336,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3423,128] },\n\t\t\t\t\t{ \"px\": [352,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3424,128] },\n\t\t\t\t\t{ \"px\": [368,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3425,128] },\n\t\t\t\t\t{ \"px\": [384,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3426,128] },\n\t\t\t\t\t{ \"px\": [400,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3427,128] },\n\t\t\t\t\t{ \"px\": [416,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3428,128] },\n\t\t\t\t\t{ \"px\": [432,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3429,128] },\n\t\t\t\t\t{ \"px\": [448,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3430,128] },\n\t\t\t\t\t{ \"px\": [464,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3431,128] },\n\t\t\t\t\t{ \"px\": [480,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3432,128] },\n\t\t\t\t\t{ \"px\": [496,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3433,128] },\n\t\t\t\t\t{ \"px\": [512,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3434,128] },\n\t\t\t\t\t{ \"px\": [528,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3435,128] },\n\t\t\t\t\t{ \"px\": [544,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3436,128] },\n\t\t\t\t\t{ \"px\": [560,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3437,128] },\n\t\t\t\t\t{ \"px\": [576,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3438,128] },\n\t\t\t\t\t{ \"px\": [592,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3439,128] },\n\t\t\t\t\t{ \"px\": [608,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3440,128] },\n\t\t\t\t\t{ \"px\": [624,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3441,128] },\n\t\t\t\t\t{ \"px\": [640,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3442,128] },\n\t\t\t\t\t{ \"px\": [656,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3443,128] },\n\t\t\t\t\t{ \"px\": [672,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3444,128] },\n\t\t\t\t\t{ \"px\": [688,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3445,128] },\n\t\t\t\t\t{ \"px\": [704,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3446,128] },\n\t\t\t\t\t{ \"px\": [720,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3447,128] },\n\t\t\t\t\t{ \"px\": [736,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3448,128] },\n\t\t\t\t\t{ \"px\": [752,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3449,128] },\n\t\t\t\t\t{ \"px\": [768,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3450,128] },\n\t\t\t\t\t{ \"px\": [784,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3451,128] },\n\t\t\t\t\t{ \"px\": [800,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3452,128] },\n\t\t\t\t\t{ \"px\": [816,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3453,128] },\n\t\t\t\t\t{ \"px\": [832,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3454,128] },\n\t\t\t\t\t{ \"px\": [848,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3455,128] },\n\t\t\t\t\t{ \"px\": [864,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3456,128] },\n\t\t\t\t\t{ \"px\": [880,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3457,128] },\n\t\t\t\t\t{ \"px\": [896,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3458,128] },\n\t\t\t\t\t{ \"px\": [912,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3459,128] },\n\t\t\t\t\t{ \"px\": [928,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3460,128] },\n\t\t\t\t\t{ \"px\": [944,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3461,128] },\n\t\t\t\t\t{ \"px\": [960,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3462,128] },\n\t\t\t\t\t{ \"px\": [976,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3463,128] },\n\t\t\t\t\t{ \"px\": [992,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3464,128] },\n\t\t\t\t\t{ \"px\": [1008,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3465,128] },\n\t\t\t\t\t{ \"px\": [1024,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3466,128] },\n\t\t\t\t\t{ \"px\": [1040,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3467,128] },\n\t\t\t\t\t{ \"px\": [1056,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3468,128] },\n\t\t\t\t\t{ \"px\": [1072,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3469,128] },\n\t\t\t\t\t{ \"px\": [1088,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3470,128] },\n\t\t\t\t\t{ \"px\": [1104,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3471,128] },\n\t\t\t\t\t{ \"px\": [1120,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3472,128] },\n\t\t\t\t\t{ \"px\": [1136,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3473,128] },\n\t\t\t\t\t{ \"px\": [1152,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3474,128] },\n\t\t\t\t\t{ \"px\": [1168,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3475,128] },\n\t\t\t\t\t{ \"px\": [1184,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3476,128] },\n\t\t\t\t\t{ \"px\": [1200,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3477,128] },\n\t\t\t\t\t{ \"px\": [1216,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3478,128] },\n\t\t\t\t\t{ \"px\": [1232,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3479,128] },\n\t\t\t\t\t{ \"px\": [1248,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3480,128] },\n\t\t\t\t\t{ \"px\": [1264,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3481,128] },\n\t\t\t\t\t{ \"px\": [1280,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3482,128] },\n\t\t\t\t\t{ \"px\": [1296,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3483,128] },\n\t\t\t\t\t{ \"px\": [1312,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3484,128] },\n\t\t\t\t\t{ \"px\": [1328,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3485,128] },\n\t\t\t\t\t{ \"px\": [1344,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3486,128] },\n\t\t\t\t\t{ \"px\": [1360,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3487,128] },\n\t\t\t\t\t{ \"px\": [1376,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3488,128] },\n\t\t\t\t\t{ \"px\": [1392,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3489,128] },\n\t\t\t\t\t{ \"px\": [1408,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3490,128] },\n\t\t\t\t\t{ \"px\": [1424,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3491,128] },\n\t\t\t\t\t{ \"px\": [1440,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3492,128] },\n\t\t\t\t\t{ \"px\": [1456,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3493,128] },\n\t\t\t\t\t{ \"px\": [1472,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3494,128] },\n\t\t\t\t\t{ \"px\": [1488,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3495,128] },\n\t\t\t\t\t{ \"px\": [1504,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3496,128] },\n\t\t\t\t\t{ \"px\": [1520,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3497,128] },\n\t\t\t\t\t{ \"px\": [1536,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3498,128] },\n\t\t\t\t\t{ \"px\": [1552,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3499,128] },\n\t\t\t\t\t{ \"px\": [1568,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3500,128] },\n\t\t\t\t\t{ \"px\": [1584,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3501,128] },\n\t\t\t\t\t{ \"px\": [1600,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3502,128] },\n\t\t\t\t\t{ \"px\": [1616,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3503,128] },\n\t\t\t\t\t{ \"px\": [1632,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3504,128] },\n\t\t\t\t\t{ \"px\": [1648,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3505,128] },\n\t\t\t\t\t{ \"px\": [1664,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3506,128] },\n\t\t\t\t\t{ \"px\": [1680,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3507,128] },\n\t\t\t\t\t{ \"px\": [1696,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3508,128] },\n\t\t\t\t\t{ \"px\": [1712,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3509,128] },\n\t\t\t\t\t{ \"px\": [1728,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3510,128] },\n\t\t\t\t\t{ \"px\": [1744,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3511,128] },\n\t\t\t\t\t{ \"px\": [1760,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3512,128] },\n\t\t\t\t\t{ \"px\": [1776,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3513,128] },\n\t\t\t\t\t{ \"px\": [1792,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3514,128] },\n\t\t\t\t\t{ \"px\": [1808,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3515,128] },\n\t\t\t\t\t{ \"px\": [1824,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3516,128] },\n\t\t\t\t\t{ \"px\": [1840,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3517,128] },\n\t\t\t\t\t{ \"px\": [1856,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3518,128] },\n\t\t\t\t\t{ \"px\": [1872,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3519,128] },\n\t\t\t\t\t{ \"px\": [1888,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3520,128] },\n\t\t\t\t\t{ \"px\": [1904,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3521,128] },\n\t\t\t\t\t{ \"px\": [1920,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3522,128] },\n\t\t\t\t\t{ \"px\": [1936,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3523,128] },\n\t\t\t\t\t{ \"px\": [1952,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3524,128] },\n\t\t\t\t\t{ \"px\": [1968,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3525,128] },\n\t\t\t\t\t{ \"px\": [1984,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3526,128] },\n\t\t\t\t\t{ \"px\": [2000,432], \"src\": [0,64], \"f\": 0, \"d\": [42,3527,128] },\n\t\t\t\t\t{ \"px\": [0,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3528,128] },\n\t\t\t\t\t{ \"px\": [16,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3529,128] },\n\t\t\t\t\t{ \"px\": [32,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3530,128] },\n\t\t\t\t\t{ \"px\": [48,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3531,128] },\n\t\t\t\t\t{ \"px\": [64,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3532,128] },\n\t\t\t\t\t{ \"px\": [80,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3533,128] },\n\t\t\t\t\t{ \"px\": [96,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3534,128] },\n\t\t\t\t\t{ \"px\": [112,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3535,128] },\n\t\t\t\t\t{ \"px\": [128,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3536,128] },\n\t\t\t\t\t{ \"px\": [144,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3537,128] },\n\t\t\t\t\t{ \"px\": [160,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3538,128] },\n\t\t\t\t\t{ \"px\": [176,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3539,128] },\n\t\t\t\t\t{ \"px\": [192,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3540,128] },\n\t\t\t\t\t{ \"px\": [208,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3541,128] },\n\t\t\t\t\t{ \"px\": [224,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3542,128] },\n\t\t\t\t\t{ \"px\": [240,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3543,128] },\n\t\t\t\t\t{ \"px\": [256,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3544,128] },\n\t\t\t\t\t{ \"px\": [272,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3545,128] },\n\t\t\t\t\t{ \"px\": [288,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3546,128] },\n\t\t\t\t\t{ \"px\": [304,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3547,128] },\n\t\t\t\t\t{ \"px\": [320,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3548,128] },\n\t\t\t\t\t{ \"px\": [336,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3549,128] },\n\t\t\t\t\t{ \"px\": [352,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3550,128] },\n\t\t\t\t\t{ \"px\": [368,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3551,128] },\n\t\t\t\t\t{ \"px\": [384,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3552,128] },\n\t\t\t\t\t{ \"px\": [400,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3553,128] },\n\t\t\t\t\t{ \"px\": [416,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3554,128] },\n\t\t\t\t\t{ \"px\": [432,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3555,128] },\n\t\t\t\t\t{ \"px\": [448,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3556,128] },\n\t\t\t\t\t{ \"px\": [464,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3557,128] },\n\t\t\t\t\t{ \"px\": [480,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3558,128] },\n\t\t\t\t\t{ \"px\": [496,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3559,128] },\n\t\t\t\t\t{ \"px\": [512,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3560,128] },\n\t\t\t\t\t{ \"px\": [528,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3561,128] },\n\t\t\t\t\t{ \"px\": [544,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3562,128] },\n\t\t\t\t\t{ \"px\": [560,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3563,128] },\n\t\t\t\t\t{ \"px\": [576,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3564,128] },\n\t\t\t\t\t{ \"px\": [592,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3565,128] },\n\t\t\t\t\t{ \"px\": [608,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3566,128] },\n\t\t\t\t\t{ \"px\": [624,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3567,128] },\n\t\t\t\t\t{ \"px\": [640,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3568,128] },\n\t\t\t\t\t{ \"px\": [656,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3569,128] },\n\t\t\t\t\t{ \"px\": [672,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3570,128] },\n\t\t\t\t\t{ \"px\": [688,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3571,128] },\n\t\t\t\t\t{ \"px\": [704,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3572,128] },\n\t\t\t\t\t{ \"px\": [720,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3573,128] },\n\t\t\t\t\t{ \"px\": [736,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3574,128] },\n\t\t\t\t\t{ \"px\": [752,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3575,128] },\n\t\t\t\t\t{ \"px\": [768,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3576,128] },\n\t\t\t\t\t{ \"px\": [784,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3577,128] },\n\t\t\t\t\t{ \"px\": [800,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3578,128] },\n\t\t\t\t\t{ \"px\": [816,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3579,128] },\n\t\t\t\t\t{ \"px\": [832,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3580,128] },\n\t\t\t\t\t{ \"px\": [848,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3581,128] },\n\t\t\t\t\t{ \"px\": [864,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3582,128] },\n\t\t\t\t\t{ \"px\": [880,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3583,128] },\n\t\t\t\t\t{ \"px\": [896,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3584,128] },\n\t\t\t\t\t{ \"px\": [912,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3585,128] },\n\t\t\t\t\t{ \"px\": [928,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3586,128] },\n\t\t\t\t\t{ \"px\": [944,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3587,128] },\n\t\t\t\t\t{ \"px\": [960,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3588,128] },\n\t\t\t\t\t{ \"px\": [976,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3589,128] },\n\t\t\t\t\t{ \"px\": [992,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3590,128] },\n\t\t\t\t\t{ \"px\": [1008,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3591,128] },\n\t\t\t\t\t{ \"px\": [1024,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3592,128] },\n\t\t\t\t\t{ \"px\": [1040,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3593,128] },\n\t\t\t\t\t{ \"px\": [1056,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3594,128] },\n\t\t\t\t\t{ \"px\": [1072,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3595,128] },\n\t\t\t\t\t{ \"px\": [1088,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3596,128] },\n\t\t\t\t\t{ \"px\": [1104,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3597,128] },\n\t\t\t\t\t{ \"px\": [1120,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3598,128] },\n\t\t\t\t\t{ \"px\": [1136,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3599,128] },\n\t\t\t\t\t{ \"px\": [1152,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3600,128] },\n\t\t\t\t\t{ \"px\": [1168,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3601,128] },\n\t\t\t\t\t{ \"px\": [1184,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3602,128] },\n\t\t\t\t\t{ \"px\": [1200,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3603,128] },\n\t\t\t\t\t{ \"px\": [1216,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3604,128] },\n\t\t\t\t\t{ \"px\": [1232,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3605,128] },\n\t\t\t\t\t{ \"px\": [1248,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3606,128] },\n\t\t\t\t\t{ \"px\": [1264,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3607,128] },\n\t\t\t\t\t{ \"px\": [1280,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3608,128] },\n\t\t\t\t\t{ \"px\": [1296,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3609,128] },\n\t\t\t\t\t{ \"px\": [1312,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3610,128] },\n\t\t\t\t\t{ \"px\": [1328,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3611,128] },\n\t\t\t\t\t{ \"px\": [1344,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3612,128] },\n\t\t\t\t\t{ \"px\": [1360,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3613,128] },\n\t\t\t\t\t{ \"px\": [1376,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3614,128] },\n\t\t\t\t\t{ \"px\": [1392,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3615,128] },\n\t\t\t\t\t{ \"px\": [1408,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3616,128] },\n\t\t\t\t\t{ \"px\": [1424,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3617,128] },\n\t\t\t\t\t{ \"px\": [1440,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3618,128] },\n\t\t\t\t\t{ \"px\": [1456,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3619,128] },\n\t\t\t\t\t{ \"px\": [1472,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3620,128] },\n\t\t\t\t\t{ \"px\": [1488,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3621,128] },\n\t\t\t\t\t{ \"px\": [1504,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3622,128] },\n\t\t\t\t\t{ \"px\": [1520,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3623,128] },\n\t\t\t\t\t{ \"px\": [1536,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3624,128] },\n\t\t\t\t\t{ \"px\": [1552,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3625,128] },\n\t\t\t\t\t{ \"px\": [1568,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3626,128] },\n\t\t\t\t\t{ \"px\": [1584,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3627,128] },\n\t\t\t\t\t{ \"px\": [1600,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3628,128] },\n\t\t\t\t\t{ \"px\": [1616,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3629,128] },\n\t\t\t\t\t{ \"px\": [1632,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3630,128] },\n\t\t\t\t\t{ \"px\": [1648,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3631,128] },\n\t\t\t\t\t{ \"px\": [1664,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3632,128] },\n\t\t\t\t\t{ \"px\": [1680,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3633,128] },\n\t\t\t\t\t{ \"px\": [1696,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3634,128] },\n\t\t\t\t\t{ \"px\": [1712,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3635,128] },\n\t\t\t\t\t{ \"px\": [1728,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3636,128] },\n\t\t\t\t\t{ \"px\": [1744,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3637,128] },\n\t\t\t\t\t{ \"px\": [1760,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3638,128] },\n\t\t\t\t\t{ \"px\": [1776,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3639,128] },\n\t\t\t\t\t{ \"px\": [1792,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3640,128] },\n\t\t\t\t\t{ \"px\": [1808,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3641,128] },\n\t\t\t\t\t{ \"px\": [1824,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3642,128] },\n\t\t\t\t\t{ \"px\": [1840,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3643,128] },\n\t\t\t\t\t{ \"px\": [1856,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3644,128] },\n\t\t\t\t\t{ \"px\": [1872,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3645,128] },\n\t\t\t\t\t{ \"px\": [1888,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3646,128] },\n\t\t\t\t\t{ \"px\": [1904,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3647,128] },\n\t\t\t\t\t{ \"px\": [1920,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3648,128] },\n\t\t\t\t\t{ \"px\": [1936,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3649,128] },\n\t\t\t\t\t{ \"px\": [1952,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3650,128] },\n\t\t\t\t\t{ \"px\": [1968,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3651,128] },\n\t\t\t\t\t{ \"px\": [1984,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3652,128] },\n\t\t\t\t\t{ \"px\": [2000,448], \"src\": [0,64], \"f\": 0, \"d\": [42,3653,128] },\n\t\t\t\t\t{ \"px\": [0,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3654,128] },\n\t\t\t\t\t{ \"px\": [16,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3655,128] },\n\t\t\t\t\t{ \"px\": [32,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3656,128] },\n\t\t\t\t\t{ \"px\": [48,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3657,128] },\n\t\t\t\t\t{ \"px\": [64,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3658,128] },\n\t\t\t\t\t{ \"px\": [80,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3659,128] },\n\t\t\t\t\t{ \"px\": [96,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3660,128] },\n\t\t\t\t\t{ \"px\": [112,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3661,128] },\n\t\t\t\t\t{ \"px\": [128,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3662,128] },\n\t\t\t\t\t{ \"px\": [144,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3663,128] },\n\t\t\t\t\t{ \"px\": [160,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3664,128] },\n\t\t\t\t\t{ \"px\": [176,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3665,128] },\n\t\t\t\t\t{ \"px\": [192,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3666,128] },\n\t\t\t\t\t{ \"px\": [208,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3667,128] },\n\t\t\t\t\t{ \"px\": [224,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3668,128] },\n\t\t\t\t\t{ \"px\": [240,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3669,128] },\n\t\t\t\t\t{ \"px\": [256,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3670,128] },\n\t\t\t\t\t{ \"px\": [272,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3671,128] },\n\t\t\t\t\t{ \"px\": [288,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3672,128] },\n\t\t\t\t\t{ \"px\": [304,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3673,128] },\n\t\t\t\t\t{ \"px\": [320,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3674,128] },\n\t\t\t\t\t{ \"px\": [336,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3675,128] },\n\t\t\t\t\t{ \"px\": [352,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3676,128] },\n\t\t\t\t\t{ \"px\": [368,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3677,128] },\n\t\t\t\t\t{ \"px\": [384,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3678,128] },\n\t\t\t\t\t{ \"px\": [400,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3679,128] },\n\t\t\t\t\t{ \"px\": [416,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3680,128] },\n\t\t\t\t\t{ \"px\": [432,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3681,128] },\n\t\t\t\t\t{ \"px\": [448,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3682,128] },\n\t\t\t\t\t{ \"px\": [464,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3683,128] },\n\t\t\t\t\t{ \"px\": [480,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3684,128] },\n\t\t\t\t\t{ \"px\": [496,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3685,128] },\n\t\t\t\t\t{ \"px\": [512,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3686,128] },\n\t\t\t\t\t{ \"px\": [528,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3687,128] },\n\t\t\t\t\t{ \"px\": [544,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3688,128] },\n\t\t\t\t\t{ \"px\": [560,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3689,128] },\n\t\t\t\t\t{ \"px\": [576,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3690,128] },\n\t\t\t\t\t{ \"px\": [592,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3691,128] },\n\t\t\t\t\t{ \"px\": [608,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3692,128] },\n\t\t\t\t\t{ \"px\": [624,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3693,128] },\n\t\t\t\t\t{ \"px\": [640,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3694,128] },\n\t\t\t\t\t{ \"px\": [656,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3695,128] },\n\t\t\t\t\t{ \"px\": [672,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3696,128] },\n\t\t\t\t\t{ \"px\": [688,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3697,128] },\n\t\t\t\t\t{ \"px\": [704,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3698,128] },\n\t\t\t\t\t{ \"px\": [720,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3699,128] },\n\t\t\t\t\t{ \"px\": [736,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3700,128] },\n\t\t\t\t\t{ \"px\": [752,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3701,128] },\n\t\t\t\t\t{ \"px\": [768,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3702,128] },\n\t\t\t\t\t{ \"px\": [784,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3703,128] },\n\t\t\t\t\t{ \"px\": [800,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3704,128] },\n\t\t\t\t\t{ \"px\": [816,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3705,128] },\n\t\t\t\t\t{ \"px\": [832,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3706,128] },\n\t\t\t\t\t{ \"px\": [848,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3707,128] },\n\t\t\t\t\t{ \"px\": [864,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3708,128] },\n\t\t\t\t\t{ \"px\": [880,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3709,128] },\n\t\t\t\t\t{ \"px\": [896,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3710,128] },\n\t\t\t\t\t{ \"px\": [912,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3711,128] },\n\t\t\t\t\t{ \"px\": [928,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3712,128] },\n\t\t\t\t\t{ \"px\": [944,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3713,128] },\n\t\t\t\t\t{ \"px\": [960,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3714,128] },\n\t\t\t\t\t{ \"px\": [976,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3715,128] },\n\t\t\t\t\t{ \"px\": [992,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3716,128] },\n\t\t\t\t\t{ \"px\": [1008,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3717,128] },\n\t\t\t\t\t{ \"px\": [1024,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3718,128] },\n\t\t\t\t\t{ \"px\": [1040,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3719,128] },\n\t\t\t\t\t{ \"px\": [1056,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3720,128] },\n\t\t\t\t\t{ \"px\": [1072,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3721,128] },\n\t\t\t\t\t{ \"px\": [1088,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3722,128] },\n\t\t\t\t\t{ \"px\": [1104,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3723,128] },\n\t\t\t\t\t{ \"px\": [1120,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3724,128] },\n\t\t\t\t\t{ \"px\": [1136,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3725,128] },\n\t\t\t\t\t{ \"px\": [1152,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3726,128] },\n\t\t\t\t\t{ \"px\": [1168,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3727,128] },\n\t\t\t\t\t{ \"px\": [1184,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3728,128] },\n\t\t\t\t\t{ \"px\": [1200,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3729,128] },\n\t\t\t\t\t{ \"px\": [1216,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3730,128] },\n\t\t\t\t\t{ \"px\": [1232,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3731,128] },\n\t\t\t\t\t{ \"px\": [1248,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3732,128] },\n\t\t\t\t\t{ \"px\": [1264,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3733,128] },\n\t\t\t\t\t{ \"px\": [1280,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3734,128] },\n\t\t\t\t\t{ \"px\": [1296,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3735,128] },\n\t\t\t\t\t{ \"px\": [1312,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3736,128] },\n\t\t\t\t\t{ \"px\": [1328,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3737,128] },\n\t\t\t\t\t{ \"px\": [1344,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3738,128] },\n\t\t\t\t\t{ \"px\": [1360,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3739,128] },\n\t\t\t\t\t{ \"px\": [1376,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3740,128] },\n\t\t\t\t\t{ \"px\": [1392,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3741,128] },\n\t\t\t\t\t{ \"px\": [1408,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3742,128] },\n\t\t\t\t\t{ \"px\": [1424,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3743,128] },\n\t\t\t\t\t{ \"px\": [1440,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3744,128] },\n\t\t\t\t\t{ \"px\": [1456,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3745,128] },\n\t\t\t\t\t{ \"px\": [1472,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3746,128] },\n\t\t\t\t\t{ \"px\": [1488,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3747,128] },\n\t\t\t\t\t{ \"px\": [1504,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3748,128] },\n\t\t\t\t\t{ \"px\": [1520,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3749,128] },\n\t\t\t\t\t{ \"px\": [1536,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3750,128] },\n\t\t\t\t\t{ \"px\": [1552,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3751,128] },\n\t\t\t\t\t{ \"px\": [1568,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3752,128] },\n\t\t\t\t\t{ \"px\": [1584,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3753,128] },\n\t\t\t\t\t{ \"px\": [1600,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3754,128] },\n\t\t\t\t\t{ \"px\": [1616,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3755,128] },\n\t\t\t\t\t{ \"px\": [1632,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3756,128] },\n\t\t\t\t\t{ \"px\": [1648,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3757,128] },\n\t\t\t\t\t{ \"px\": [1664,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3758,128] },\n\t\t\t\t\t{ \"px\": [1680,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3759,128] },\n\t\t\t\t\t{ \"px\": [1696,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3760,128] },\n\t\t\t\t\t{ \"px\": [1712,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3761,128] },\n\t\t\t\t\t{ \"px\": [1728,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3762,128] },\n\t\t\t\t\t{ \"px\": [1744,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3763,128] },\n\t\t\t\t\t{ \"px\": [1760,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3764,128] },\n\t\t\t\t\t{ \"px\": [1776,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3765,128] },\n\t\t\t\t\t{ \"px\": [1792,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3766,128] },\n\t\t\t\t\t{ \"px\": [1808,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3767,128] },\n\t\t\t\t\t{ \"px\": [1824,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3768,128] },\n\t\t\t\t\t{ \"px\": [1840,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3769,128] },\n\t\t\t\t\t{ \"px\": [1856,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3770,128] },\n\t\t\t\t\t{ \"px\": [1872,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3771,128] },\n\t\t\t\t\t{ \"px\": [1888,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3772,128] },\n\t\t\t\t\t{ \"px\": [1904,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3773,128] },\n\t\t\t\t\t{ \"px\": [1920,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3774,128] },\n\t\t\t\t\t{ \"px\": [1936,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3775,128] },\n\t\t\t\t\t{ \"px\": [1952,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3776,128] },\n\t\t\t\t\t{ \"px\": [1968,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3777,128] },\n\t\t\t\t\t{ \"px\": [1984,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3778,128] },\n\t\t\t\t\t{ \"px\": [2000,464], \"src\": [0,64], \"f\": 0, \"d\": [42,3779,128] },\n\t\t\t\t\t{ \"px\": [0,0], \"src\": [0,80], \"f\": 0, \"d\": [47,0,160] },\n\t\t\t\t\t{ \"px\": [32,0], \"src\": [0,80], \"f\": 0, \"d\": [47,2,160] },\n\t\t\t\t\t{ \"px\": [64,0], \"src\": [0,80], \"f\": 0, \"d\": [47,4,160] },\n\t\t\t\t\t{ \"px\": [96,0], \"src\": [0,80], \"f\": 0, \"d\": [47,6,160] },\n\t\t\t\t\t{ \"px\": [128,0], \"src\": [0,80], \"f\": 0, \"d\": [47,8,160] },\n\t\t\t\t\t{ \"px\": [160,0], \"src\": [0,80], \"f\": 0, \"d\": [47,10,160] },\n\t\t\t\t\t{ \"px\": [192,0], \"src\": [0,80], \"f\": 0, \"d\": [47,12,160] },\n\t\t\t\t\t{ \"px\": [224,0], \"src\": [0,80], \"f\": 0, \"d\": [47,14,160] },\n\t\t\t\t\t{ \"px\": [256,0], \"src\": [0,80], \"f\": 0, \"d\": [47,16,160] },\n\t\t\t\t\t{ \"px\": [288,0], \"src\": [0,80], \"f\": 0, \"d\": [47,18,160] },\n\t\t\t\t\t{ \"px\": [320,0], \"src\": [0,80], \"f\": 0, \"d\": [47,20,160] },\n\t\t\t\t\t{ \"px\": [352,0], \"src\": [0,80], \"f\": 0, \"d\": [47,22,160] },\n\t\t\t\t\t{ \"px\": [384,0], \"src\": [0,80], \"f\": 0, \"d\": [47,24,160] },\n\t\t\t\t\t{ \"px\": [416,0], \"src\": [0,80], \"f\": 0, \"d\": [47,26,160] },\n\t\t\t\t\t{ \"px\": [448,0], \"src\": [0,80], \"f\": 0, \"d\": [47,28,160] },\n\t\t\t\t\t{ \"px\": [480,0], \"src\": [0,80], \"f\": 0, \"d\": [47,30,160] },\n\t\t\t\t\t{ \"px\": [512,0], \"src\": [0,80], \"f\": 0, \"d\": [47,32,160] },\n\t\t\t\t\t{ \"px\": [544,0], \"src\": [0,80], \"f\": 0, \"d\": [47,34,160] },\n\t\t\t\t\t{ \"px\": [576,0], \"src\": [0,80], \"f\": 0, \"d\": [47,36,160] },\n\t\t\t\t\t{ \"px\": [608,0], \"src\": [0,80], \"f\": 0, \"d\": [47,38,160] },\n\t\t\t\t\t{ \"px\": [640,0], \"src\": [0,80], \"f\": 0, \"d\": [47,40,160] },\n\t\t\t\t\t{ \"px\": [672,0], \"src\": [0,80], \"f\": 0, \"d\": [47,42,160] },\n\t\t\t\t\t{ \"px\": [704,0], \"src\": [0,80], \"f\": 0, \"d\": [47,44,160] },\n\t\t\t\t\t{ \"px\": [736,0], \"src\": [0,80], \"f\": 0, \"d\": [47,46,160] },\n\t\t\t\t\t{ \"px\": [1696,0], \"src\": [0,80], \"f\": 0, \"d\": [47,106,160] },\n\t\t\t\t\t{ \"px\": [1728,0], \"src\": [0,80], \"f\": 0, \"d\": [47,108,160] },\n\t\t\t\t\t{ \"px\": [1760,0], \"src\": [0,80], \"f\": 0, \"d\": [47,110,160] },\n\t\t\t\t\t{ \"px\": [1792,0], \"src\": [0,80], \"f\": 0, \"d\": [47,112,160] },\n\t\t\t\t\t{ \"px\": [1824,0], \"src\": [0,80], \"f\": 0, \"d\": [47,114,160] },\n\t\t\t\t\t{ \"px\": [1856,0], \"src\": [0,80], \"f\": 0, \"d\": [47,116,160] },\n\t\t\t\t\t{ \"px\": [1888,0], \"src\": [0,80], \"f\": 0, \"d\": [47,118,160] },\n\t\t\t\t\t{ \"px\": [1920,0], \"src\": [0,80], \"f\": 0, \"d\": [47,120,160] },\n\t\t\t\t\t{ \"px\": [1952,0], \"src\": [0,80], \"f\": 0, \"d\": [47,122,160] },\n\t\t\t\t\t{ \"px\": [1984,0], \"src\": [0,80], \"f\": 0, \"d\": [47,124,160] },\n\t\t\t\t\t{ \"px\": [16,16], \"src\": [0,80], \"f\": 0, \"d\": [47,127,160] },\n\t\t\t\t\t{ \"px\": [48,16], \"src\": [0,80], \"f\": 0, \"d\": [47,129,160] },\n\t\t\t\t\t{ \"px\": [80,16], \"src\": [0,80], \"f\": 0, \"d\": [47,131,160] },\n\t\t\t\t\t{ \"px\": [112,16], \"src\": [0,80], \"f\": 0, \"d\": [47,133,160] },\n\t\t\t\t\t{ \"px\": [144,16], \"src\": [0,80], \"f\": 0, \"d\": [47,135,160] },\n\t\t\t\t\t{ \"px\": [176,16], \"src\": [0,80], \"f\": 0, \"d\": [47,137,160] },\n\t\t\t\t\t{ \"px\": [208,16], \"src\": [0,80], \"f\": 0, \"d\": [47,139,160] },\n\t\t\t\t\t{ \"px\": [240,16], \"src\": [0,80], \"f\": 0, \"d\": [47,141,160] },\n\t\t\t\t\t{ \"px\": [272,16], \"src\": [0,80], \"f\": 0, \"d\": [47,143,160] },\n\t\t\t\t\t{ \"px\": [304,16], \"src\": [0,80], \"f\": 0, \"d\": [47,145,160] },\n\t\t\t\t\t{ \"px\": [336,16], \"src\": [0,80], \"f\": 0, \"d\": [47,147,160] },\n\t\t\t\t\t{ \"px\": [368,16], \"src\": [0,80], \"f\": 0, \"d\": [47,149,160] },\n\t\t\t\t\t{ \"px\": [400,16], \"src\": [0,80], \"f\": 0, \"d\": [47,151,160] },\n\t\t\t\t\t{ \"px\": [432,16], \"src\": [0,80], \"f\": 0, \"d\": [47,153,160] },\n\t\t\t\t\t{ \"px\": [464,16], \"src\": [0,80], \"f\": 0, \"d\": [47,155,160] },\n\t\t\t\t\t{ \"px\": [496,16], \"src\": [0,80], \"f\": 0, \"d\": [47,157,160] },\n\t\t\t\t\t{ \"px\": [528,16], \"src\": [0,80], \"f\": 0, \"d\": [47,159,160] },\n\t\t\t\t\t{ \"px\": [560,16], \"src\": [0,80], \"f\": 0, \"d\": [47,161,160] },\n\t\t\t\t\t{ \"px\": [592,16], \"src\": [0,80], \"f\": 0, \"d\": [47,163,160] },\n\t\t\t\t\t{ \"px\": [624,16], \"src\": [0,80], \"f\": 0, \"d\": [47,165,160] },\n\t\t\t\t\t{ \"px\": [656,16], \"src\": [0,80], \"f\": 0, \"d\": [47,167,160] },\n\t\t\t\t\t{ \"px\": [688,16], \"src\": [0,80], \"f\": 0, \"d\": [47,169,160] },\n\t\t\t\t\t{ \"px\": [720,16], \"src\": [0,80], \"f\": 0, \"d\": [47,171,160] },\n\t\t\t\t\t{ \"px\": [1712,16], \"src\": [0,80], \"f\": 0, \"d\": [47,233,160] },\n\t\t\t\t\t{ \"px\": [1744,16], \"src\": [0,80], \"f\": 0, \"d\": [47,235,160] },\n\t\t\t\t\t{ \"px\": [1776,16], \"src\": [0,80], \"f\": 0, \"d\": [47,237,160] },\n\t\t\t\t\t{ \"px\": [1808,16], \"src\": [0,80], \"f\": 0, \"d\": [47,239,160] },\n\t\t\t\t\t{ \"px\": [1840,16], \"src\": [0,80], \"f\": 0, \"d\": [47,241,160] },\n\t\t\t\t\t{ \"px\": [1872,16], \"src\": [0,80], \"f\": 0, \"d\": [47,243,160] },\n\t\t\t\t\t{ \"px\": [1904,16], \"src\": [0,80], \"f\": 0, \"d\": [47,245,160] },\n\t\t\t\t\t{ \"px\": [1936,16], \"src\": [0,80], \"f\": 0, \"d\": [47,247,160] },\n\t\t\t\t\t{ \"px\": [1968,16], \"src\": [0,80], \"f\": 0, \"d\": [47,249,160] },\n\t\t\t\t\t{ \"px\": [2000,16], \"src\": [0,80], \"f\": 0, \"d\": [47,251,160] },\n\t\t\t\t\t{ \"px\": [0,32], \"src\": [0,80], \"f\": 0, \"d\": [47,252,160] },\n\t\t\t\t\t{ \"px\": [32,32], \"src\": [0,80], \"f\": 0, \"d\": [47,254,160] },\n\t\t\t\t\t{ \"px\": [64,32], \"src\": [0,80], \"f\": 0, \"d\": [47,256,160] },\n\t\t\t\t\t{ \"px\": [96,32], \"src\": [0,80], \"f\": 0, \"d\": [47,258,160] },\n\t\t\t\t\t{ \"px\": [128,32], \"src\": [0,80], \"f\": 0, \"d\": [47,260,160] },\n\t\t\t\t\t{ \"px\": [160,32], \"src\": [0,80], \"f\": 0, \"d\": [47,262,160] },\n\t\t\t\t\t{ \"px\": [192,32], \"src\": [0,80], \"f\": 0, \"d\": [47,264,160] },\n\t\t\t\t\t{ \"px\": [224,32], \"src\": [0,80], \"f\": 0, \"d\": [47,266,160] },\n\t\t\t\t\t{ \"px\": [256,32], \"src\": [0,80], \"f\": 0, \"d\": [47,268,160] },\n\t\t\t\t\t{ \"px\": [288,32], \"src\": [0,80], \"f\": 0, \"d\": [47,270,160] },\n\t\t\t\t\t{ \"px\": [320,32], \"src\": [0,80], \"f\": 0, \"d\": [47,272,160] },\n\t\t\t\t\t{ \"px\": [352,32], \"src\": [0,80], \"f\": 0, \"d\": [47,274,160] },\n\t\t\t\t\t{ \"px\": [384,32], \"src\": [0,80], \"f\": 0, \"d\": [47,276,160] },\n\t\t\t\t\t{ \"px\": [416,32], \"src\": [0,80], \"f\": 0, \"d\": [47,278,160] },\n\t\t\t\t\t{ \"px\": [448,32], \"src\": [0,80], \"f\": 0, \"d\": [47,280,160] },\n\t\t\t\t\t{ \"px\": [480,32], \"src\": [0,80], \"f\": 0, \"d\": [47,282,160] },\n\t\t\t\t\t{ \"px\": [512,32], \"src\": [0,80], \"f\": 0, \"d\": [47,284,160] },\n\t\t\t\t\t{ \"px\": [544,32], \"src\": [0,80], \"f\": 0, \"d\": [47,286,160] },\n\t\t\t\t\t{ \"px\": [576,32], \"src\": [0,80], \"f\": 0, \"d\": [47,288,160] },\n\t\t\t\t\t{ \"px\": [608,32], \"src\": [0,80], \"f\": 0, \"d\": [47,290,160] },\n\t\t\t\t\t{ \"px\": [640,32], \"src\": [0,80], \"f\": 0, \"d\": [47,292,160] },\n\t\t\t\t\t{ \"px\": [672,32], \"src\": [0,80], \"f\": 0, \"d\": [47,294,160] },\n\t\t\t\t\t{ \"px\": [704,32], \"src\": [0,80], \"f\": 0, \"d\": [47,296,160] },\n\t\t\t\t\t{ \"px\": [736,32], \"src\": [0,80], \"f\": 0, \"d\": [47,298,160] },\n\t\t\t\t\t{ \"px\": [1696,32], \"src\": [0,80], \"f\": 0, \"d\": [47,358,160] },\n\t\t\t\t\t{ \"px\": [1728,32], \"src\": [0,80], \"f\": 0, \"d\": [47,360,160] },\n\t\t\t\t\t{ \"px\": [1760,32], \"src\": [0,80], \"f\": 0, \"d\": [47,362,160] },\n\t\t\t\t\t{ \"px\": [1792,32], \"src\": [0,80], \"f\": 0, \"d\": [47,364,160] },\n\t\t\t\t\t{ \"px\": [1824,32], \"src\": [0,80], \"f\": 0, \"d\": [47,366,160] },\n\t\t\t\t\t{ \"px\": [1856,32], \"src\": [0,80], \"f\": 0, \"d\": [47,368,160] },\n\t\t\t\t\t{ \"px\": [1888,32], \"src\": [0,80], \"f\": 0, \"d\": [47,370,160] },\n\t\t\t\t\t{ \"px\": [1920,32], \"src\": [0,80], \"f\": 0, \"d\": [47,372,160] },\n\t\t\t\t\t{ \"px\": [1952,32], \"src\": [0,80], \"f\": 0, \"d\": [47,374,160] },\n\t\t\t\t\t{ \"px\": [1984,32], \"src\": [0,80], \"f\": 0, \"d\": [47,376,160] },\n\t\t\t\t\t{ \"px\": [16,48], \"src\": [0,80], \"f\": 0, \"d\": [47,379,160] },\n\t\t\t\t\t{ \"px\": [48,48], \"src\": [0,80], \"f\": 0, \"d\": [47,381,160] },\n\t\t\t\t\t{ \"px\": [80,48], \"src\": [0,80], \"f\": 0, \"d\": [47,383,160] },\n\t\t\t\t\t{ \"px\": [112,48], \"src\": [0,80], \"f\": 0, \"d\": [47,385,160] },\n\t\t\t\t\t{ \"px\": [144,48], \"src\": [0,80], \"f\": 0, \"d\": [47,387,160] },\n\t\t\t\t\t{ \"px\": [176,48], \"src\": [0,80], \"f\": 0, \"d\": [47,389,160] },\n\t\t\t\t\t{ \"px\": [208,48], \"src\": [0,80], \"f\": 0, \"d\": [47,391,160] },\n\t\t\t\t\t{ \"px\": [240,48], \"src\": [0,80], \"f\": 0, \"d\": [47,393,160] },\n\t\t\t\t\t{ \"px\": [272,48], \"src\": [0,80], \"f\": 0, \"d\": [47,395,160] },\n\t\t\t\t\t{ \"px\": [304,48], \"src\": [0,80], \"f\": 0, \"d\": [47,397,160] },\n\t\t\t\t\t{ \"px\": [336,48], \"src\": [0,80], \"f\": 0, \"d\": [47,399,160] },\n\t\t\t\t\t{ \"px\": [368,48], \"src\": [0,80], \"f\": 0, \"d\": [47,401,160] },\n\t\t\t\t\t{ \"px\": [400,48], \"src\": [0,80], \"f\": 0, \"d\": [47,403,160] },\n\t\t\t\t\t{ \"px\": [432,48], \"src\": [0,80], \"f\": 0, \"d\": [47,405,160] },\n\t\t\t\t\t{ \"px\": [464,48], \"src\": [0,80], \"f\": 0, \"d\": [47,407,160] },\n\t\t\t\t\t{ \"px\": [496,48], \"src\": [0,80], \"f\": 0, \"d\": [47,409,160] },\n\t\t\t\t\t{ \"px\": [528,48], \"src\": [0,80], \"f\": 0, \"d\": [47,411,160] },\n\t\t\t\t\t{ \"px\": [560,48], \"src\": [0,80], \"f\": 0, \"d\": [47,413,160] },\n\t\t\t\t\t{ \"px\": [592,48], \"src\": [0,80], \"f\": 0, \"d\": [47,415,160] },\n\t\t\t\t\t{ \"px\": [624,48], \"src\": [0,80], \"f\": 0, \"d\": [47,417,160] },\n\t\t\t\t\t{ \"px\": [656,48], \"src\": [0,80], \"f\": 0, \"d\": [47,419,160] },\n\t\t\t\t\t{ \"px\": [688,48], \"src\": [0,80], \"f\": 0, \"d\": [47,421,160] },\n\t\t\t\t\t{ \"px\": [720,48], \"src\": [0,80], \"f\": 0, \"d\": [47,423,160] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [0,80], \"f\": 0, \"d\": [47,475,160] },\n\t\t\t\t\t{ \"px\": [1584,48], \"src\": [0,80], \"f\": 0, \"d\": [47,477,160] },\n\t\t\t\t\t{ \"px\": [1616,48], \"src\": [0,80], \"f\": 0, \"d\": [47,479,160] },\n\t\t\t\t\t{ \"px\": [1648,48], \"src\": [0,80], \"f\": 0, \"d\": [47,481,160] },\n\t\t\t\t\t{ \"px\": [1680,48], \"src\": [0,80], \"f\": 0, \"d\": [47,483,160] },\n\t\t\t\t\t{ \"px\": [1712,48], \"src\": [0,80], \"f\": 0, \"d\": [47,485,160] },\n\t\t\t\t\t{ \"px\": [1744,48], \"src\": [0,80], \"f\": 0, \"d\": [47,487,160] },\n\t\t\t\t\t{ \"px\": [1776,48], \"src\": [0,80], \"f\": 0, \"d\": [47,489,160] },\n\t\t\t\t\t{ \"px\": [1808,48], \"src\": [0,80], \"f\": 0, \"d\": [47,491,160] },\n\t\t\t\t\t{ \"px\": [1840,48], \"src\": [0,80], \"f\": 0, \"d\": [47,493,160] },\n\t\t\t\t\t{ \"px\": [1872,48], \"src\": [0,80], \"f\": 0, \"d\": [47,495,160] },\n\t\t\t\t\t{ \"px\": [1904,48], \"src\": [0,80], \"f\": 0, \"d\": [47,497,160] },\n\t\t\t\t\t{ \"px\": [1936,48], \"src\": [0,80], \"f\": 0, \"d\": [47,499,160] },\n\t\t\t\t\t{ \"px\": [1968,48], \"src\": [0,80], \"f\": 0, \"d\": [47,501,160] },\n\t\t\t\t\t{ \"px\": [2000,48], \"src\": [0,80], \"f\": 0, \"d\": [47,503,160] },\n\t\t\t\t\t{ \"px\": [0,64], \"src\": [0,80], \"f\": 0, \"d\": [47,504,160] },\n\t\t\t\t\t{ \"px\": [32,64], \"src\": [0,80], \"f\": 0, \"d\": [47,506,160] },\n\t\t\t\t\t{ \"px\": [64,64], \"src\": [0,80], \"f\": 0, \"d\": [47,508,160] },\n\t\t\t\t\t{ \"px\": [96,64], \"src\": [0,80], \"f\": 0, \"d\": [47,510,160] },\n\t\t\t\t\t{ \"px\": [128,64], \"src\": [0,80], \"f\": 0, \"d\": [47,512,160] },\n\t\t\t\t\t{ \"px\": [160,64], \"src\": [0,80], \"f\": 0, \"d\": [47,514,160] },\n\t\t\t\t\t{ \"px\": [192,64], \"src\": [0,80], \"f\": 0, \"d\": [47,516,160] },\n\t\t\t\t\t{ \"px\": [224,64], \"src\": [0,80], \"f\": 0, \"d\": [47,518,160] },\n\t\t\t\t\t{ \"px\": [256,64], \"src\": [0,80], \"f\": 0, \"d\": [47,520,160] },\n\t\t\t\t\t{ \"px\": [288,64], \"src\": [0,80], \"f\": 0, \"d\": [47,522,160] },\n\t\t\t\t\t{ \"px\": [320,64], \"src\": [0,80], \"f\": 0, \"d\": [47,524,160] },\n\t\t\t\t\t{ \"px\": [352,64], \"src\": [0,80], \"f\": 0, \"d\": [47,526,160] },\n\t\t\t\t\t{ \"px\": [384,64], \"src\": [0,80], \"f\": 0, \"d\": [47,528,160] },\n\t\t\t\t\t{ \"px\": [416,64], \"src\": [0,80], \"f\": 0, \"d\": [47,530,160] },\n\t\t\t\t\t{ \"px\": [448,64], \"src\": [0,80], \"f\": 0, \"d\": [47,532,160] },\n\t\t\t\t\t{ \"px\": [480,64], \"src\": [0,80], \"f\": 0, \"d\": [47,534,160] },\n\t\t\t\t\t{ \"px\": [512,64], \"src\": [0,80], \"f\": 0, \"d\": [47,536,160] },\n\t\t\t\t\t{ \"px\": [544,64], \"src\": [0,80], \"f\": 0, \"d\": [47,538,160] },\n\t\t\t\t\t{ \"px\": [576,64], \"src\": [0,80], \"f\": 0, \"d\": [47,540,160] },\n\t\t\t\t\t{ \"px\": [608,64], \"src\": [0,80], \"f\": 0, \"d\": [47,542,160] },\n\t\t\t\t\t{ \"px\": [640,64], \"src\": [0,80], \"f\": 0, \"d\": [47,544,160] },\n\t\t\t\t\t{ \"px\": [672,64], \"src\": [0,80], \"f\": 0, \"d\": [47,546,160] },\n\t\t\t\t\t{ \"px\": [704,64], \"src\": [0,80], \"f\": 0, \"d\": [47,548,160] },\n\t\t\t\t\t{ \"px\": [736,64], \"src\": [0,80], \"f\": 0, \"d\": [47,550,160] },\n\t\t\t\t\t{ \"px\": [1568,64], \"src\": [0,80], \"f\": 0, \"d\": [47,602,160] },\n\t\t\t\t\t{ \"px\": [1600,64], \"src\": [0,80], \"f\": 0, \"d\": [47,604,160] },\n\t\t\t\t\t{ \"px\": [1632,64], \"src\": [0,80], \"f\": 0, \"d\": [47,606,160] },\n\t\t\t\t\t{ \"px\": [1664,64], \"src\": [0,80], \"f\": 0, \"d\": [47,608,160] },\n\t\t\t\t\t{ \"px\": [1696,64], \"src\": [0,80], \"f\": 0, \"d\": [47,610,160] },\n\t\t\t\t\t{ \"px\": [1728,64], \"src\": [0,80], \"f\": 0, \"d\": [47,612,160] },\n\t\t\t\t\t{ \"px\": [1760,64], \"src\": [0,80], \"f\": 0, \"d\": [47,614,160] },\n\t\t\t\t\t{ \"px\": [1792,64], \"src\": [0,80], \"f\": 0, \"d\": [47,616,160] },\n\t\t\t\t\t{ \"px\": [1824,64], \"src\": [0,80], \"f\": 0, \"d\": [47,618,160] },\n\t\t\t\t\t{ \"px\": [1856,64], \"src\": [0,80], \"f\": 0, \"d\": [47,620,160] },\n\t\t\t\t\t{ \"px\": [1888,64], \"src\": [0,80], \"f\": 0, \"d\": [47,622,160] },\n\t\t\t\t\t{ \"px\": [1920,64], \"src\": [0,80], \"f\": 0, \"d\": [47,624,160] },\n\t\t\t\t\t{ \"px\": [1952,64], \"src\": [0,80], \"f\": 0, \"d\": [47,626,160] },\n\t\t\t\t\t{ \"px\": [1984,64], \"src\": [0,80], \"f\": 0, \"d\": [47,628,160] },\n\t\t\t\t\t{ \"px\": [16,80], \"src\": [0,80], \"f\": 0, \"d\": [47,631,160] },\n\t\t\t\t\t{ \"px\": [48,80], \"src\": [0,80], \"f\": 0, \"d\": [47,633,160] },\n\t\t\t\t\t{ \"px\": [80,80], \"src\": [0,80], \"f\": 0, \"d\": [47,635,160] },\n\t\t\t\t\t{ \"px\": [112,80], \"src\": [0,80], \"f\": 0, \"d\": [47,637,160] },\n\t\t\t\t\t{ \"px\": [144,80], \"src\": [0,80], \"f\": 0, \"d\": [47,639,160] },\n\t\t\t\t\t{ \"px\": [176,80], \"src\": [0,80], \"f\": 0, \"d\": [47,641,160] },\n\t\t\t\t\t{ \"px\": [208,80], \"src\": [0,80], \"f\": 0, \"d\": [47,643,160] },\n\t\t\t\t\t{ \"px\": [240,80], \"src\": [0,80], \"f\": 0, \"d\": [47,645,160] },\n\t\t\t\t\t{ \"px\": [272,80], \"src\": [0,80], \"f\": 0, \"d\": [47,647,160] },\n\t\t\t\t\t{ \"px\": [304,80], \"src\": [0,80], \"f\": 0, \"d\": [47,649,160] },\n\t\t\t\t\t{ \"px\": [336,80], \"src\": [0,80], \"f\": 0, \"d\": [47,651,160] },\n\t\t\t\t\t{ \"px\": [368,80], \"src\": [0,80], \"f\": 0, \"d\": [47,653,160] },\n\t\t\t\t\t{ \"px\": [400,80], \"src\": [0,80], \"f\": 0, \"d\": [47,655,160] },\n\t\t\t\t\t{ \"px\": [432,80], \"src\": [0,80], \"f\": 0, \"d\": [47,657,160] },\n\t\t\t\t\t{ \"px\": [464,80], \"src\": [0,80], \"f\": 0, \"d\": [47,659,160] },\n\t\t\t\t\t{ \"px\": [496,80], \"src\": [0,80], \"f\": 0, \"d\": [47,661,160] },\n\t\t\t\t\t{ \"px\": [528,80], \"src\": [0,80], \"f\": 0, \"d\": [47,663,160] },\n\t\t\t\t\t{ \"px\": [560,80], \"src\": [0,80], \"f\": 0, \"d\": [47,665,160] },\n\t\t\t\t\t{ \"px\": [592,80], \"src\": [0,80], \"f\": 0, \"d\": [47,667,160] },\n\t\t\t\t\t{ \"px\": [624,80], \"src\": [0,80], \"f\": 0, \"d\": [47,669,160] },\n\t\t\t\t\t{ \"px\": [656,80], \"src\": [0,80], \"f\": 0, \"d\": [47,671,160] },\n\t\t\t\t\t{ \"px\": [688,80], \"src\": [0,80], \"f\": 0, \"d\": [47,673,160] },\n\t\t\t\t\t{ \"px\": [720,80], \"src\": [0,80], \"f\": 0, \"d\": [47,675,160] },\n\t\t\t\t\t{ \"px\": [1552,80], \"src\": [0,80], \"f\": 0, \"d\": [47,727,160] },\n\t\t\t\t\t{ \"px\": [1584,80], \"src\": [0,80], \"f\": 0, \"d\": [47,729,160] },\n\t\t\t\t\t{ \"px\": [1616,80], \"src\": [0,80], \"f\": 0, \"d\": [47,731,160] },\n\t\t\t\t\t{ \"px\": [1648,80], \"src\": [0,80], \"f\": 0, \"d\": [47,733,160] },\n\t\t\t\t\t{ \"px\": [1680,80], \"src\": [0,80], \"f\": 0, \"d\": [47,735,160] },\n\t\t\t\t\t{ \"px\": [1712,80], \"src\": [0,80], \"f\": 0, \"d\": [47,737,160] },\n\t\t\t\t\t{ \"px\": [1744,80], \"src\": [0,80], \"f\": 0, \"d\": [47,739,160] },\n\t\t\t\t\t{ \"px\": [1776,80], \"src\": [0,80], \"f\": 0, \"d\": [47,741,160] },\n\t\t\t\t\t{ \"px\": [1808,80], \"src\": [0,80], \"f\": 0, \"d\": [47,743,160] },\n\t\t\t\t\t{ \"px\": [1840,80], \"src\": [0,80], \"f\": 0, \"d\": [47,745,160] },\n\t\t\t\t\t{ \"px\": [1872,80], \"src\": [0,80], \"f\": 0, \"d\": [47,747,160] },\n\t\t\t\t\t{ \"px\": [1904,80], \"src\": [0,80], \"f\": 0, \"d\": [47,749,160] },\n\t\t\t\t\t{ \"px\": [1936,80], \"src\": [0,80], \"f\": 0, \"d\": [47,751,160] },\n\t\t\t\t\t{ \"px\": [1968,80], \"src\": [0,80], \"f\": 0, \"d\": [47,753,160] },\n\t\t\t\t\t{ \"px\": [2000,80], \"src\": [0,80], \"f\": 0, \"d\": [47,755,160] },\n\t\t\t\t\t{ \"px\": [0,96], \"src\": [0,80], \"f\": 0, \"d\": [47,756,160] },\n\t\t\t\t\t{ \"px\": [32,96], \"src\": [0,80], \"f\": 0, \"d\": [47,758,160] },\n\t\t\t\t\t{ \"px\": [64,96], \"src\": [0,80], \"f\": 0, \"d\": [47,760,160] },\n\t\t\t\t\t{ \"px\": [736,96], \"src\": [0,80], \"f\": 0, \"d\": [47,802,160] },\n\t\t\t\t\t{ \"px\": [1568,96], \"src\": [0,80], \"f\": 0, \"d\": [47,854,160] },\n\t\t\t\t\t{ \"px\": [1600,96], \"src\": [0,80], \"f\": 0, \"d\": [47,856,160] },\n\t\t\t\t\t{ \"px\": [1632,96], \"src\": [0,80], \"f\": 0, \"d\": [47,858,160] },\n\t\t\t\t\t{ \"px\": [1664,96], \"src\": [0,80], \"f\": 0, \"d\": [47,860,160] },\n\t\t\t\t\t{ \"px\": [1696,96], \"src\": [0,80], \"f\": 0, \"d\": [47,862,160] },\n\t\t\t\t\t{ \"px\": [1728,96], \"src\": [0,80], \"f\": 0, \"d\": [47,864,160] },\n\t\t\t\t\t{ \"px\": [1760,96], \"src\": [0,80], \"f\": 0, \"d\": [47,866,160] },\n\t\t\t\t\t{ \"px\": [1792,96], \"src\": [0,80], \"f\": 0, \"d\": [47,868,160] },\n\t\t\t\t\t{ \"px\": [1824,96], \"src\": [0,80], \"f\": 0, \"d\": [47,870,160] },\n\t\t\t\t\t{ \"px\": [1856,96], \"src\": [0,80], \"f\": 0, \"d\": [47,872,160] },\n\t\t\t\t\t{ \"px\": [1888,96], \"src\": [0,80], \"f\": 0, \"d\": [47,874,160] },\n\t\t\t\t\t{ \"px\": [1920,96], \"src\": [0,80], \"f\": 0, \"d\": [47,876,160] },\n\t\t\t\t\t{ \"px\": [1952,96], \"src\": [0,80], \"f\": 0, \"d\": [47,878,160] },\n\t\t\t\t\t{ \"px\": [1984,96], \"src\": [0,80], \"f\": 0, \"d\": [47,880,160] },\n\t\t\t\t\t{ \"px\": [16,112], \"src\": [0,80], \"f\": 0, \"d\": [47,883,160] },\n\t\t\t\t\t{ \"px\": [48,112], \"src\": [0,80], \"f\": 0, \"d\": [47,885,160] },\n\t\t\t\t\t{ \"px\": [1872,112], \"src\": [0,80], \"f\": 0, \"d\": [47,999,160] },\n\t\t\t\t\t{ \"px\": [1904,112], \"src\": [0,80], \"f\": 0, \"d\": [47,1001,160] },\n\t\t\t\t\t{ \"px\": [1936,112], \"src\": [0,80], \"f\": 0, \"d\": [47,1003,160] },\n\t\t\t\t\t{ \"px\": [1968,112], \"src\": [0,80], \"f\": 0, \"d\": [47,1005,160] },\n\t\t\t\t\t{ \"px\": [2000,112], \"src\": [0,80], \"f\": 0, \"d\": [47,1007,160] },\n\t\t\t\t\t{ \"px\": [0,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1008,160] },\n\t\t\t\t\t{ \"px\": [32,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1010,160] },\n\t\t\t\t\t{ \"px\": [64,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1012,160] },\n\t\t\t\t\t{ \"px\": [1888,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1126,160] },\n\t\t\t\t\t{ \"px\": [1920,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1128,160] },\n\t\t\t\t\t{ \"px\": [1952,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1130,160] },\n\t\t\t\t\t{ \"px\": [1984,128], \"src\": [0,80], \"f\": 0, \"d\": [47,1132,160] },\n\t\t\t\t\t{ \"px\": [16,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1135,160] },\n\t\t\t\t\t{ \"px\": [48,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1137,160] },\n\t\t\t\t\t{ \"px\": [1872,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1251,160] },\n\t\t\t\t\t{ \"px\": [1904,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1253,160] },\n\t\t\t\t\t{ \"px\": [1936,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1255,160] },\n\t\t\t\t\t{ \"px\": [1968,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1257,160] },\n\t\t\t\t\t{ \"px\": [2000,144], \"src\": [0,80], \"f\": 0, \"d\": [47,1259,160] },\n\t\t\t\t\t{ \"px\": [0,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1260,160] },\n\t\t\t\t\t{ \"px\": [32,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1262,160] },\n\t\t\t\t\t{ \"px\": [64,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1264,160] },\n\t\t\t\t\t{ \"px\": [96,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1266,160] },\n\t\t\t\t\t{ \"px\": [128,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1268,160] },\n\t\t\t\t\t{ \"px\": [416,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1286,160] },\n\t\t\t\t\t{ \"px\": [448,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1288,160] },\n\t\t\t\t\t{ \"px\": [480,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1290,160] },\n\t\t\t\t\t{ \"px\": [512,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1292,160] },\n\t\t\t\t\t{ \"px\": [544,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1294,160] },\n\t\t\t\t\t{ \"px\": [576,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1296,160] },\n\t\t\t\t\t{ \"px\": [608,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1298,160] },\n\t\t\t\t\t{ \"px\": [640,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1300,160] },\n\t\t\t\t\t{ \"px\": [672,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1302,160] },\n\t\t\t\t\t{ \"px\": [704,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1304,160] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1306,160] },\n\t\t\t\t\t{ \"px\": [1888,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1378,160] },\n\t\t\t\t\t{ \"px\": [1920,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1380,160] },\n\t\t\t\t\t{ \"px\": [1952,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1382,160] },\n\t\t\t\t\t{ \"px\": [1984,160], \"src\": [0,80], \"f\": 0, \"d\": [47,1384,160] },\n\t\t\t\t\t{ \"px\": [16,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1387,160] },\n\t\t\t\t\t{ \"px\": [48,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1389,160] },\n\t\t\t\t\t{ \"px\": [80,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1391,160] },\n\t\t\t\t\t{ \"px\": [112,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1393,160] },\n\t\t\t\t\t{ \"px\": [144,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1395,160] },\n\t\t\t\t\t{ \"px\": [400,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1411,160] },\n\t\t\t\t\t{ \"px\": [432,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1413,160] },\n\t\t\t\t\t{ \"px\": [464,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1415,160] },\n\t\t\t\t\t{ \"px\": [496,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1417,160] },\n\t\t\t\t\t{ \"px\": [528,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1419,160] },\n\t\t\t\t\t{ \"px\": [560,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1421,160] },\n\t\t\t\t\t{ \"px\": [592,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1423,160] },\n\t\t\t\t\t{ \"px\": [624,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1425,160] },\n\t\t\t\t\t{ \"px\": [656,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1427,160] },\n\t\t\t\t\t{ \"px\": [688,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1429,160] },\n\t\t\t\t\t{ \"px\": [720,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1431,160] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1491,160] },\n\t\t\t\t\t{ \"px\": [1712,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1493,160] },\n\t\t\t\t\t{ \"px\": [1744,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1495,160] },\n\t\t\t\t\t{ \"px\": [1776,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1497,160] },\n\t\t\t\t\t{ \"px\": [1872,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1503,160] },\n\t\t\t\t\t{ \"px\": [1904,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1505,160] },\n\t\t\t\t\t{ \"px\": [1936,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1507,160] },\n\t\t\t\t\t{ \"px\": [1968,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1509,160] },\n\t\t\t\t\t{ \"px\": [2000,176], \"src\": [0,80], \"f\": 0, \"d\": [47,1511,160] },\n\t\t\t\t\t{ \"px\": [0,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1512,160] },\n\t\t\t\t\t{ \"px\": [32,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1514,160] },\n\t\t\t\t\t{ \"px\": [64,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1516,160] },\n\t\t\t\t\t{ \"px\": [128,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1520,160] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1542,160] },\n\t\t\t\t\t{ \"px\": [512,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1544,160] },\n\t\t\t\t\t{ \"px\": [544,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1546,160] },\n\t\t\t\t\t{ \"px\": [576,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1548,160] },\n\t\t\t\t\t{ \"px\": [608,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1550,160] },\n\t\t\t\t\t{ \"px\": [640,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1552,160] },\n\t\t\t\t\t{ \"px\": [672,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1554,160] },\n\t\t\t\t\t{ \"px\": [704,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1556,160] },\n\t\t\t\t\t{ \"px\": [736,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1558,160] },\n\t\t\t\t\t{ \"px\": [1696,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1618,160] },\n\t\t\t\t\t{ \"px\": [1728,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1620,160] },\n\t\t\t\t\t{ \"px\": [1760,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1622,160] },\n\t\t\t\t\t{ \"px\": [1792,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1624,160] },\n\t\t\t\t\t{ \"px\": [1888,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1630,160] },\n\t\t\t\t\t{ \"px\": [1920,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1632,160] },\n\t\t\t\t\t{ \"px\": [1952,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1634,160] },\n\t\t\t\t\t{ \"px\": [1984,192], \"src\": [0,80], \"f\": 0, \"d\": [47,1636,160] },\n\t\t\t\t\t{ \"px\": [16,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1639,160] },\n\t\t\t\t\t{ \"px\": [48,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1641,160] },\n\t\t\t\t\t{ \"px\": [144,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1647,160] },\n\t\t\t\t\t{ \"px\": [528,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1671,160] },\n\t\t\t\t\t{ \"px\": [560,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1673,160] },\n\t\t\t\t\t{ \"px\": [592,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1675,160] },\n\t\t\t\t\t{ \"px\": [624,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1677,160] },\n\t\t\t\t\t{ \"px\": [656,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1679,160] },\n\t\t\t\t\t{ \"px\": [688,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1681,160] },\n\t\t\t\t\t{ \"px\": [720,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1683,160] },\n\t\t\t\t\t{ \"px\": [752,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1685,160] },\n\t\t\t\t\t{ \"px\": [1680,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1743,160] },\n\t\t\t\t\t{ \"px\": [1712,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1745,160] },\n\t\t\t\t\t{ \"px\": [1744,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1747,160] },\n\t\t\t\t\t{ \"px\": [1776,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1749,160] },\n\t\t\t\t\t{ \"px\": [1872,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1755,160] },\n\t\t\t\t\t{ \"px\": [1904,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1757,160] },\n\t\t\t\t\t{ \"px\": [1936,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1759,160] },\n\t\t\t\t\t{ \"px\": [1968,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1761,160] },\n\t\t\t\t\t{ \"px\": [2000,208], \"src\": [0,80], \"f\": 0, \"d\": [47,1763,160] },\n\t\t\t\t\t{ \"px\": [0,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1764,160] },\n\t\t\t\t\t{ \"px\": [32,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1766,160] },\n\t\t\t\t\t{ \"px\": [64,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1768,160] },\n\t\t\t\t\t{ \"px\": [128,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1772,160] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1800,160] },\n\t\t\t\t\t{ \"px\": [608,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1802,160] },\n\t\t\t\t\t{ \"px\": [640,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1804,160] },\n\t\t\t\t\t{ \"px\": [672,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1806,160] },\n\t\t\t\t\t{ \"px\": [704,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1808,160] },\n\t\t\t\t\t{ \"px\": [736,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1810,160] },\n\t\t\t\t\t{ \"px\": [768,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1812,160] },\n\t\t\t\t\t{ \"px\": [1696,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1870,160] },\n\t\t\t\t\t{ \"px\": [1728,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1872,160] },\n\t\t\t\t\t{ \"px\": [1760,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1874,160] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1876,160] },\n\t\t\t\t\t{ \"px\": [1888,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1882,160] },\n\t\t\t\t\t{ \"px\": [1920,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1884,160] },\n\t\t\t\t\t{ \"px\": [1952,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1886,160] },\n\t\t\t\t\t{ \"px\": [1984,224], \"src\": [0,80], \"f\": 0, \"d\": [47,1888,160] },\n\t\t\t\t\t{ \"px\": [16,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1891,160] },\n\t\t\t\t\t{ \"px\": [48,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1893,160] },\n\t\t\t\t\t{ \"px\": [624,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1929,160] },\n\t\t\t\t\t{ \"px\": [656,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1931,160] },\n\t\t\t\t\t{ \"px\": [688,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1933,160] },\n\t\t\t\t\t{ \"px\": [720,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1935,160] },\n\t\t\t\t\t{ \"px\": [752,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1937,160] },\n\t\t\t\t\t{ \"px\": [784,240], \"src\": [0,80], \"f\": 0, \"d\": [47,1939,160] },\n\t\t\t\t\t{ \"px\": [1872,240], \"src\": [0,80], \"f\": 0, \"d\": [47,2007,160] },\n\t\t\t\t\t{ \"px\": [1904,240], \"src\": [0,80], \"f\": 0, \"d\": [47,2009,160] },\n\t\t\t\t\t{ \"px\": [1936,240], \"src\": [0,80], \"f\": 0, \"d\": [47,2011,160] },\n\t\t\t\t\t{ \"px\": [1968,240], \"src\": [0,80], \"f\": 0, \"d\": [47,2013,160] },\n\t\t\t\t\t{ \"px\": [2000,240], \"src\": [0,80], \"f\": 0, \"d\": [47,2015,160] },\n\t\t\t\t\t{ \"px\": [0,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2016,160] },\n\t\t\t\t\t{ \"px\": [32,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2018,160] },\n\t\t\t\t\t{ \"px\": [64,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2020,160] },\n\t\t\t\t\t{ \"px\": [608,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2054,160] },\n\t\t\t\t\t{ \"px\": [640,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2056,160] },\n\t\t\t\t\t{ \"px\": [672,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2058,160] },\n\t\t\t\t\t{ \"px\": [704,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2060,160] },\n\t\t\t\t\t{ \"px\": [736,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2062,160] },\n\t\t\t\t\t{ \"px\": [768,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2064,160] },\n\t\t\t\t\t{ \"px\": [1888,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2134,160] },\n\t\t\t\t\t{ \"px\": [1920,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2136,160] },\n\t\t\t\t\t{ \"px\": [1952,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2138,160] },\n\t\t\t\t\t{ \"px\": [1984,256], \"src\": [0,80], \"f\": 0, \"d\": [47,2140,160] },\n\t\t\t\t\t{ \"px\": [16,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2143,160] },\n\t\t\t\t\t{ \"px\": [48,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2145,160] },\n\t\t\t\t\t{ \"px\": [688,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2185,160] },\n\t\t\t\t\t{ \"px\": [720,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2187,160] },\n\t\t\t\t\t{ \"px\": [752,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2189,160] },\n\t\t\t\t\t{ \"px\": [784,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2191,160] },\n\t\t\t\t\t{ \"px\": [1872,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2259,160] },\n\t\t\t\t\t{ \"px\": [1904,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2261,160] },\n\t\t\t\t\t{ \"px\": [1936,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2263,160] },\n\t\t\t\t\t{ \"px\": [1968,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2265,160] },\n\t\t\t\t\t{ \"px\": [2000,272], \"src\": [0,80], \"f\": 0, \"d\": [47,2267,160] },\n\t\t\t\t\t{ \"px\": [0,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2268,160] },\n\t\t\t\t\t{ \"px\": [32,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2270,160] },\n\t\t\t\t\t{ \"px\": [64,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2272,160] },\n\t\t\t\t\t{ \"px\": [96,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2274,160] },\n\t\t\t\t\t{ \"px\": [128,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2276,160] },\n\t\t\t\t\t{ \"px\": [416,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2294,160] },\n\t\t\t\t\t{ \"px\": [448,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2296,160] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2298,160] },\n\t\t\t\t\t{ \"px\": [672,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2310,160] },\n\t\t\t\t\t{ \"px\": [704,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2312,160] },\n\t\t\t\t\t{ \"px\": [736,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2314,160] },\n\t\t\t\t\t{ \"px\": [768,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2316,160] },\n\t\t\t\t\t{ \"px\": [1888,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2386,160] },\n\t\t\t\t\t{ \"px\": [1920,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2388,160] },\n\t\t\t\t\t{ \"px\": [1952,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2390,160] },\n\t\t\t\t\t{ \"px\": [1984,288], \"src\": [0,80], \"f\": 0, \"d\": [47,2392,160] },\n\t\t\t\t\t{ \"px\": [16,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2395,160] },\n\t\t\t\t\t{ \"px\": [48,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2397,160] },\n\t\t\t\t\t{ \"px\": [80,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2399,160] },\n\t\t\t\t\t{ \"px\": [112,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2401,160] },\n\t\t\t\t\t{ \"px\": [144,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2403,160] },\n\t\t\t\t\t{ \"px\": [400,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2419,160] },\n\t\t\t\t\t{ \"px\": [432,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2421,160] },\n\t\t\t\t\t{ \"px\": [464,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2423,160] },\n\t\t\t\t\t{ \"px\": [496,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2425,160] },\n\t\t\t\t\t{ \"px\": [528,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2427,160] },\n\t\t\t\t\t{ \"px\": [560,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2429,160] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2493,160] },\n\t\t\t\t\t{ \"px\": [1616,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2495,160] },\n\t\t\t\t\t{ \"px\": [1648,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2497,160] },\n\t\t\t\t\t{ \"px\": [1872,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2511,160] },\n\t\t\t\t\t{ \"px\": [1904,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2513,160] },\n\t\t\t\t\t{ \"px\": [1936,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2515,160] },\n\t\t\t\t\t{ \"px\": [1968,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2517,160] },\n\t\t\t\t\t{ \"px\": [2000,304], \"src\": [0,80], \"f\": 0, \"d\": [47,2519,160] },\n\t\t\t\t\t{ \"px\": [0,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2520,160] },\n\t\t\t\t\t{ \"px\": [32,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2522,160] },\n\t\t\t\t\t{ \"px\": [64,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2524,160] },\n\t\t\t\t\t{ \"px\": [96,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2526,160] },\n\t\t\t\t\t{ \"px\": [128,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2528,160] },\n\t\t\t\t\t{ \"px\": [160,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2530,160] },\n\t\t\t\t\t{ \"px\": [192,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2532,160] },\n\t\t\t\t\t{ \"px\": [224,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2534,160] },\n\t\t\t\t\t{ \"px\": [256,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2536,160] },\n\t\t\t\t\t{ \"px\": [288,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2538,160] },\n\t\t\t\t\t{ \"px\": [320,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2540,160] },\n\t\t\t\t\t{ \"px\": [352,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2542,160] },\n\t\t\t\t\t{ \"px\": [384,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2544,160] },\n\t\t\t\t\t{ \"px\": [416,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2546,160] },\n\t\t\t\t\t{ \"px\": [448,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2548,160] },\n\t\t\t\t\t{ \"px\": [480,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2550,160] },\n\t\t\t\t\t{ \"px\": [512,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2552,160] },\n\t\t\t\t\t{ \"px\": [544,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2554,160] },\n\t\t\t\t\t{ \"px\": [576,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2556,160] },\n\t\t\t\t\t{ \"px\": [1600,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2620,160] },\n\t\t\t\t\t{ \"px\": [1632,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2622,160] },\n\t\t\t\t\t{ \"px\": [1664,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2624,160] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2634,160] },\n\t\t\t\t\t{ \"px\": [1856,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2636,160] },\n\t\t\t\t\t{ \"px\": [1888,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2638,160] },\n\t\t\t\t\t{ \"px\": [1920,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2640,160] },\n\t\t\t\t\t{ \"px\": [1952,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2642,160] },\n\t\t\t\t\t{ \"px\": [1984,320], \"src\": [0,80], \"f\": 0, \"d\": [47,2644,160] },\n\t\t\t\t\t{ \"px\": [16,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2647,160] },\n\t\t\t\t\t{ \"px\": [48,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2649,160] },\n\t\t\t\t\t{ \"px\": [80,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2651,160] },\n\t\t\t\t\t{ \"px\": [112,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2653,160] },\n\t\t\t\t\t{ \"px\": [144,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2655,160] },\n\t\t\t\t\t{ \"px\": [176,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2657,160] },\n\t\t\t\t\t{ \"px\": [208,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2659,160] },\n\t\t\t\t\t{ \"px\": [240,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2661,160] },\n\t\t\t\t\t{ \"px\": [272,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2663,160] },\n\t\t\t\t\t{ \"px\": [304,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2665,160] },\n\t\t\t\t\t{ \"px\": [336,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2667,160] },\n\t\t\t\t\t{ \"px\": [368,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2669,160] },\n\t\t\t\t\t{ \"px\": [400,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2671,160] },\n\t\t\t\t\t{ \"px\": [432,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2673,160] },\n\t\t\t\t\t{ \"px\": [464,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2675,160] },\n\t\t\t\t\t{ \"px\": [496,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2677,160] },\n\t\t\t\t\t{ \"px\": [528,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2679,160] },\n\t\t\t\t\t{ \"px\": [560,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2681,160] },\n\t\t\t\t\t{ \"px\": [592,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2683,160] },\n\t\t\t\t\t{ \"px\": [624,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2685,160] },\n\t\t\t\t\t{ \"px\": [1584,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2745,160] },\n\t\t\t\t\t{ \"px\": [1616,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2747,160] },\n\t\t\t\t\t{ \"px\": [1648,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2749,160] },\n\t\t\t\t\t{ \"px\": [1680,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2751,160] },\n\t\t\t\t\t{ \"px\": [1712,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2753,160] },\n\t\t\t\t\t{ \"px\": [1744,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2755,160] },\n\t\t\t\t\t{ \"px\": [1776,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2757,160] },\n\t\t\t\t\t{ \"px\": [1808,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2759,160] },\n\t\t\t\t\t{ \"px\": [1840,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2761,160] },\n\t\t\t\t\t{ \"px\": [1872,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2763,160] },\n\t\t\t\t\t{ \"px\": [1904,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2765,160] },\n\t\t\t\t\t{ \"px\": [1936,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2767,160] },\n\t\t\t\t\t{ \"px\": [1968,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2769,160] },\n\t\t\t\t\t{ \"px\": [2000,336], \"src\": [0,80], \"f\": 0, \"d\": [47,2771,160] },\n\t\t\t\t\t{ \"px\": [0,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2772,160] },\n\t\t\t\t\t{ \"px\": [32,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2774,160] },\n\t\t\t\t\t{ \"px\": [64,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2776,160] },\n\t\t\t\t\t{ \"px\": [96,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2778,160] },\n\t\t\t\t\t{ \"px\": [128,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2780,160] },\n\t\t\t\t\t{ \"px\": [160,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2782,160] },\n\t\t\t\t\t{ \"px\": [192,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2784,160] },\n\t\t\t\t\t{ \"px\": [224,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2786,160] },\n\t\t\t\t\t{ \"px\": [256,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2788,160] },\n\t\t\t\t\t{ \"px\": [288,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2790,160] },\n\t\t\t\t\t{ \"px\": [320,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2792,160] },\n\t\t\t\t\t{ \"px\": [352,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2794,160] },\n\t\t\t\t\t{ \"px\": [384,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2796,160] },\n\t\t\t\t\t{ \"px\": [416,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2798,160] },\n\t\t\t\t\t{ \"px\": [448,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2800,160] },\n\t\t\t\t\t{ \"px\": [480,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2802,160] },\n\t\t\t\t\t{ \"px\": [512,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2804,160] },\n\t\t\t\t\t{ \"px\": [544,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2806,160] },\n\t\t\t\t\t{ \"px\": [576,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2808,160] },\n\t\t\t\t\t{ \"px\": [608,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2810,160] },\n\t\t\t\t\t{ \"px\": [640,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2812,160] },\n\t\t\t\t\t{ \"px\": [1600,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2872,160] },\n\t\t\t\t\t{ \"px\": [1632,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2874,160] },\n\t\t\t\t\t{ \"px\": [1664,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2876,160] },\n\t\t\t\t\t{ \"px\": [1696,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2878,160] },\n\t\t\t\t\t{ \"px\": [1728,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2880,160] },\n\t\t\t\t\t{ \"px\": [1760,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2882,160] },\n\t\t\t\t\t{ \"px\": [1792,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2884,160] },\n\t\t\t\t\t{ \"px\": [1824,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2886,160] },\n\t\t\t\t\t{ \"px\": [1856,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2888,160] },\n\t\t\t\t\t{ \"px\": [1888,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2890,160] },\n\t\t\t\t\t{ \"px\": [1920,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2892,160] },\n\t\t\t\t\t{ \"px\": [1952,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2894,160] },\n\t\t\t\t\t{ \"px\": [1984,352], \"src\": [0,80], \"f\": 0, \"d\": [47,2896,160] },\n\t\t\t\t\t{ \"px\": [16,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2899,160] },\n\t\t\t\t\t{ \"px\": [48,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2901,160] },\n\t\t\t\t\t{ \"px\": [80,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2903,160] },\n\t\t\t\t\t{ \"px\": [112,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2905,160] },\n\t\t\t\t\t{ \"px\": [144,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2907,160] },\n\t\t\t\t\t{ \"px\": [176,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2909,160] },\n\t\t\t\t\t{ \"px\": [208,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2911,160] },\n\t\t\t\t\t{ \"px\": [240,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2913,160] },\n\t\t\t\t\t{ \"px\": [272,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2915,160] },\n\t\t\t\t\t{ \"px\": [304,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2917,160] },\n\t\t\t\t\t{ \"px\": [336,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2919,160] },\n\t\t\t\t\t{ \"px\": [368,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2921,160] },\n\t\t\t\t\t{ \"px\": [400,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2923,160] },\n\t\t\t\t\t{ \"px\": [432,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2925,160] },\n\t\t\t\t\t{ \"px\": [464,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2927,160] },\n\t\t\t\t\t{ \"px\": [496,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2929,160] },\n\t\t\t\t\t{ \"px\": [528,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2931,160] },\n\t\t\t\t\t{ \"px\": [560,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2933,160] },\n\t\t\t\t\t{ \"px\": [592,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2935,160] },\n\t\t\t\t\t{ \"px\": [624,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2937,160] },\n\t\t\t\t\t{ \"px\": [656,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2939,160] },\n\t\t\t\t\t{ \"px\": [688,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2941,160] },\n\t\t\t\t\t{ \"px\": [720,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2943,160] },\n\t\t\t\t\t{ \"px\": [752,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2945,160] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2975,160] },\n\t\t\t\t\t{ \"px\": [1264,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2977,160] },\n\t\t\t\t\t{ \"px\": [1296,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2979,160] },\n\t\t\t\t\t{ \"px\": [1328,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2981,160] },\n\t\t\t\t\t{ \"px\": [1360,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2983,160] },\n\t\t\t\t\t{ \"px\": [1392,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2985,160] },\n\t\t\t\t\t{ \"px\": [1424,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2987,160] },\n\t\t\t\t\t{ \"px\": [1456,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2989,160] },\n\t\t\t\t\t{ \"px\": [1488,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2991,160] },\n\t\t\t\t\t{ \"px\": [1520,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2993,160] },\n\t\t\t\t\t{ \"px\": [1552,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2995,160] },\n\t\t\t\t\t{ \"px\": [1584,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2997,160] },\n\t\t\t\t\t{ \"px\": [1616,368], \"src\": [0,80], \"f\": 0, \"d\": [47,2999,160] },\n\t\t\t\t\t{ \"px\": [1648,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3001,160] },\n\t\t\t\t\t{ \"px\": [1680,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3003,160] },\n\t\t\t\t\t{ \"px\": [1712,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3005,160] },\n\t\t\t\t\t{ \"px\": [1744,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3007,160] },\n\t\t\t\t\t{ \"px\": [1776,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3009,160] },\n\t\t\t\t\t{ \"px\": [1808,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3011,160] },\n\t\t\t\t\t{ \"px\": [1840,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3013,160] },\n\t\t\t\t\t{ \"px\": [1872,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3015,160] },\n\t\t\t\t\t{ \"px\": [1904,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3017,160] },\n\t\t\t\t\t{ \"px\": [1936,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3019,160] },\n\t\t\t\t\t{ \"px\": [1968,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3021,160] },\n\t\t\t\t\t{ \"px\": [2000,368], \"src\": [0,80], \"f\": 0, \"d\": [47,3023,160] },\n\t\t\t\t\t{ \"px\": [0,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3024,160] },\n\t\t\t\t\t{ \"px\": [32,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3026,160] },\n\t\t\t\t\t{ \"px\": [64,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3028,160] },\n\t\t\t\t\t{ \"px\": [96,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3030,160] },\n\t\t\t\t\t{ \"px\": [128,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3032,160] },\n\t\t\t\t\t{ \"px\": [160,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3034,160] },\n\t\t\t\t\t{ \"px\": [192,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3036,160] },\n\t\t\t\t\t{ \"px\": [224,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3038,160] },\n\t\t\t\t\t{ \"px\": [256,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3040,160] },\n\t\t\t\t\t{ \"px\": [288,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3042,160] },\n\t\t\t\t\t{ \"px\": [320,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3044,160] },\n\t\t\t\t\t{ \"px\": [352,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3046,160] },\n\t\t\t\t\t{ \"px\": [384,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3048,160] },\n\t\t\t\t\t{ \"px\": [416,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3050,160] },\n\t\t\t\t\t{ \"px\": [448,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3052,160] },\n\t\t\t\t\t{ \"px\": [480,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3054,160] },\n\t\t\t\t\t{ \"px\": [512,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3056,160] },\n\t\t\t\t\t{ \"px\": [544,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3058,160] },\n\t\t\t\t\t{ \"px\": [576,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3060,160] },\n\t\t\t\t\t{ \"px\": [608,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3062,160] },\n\t\t\t\t\t{ \"px\": [640,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3064,160] },\n\t\t\t\t\t{ \"px\": [672,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3066,160] },\n\t\t\t\t\t{ \"px\": [704,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3068,160] },\n\t\t\t\t\t{ \"px\": [736,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3070,160] },\n\t\t\t\t\t{ \"px\": [768,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3072,160] },\n\t\t\t\t\t{ \"px\": [800,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3074,160] },\n\t\t\t\t\t{ \"px\": [832,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3076,160] },\n\t\t\t\t\t{ \"px\": [864,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3078,160] },\n\t\t\t\t\t{ \"px\": [896,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3080,160] },\n\t\t\t\t\t{ \"px\": [928,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3082,160] },\n\t\t\t\t\t{ \"px\": [960,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3084,160] },\n\t\t\t\t\t{ \"px\": [992,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3086,160] },\n\t\t\t\t\t{ \"px\": [1024,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3088,160] },\n\t\t\t\t\t{ \"px\": [1056,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3090,160] },\n\t\t\t\t\t{ \"px\": [1088,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3092,160] },\n\t\t\t\t\t{ \"px\": [1120,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3094,160] },\n\t\t\t\t\t{ \"px\": [1152,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3096,160] },\n\t\t\t\t\t{ \"px\": [1184,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3098,160] },\n\t\t\t\t\t{ \"px\": [1216,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3100,160] },\n\t\t\t\t\t{ \"px\": [1248,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3102,160] },\n\t\t\t\t\t{ \"px\": [1280,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3104,160] },\n\t\t\t\t\t{ \"px\": [1312,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3106,160] },\n\t\t\t\t\t{ \"px\": [1344,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3108,160] },\n\t\t\t\t\t{ \"px\": [1376,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3110,160] },\n\t\t\t\t\t{ \"px\": [1408,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3112,160] },\n\t\t\t\t\t{ \"px\": [1440,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3114,160] },\n\t\t\t\t\t{ \"px\": [1472,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3116,160] },\n\t\t\t\t\t{ \"px\": [1504,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3118,160] },\n\t\t\t\t\t{ \"px\": [1536,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3120,160] },\n\t\t\t\t\t{ \"px\": [1568,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3122,160] },\n\t\t\t\t\t{ \"px\": [1600,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3124,160] },\n\t\t\t\t\t{ \"px\": [1632,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3126,160] },\n\t\t\t\t\t{ \"px\": [1664,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3128,160] },\n\t\t\t\t\t{ \"px\": [1696,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3130,160] },\n\t\t\t\t\t{ \"px\": [1728,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3132,160] },\n\t\t\t\t\t{ \"px\": [1760,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3134,160] },\n\t\t\t\t\t{ \"px\": [1792,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3136,160] },\n\t\t\t\t\t{ \"px\": [1824,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3138,160] },\n\t\t\t\t\t{ \"px\": [1856,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3140,160] },\n\t\t\t\t\t{ \"px\": [1888,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3142,160] },\n\t\t\t\t\t{ \"px\": [1920,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3144,160] },\n\t\t\t\t\t{ \"px\": [1952,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3146,160] },\n\t\t\t\t\t{ \"px\": [1984,384], \"src\": [0,80], \"f\": 0, \"d\": [47,3148,160] },\n\t\t\t\t\t{ \"px\": [16,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3151,160] },\n\t\t\t\t\t{ \"px\": [48,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3153,160] },\n\t\t\t\t\t{ \"px\": [80,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3155,160] },\n\t\t\t\t\t{ \"px\": [112,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3157,160] },\n\t\t\t\t\t{ \"px\": [144,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3159,160] },\n\t\t\t\t\t{ \"px\": [176,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3161,160] },\n\t\t\t\t\t{ \"px\": [208,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3163,160] },\n\t\t\t\t\t{ \"px\": [240,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3165,160] },\n\t\t\t\t\t{ \"px\": [272,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3167,160] },\n\t\t\t\t\t{ \"px\": [304,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3169,160] },\n\t\t\t\t\t{ \"px\": [336,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3171,160] },\n\t\t\t\t\t{ \"px\": [368,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3173,160] },\n\t\t\t\t\t{ \"px\": [400,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3175,160] },\n\t\t\t\t\t{ \"px\": [432,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3177,160] },\n\t\t\t\t\t{ \"px\": [464,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3179,160] },\n\t\t\t\t\t{ \"px\": [496,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3181,160] },\n\t\t\t\t\t{ \"px\": [528,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3183,160] },\n\t\t\t\t\t{ \"px\": [560,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3185,160] },\n\t\t\t\t\t{ \"px\": [592,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3187,160] },\n\t\t\t\t\t{ \"px\": [624,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3189,160] },\n\t\t\t\t\t{ \"px\": [656,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3191,160] },\n\t\t\t\t\t{ \"px\": [688,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3193,160] },\n\t\t\t\t\t{ \"px\": [720,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3195,160] },\n\t\t\t\t\t{ \"px\": [752,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3197,160] },\n\t\t\t\t\t{ \"px\": [784,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3199,160] },\n\t\t\t\t\t{ \"px\": [816,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3201,160] },\n\t\t\t\t\t{ \"px\": [848,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3203,160] },\n\t\t\t\t\t{ \"px\": [880,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3205,160] },\n\t\t\t\t\t{ \"px\": [912,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3207,160] },\n\t\t\t\t\t{ \"px\": [944,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3209,160] },\n\t\t\t\t\t{ \"px\": [976,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3211,160] },\n\t\t\t\t\t{ \"px\": [1008,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3213,160] },\n\t\t\t\t\t{ \"px\": [1040,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3215,160] },\n\t\t\t\t\t{ \"px\": [1072,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3217,160] },\n\t\t\t\t\t{ \"px\": [1104,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3219,160] },\n\t\t\t\t\t{ \"px\": [1136,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3221,160] },\n\t\t\t\t\t{ \"px\": [1168,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3223,160] },\n\t\t\t\t\t{ \"px\": [1200,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3225,160] },\n\t\t\t\t\t{ \"px\": [1232,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3227,160] },\n\t\t\t\t\t{ \"px\": [1264,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3229,160] },\n\t\t\t\t\t{ \"px\": [1296,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3231,160] },\n\t\t\t\t\t{ \"px\": [1328,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3233,160] },\n\t\t\t\t\t{ \"px\": [1360,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3235,160] },\n\t\t\t\t\t{ \"px\": [1392,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3237,160] },\n\t\t\t\t\t{ \"px\": [1424,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3239,160] },\n\t\t\t\t\t{ \"px\": [1456,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3241,160] },\n\t\t\t\t\t{ \"px\": [1488,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3243,160] },\n\t\t\t\t\t{ \"px\": [1520,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3245,160] },\n\t\t\t\t\t{ \"px\": [1552,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3247,160] },\n\t\t\t\t\t{ \"px\": [1584,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3249,160] },\n\t\t\t\t\t{ \"px\": [1616,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3251,160] },\n\t\t\t\t\t{ \"px\": [1648,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3253,160] },\n\t\t\t\t\t{ \"px\": [1680,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3255,160] },\n\t\t\t\t\t{ \"px\": [1712,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3257,160] },\n\t\t\t\t\t{ \"px\": [1744,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3259,160] },\n\t\t\t\t\t{ \"px\": [1776,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3261,160] },\n\t\t\t\t\t{ \"px\": [1808,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3263,160] },\n\t\t\t\t\t{ \"px\": [1840,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3265,160] },\n\t\t\t\t\t{ \"px\": [1872,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3267,160] },\n\t\t\t\t\t{ \"px\": [1904,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3269,160] },\n\t\t\t\t\t{ \"px\": [1936,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3271,160] },\n\t\t\t\t\t{ \"px\": [1968,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3273,160] },\n\t\t\t\t\t{ \"px\": [2000,400], \"src\": [0,80], \"f\": 0, \"d\": [47,3275,160] },\n\t\t\t\t\t{ \"px\": [0,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3276,160] },\n\t\t\t\t\t{ \"px\": [32,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3278,160] },\n\t\t\t\t\t{ \"px\": [64,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3280,160] },\n\t\t\t\t\t{ \"px\": [96,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3282,160] },\n\t\t\t\t\t{ \"px\": [128,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3284,160] },\n\t\t\t\t\t{ \"px\": [160,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3286,160] },\n\t\t\t\t\t{ \"px\": [192,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3288,160] },\n\t\t\t\t\t{ \"px\": [224,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3290,160] },\n\t\t\t\t\t{ \"px\": [256,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3292,160] },\n\t\t\t\t\t{ \"px\": [288,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3294,160] },\n\t\t\t\t\t{ \"px\": [320,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3296,160] },\n\t\t\t\t\t{ \"px\": [352,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3298,160] },\n\t\t\t\t\t{ \"px\": [384,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3300,160] },\n\t\t\t\t\t{ \"px\": [416,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3302,160] },\n\t\t\t\t\t{ \"px\": [448,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3304,160] },\n\t\t\t\t\t{ \"px\": [480,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3306,160] },\n\t\t\t\t\t{ \"px\": [512,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3308,160] },\n\t\t\t\t\t{ \"px\": [544,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3310,160] },\n\t\t\t\t\t{ \"px\": [576,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3312,160] },\n\t\t\t\t\t{ \"px\": [608,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3314,160] },\n\t\t\t\t\t{ \"px\": [640,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3316,160] },\n\t\t\t\t\t{ \"px\": [672,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3318,160] },\n\t\t\t\t\t{ \"px\": [704,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3320,160] },\n\t\t\t\t\t{ \"px\": [736,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3322,160] },\n\t\t\t\t\t{ \"px\": [768,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3324,160] },\n\t\t\t\t\t{ \"px\": [800,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3326,160] },\n\t\t\t\t\t{ \"px\": [832,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3328,160] },\n\t\t\t\t\t{ \"px\": [864,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3330,160] },\n\t\t\t\t\t{ \"px\": [896,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3332,160] },\n\t\t\t\t\t{ \"px\": [928,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3334,160] },\n\t\t\t\t\t{ \"px\": [960,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3336,160] },\n\t\t\t\t\t{ \"px\": [992,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3338,160] },\n\t\t\t\t\t{ \"px\": [1024,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3340,160] },\n\t\t\t\t\t{ \"px\": [1056,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3342,160] },\n\t\t\t\t\t{ \"px\": [1088,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3344,160] },\n\t\t\t\t\t{ \"px\": [1120,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3346,160] },\n\t\t\t\t\t{ \"px\": [1152,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3348,160] },\n\t\t\t\t\t{ \"px\": [1184,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3350,160] },\n\t\t\t\t\t{ \"px\": [1216,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3352,160] },\n\t\t\t\t\t{ \"px\": [1248,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3354,160] },\n\t\t\t\t\t{ \"px\": [1280,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3356,160] },\n\t\t\t\t\t{ \"px\": [1312,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3358,160] },\n\t\t\t\t\t{ \"px\": [1344,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3360,160] },\n\t\t\t\t\t{ \"px\": [1376,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3362,160] },\n\t\t\t\t\t{ \"px\": [1408,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3364,160] },\n\t\t\t\t\t{ \"px\": [1440,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3366,160] },\n\t\t\t\t\t{ \"px\": [1472,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3368,160] },\n\t\t\t\t\t{ \"px\": [1504,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3370,160] },\n\t\t\t\t\t{ \"px\": [1536,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3372,160] },\n\t\t\t\t\t{ \"px\": [1568,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3374,160] },\n\t\t\t\t\t{ \"px\": [1600,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3376,160] },\n\t\t\t\t\t{ \"px\": [1632,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3378,160] },\n\t\t\t\t\t{ \"px\": [1664,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3380,160] },\n\t\t\t\t\t{ \"px\": [1696,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3382,160] },\n\t\t\t\t\t{ \"px\": [1728,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3384,160] },\n\t\t\t\t\t{ \"px\": [1760,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3386,160] },\n\t\t\t\t\t{ \"px\": [1792,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3388,160] },\n\t\t\t\t\t{ \"px\": [1824,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3390,160] },\n\t\t\t\t\t{ \"px\": [1856,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3392,160] },\n\t\t\t\t\t{ \"px\": [1888,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3394,160] },\n\t\t\t\t\t{ \"px\": [1920,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3396,160] },\n\t\t\t\t\t{ \"px\": [1952,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3398,160] },\n\t\t\t\t\t{ \"px\": [1984,416], \"src\": [0,80], \"f\": 0, \"d\": [47,3400,160] },\n\t\t\t\t\t{ \"px\": [16,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3403,160] },\n\t\t\t\t\t{ \"px\": [48,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3405,160] },\n\t\t\t\t\t{ \"px\": [80,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3407,160] },\n\t\t\t\t\t{ \"px\": [112,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3409,160] },\n\t\t\t\t\t{ \"px\": [144,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3411,160] },\n\t\t\t\t\t{ \"px\": [176,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3413,160] },\n\t\t\t\t\t{ \"px\": [208,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3415,160] },\n\t\t\t\t\t{ \"px\": [240,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3417,160] },\n\t\t\t\t\t{ \"px\": [272,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3419,160] },\n\t\t\t\t\t{ \"px\": [304,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3421,160] },\n\t\t\t\t\t{ \"px\": [336,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3423,160] },\n\t\t\t\t\t{ \"px\": [368,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3425,160] },\n\t\t\t\t\t{ \"px\": [400,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3427,160] },\n\t\t\t\t\t{ \"px\": [432,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3429,160] },\n\t\t\t\t\t{ \"px\": [464,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3431,160] },\n\t\t\t\t\t{ \"px\": [496,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3433,160] },\n\t\t\t\t\t{ \"px\": [528,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3435,160] },\n\t\t\t\t\t{ \"px\": [560,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3437,160] },\n\t\t\t\t\t{ \"px\": [592,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3439,160] },\n\t\t\t\t\t{ \"px\": [624,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3441,160] },\n\t\t\t\t\t{ \"px\": [656,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3443,160] },\n\t\t\t\t\t{ \"px\": [688,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3445,160] },\n\t\t\t\t\t{ \"px\": [720,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3447,160] },\n\t\t\t\t\t{ \"px\": [752,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3449,160] },\n\t\t\t\t\t{ \"px\": [784,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3451,160] },\n\t\t\t\t\t{ \"px\": [816,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3453,160] },\n\t\t\t\t\t{ \"px\": [848,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3455,160] },\n\t\t\t\t\t{ \"px\": [880,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3457,160] },\n\t\t\t\t\t{ \"px\": [912,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3459,160] },\n\t\t\t\t\t{ \"px\": [944,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3461,160] },\n\t\t\t\t\t{ \"px\": [976,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3463,160] },\n\t\t\t\t\t{ \"px\": [1008,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3465,160] },\n\t\t\t\t\t{ \"px\": [1040,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3467,160] },\n\t\t\t\t\t{ \"px\": [1072,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3469,160] },\n\t\t\t\t\t{ \"px\": [1104,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3471,160] },\n\t\t\t\t\t{ \"px\": [1136,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3473,160] },\n\t\t\t\t\t{ \"px\": [1168,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3475,160] },\n\t\t\t\t\t{ \"px\": [1200,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3477,160] },\n\t\t\t\t\t{ \"px\": [1232,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3479,160] },\n\t\t\t\t\t{ \"px\": [1264,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3481,160] },\n\t\t\t\t\t{ \"px\": [1296,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3483,160] },\n\t\t\t\t\t{ \"px\": [1328,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3485,160] },\n\t\t\t\t\t{ \"px\": [1360,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3487,160] },\n\t\t\t\t\t{ \"px\": [1392,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3489,160] },\n\t\t\t\t\t{ \"px\": [1424,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3491,160] },\n\t\t\t\t\t{ \"px\": [1456,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3493,160] },\n\t\t\t\t\t{ \"px\": [1488,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3495,160] },\n\t\t\t\t\t{ \"px\": [1520,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3497,160] },\n\t\t\t\t\t{ \"px\": [1552,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3499,160] },\n\t\t\t\t\t{ \"px\": [1584,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3501,160] },\n\t\t\t\t\t{ \"px\": [1616,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3503,160] },\n\t\t\t\t\t{ \"px\": [1648,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3505,160] },\n\t\t\t\t\t{ \"px\": [1680,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3507,160] },\n\t\t\t\t\t{ \"px\": [1712,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3509,160] },\n\t\t\t\t\t{ \"px\": [1744,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3511,160] },\n\t\t\t\t\t{ \"px\": [1776,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3513,160] },\n\t\t\t\t\t{ \"px\": [1808,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3515,160] },\n\t\t\t\t\t{ \"px\": [1840,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3517,160] },\n\t\t\t\t\t{ \"px\": [1872,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3519,160] },\n\t\t\t\t\t{ \"px\": [1904,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3521,160] },\n\t\t\t\t\t{ \"px\": [1936,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3523,160] },\n\t\t\t\t\t{ \"px\": [1968,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3525,160] },\n\t\t\t\t\t{ \"px\": [2000,432], \"src\": [0,80], \"f\": 0, \"d\": [47,3527,160] },\n\t\t\t\t\t{ \"px\": [0,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3528,160] },\n\t\t\t\t\t{ \"px\": [32,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3530,160] },\n\t\t\t\t\t{ \"px\": [64,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3532,160] },\n\t\t\t\t\t{ \"px\": [96,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3534,160] },\n\t\t\t\t\t{ \"px\": [128,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3536,160] },\n\t\t\t\t\t{ \"px\": [160,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3538,160] },\n\t\t\t\t\t{ \"px\": [192,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3540,160] },\n\t\t\t\t\t{ \"px\": [224,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3542,160] },\n\t\t\t\t\t{ \"px\": [256,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3544,160] },\n\t\t\t\t\t{ \"px\": [288,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3546,160] },\n\t\t\t\t\t{ \"px\": [320,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3548,160] },\n\t\t\t\t\t{ \"px\": [352,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3550,160] },\n\t\t\t\t\t{ \"px\": [384,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3552,160] },\n\t\t\t\t\t{ \"px\": [416,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3554,160] },\n\t\t\t\t\t{ \"px\": [448,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3556,160] },\n\t\t\t\t\t{ \"px\": [480,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3558,160] },\n\t\t\t\t\t{ \"px\": [512,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3560,160] },\n\t\t\t\t\t{ \"px\": [544,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3562,160] },\n\t\t\t\t\t{ \"px\": [576,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3564,160] },\n\t\t\t\t\t{ \"px\": [608,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3566,160] },\n\t\t\t\t\t{ \"px\": [640,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3568,160] },\n\t\t\t\t\t{ \"px\": [672,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3570,160] },\n\t\t\t\t\t{ \"px\": [704,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3572,160] },\n\t\t\t\t\t{ \"px\": [736,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3574,160] },\n\t\t\t\t\t{ \"px\": [768,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3576,160] },\n\t\t\t\t\t{ \"px\": [800,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3578,160] },\n\t\t\t\t\t{ \"px\": [832,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3580,160] },\n\t\t\t\t\t{ \"px\": [864,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3582,160] },\n\t\t\t\t\t{ \"px\": [896,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3584,160] },\n\t\t\t\t\t{ \"px\": [928,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3586,160] },\n\t\t\t\t\t{ \"px\": [960,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3588,160] },\n\t\t\t\t\t{ \"px\": [992,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3590,160] },\n\t\t\t\t\t{ \"px\": [1024,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3592,160] },\n\t\t\t\t\t{ \"px\": [1056,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3594,160] },\n\t\t\t\t\t{ \"px\": [1088,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3596,160] },\n\t\t\t\t\t{ \"px\": [1120,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3598,160] },\n\t\t\t\t\t{ \"px\": [1152,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3600,160] },\n\t\t\t\t\t{ \"px\": [1184,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3602,160] },\n\t\t\t\t\t{ \"px\": [1216,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3604,160] },\n\t\t\t\t\t{ \"px\": [1248,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3606,160] },\n\t\t\t\t\t{ \"px\": [1280,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3608,160] },\n\t\t\t\t\t{ \"px\": [1312,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3610,160] },\n\t\t\t\t\t{ \"px\": [1344,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3612,160] },\n\t\t\t\t\t{ \"px\": [1376,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3614,160] },\n\t\t\t\t\t{ \"px\": [1408,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3616,160] },\n\t\t\t\t\t{ \"px\": [1440,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3618,160] },\n\t\t\t\t\t{ \"px\": [1472,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3620,160] },\n\t\t\t\t\t{ \"px\": [1504,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3622,160] },\n\t\t\t\t\t{ \"px\": [1536,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3624,160] },\n\t\t\t\t\t{ \"px\": [1568,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3626,160] },\n\t\t\t\t\t{ \"px\": [1600,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3628,160] },\n\t\t\t\t\t{ \"px\": [1632,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3630,160] },\n\t\t\t\t\t{ \"px\": [1664,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3632,160] },\n\t\t\t\t\t{ \"px\": [1696,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3634,160] },\n\t\t\t\t\t{ \"px\": [1728,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3636,160] },\n\t\t\t\t\t{ \"px\": [1760,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3638,160] },\n\t\t\t\t\t{ \"px\": [1792,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3640,160] },\n\t\t\t\t\t{ \"px\": [1824,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3642,160] },\n\t\t\t\t\t{ \"px\": [1856,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3644,160] },\n\t\t\t\t\t{ \"px\": [1888,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3646,160] },\n\t\t\t\t\t{ \"px\": [1920,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3648,160] },\n\t\t\t\t\t{ \"px\": [1952,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3650,160] },\n\t\t\t\t\t{ \"px\": [1984,448], \"src\": [0,80], \"f\": 0, \"d\": [47,3652,160] },\n\t\t\t\t\t{ \"px\": [16,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3655,160] },\n\t\t\t\t\t{ \"px\": [48,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3657,160] },\n\t\t\t\t\t{ \"px\": [80,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3659,160] },\n\t\t\t\t\t{ \"px\": [112,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3661,160] },\n\t\t\t\t\t{ \"px\": [144,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3663,160] },\n\t\t\t\t\t{ \"px\": [176,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3665,160] },\n\t\t\t\t\t{ \"px\": [208,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3667,160] },\n\t\t\t\t\t{ \"px\": [240,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3669,160] },\n\t\t\t\t\t{ \"px\": [272,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3671,160] },\n\t\t\t\t\t{ \"px\": [304,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3673,160] },\n\t\t\t\t\t{ \"px\": [336,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3675,160] },\n\t\t\t\t\t{ \"px\": [368,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3677,160] },\n\t\t\t\t\t{ \"px\": [400,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3679,160] },\n\t\t\t\t\t{ \"px\": [432,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3681,160] },\n\t\t\t\t\t{ \"px\": [464,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3683,160] },\n\t\t\t\t\t{ \"px\": [496,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3685,160] },\n\t\t\t\t\t{ \"px\": [528,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3687,160] },\n\t\t\t\t\t{ \"px\": [560,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3689,160] },\n\t\t\t\t\t{ \"px\": [592,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3691,160] },\n\t\t\t\t\t{ \"px\": [624,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3693,160] },\n\t\t\t\t\t{ \"px\": [656,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3695,160] },\n\t\t\t\t\t{ \"px\": [688,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3697,160] },\n\t\t\t\t\t{ \"px\": [720,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3699,160] },\n\t\t\t\t\t{ \"px\": [752,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3701,160] },\n\t\t\t\t\t{ \"px\": [784,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3703,160] },\n\t\t\t\t\t{ \"px\": [816,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3705,160] },\n\t\t\t\t\t{ \"px\": [848,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3707,160] },\n\t\t\t\t\t{ \"px\": [880,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3709,160] },\n\t\t\t\t\t{ \"px\": [912,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3711,160] },\n\t\t\t\t\t{ \"px\": [944,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3713,160] },\n\t\t\t\t\t{ \"px\": [976,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3715,160] },\n\t\t\t\t\t{ \"px\": [1008,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3717,160] },\n\t\t\t\t\t{ \"px\": [1040,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3719,160] },\n\t\t\t\t\t{ \"px\": [1072,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3721,160] },\n\t\t\t\t\t{ \"px\": [1104,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3723,160] },\n\t\t\t\t\t{ \"px\": [1136,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3725,160] },\n\t\t\t\t\t{ \"px\": [1168,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3727,160] },\n\t\t\t\t\t{ \"px\": [1200,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3729,160] },\n\t\t\t\t\t{ \"px\": [1232,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3731,160] },\n\t\t\t\t\t{ \"px\": [1264,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3733,160] },\n\t\t\t\t\t{ \"px\": [1296,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3735,160] },\n\t\t\t\t\t{ \"px\": [1328,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3737,160] },\n\t\t\t\t\t{ \"px\": [1360,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3739,160] },\n\t\t\t\t\t{ \"px\": [1392,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3741,160] },\n\t\t\t\t\t{ \"px\": [1424,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3743,160] },\n\t\t\t\t\t{ \"px\": [1456,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3745,160] },\n\t\t\t\t\t{ \"px\": [1488,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3747,160] },\n\t\t\t\t\t{ \"px\": [1520,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3749,160] },\n\t\t\t\t\t{ \"px\": [1552,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3751,160] },\n\t\t\t\t\t{ \"px\": [1584,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3753,160] },\n\t\t\t\t\t{ \"px\": [1616,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3755,160] },\n\t\t\t\t\t{ \"px\": [1648,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3757,160] },\n\t\t\t\t\t{ \"px\": [1680,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3759,160] },\n\t\t\t\t\t{ \"px\": [1712,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3761,160] },\n\t\t\t\t\t{ \"px\": [1744,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3763,160] },\n\t\t\t\t\t{ \"px\": [1776,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3765,160] },\n\t\t\t\t\t{ \"px\": [1808,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3767,160] },\n\t\t\t\t\t{ \"px\": [1840,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3769,160] },\n\t\t\t\t\t{ \"px\": [1872,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3771,160] },\n\t\t\t\t\t{ \"px\": [1904,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3773,160] },\n\t\t\t\t\t{ \"px\": [1936,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3775,160] },\n\t\t\t\t\t{ \"px\": [1968,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3777,160] },\n\t\t\t\t\t{ \"px\": [2000,464], \"src\": [0,80], \"f\": 0, \"d\": [47,3779,160] },\n\t\t\t\t\t{ \"px\": [0,0], \"src\": [16,80], \"f\": 0, \"d\": [49,0,161] },\n\t\t\t\t\t{ \"px\": [0,16], \"src\": [16,96], \"f\": 0, \"d\": [49,0,193] },\n\t\t\t\t\t{ \"px\": [16,0], \"src\": [32,80], \"f\": 0, \"d\": [49,0,162] },\n\t\t\t\t\t{ \"px\": [16,16], \"src\": [32,96], \"f\": 0, \"d\": [49,0,194] },\n\t\t\t\t\t{ \"px\": [64,0], \"src\": [16,80], \"f\": 0, \"d\": [49,4,161] },\n\t\t\t\t\t{ \"px\": [64,16], \"src\": [16,96], \"f\": 0, \"d\": [49,4,193] },\n\t\t\t\t\t{ \"px\": [80,0], \"src\": [32,80], \"f\": 0, \"d\": [49,4,162] },\n\t\t\t\t\t{ \"px\": [80,16], \"src\": [32,96], \"f\": 0, \"d\": [49,4,194] },\n\t\t\t\t\t{ \"px\": [96,0], \"src\": [16,80], \"f\": 0, \"d\": [49,6,161] },\n\t\t\t\t\t{ \"px\": [96,16], \"src\": [16,96], \"f\": 0, \"d\": [49,6,193] },\n\t\t\t\t\t{ \"px\": [112,0], \"src\": [32,80], \"f\": 0, \"d\": [49,6,162] },\n\t\t\t\t\t{ \"px\": [112,16], \"src\": [32,96], \"f\": 0, \"d\": [49,6,194] },\n\t\t\t\t\t{ \"px\": [128,0], \"src\": [16,80], \"f\": 0, \"d\": [49,8,161] },\n\t\t\t\t\t{ \"px\": [128,16], \"src\": [16,96], \"f\": 0, \"d\": [49,8,193] },\n\t\t\t\t\t{ \"px\": [144,0], \"src\": [32,80], \"f\": 0, \"d\": [49,8,162] },\n\t\t\t\t\t{ \"px\": [144,16], \"src\": [32,96], \"f\": 0, \"d\": [49,8,194] },\n\t\t\t\t\t{ \"px\": [288,0], \"src\": [16,80], \"f\": 0, \"d\": [49,18,161] },\n\t\t\t\t\t{ \"px\": [288,16], \"src\": [16,96], \"f\": 0, \"d\": [49,18,193] },\n\t\t\t\t\t{ \"px\": [304,0], \"src\": [32,80], \"f\": 0, \"d\": [49,18,162] },\n\t\t\t\t\t{ \"px\": [304,16], \"src\": [32,96], \"f\": 0, \"d\": [49,18,194] },\n\t\t\t\t\t{ \"px\": [512,0], \"src\": [16,80], \"f\": 0, \"d\": [49,32,161] },\n\t\t\t\t\t{ \"px\": [512,16], \"src\": [16,96], \"f\": 0, \"d\": [49,32,193] },\n\t\t\t\t\t{ \"px\": [528,0], \"src\": [32,80], \"f\": 0, \"d\": [49,32,162] },\n\t\t\t\t\t{ \"px\": [528,16], \"src\": [32,96], \"f\": 0, \"d\": [49,32,194] },\n\t\t\t\t\t{ \"px\": [576,0], \"src\": [16,80], \"f\": 0, \"d\": [49,36,161] },\n\t\t\t\t\t{ \"px\": [576,16], \"src\": [16,96], \"f\": 0, \"d\": [49,36,193] },\n\t\t\t\t\t{ \"px\": [592,0], \"src\": [32,80], \"f\": 0, \"d\": [49,36,162] },\n\t\t\t\t\t{ \"px\": [592,16], \"src\": [32,96], \"f\": 0, \"d\": [49,36,194] },\n\t\t\t\t\t{ \"px\": [640,0], \"src\": [16,80], \"f\": 0, \"d\": [49,40,161] },\n\t\t\t\t\t{ \"px\": [640,16], \"src\": [16,96], \"f\": 0, \"d\": [49,40,193] },\n\t\t\t\t\t{ \"px\": [656,0], \"src\": [32,80], \"f\": 0, \"d\": [49,40,162] },\n\t\t\t\t\t{ \"px\": [656,16], \"src\": [32,96], \"f\": 0, \"d\": [49,40,194] },\n\t\t\t\t\t{ \"px\": [704,0], \"src\": [16,80], \"f\": 0, \"d\": [49,44,161] },\n\t\t\t\t\t{ \"px\": [704,16], \"src\": [16,96], \"f\": 0, \"d\": [49,44,193] },\n\t\t\t\t\t{ \"px\": [720,0], \"src\": [32,80], \"f\": 0, \"d\": [49,44,162] },\n\t\t\t\t\t{ \"px\": [720,16], \"src\": [32,96], \"f\": 0, \"d\": [49,44,194] },\n\t\t\t\t\t{ \"px\": [1728,0], \"src\": [16,80], \"f\": 0, \"d\": [49,108,161] },\n\t\t\t\t\t{ \"px\": [1728,16], \"src\": [16,96], \"f\": 0, \"d\": [49,108,193] },\n\t\t\t\t\t{ \"px\": [1744,0], \"src\": [32,80], \"f\": 0, \"d\": [49,108,162] },\n\t\t\t\t\t{ \"px\": [1744,16], \"src\": [32,96], \"f\": 0, \"d\": [49,108,194] },\n\t\t\t\t\t{ \"px\": [1824,0], \"src\": [16,80], \"f\": 0, \"d\": [49,114,161] },\n\t\t\t\t\t{ \"px\": [1824,16], \"src\": [16,96], \"f\": 0, \"d\": [49,114,193] },\n\t\t\t\t\t{ \"px\": [1840,0], \"src\": [32,80], \"f\": 0, \"d\": [49,114,162] },\n\t\t\t\t\t{ \"px\": [1840,16], \"src\": [32,96], \"f\": 0, \"d\": [49,114,194] },\n\t\t\t\t\t{ \"px\": [1856,0], \"src\": [16,80], \"f\": 0, \"d\": [49,116,161] },\n\t\t\t\t\t{ \"px\": [1856,16], \"src\": [16,96], \"f\": 0, \"d\": [49,116,193] },\n\t\t\t\t\t{ \"px\": [1872,0], \"src\": [32,80], \"f\": 0, \"d\": [49,116,162] },\n\t\t\t\t\t{ \"px\": [1872,16], \"src\": [32,96], \"f\": 0, \"d\": [49,116,194] },\n\t\t\t\t\t{ \"px\": [0,32], \"src\": [16,80], \"f\": 0, \"d\": [49,252,161] },\n\t\t\t\t\t{ \"px\": [0,48], \"src\": [16,96], \"f\": 0, \"d\": [49,252,193] },\n\t\t\t\t\t{ \"px\": [16,32], \"src\": [32,80], \"f\": 0, \"d\": [49,252,162] },\n\t\t\t\t\t{ \"px\": [16,48], \"src\": [32,96], \"f\": 0, \"d\": [49,252,194] },\n\t\t\t\t\t{ \"px\": [32,32], \"src\": [16,80], \"f\": 0, \"d\": [49,254,161] },\n\t\t\t\t\t{ \"px\": [32,48], \"src\": [16,96], \"f\": 0, \"d\": [49,254,193] },\n\t\t\t\t\t{ \"px\": [48,32], \"src\": [32,80], \"f\": 0, \"d\": [49,254,162] },\n\t\t\t\t\t{ \"px\": [48,48], \"src\": [32,96], \"f\": 0, \"d\": [49,254,194] },\n\t\t\t\t\t{ \"px\": [128,32], \"src\": [16,80], \"f\": 0, \"d\": [49,260,161] },\n\t\t\t\t\t{ \"px\": [128,48], \"src\": [16,96], \"f\": 0, \"d\": [49,260,193] },\n\t\t\t\t\t{ \"px\": [144,32], \"src\": [32,80], \"f\": 0, \"d\": [49,260,162] },\n\t\t\t\t\t{ \"px\": [144,48], \"src\": [32,96], \"f\": 0, \"d\": [49,260,194] },\n\t\t\t\t\t{ \"px\": [192,32], \"src\": [16,80], \"f\": 0, \"d\": [49,264,161] },\n\t\t\t\t\t{ \"px\": [192,48], \"src\": [16,96], \"f\": 0, \"d\": [49,264,193] },\n\t\t\t\t\t{ \"px\": [208,32], \"src\": [32,80], \"f\": 0, \"d\": [49,264,162] },\n\t\t\t\t\t{ \"px\": [208,48], \"src\": [32,96], \"f\": 0, \"d\": [49,264,194] },\n\t\t\t\t\t{ \"px\": [480,32], \"src\": [16,80], \"f\": 0, \"d\": [49,282,161] },\n\t\t\t\t\t{ \"px\": [480,48], \"src\": [16,96], \"f\": 0, \"d\": [49,282,193] },\n\t\t\t\t\t{ \"px\": [496,32], \"src\": [32,80], \"f\": 0, \"d\": [49,282,162] },\n\t\t\t\t\t{ \"px\": [496,48], \"src\": [32,96], \"f\": 0, \"d\": [49,282,194] },\n\t\t\t\t\t{ \"px\": [512,32], \"src\": [16,80], \"f\": 0, \"d\": [49,284,161] },\n\t\t\t\t\t{ \"px\": [512,48], \"src\": [16,96], \"f\": 0, \"d\": [49,284,193] },\n\t\t\t\t\t{ \"px\": [528,32], \"src\": [32,80], \"f\": 0, \"d\": [49,284,162] },\n\t\t\t\t\t{ \"px\": [528,48], \"src\": [32,96], \"f\": 0, \"d\": [49,284,194] },\n\t\t\t\t\t{ \"px\": [608,32], \"src\": [16,80], \"f\": 0, \"d\": [49,290,161] },\n\t\t\t\t\t{ \"px\": [608,48], \"src\": [16,96], \"f\": 0, \"d\": [49,290,193] },\n\t\t\t\t\t{ \"px\": [624,32], \"src\": [32,80], \"f\": 0, \"d\": [49,290,162] },\n\t\t\t\t\t{ \"px\": [624,48], \"src\": [32,96], \"f\": 0, \"d\": [49,290,194] },\n\t\t\t\t\t{ \"px\": [640,32], \"src\": [16,80], \"f\": 0, \"d\": [49,292,161] },\n\t\t\t\t\t{ \"px\": [640,48], \"src\": [16,96], \"f\": 0, \"d\": [49,292,193] },\n\t\t\t\t\t{ \"px\": [656,32], \"src\": [32,80], \"f\": 0, \"d\": [49,292,162] },\n\t\t\t\t\t{ \"px\": [656,48], \"src\": [32,96], \"f\": 0, \"d\": [49,292,194] },\n\t\t\t\t\t{ \"px\": [672,32], \"src\": [16,80], \"f\": 0, \"d\": [49,294,161] },\n\t\t\t\t\t{ \"px\": [672,48], \"src\": [16,96], \"f\": 0, \"d\": [49,294,193] },\n\t\t\t\t\t{ \"px\": [688,32], \"src\": [32,80], \"f\": 0, \"d\": [49,294,162] },\n\t\t\t\t\t{ \"px\": [688,48], \"src\": [32,96], \"f\": 0, \"d\": [49,294,194] },\n\t\t\t\t\t{ \"px\": [1696,32], \"src\": [16,80], \"f\": 0, \"d\": [49,358,161] },\n\t\t\t\t\t{ \"px\": [1696,48], \"src\": [16,96], \"f\": 0, \"d\": [49,358,193] },\n\t\t\t\t\t{ \"px\": [1712,32], \"src\": [32,80], \"f\": 0, \"d\": [49,358,162] },\n\t\t\t\t\t{ \"px\": [1712,48], \"src\": [32,96], \"f\": 0, \"d\": [49,358,194] },\n\t\t\t\t\t{ \"px\": [1824,32], \"src\": [16,80], \"f\": 0, \"d\": [49,366,161] },\n\t\t\t\t\t{ \"px\": [1824,48], \"src\": [16,96], \"f\": 0, \"d\": [49,366,193] },\n\t\t\t\t\t{ \"px\": [1840,32], \"src\": [32,80], \"f\": 0, \"d\": [49,366,162] },\n\t\t\t\t\t{ \"px\": [1840,48], \"src\": [32,96], \"f\": 0, \"d\": [49,366,194] },\n\t\t\t\t\t{ \"px\": [1920,32], \"src\": [16,80], \"f\": 0, \"d\": [49,372,161] },\n\t\t\t\t\t{ \"px\": [1920,48], \"src\": [16,96], \"f\": 0, \"d\": [49,372,193] },\n\t\t\t\t\t{ \"px\": [1936,32], \"src\": [32,80], \"f\": 0, \"d\": [49,372,162] },\n\t\t\t\t\t{ \"px\": [1936,48], \"src\": [32,96], \"f\": 0, \"d\": [49,372,194] },\n\t\t\t\t\t{ \"px\": [64,64], \"src\": [16,80], \"f\": 0, \"d\": [49,508,161] },\n\t\t\t\t\t{ \"px\": [64,80], \"src\": [16,96], \"f\": 0, \"d\": [49,508,193] },\n\t\t\t\t\t{ \"px\": [80,64], \"src\": [32,80], \"f\": 0, \"d\": [49,508,162] },\n\t\t\t\t\t{ \"px\": [80,80], \"src\": [32,96], \"f\": 0, \"d\": [49,508,194] },\n\t\t\t\t\t{ \"px\": [224,64], \"src\": [16,80], \"f\": 0, \"d\": [49,518,161] },\n\t\t\t\t\t{ \"px\": [224,80], \"src\": [16,96], \"f\": 0, \"d\": [49,518,193] },\n\t\t\t\t\t{ \"px\": [240,64], \"src\": [32,80], \"f\": 0, \"d\": [49,518,162] },\n\t\t\t\t\t{ \"px\": [240,80], \"src\": [32,96], \"f\": 0, \"d\": [49,518,194] },\n\t\t\t\t\t{ \"px\": [288,64], \"src\": [16,80], \"f\": 0, \"d\": [49,522,161] },\n\t\t\t\t\t{ \"px\": [288,80], \"src\": [16,96], \"f\": 0, \"d\": [49,522,193] },\n\t\t\t\t\t{ \"px\": [304,64], \"src\": [32,80], \"f\": 0, \"d\": [49,522,162] },\n\t\t\t\t\t{ \"px\": [304,80], \"src\": [32,96], \"f\": 0, \"d\": [49,522,194] },\n\t\t\t\t\t{ \"px\": [448,64], \"src\": [16,80], \"f\": 0, \"d\": [49,532,161] },\n\t\t\t\t\t{ \"px\": [448,80], \"src\": [16,96], \"f\": 0, \"d\": [49,532,193] },\n\t\t\t\t\t{ \"px\": [464,64], \"src\": [32,80], \"f\": 0, \"d\": [49,532,162] },\n\t\t\t\t\t{ \"px\": [464,80], \"src\": [32,96], \"f\": 0, \"d\": [49,532,194] },\n\t\t\t\t\t{ \"px\": [480,64], \"src\": [16,80], \"f\": 0, \"d\": [49,534,161] },\n\t\t\t\t\t{ \"px\": [480,80], \"src\": [16,96], \"f\": 0, \"d\": [49,534,193] },\n\t\t\t\t\t{ \"px\": [496,64], \"src\": [32,80], \"f\": 0, \"d\": [49,534,162] },\n\t\t\t\t\t{ \"px\": [496,80], \"src\": [32,96], \"f\": 0, \"d\": [49,534,194] },\n\t\t\t\t\t{ \"px\": [544,64], \"src\": [16,80], \"f\": 0, \"d\": [49,538,161] },\n\t\t\t\t\t{ \"px\": [544,80], \"src\": [16,96], \"f\": 0, \"d\": [49,538,193] },\n\t\t\t\t\t{ \"px\": [560,64], \"src\": [32,80], \"f\": 0, \"d\": [49,538,162] },\n\t\t\t\t\t{ \"px\": [560,80], \"src\": [32,96], \"f\": 0, \"d\": [49,538,194] },\n\t\t\t\t\t{ \"px\": [576,64], \"src\": [16,80], \"f\": 0, \"d\": [49,540,161] },\n\t\t\t\t\t{ \"px\": [576,80], \"src\": [16,96], \"f\": 0, \"d\": [49,540,193] },\n\t\t\t\t\t{ \"px\": [592,64], \"src\": [32,80], \"f\": 0, \"d\": [49,540,162] },\n\t\t\t\t\t{ \"px\": [592,80], \"src\": [32,96], \"f\": 0, \"d\": [49,540,194] },\n\t\t\t\t\t{ \"px\": [608,64], \"src\": [16,80], \"f\": 0, \"d\": [49,542,161] },\n\t\t\t\t\t{ \"px\": [608,80], \"src\": [16,96], \"f\": 0, \"d\": [49,542,193] },\n\t\t\t\t\t{ \"px\": [624,64], \"src\": [32,80], \"f\": 0, \"d\": [49,542,162] },\n\t\t\t\t\t{ \"px\": [624,80], \"src\": [32,96], \"f\": 0, \"d\": [49,542,194] },\n\t\t\t\t\t{ \"px\": [672,64], \"src\": [16,80], \"f\": 0, \"d\": [49,546,161] },\n\t\t\t\t\t{ \"px\": [672,80], \"src\": [16,96], \"f\": 0, \"d\": [49,546,193] },\n\t\t\t\t\t{ \"px\": [688,64], \"src\": [32,80], \"f\": 0, \"d\": [49,546,162] },\n\t\t\t\t\t{ \"px\": [688,80], \"src\": [32,96], \"f\": 0, \"d\": [49,546,194] },\n\t\t\t\t\t{ \"px\": [1568,64], \"src\": [16,80], \"f\": 0, \"d\": [49,602,161] },\n\t\t\t\t\t{ \"px\": [1568,80], \"src\": [16,96], \"f\": 0, \"d\": [49,602,193] },\n\t\t\t\t\t{ \"px\": [1584,64], \"src\": [32,80], \"f\": 0, \"d\": [49,602,162] },\n\t\t\t\t\t{ \"px\": [1584,80], \"src\": [32,96], \"f\": 0, \"d\": [49,602,194] },\n\t\t\t\t\t{ \"px\": [1696,64], \"src\": [16,80], \"f\": 0, \"d\": [49,610,161] },\n\t\t\t\t\t{ \"px\": [1696,80], \"src\": [16,96], \"f\": 0, \"d\": [49,610,193] },\n\t\t\t\t\t{ \"px\": [1712,64], \"src\": [32,80], \"f\": 0, \"d\": [49,610,162] },\n\t\t\t\t\t{ \"px\": [1712,80], \"src\": [32,96], \"f\": 0, \"d\": [49,610,194] },\n\t\t\t\t\t{ \"px\": [1824,64], \"src\": [16,80], \"f\": 0, \"d\": [49,618,161] },\n\t\t\t\t\t{ \"px\": [1824,80], \"src\": [16,96], \"f\": 0, \"d\": [49,618,193] },\n\t\t\t\t\t{ \"px\": [1840,64], \"src\": [32,80], \"f\": 0, \"d\": [49,618,162] },\n\t\t\t\t\t{ \"px\": [1840,80], \"src\": [32,96], \"f\": 0, \"d\": [49,618,194] },\n\t\t\t\t\t{ \"px\": [1856,64], \"src\": [16,80], \"f\": 0, \"d\": [49,620,161] },\n\t\t\t\t\t{ \"px\": [1856,80], \"src\": [16,96], \"f\": 0, \"d\": [49,620,193] },\n\t\t\t\t\t{ \"px\": [1872,64], \"src\": [32,80], \"f\": 0, \"d\": [49,620,162] },\n\t\t\t\t\t{ \"px\": [1872,80], \"src\": [32,96], \"f\": 0, \"d\": [49,620,194] },\n\t\t\t\t\t{ \"px\": [1888,64], \"src\": [16,80], \"f\": 0, \"d\": [49,622,161] },\n\t\t\t\t\t{ \"px\": [1888,80], \"src\": [16,96], \"f\": 0, \"d\": [49,622,193] },\n\t\t\t\t\t{ \"px\": [1904,64], \"src\": [32,80], \"f\": 0, \"d\": [49,622,162] },\n\t\t\t\t\t{ \"px\": [1904,80], \"src\": [32,96], \"f\": 0, \"d\": [49,622,194] },\n\t\t\t\t\t{ \"px\": [1920,64], \"src\": [16,80], \"f\": 0, \"d\": [49,624,161] },\n\t\t\t\t\t{ \"px\": [1920,80], \"src\": [16,96], \"f\": 0, \"d\": [49,624,193] },\n\t\t\t\t\t{ \"px\": [1936,64], \"src\": [32,80], \"f\": 0, \"d\": [49,624,162] },\n\t\t\t\t\t{ \"px\": [1936,80], \"src\": [32,96], \"f\": 0, \"d\": [49,624,194] },\n\t\t\t\t\t{ \"px\": [1888,128], \"src\": [16,80], \"f\": 0, \"d\": [49,1126,161] },\n\t\t\t\t\t{ \"px\": [1888,144], \"src\": [16,96], \"f\": 0, \"d\": [49,1126,193] },\n\t\t\t\t\t{ \"px\": [1904,128], \"src\": [32,80], \"f\": 0, \"d\": [49,1126,162] },\n\t\t\t\t\t{ \"px\": [1904,144], \"src\": [32,96], \"f\": 0, \"d\": [49,1126,194] },\n\t\t\t\t\t{ \"px\": [1920,128], \"src\": [16,80], \"f\": 0, \"d\": [49,1128,161] },\n\t\t\t\t\t{ \"px\": [1920,144], \"src\": [16,96], \"f\": 0, \"d\": [49,1128,193] },\n\t\t\t\t\t{ \"px\": [1936,128], \"src\": [32,80], \"f\": 0, \"d\": [49,1128,162] },\n\t\t\t\t\t{ \"px\": [1936,144], \"src\": [32,96], \"f\": 0, \"d\": [49,1128,194] },\n\t\t\t\t\t{ \"px\": [1952,128], \"src\": [16,80], \"f\": 0, \"d\": [49,1130,161] },\n\t\t\t\t\t{ \"px\": [1952,144], \"src\": [16,96], \"f\": 0, \"d\": [49,1130,193] },\n\t\t\t\t\t{ \"px\": [1968,128], \"src\": [32,80], \"f\": 0, \"d\": [49,1130,162] },\n\t\t\t\t\t{ \"px\": [1968,144], \"src\": [32,96], \"f\": 0, \"d\": [49,1130,194] },\n\t\t\t\t\t{ \"px\": [1984,128], \"src\": [16,80], \"f\": 0, \"d\": [49,1132,161] },\n\t\t\t\t\t{ \"px\": [1984,144], \"src\": [16,96], \"f\": 0, \"d\": [49,1132,193] },\n\t\t\t\t\t{ \"px\": [2000,128], \"src\": [32,80], \"f\": 0, \"d\": [49,1132,162] },\n\t\t\t\t\t{ \"px\": [2000,144], \"src\": [32,96], \"f\": 0, \"d\": [49,1132,194] },\n\t\t\t\t\t{ \"px\": [32,160], \"src\": [16,80], \"f\": 0, \"d\": [49,1262,161] },\n\t\t\t\t\t{ \"px\": [32,176], \"src\": [16,96], \"f\": 0, \"d\": [49,1262,193] },\n\t\t\t\t\t{ \"px\": [48,160], \"src\": [32,80], \"f\": 0, \"d\": [49,1262,162] },\n\t\t\t\t\t{ \"px\": [48,176], \"src\": [32,96], \"f\": 0, \"d\": [49,1262,194] },\n\t\t\t\t\t{ \"px\": [64,160], \"src\": [16,80], \"f\": 0, \"d\": [49,1264,161] },\n\t\t\t\t\t{ \"px\": [64,176], \"src\": [16,96], \"f\": 0, \"d\": [49,1264,193] },\n\t\t\t\t\t{ \"px\": [80,160], \"src\": [32,80], \"f\": 0, \"d\": [49,1264,162] },\n\t\t\t\t\t{ \"px\": [80,176], \"src\": [32,96], \"f\": 0, \"d\": [49,1264,194] },\n\t\t\t\t\t{ \"px\": [448,160], \"src\": [16,80], \"f\": 0, \"d\": [49,1288,161] },\n\t\t\t\t\t{ \"px\": [448,176], \"src\": [16,96], \"f\": 0, \"d\": [49,1288,193] },\n\t\t\t\t\t{ \"px\": [464,160], \"src\": [32,80], \"f\": 0, \"d\": [49,1288,162] },\n\t\t\t\t\t{ \"px\": [464,176], \"src\": [32,96], \"f\": 0, \"d\": [49,1288,194] },\n\t\t\t\t\t{ \"px\": [640,160], \"src\": [16,80], \"f\": 0, \"d\": [49,1300,161] },\n\t\t\t\t\t{ \"px\": [640,176], \"src\": [16,96], \"f\": 0, \"d\": [49,1300,193] },\n\t\t\t\t\t{ \"px\": [656,160], \"src\": [32,80], \"f\": 0, \"d\": [49,1300,162] },\n\t\t\t\t\t{ \"px\": [656,176], \"src\": [32,96], \"f\": 0, \"d\": [49,1300,194] },\n\t\t\t\t\t{ \"px\": [1984,160], \"src\": [16,80], \"f\": 0, \"d\": [49,1384,161] },\n\t\t\t\t\t{ \"px\": [1984,176], \"src\": [16,96], \"f\": 0, \"d\": [49,1384,193] },\n\t\t\t\t\t{ \"px\": [2000,160], \"src\": [32,80], \"f\": 0, \"d\": [49,1384,162] },\n\t\t\t\t\t{ \"px\": [2000,176], \"src\": [32,96], \"f\": 0, \"d\": [49,1384,194] },\n\t\t\t\t\t{ \"px\": [0,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1512,161] },\n\t\t\t\t\t{ \"px\": [0,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1512,193] },\n\t\t\t\t\t{ \"px\": [16,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1512,162] },\n\t\t\t\t\t{ \"px\": [16,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1512,194] },\n\t\t\t\t\t{ \"px\": [32,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1514,161] },\n\t\t\t\t\t{ \"px\": [32,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1514,193] },\n\t\t\t\t\t{ \"px\": [48,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1514,162] },\n\t\t\t\t\t{ \"px\": [48,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1514,194] },\n\t\t\t\t\t{ \"px\": [128,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1520,161] },\n\t\t\t\t\t{ \"px\": [128,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1520,193] },\n\t\t\t\t\t{ \"px\": [144,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1520,162] },\n\t\t\t\t\t{ \"px\": [144,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1520,194] },\n\t\t\t\t\t{ \"px\": [512,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1544,161] },\n\t\t\t\t\t{ \"px\": [512,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1544,193] },\n\t\t\t\t\t{ \"px\": [528,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1544,162] },\n\t\t\t\t\t{ \"px\": [528,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1544,194] },\n\t\t\t\t\t{ \"px\": [544,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1546,161] },\n\t\t\t\t\t{ \"px\": [544,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1546,193] },\n\t\t\t\t\t{ \"px\": [560,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1546,162] },\n\t\t\t\t\t{ \"px\": [560,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1546,194] },\n\t\t\t\t\t{ \"px\": [640,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1552,161] },\n\t\t\t\t\t{ \"px\": [640,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1552,193] },\n\t\t\t\t\t{ \"px\": [656,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1552,162] },\n\t\t\t\t\t{ \"px\": [656,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1552,194] },\n\t\t\t\t\t{ \"px\": [672,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1554,161] },\n\t\t\t\t\t{ \"px\": [672,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1554,193] },\n\t\t\t\t\t{ \"px\": [688,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1554,162] },\n\t\t\t\t\t{ \"px\": [688,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1554,194] },\n\t\t\t\t\t{ \"px\": [704,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1556,161] },\n\t\t\t\t\t{ \"px\": [704,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1556,193] },\n\t\t\t\t\t{ \"px\": [720,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1556,162] },\n\t\t\t\t\t{ \"px\": [720,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1556,194] },\n\t\t\t\t\t{ \"px\": [1696,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1618,161] },\n\t\t\t\t\t{ \"px\": [1696,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1618,193] },\n\t\t\t\t\t{ \"px\": [1712,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1618,162] },\n\t\t\t\t\t{ \"px\": [1712,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1618,194] },\n\t\t\t\t\t{ \"px\": [1728,192], \"src\": [16,80], \"f\": 0, \"d\": [49,1620,161] },\n\t\t\t\t\t{ \"px\": [1728,208], \"src\": [16,96], \"f\": 0, \"d\": [49,1620,193] },\n\t\t\t\t\t{ \"px\": [1744,192], \"src\": [32,80], \"f\": 0, \"d\": [49,1620,162] },\n\t\t\t\t\t{ \"px\": [1744,208], \"src\": [32,96], \"f\": 0, \"d\": [49,1620,194] },\n\t\t\t\t\t{ \"px\": [32,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1766,161] },\n\t\t\t\t\t{ \"px\": [32,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1766,193] },\n\t\t\t\t\t{ \"px\": [48,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1766,162] },\n\t\t\t\t\t{ \"px\": [48,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1766,194] },\n\t\t\t\t\t{ \"px\": [608,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1802,161] },\n\t\t\t\t\t{ \"px\": [608,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1802,193] },\n\t\t\t\t\t{ \"px\": [624,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1802,162] },\n\t\t\t\t\t{ \"px\": [624,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1802,194] },\n\t\t\t\t\t{ \"px\": [704,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1808,161] },\n\t\t\t\t\t{ \"px\": [704,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1808,193] },\n\t\t\t\t\t{ \"px\": [720,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1808,162] },\n\t\t\t\t\t{ \"px\": [720,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1808,194] },\n\t\t\t\t\t{ \"px\": [768,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1812,161] },\n\t\t\t\t\t{ \"px\": [768,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1812,193] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1812,162] },\n\t\t\t\t\t{ \"px\": [784,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1812,194] },\n\t\t\t\t\t{ \"px\": [1888,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1882,161] },\n\t\t\t\t\t{ \"px\": [1888,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1882,193] },\n\t\t\t\t\t{ \"px\": [1904,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1882,162] },\n\t\t\t\t\t{ \"px\": [1904,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1882,194] },\n\t\t\t\t\t{ \"px\": [1920,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1884,161] },\n\t\t\t\t\t{ \"px\": [1920,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1884,193] },\n\t\t\t\t\t{ \"px\": [1936,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1884,162] },\n\t\t\t\t\t{ \"px\": [1936,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1884,194] },\n\t\t\t\t\t{ \"px\": [1952,224], \"src\": [16,80], \"f\": 0, \"d\": [49,1886,161] },\n\t\t\t\t\t{ \"px\": [1952,240], \"src\": [16,96], \"f\": 0, \"d\": [49,1886,193] },\n\t\t\t\t\t{ \"px\": [1968,224], \"src\": [32,80], \"f\": 0, \"d\": [49,1886,162] },\n\t\t\t\t\t{ \"px\": [1968,240], \"src\": [32,96], \"f\": 0, \"d\": [49,1886,194] },\n\t\t\t\t\t{ \"px\": [0,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2016,161] },\n\t\t\t\t\t{ \"px\": [0,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2016,193] },\n\t\t\t\t\t{ \"px\": [16,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2016,162] },\n\t\t\t\t\t{ \"px\": [16,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2016,194] },\n\t\t\t\t\t{ \"px\": [736,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2062,161] },\n\t\t\t\t\t{ \"px\": [736,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2062,193] },\n\t\t\t\t\t{ \"px\": [752,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2062,162] },\n\t\t\t\t\t{ \"px\": [752,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2062,194] },\n\t\t\t\t\t{ \"px\": [768,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2064,161] },\n\t\t\t\t\t{ \"px\": [768,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2064,193] },\n\t\t\t\t\t{ \"px\": [784,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2064,162] },\n\t\t\t\t\t{ \"px\": [784,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2064,194] },\n\t\t\t\t\t{ \"px\": [1888,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2134,161] },\n\t\t\t\t\t{ \"px\": [1888,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2134,193] },\n\t\t\t\t\t{ \"px\": [1904,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2134,162] },\n\t\t\t\t\t{ \"px\": [1904,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2134,194] },\n\t\t\t\t\t{ \"px\": [1920,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2136,161] },\n\t\t\t\t\t{ \"px\": [1920,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2136,193] },\n\t\t\t\t\t{ \"px\": [1936,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2136,162] },\n\t\t\t\t\t{ \"px\": [1936,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2136,194] },\n\t\t\t\t\t{ \"px\": [1952,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2138,161] },\n\t\t\t\t\t{ \"px\": [1952,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2138,193] },\n\t\t\t\t\t{ \"px\": [1968,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2138,162] },\n\t\t\t\t\t{ \"px\": [1968,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2138,194] },\n\t\t\t\t\t{ \"px\": [1984,256], \"src\": [16,80], \"f\": 0, \"d\": [49,2140,161] },\n\t\t\t\t\t{ \"px\": [1984,272], \"src\": [16,96], \"f\": 0, \"d\": [49,2140,193] },\n\t\t\t\t\t{ \"px\": [2000,256], \"src\": [32,80], \"f\": 0, \"d\": [49,2140,162] },\n\t\t\t\t\t{ \"px\": [2000,272], \"src\": [32,96], \"f\": 0, \"d\": [49,2140,194] },\n\t\t\t\t\t{ \"px\": [96,288], \"src\": [16,80], \"f\": 0, \"d\": [49,2274,161] },\n\t\t\t\t\t{ \"px\": [96,304], \"src\": [16,96], \"f\": 0, \"d\": [49,2274,193] },\n\t\t\t\t\t{ \"px\": [112,288], \"src\": [32,80], \"f\": 0, \"d\": [49,2274,162] },\n\t\t\t\t\t{ \"px\": [112,304], \"src\": [32,96], \"f\": 0, \"d\": [49,2274,194] },\n\t\t\t\t\t{ \"px\": [192,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2532,161] },\n\t\t\t\t\t{ \"px\": [192,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2532,193] },\n\t\t\t\t\t{ \"px\": [208,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2532,162] },\n\t\t\t\t\t{ \"px\": [208,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2532,194] },\n\t\t\t\t\t{ \"px\": [256,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2536,161] },\n\t\t\t\t\t{ \"px\": [256,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2536,193] },\n\t\t\t\t\t{ \"px\": [272,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2536,162] },\n\t\t\t\t\t{ \"px\": [272,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2536,194] },\n\t\t\t\t\t{ \"px\": [288,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2538,161] },\n\t\t\t\t\t{ \"px\": [288,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2538,193] },\n\t\t\t\t\t{ \"px\": [304,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2538,162] },\n\t\t\t\t\t{ \"px\": [304,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2538,194] },\n\t\t\t\t\t{ \"px\": [320,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2540,161] },\n\t\t\t\t\t{ \"px\": [320,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2540,193] },\n\t\t\t\t\t{ \"px\": [336,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2540,162] },\n\t\t\t\t\t{ \"px\": [336,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2540,194] },\n\t\t\t\t\t{ \"px\": [352,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2542,161] },\n\t\t\t\t\t{ \"px\": [352,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2542,193] },\n\t\t\t\t\t{ \"px\": [368,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2542,162] },\n\t\t\t\t\t{ \"px\": [368,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2542,194] },\n\t\t\t\t\t{ \"px\": [416,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2546,161] },\n\t\t\t\t\t{ \"px\": [416,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2546,193] },\n\t\t\t\t\t{ \"px\": [432,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2546,162] },\n\t\t\t\t\t{ \"px\": [432,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2546,194] },\n\t\t\t\t\t{ \"px\": [512,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2552,161] },\n\t\t\t\t\t{ \"px\": [512,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2552,193] },\n\t\t\t\t\t{ \"px\": [528,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2552,162] },\n\t\t\t\t\t{ \"px\": [528,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2552,194] },\n\t\t\t\t\t{ \"px\": [544,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2554,161] },\n\t\t\t\t\t{ \"px\": [544,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2554,193] },\n\t\t\t\t\t{ \"px\": [560,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2554,162] },\n\t\t\t\t\t{ \"px\": [560,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2554,194] },\n\t\t\t\t\t{ \"px\": [1600,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2620,161] },\n\t\t\t\t\t{ \"px\": [1600,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2620,193] },\n\t\t\t\t\t{ \"px\": [1616,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2620,162] },\n\t\t\t\t\t{ \"px\": [1616,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2620,194] },\n\t\t\t\t\t{ \"px\": [1632,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2622,161] },\n\t\t\t\t\t{ \"px\": [1632,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2622,193] },\n\t\t\t\t\t{ \"px\": [1648,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2622,162] },\n\t\t\t\t\t{ \"px\": [1648,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2622,194] },\n\t\t\t\t\t{ \"px\": [1856,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2636,161] },\n\t\t\t\t\t{ \"px\": [1856,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2636,193] },\n\t\t\t\t\t{ \"px\": [1872,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2636,162] },\n\t\t\t\t\t{ \"px\": [1872,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2636,194] },\n\t\t\t\t\t{ \"px\": [1888,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2638,161] },\n\t\t\t\t\t{ \"px\": [1888,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2638,193] },\n\t\t\t\t\t{ \"px\": [1904,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2638,162] },\n\t\t\t\t\t{ \"px\": [1904,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2638,194] },\n\t\t\t\t\t{ \"px\": [1984,320], \"src\": [16,80], \"f\": 0, \"d\": [49,2644,161] },\n\t\t\t\t\t{ \"px\": [1984,336], \"src\": [16,96], \"f\": 0, \"d\": [49,2644,193] },\n\t\t\t\t\t{ \"px\": [2000,320], \"src\": [32,80], \"f\": 0, \"d\": [49,2644,162] },\n\t\t\t\t\t{ \"px\": [2000,336], \"src\": [32,96], \"f\": 0, \"d\": [49,2644,194] },\n\t\t\t\t\t{ \"px\": [32,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2774,161] },\n\t\t\t\t\t{ \"px\": [32,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2774,193] },\n\t\t\t\t\t{ \"px\": [48,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2774,162] },\n\t\t\t\t\t{ \"px\": [48,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2774,194] },\n\t\t\t\t\t{ \"px\": [128,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2780,161] },\n\t\t\t\t\t{ \"px\": [128,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2780,193] },\n\t\t\t\t\t{ \"px\": [144,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2780,162] },\n\t\t\t\t\t{ \"px\": [144,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2780,194] },\n\t\t\t\t\t{ \"px\": [448,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2800,161] },\n\t\t\t\t\t{ \"px\": [448,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2800,193] },\n\t\t\t\t\t{ \"px\": [464,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2800,162] },\n\t\t\t\t\t{ \"px\": [464,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2800,194] },\n\t\t\t\t\t{ \"px\": [480,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2802,161] },\n\t\t\t\t\t{ \"px\": [480,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2802,193] },\n\t\t\t\t\t{ \"px\": [496,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2802,162] },\n\t\t\t\t\t{ \"px\": [496,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2802,194] },\n\t\t\t\t\t{ \"px\": [544,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2806,161] },\n\t\t\t\t\t{ \"px\": [544,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2806,193] },\n\t\t\t\t\t{ \"px\": [560,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2806,162] },\n\t\t\t\t\t{ \"px\": [560,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2806,194] },\n\t\t\t\t\t{ \"px\": [576,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2808,161] },\n\t\t\t\t\t{ \"px\": [576,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2808,193] },\n\t\t\t\t\t{ \"px\": [592,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2808,162] },\n\t\t\t\t\t{ \"px\": [592,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2808,194] },\n\t\t\t\t\t{ \"px\": [608,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2810,161] },\n\t\t\t\t\t{ \"px\": [608,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2810,193] },\n\t\t\t\t\t{ \"px\": [624,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2810,162] },\n\t\t\t\t\t{ \"px\": [624,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2810,194] },\n\t\t\t\t\t{ \"px\": [1600,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2872,161] },\n\t\t\t\t\t{ \"px\": [1600,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2872,193] },\n\t\t\t\t\t{ \"px\": [1616,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2872,162] },\n\t\t\t\t\t{ \"px\": [1616,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2872,194] },\n\t\t\t\t\t{ \"px\": [1792,352], \"src\": [16,80], \"f\": 0, \"d\": [49,2884,161] },\n\t\t\t\t\t{ \"px\": [1792,368], \"src\": [16,96], \"f\": 0, \"d\": [49,2884,193] },\n\t\t\t\t\t{ \"px\": [1808,352], \"src\": [32,80], \"f\": 0, \"d\": [49,2884,162] },\n\t\t\t\t\t{ \"px\": [1808,368], \"src\": [32,96], \"f\": 0, \"d\": [49,2884,194] },\n\t\t\t\t\t{ \"px\": [64,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3028,161] },\n\t\t\t\t\t{ \"px\": [64,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3028,193] },\n\t\t\t\t\t{ \"px\": [80,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3028,162] },\n\t\t\t\t\t{ \"px\": [80,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3028,194] },\n\t\t\t\t\t{ \"px\": [128,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3032,161] },\n\t\t\t\t\t{ \"px\": [128,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3032,193] },\n\t\t\t\t\t{ \"px\": [144,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3032,162] },\n\t\t\t\t\t{ \"px\": [144,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3032,194] },\n\t\t\t\t\t{ \"px\": [160,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3034,161] },\n\t\t\t\t\t{ \"px\": [160,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3034,193] },\n\t\t\t\t\t{ \"px\": [176,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3034,162] },\n\t\t\t\t\t{ \"px\": [176,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3034,194] },\n\t\t\t\t\t{ \"px\": [384,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3048,161] },\n\t\t\t\t\t{ \"px\": [384,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3048,193] },\n\t\t\t\t\t{ \"px\": [400,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3048,162] },\n\t\t\t\t\t{ \"px\": [400,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3048,194] },\n\t\t\t\t\t{ \"px\": [416,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3050,161] },\n\t\t\t\t\t{ \"px\": [416,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3050,193] },\n\t\t\t\t\t{ \"px\": [432,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3050,162] },\n\t\t\t\t\t{ \"px\": [432,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3050,194] },\n\t\t\t\t\t{ \"px\": [512,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3056,161] },\n\t\t\t\t\t{ \"px\": [512,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3056,193] },\n\t\t\t\t\t{ \"px\": [528,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3056,162] },\n\t\t\t\t\t{ \"px\": [528,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3056,194] },\n\t\t\t\t\t{ \"px\": [544,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3058,161] },\n\t\t\t\t\t{ \"px\": [544,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3058,193] },\n\t\t\t\t\t{ \"px\": [560,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3058,162] },\n\t\t\t\t\t{ \"px\": [560,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3058,194] },\n\t\t\t\t\t{ \"px\": [672,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3066,161] },\n\t\t\t\t\t{ \"px\": [672,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3066,193] },\n\t\t\t\t\t{ \"px\": [688,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3066,162] },\n\t\t\t\t\t{ \"px\": [688,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3066,194] },\n\t\t\t\t\t{ \"px\": [704,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3068,161] },\n\t\t\t\t\t{ \"px\": [704,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3068,193] },\n\t\t\t\t\t{ \"px\": [720,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3068,162] },\n\t\t\t\t\t{ \"px\": [720,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3068,194] },\n\t\t\t\t\t{ \"px\": [736,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3070,161] },\n\t\t\t\t\t{ \"px\": [736,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3070,193] },\n\t\t\t\t\t{ \"px\": [752,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3070,162] },\n\t\t\t\t\t{ \"px\": [752,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3070,194] },\n\t\t\t\t\t{ \"px\": [800,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3074,161] },\n\t\t\t\t\t{ \"px\": [800,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3074,193] },\n\t\t\t\t\t{ \"px\": [816,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3074,162] },\n\t\t\t\t\t{ \"px\": [816,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3074,194] },\n\t\t\t\t\t{ \"px\": [1024,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3088,161] },\n\t\t\t\t\t{ \"px\": [1024,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3088,193] },\n\t\t\t\t\t{ \"px\": [1040,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3088,162] },\n\t\t\t\t\t{ \"px\": [1040,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3088,194] },\n\t\t\t\t\t{ \"px\": [1056,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3090,161] },\n\t\t\t\t\t{ \"px\": [1056,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3090,193] },\n\t\t\t\t\t{ \"px\": [1072,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3090,162] },\n\t\t\t\t\t{ \"px\": [1072,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3090,194] },\n\t\t\t\t\t{ \"px\": [1088,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3092,161] },\n\t\t\t\t\t{ \"px\": [1088,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3092,193] },\n\t\t\t\t\t{ \"px\": [1104,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3092,162] },\n\t\t\t\t\t{ \"px\": [1104,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3092,194] },\n\t\t\t\t\t{ \"px\": [1152,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3096,161] },\n\t\t\t\t\t{ \"px\": [1152,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3096,193] },\n\t\t\t\t\t{ \"px\": [1168,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3096,162] },\n\t\t\t\t\t{ \"px\": [1168,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3096,194] },\n\t\t\t\t\t{ \"px\": [1344,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3108,161] },\n\t\t\t\t\t{ \"px\": [1344,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3108,193] },\n\t\t\t\t\t{ \"px\": [1360,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3108,162] },\n\t\t\t\t\t{ \"px\": [1360,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3108,194] },\n\t\t\t\t\t{ \"px\": [1408,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3112,161] },\n\t\t\t\t\t{ \"px\": [1408,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3112,193] },\n\t\t\t\t\t{ \"px\": [1424,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3112,162] },\n\t\t\t\t\t{ \"px\": [1424,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3112,194] },\n\t\t\t\t\t{ \"px\": [1600,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3124,161] },\n\t\t\t\t\t{ \"px\": [1600,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3124,193] },\n\t\t\t\t\t{ \"px\": [1616,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3124,162] },\n\t\t\t\t\t{ \"px\": [1616,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3124,194] },\n\t\t\t\t\t{ \"px\": [1664,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3128,161] },\n\t\t\t\t\t{ \"px\": [1664,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3128,193] },\n\t\t\t\t\t{ \"px\": [1680,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3128,162] },\n\t\t\t\t\t{ \"px\": [1680,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3128,194] },\n\t\t\t\t\t{ \"px\": [1728,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3132,161] },\n\t\t\t\t\t{ \"px\": [1728,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3132,193] },\n\t\t\t\t\t{ \"px\": [1744,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3132,162] },\n\t\t\t\t\t{ \"px\": [1744,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3132,194] },\n\t\t\t\t\t{ \"px\": [1760,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3134,161] },\n\t\t\t\t\t{ \"px\": [1760,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3134,193] },\n\t\t\t\t\t{ \"px\": [1776,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3134,162] },\n\t\t\t\t\t{ \"px\": [1776,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3134,194] },\n\t\t\t\t\t{ \"px\": [1792,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3136,161] },\n\t\t\t\t\t{ \"px\": [1792,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3136,193] },\n\t\t\t\t\t{ \"px\": [1808,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3136,162] },\n\t\t\t\t\t{ \"px\": [1808,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3136,194] },\n\t\t\t\t\t{ \"px\": [1824,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3138,161] },\n\t\t\t\t\t{ \"px\": [1824,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3138,193] },\n\t\t\t\t\t{ \"px\": [1840,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3138,162] },\n\t\t\t\t\t{ \"px\": [1840,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3138,194] },\n\t\t\t\t\t{ \"px\": [1952,384], \"src\": [16,80], \"f\": 0, \"d\": [49,3146,161] },\n\t\t\t\t\t{ \"px\": [1952,400], \"src\": [16,96], \"f\": 0, \"d\": [49,3146,193] },\n\t\t\t\t\t{ \"px\": [1968,384], \"src\": [32,80], \"f\": 0, \"d\": [49,3146,162] },\n\t\t\t\t\t{ \"px\": [1968,400], \"src\": [32,96], \"f\": 0, \"d\": [49,3146,194] },\n\t\t\t\t\t{ \"px\": [0,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3276,161] },\n\t\t\t\t\t{ \"px\": [0,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3276,193] },\n\t\t\t\t\t{ \"px\": [16,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3276,162] },\n\t\t\t\t\t{ \"px\": [16,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3276,194] },\n\t\t\t\t\t{ \"px\": [160,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3286,161] },\n\t\t\t\t\t{ \"px\": [160,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3286,193] },\n\t\t\t\t\t{ \"px\": [176,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3286,162] },\n\t\t\t\t\t{ \"px\": [176,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3286,194] },\n\t\t\t\t\t{ \"px\": [320,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3296,161] },\n\t\t\t\t\t{ \"px\": [320,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3296,193] },\n\t\t\t\t\t{ \"px\": [336,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3296,162] },\n\t\t\t\t\t{ \"px\": [336,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3296,194] },\n\t\t\t\t\t{ \"px\": [416,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3302,161] },\n\t\t\t\t\t{ \"px\": [416,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3302,193] },\n\t\t\t\t\t{ \"px\": [432,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3302,162] },\n\t\t\t\t\t{ \"px\": [432,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3302,194] },\n\t\t\t\t\t{ \"px\": [480,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3306,161] },\n\t\t\t\t\t{ \"px\": [480,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3306,193] },\n\t\t\t\t\t{ \"px\": [496,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3306,162] },\n\t\t\t\t\t{ \"px\": [496,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3306,194] },\n\t\t\t\t\t{ \"px\": [544,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3310,161] },\n\t\t\t\t\t{ \"px\": [544,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3310,193] },\n\t\t\t\t\t{ \"px\": [560,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3310,162] },\n\t\t\t\t\t{ \"px\": [560,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3310,194] },\n\t\t\t\t\t{ \"px\": [640,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3316,161] },\n\t\t\t\t\t{ \"px\": [640,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3316,193] },\n\t\t\t\t\t{ \"px\": [656,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3316,162] },\n\t\t\t\t\t{ \"px\": [656,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3316,194] },\n\t\t\t\t\t{ \"px\": [704,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3320,161] },\n\t\t\t\t\t{ \"px\": [704,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3320,193] },\n\t\t\t\t\t{ \"px\": [720,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3320,162] },\n\t\t\t\t\t{ \"px\": [720,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3320,194] },\n\t\t\t\t\t{ \"px\": [832,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3328,161] },\n\t\t\t\t\t{ \"px\": [832,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3328,193] },\n\t\t\t\t\t{ \"px\": [848,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3328,162] },\n\t\t\t\t\t{ \"px\": [848,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3328,194] },\n\t\t\t\t\t{ \"px\": [992,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3338,161] },\n\t\t\t\t\t{ \"px\": [992,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3338,193] },\n\t\t\t\t\t{ \"px\": [1008,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3338,162] },\n\t\t\t\t\t{ \"px\": [1008,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3338,194] },\n\t\t\t\t\t{ \"px\": [1088,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3344,161] },\n\t\t\t\t\t{ \"px\": [1088,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3344,193] },\n\t\t\t\t\t{ \"px\": [1104,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3344,162] },\n\t\t\t\t\t{ \"px\": [1104,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3344,194] },\n\t\t\t\t\t{ \"px\": [1152,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3348,161] },\n\t\t\t\t\t{ \"px\": [1152,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3348,193] },\n\t\t\t\t\t{ \"px\": [1168,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3348,162] },\n\t\t\t\t\t{ \"px\": [1168,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3348,194] },\n\t\t\t\t\t{ \"px\": [1184,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3350,161] },\n\t\t\t\t\t{ \"px\": [1184,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3350,193] },\n\t\t\t\t\t{ \"px\": [1200,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3350,162] },\n\t\t\t\t\t{ \"px\": [1200,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3350,194] },\n\t\t\t\t\t{ \"px\": [1280,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3356,161] },\n\t\t\t\t\t{ \"px\": [1280,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3356,193] },\n\t\t\t\t\t{ \"px\": [1296,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3356,162] },\n\t\t\t\t\t{ \"px\": [1296,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3356,194] },\n\t\t\t\t\t{ \"px\": [1312,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3358,161] },\n\t\t\t\t\t{ \"px\": [1312,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3358,193] },\n\t\t\t\t\t{ \"px\": [1328,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3358,162] },\n\t\t\t\t\t{ \"px\": [1328,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3358,194] },\n\t\t\t\t\t{ \"px\": [1344,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3360,161] },\n\t\t\t\t\t{ \"px\": [1344,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3360,193] },\n\t\t\t\t\t{ \"px\": [1360,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3360,162] },\n\t\t\t\t\t{ \"px\": [1360,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3360,194] },\n\t\t\t\t\t{ \"px\": [1664,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3380,161] },\n\t\t\t\t\t{ \"px\": [1664,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3380,193] },\n\t\t\t\t\t{ \"px\": [1680,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3380,162] },\n\t\t\t\t\t{ \"px\": [1680,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3380,194] },\n\t\t\t\t\t{ \"px\": [1824,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3390,161] },\n\t\t\t\t\t{ \"px\": [1824,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3390,193] },\n\t\t\t\t\t{ \"px\": [1840,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3390,162] },\n\t\t\t\t\t{ \"px\": [1840,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3390,194] },\n\t\t\t\t\t{ \"px\": [1856,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3392,161] },\n\t\t\t\t\t{ \"px\": [1856,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3392,193] },\n\t\t\t\t\t{ \"px\": [1872,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3392,162] },\n\t\t\t\t\t{ \"px\": [1872,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3392,194] },\n\t\t\t\t\t{ \"px\": [1952,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3398,161] },\n\t\t\t\t\t{ \"px\": [1952,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3398,193] },\n\t\t\t\t\t{ \"px\": [1968,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3398,162] },\n\t\t\t\t\t{ \"px\": [1968,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3398,194] },\n\t\t\t\t\t{ \"px\": [1984,416], \"src\": [16,80], \"f\": 0, \"d\": [49,3400,161] },\n\t\t\t\t\t{ \"px\": [1984,432], \"src\": [16,96], \"f\": 0, \"d\": [49,3400,193] },\n\t\t\t\t\t{ \"px\": [2000,416], \"src\": [32,80], \"f\": 0, \"d\": [49,3400,162] },\n\t\t\t\t\t{ \"px\": [2000,432], \"src\": [32,96], \"f\": 0, \"d\": [49,3400,194] },\n\t\t\t\t\t{ \"px\": [0,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3528,161] },\n\t\t\t\t\t{ \"px\": [0,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3528,193] },\n\t\t\t\t\t{ \"px\": [16,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3528,162] },\n\t\t\t\t\t{ \"px\": [16,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3528,194] },\n\t\t\t\t\t{ \"px\": [320,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3548,161] },\n\t\t\t\t\t{ \"px\": [320,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3548,193] },\n\t\t\t\t\t{ \"px\": [336,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3548,162] },\n\t\t\t\t\t{ \"px\": [336,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3548,194] },\n\t\t\t\t\t{ \"px\": [352,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3550,161] },\n\t\t\t\t\t{ \"px\": [352,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3550,193] },\n\t\t\t\t\t{ \"px\": [368,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3550,162] },\n\t\t\t\t\t{ \"px\": [368,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3550,194] },\n\t\t\t\t\t{ \"px\": [384,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3552,161] },\n\t\t\t\t\t{ \"px\": [384,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3552,193] },\n\t\t\t\t\t{ \"px\": [400,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3552,162] },\n\t\t\t\t\t{ \"px\": [400,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3552,194] },\n\t\t\t\t\t{ \"px\": [448,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3556,161] },\n\t\t\t\t\t{ \"px\": [448,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3556,193] },\n\t\t\t\t\t{ \"px\": [464,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3556,162] },\n\t\t\t\t\t{ \"px\": [464,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3556,194] },\n\t\t\t\t\t{ \"px\": [480,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3558,161] },\n\t\t\t\t\t{ \"px\": [480,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3558,193] },\n\t\t\t\t\t{ \"px\": [496,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3558,162] },\n\t\t\t\t\t{ \"px\": [496,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3558,194] },\n\t\t\t\t\t{ \"px\": [512,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3560,161] },\n\t\t\t\t\t{ \"px\": [512,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3560,193] },\n\t\t\t\t\t{ \"px\": [528,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3560,162] },\n\t\t\t\t\t{ \"px\": [528,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3560,194] },\n\t\t\t\t\t{ \"px\": [544,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3562,161] },\n\t\t\t\t\t{ \"px\": [544,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3562,193] },\n\t\t\t\t\t{ \"px\": [560,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3562,162] },\n\t\t\t\t\t{ \"px\": [560,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3562,194] },\n\t\t\t\t\t{ \"px\": [640,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3568,161] },\n\t\t\t\t\t{ \"px\": [640,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3568,193] },\n\t\t\t\t\t{ \"px\": [656,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3568,162] },\n\t\t\t\t\t{ \"px\": [656,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3568,194] },\n\t\t\t\t\t{ \"px\": [736,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3574,161] },\n\t\t\t\t\t{ \"px\": [736,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3574,193] },\n\t\t\t\t\t{ \"px\": [752,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3574,162] },\n\t\t\t\t\t{ \"px\": [752,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3574,194] },\n\t\t\t\t\t{ \"px\": [928,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3586,161] },\n\t\t\t\t\t{ \"px\": [928,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3586,193] },\n\t\t\t\t\t{ \"px\": [944,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3586,162] },\n\t\t\t\t\t{ \"px\": [944,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3586,194] },\n\t\t\t\t\t{ \"px\": [960,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3588,161] },\n\t\t\t\t\t{ \"px\": [960,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3588,193] },\n\t\t\t\t\t{ \"px\": [976,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3588,162] },\n\t\t\t\t\t{ \"px\": [976,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3588,194] },\n\t\t\t\t\t{ \"px\": [992,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3590,161] },\n\t\t\t\t\t{ \"px\": [992,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3590,193] },\n\t\t\t\t\t{ \"px\": [1008,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3590,162] },\n\t\t\t\t\t{ \"px\": [1008,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3590,194] },\n\t\t\t\t\t{ \"px\": [1024,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3592,161] },\n\t\t\t\t\t{ \"px\": [1024,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3592,193] },\n\t\t\t\t\t{ \"px\": [1040,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3592,162] },\n\t\t\t\t\t{ \"px\": [1040,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3592,194] },\n\t\t\t\t\t{ \"px\": [1088,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3596,161] },\n\t\t\t\t\t{ \"px\": [1088,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3596,193] },\n\t\t\t\t\t{ \"px\": [1104,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3596,162] },\n\t\t\t\t\t{ \"px\": [1104,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3596,194] },\n\t\t\t\t\t{ \"px\": [1152,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3600,161] },\n\t\t\t\t\t{ \"px\": [1152,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3600,193] },\n\t\t\t\t\t{ \"px\": [1168,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3600,162] },\n\t\t\t\t\t{ \"px\": [1168,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3600,194] },\n\t\t\t\t\t{ \"px\": [1184,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3602,161] },\n\t\t\t\t\t{ \"px\": [1184,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3602,193] },\n\t\t\t\t\t{ \"px\": [1200,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3602,162] },\n\t\t\t\t\t{ \"px\": [1200,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3602,194] },\n\t\t\t\t\t{ \"px\": [1344,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3612,161] },\n\t\t\t\t\t{ \"px\": [1344,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3612,193] },\n\t\t\t\t\t{ \"px\": [1360,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3612,162] },\n\t\t\t\t\t{ \"px\": [1360,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3612,194] },\n\t\t\t\t\t{ \"px\": [1504,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3622,161] },\n\t\t\t\t\t{ \"px\": [1504,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3622,193] },\n\t\t\t\t\t{ \"px\": [1520,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3622,162] },\n\t\t\t\t\t{ \"px\": [1520,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3622,194] },\n\t\t\t\t\t{ \"px\": [1536,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3624,161] },\n\t\t\t\t\t{ \"px\": [1536,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3624,193] },\n\t\t\t\t\t{ \"px\": [1552,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3624,162] },\n\t\t\t\t\t{ \"px\": [1552,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3624,194] },\n\t\t\t\t\t{ \"px\": [1568,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3626,161] },\n\t\t\t\t\t{ \"px\": [1568,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3626,193] },\n\t\t\t\t\t{ \"px\": [1584,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3626,162] },\n\t\t\t\t\t{ \"px\": [1584,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3626,194] },\n\t\t\t\t\t{ \"px\": [1600,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3628,161] },\n\t\t\t\t\t{ \"px\": [1600,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3628,193] },\n\t\t\t\t\t{ \"px\": [1616,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3628,162] },\n\t\t\t\t\t{ \"px\": [1616,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3628,194] },\n\t\t\t\t\t{ \"px\": [1632,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3630,161] },\n\t\t\t\t\t{ \"px\": [1632,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3630,193] },\n\t\t\t\t\t{ \"px\": [1648,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3630,162] },\n\t\t\t\t\t{ \"px\": [1648,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3630,194] },\n\t\t\t\t\t{ \"px\": [1760,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3638,161] },\n\t\t\t\t\t{ \"px\": [1760,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3638,193] },\n\t\t\t\t\t{ \"px\": [1776,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3638,162] },\n\t\t\t\t\t{ \"px\": [1776,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3638,194] },\n\t\t\t\t\t{ \"px\": [1792,448], \"src\": [16,80], \"f\": 0, \"d\": [49,3640,161] },\n\t\t\t\t\t{ \"px\": [1792,464], \"src\": [16,96], \"f\": 0, \"d\": [49,3640,193] },\n\t\t\t\t\t{ \"px\": [1808,448], \"src\": [32,80], \"f\": 0, \"d\": [49,3640,162] },\n\t\t\t\t\t{ \"px\": [1808,464], \"src\": [32,96], \"f\": 0, \"d\": [49,3640,194] },\n\t\t\t\t\t{ \"px\": [16,16], \"src\": [16,112], \"f\": 0, \"d\": [46,127,225] },\n\t\t\t\t\t{ \"px\": [64,16], \"src\": [0,112], \"f\": 0, \"d\": [46,130,224] },\n\t\t\t\t\t{ \"px\": [176,16], \"src\": [16,112], \"f\": 0, \"d\": [46,137,225] },\n\t\t\t\t\t{ \"px\": [192,16], \"src\": [32,112], \"f\": 0, \"d\": [46,138,226] },\n\t\t\t\t\t{ \"px\": [224,16], \"src\": [32,112], \"f\": 0, \"d\": [46,140,226] },\n\t\t\t\t\t{ \"px\": [272,16], \"src\": [32,112], \"f\": 0, \"d\": [46,143,226] },\n\t\t\t\t\t{ \"px\": [368,16], \"src\": [32,112], \"f\": 0, \"d\": [46,149,226] },\n\t\t\t\t\t{ \"px\": [480,16], \"src\": [16,112], \"f\": 0, \"d\": [46,156,225] },\n\t\t\t\t\t{ \"px\": [496,16], \"src\": [32,112], \"f\": 0, \"d\": [46,157,226] },\n\t\t\t\t\t{ \"px\": [512,16], \"src\": [16,112], \"f\": 0, \"d\": [46,158,225] },\n\t\t\t\t\t{ \"px\": [640,16], \"src\": [0,112], \"f\": 0, \"d\": [46,166,224] },\n\t\t\t\t\t{ \"px\": [656,16], \"src\": [0,112], \"f\": 0, \"d\": [46,167,224] },\n\t\t\t\t\t{ \"px\": [672,16], \"src\": [32,112], \"f\": 0, \"d\": [46,168,226] },\n\t\t\t\t\t{ \"px\": [688,16], \"src\": [0,112], \"f\": 0, \"d\": [46,169,224] },\n\t\t\t\t\t{ \"px\": [704,16], \"src\": [32,112], \"f\": 0, \"d\": [46,170,226] },\n\t\t\t\t\t{ \"px\": [720,16], \"src\": [32,112], \"f\": 0, \"d\": [46,171,226] },\n\t\t\t\t\t{ \"px\": [736,16], \"src\": [0,112], \"f\": 0, \"d\": [46,172,224] },\n\t\t\t\t\t{ \"px\": [1696,16], \"src\": [32,112], \"f\": 0, \"d\": [46,232,226] },\n\t\t\t\t\t{ \"px\": [1744,16], \"src\": [32,112], \"f\": 0, \"d\": [46,235,226] },\n\t\t\t\t\t{ \"px\": [1760,16], \"src\": [16,112], \"f\": 0, \"d\": [46,236,225] },\n\t\t\t\t\t{ \"px\": [1824,16], \"src\": [32,112], \"f\": 0, \"d\": [46,240,226] },\n\t\t\t\t\t{ \"px\": [1856,16], \"src\": [32,112], \"f\": 0, \"d\": [46,242,226] },\n\t\t\t\t\t{ \"px\": [1872,16], \"src\": [0,112], \"f\": 0, \"d\": [46,243,224] },\n\t\t\t\t\t{ \"px\": [2000,16], \"src\": [16,112], \"f\": 0, \"d\": [46,251,225] },\n\t\t\t\t\t{ \"px\": [0,32], \"src\": [0,112], \"f\": 0, \"d\": [46,252,224] },\n\t\t\t\t\t{ \"px\": [32,32], \"src\": [32,112], \"f\": 0, \"d\": [46,254,226] },\n\t\t\t\t\t{ \"px\": [64,32], \"src\": [16,112], \"f\": 0, \"d\": [46,256,225] },\n\t\t\t\t\t{ \"px\": [160,32], \"src\": [32,112], \"f\": 0, \"d\": [46,262,226] },\n\t\t\t\t\t{ \"px\": [176,32], \"src\": [16,112], \"f\": 0, \"d\": [46,263,225] },\n\t\t\t\t\t{ \"px\": [192,32], \"src\": [0,112], \"f\": 0, \"d\": [46,264,224] },\n\t\t\t\t\t{ \"px\": [208,32], \"src\": [0,112], \"f\": 0, \"d\": [46,265,224] },\n\t\t\t\t\t{ \"px\": [336,32], \"src\": [0,112], \"f\": 0, \"d\": [46,273,224] },\n\t\t\t\t\t{ \"px\": [352,32], \"src\": [16,112], \"f\": 0, \"d\": [46,274,225] },\n\t\t\t\t\t{ \"px\": [384,32], \"src\": [32,112], \"f\": 0, \"d\": [46,276,226] },\n\t\t\t\t\t{ \"px\": [496,32], \"src\": [16,112], \"f\": 0, \"d\": [46,283,225] },\n\t\t\t\t\t{ \"px\": [528,32], \"src\": [0,112], \"f\": 0, \"d\": [46,285,224] },\n\t\t\t\t\t{ \"px\": [544,32], \"src\": [16,112], \"f\": 0, \"d\": [46,286,225] },\n\t\t\t\t\t{ \"px\": [560,32], \"src\": [16,112], \"f\": 0, \"d\": [46,287,225] },\n\t\t\t\t\t{ \"px\": [576,32], \"src\": [0,112], \"f\": 0, \"d\": [46,288,224] },\n\t\t\t\t\t{ \"px\": [688,32], \"src\": [32,112], \"f\": 0, \"d\": [46,295,226] },\n\t\t\t\t\t{ \"px\": [704,32], \"src\": [0,112], \"f\": 0, \"d\": [46,296,224] },\n\t\t\t\t\t{ \"px\": [720,32], \"src\": [32,112], \"f\": 0, \"d\": [46,297,226] },\n\t\t\t\t\t{ \"px\": [736,32], \"src\": [0,112], \"f\": 0, \"d\": [46,298,224] },\n\t\t\t\t\t{ \"px\": [1696,32], \"src\": [32,112], \"f\": 0, \"d\": [46,358,226] },\n\t\t\t\t\t{ \"px\": [1728,32], \"src\": [16,112], \"f\": 0, \"d\": [46,360,225] },\n\t\t\t\t\t{ \"px\": [1760,32], \"src\": [0,112], \"f\": 0, \"d\": [46,362,224] },\n\t\t\t\t\t{ \"px\": [1840,32], \"src\": [0,112], \"f\": 0, \"d\": [46,367,224] },\n\t\t\t\t\t{ \"px\": [0,48], \"src\": [0,112], \"f\": 0, \"d\": [46,378,224] },\n\t\t\t\t\t{ \"px\": [16,48], \"src\": [16,112], \"f\": 0, \"d\": [46,379,225] },\n\t\t\t\t\t{ \"px\": [112,48], \"src\": [0,112], \"f\": 0, \"d\": [46,385,224] },\n\t\t\t\t\t{ \"px\": [160,48], \"src\": [0,112], \"f\": 0, \"d\": [46,388,224] },\n\t\t\t\t\t{ \"px\": [176,48], \"src\": [16,112], \"f\": 0, \"d\": [46,389,225] },\n\t\t\t\t\t{ \"px\": [192,48], \"src\": [32,112], \"f\": 0, \"d\": [46,390,226] },\n\t\t\t\t\t{ \"px\": [336,48], \"src\": [0,112], \"f\": 0, \"d\": [46,399,224] },\n\t\t\t\t\t{ \"px\": [368,48], \"src\": [0,112], \"f\": 0, \"d\": [46,401,224] },\n\t\t\t\t\t{ \"px\": [400,48], \"src\": [16,112], \"f\": 0, \"d\": [46,403,225] },\n\t\t\t\t\t{ \"px\": [416,48], \"src\": [0,112], \"f\": 0, \"d\": [46,404,224] },\n\t\t\t\t\t{ \"px\": [432,48], \"src\": [0,112], \"f\": 0, \"d\": [46,405,224] },\n\t\t\t\t\t{ \"px\": [448,48], \"src\": [16,112], \"f\": 0, \"d\": [46,406,225] },\n\t\t\t\t\t{ \"px\": [464,48], \"src\": [0,112], \"f\": 0, \"d\": [46,407,224] },\n\t\t\t\t\t{ \"px\": [480,48], \"src\": [32,112], \"f\": 0, \"d\": [46,408,226] },\n\t\t\t\t\t{ \"px\": [496,48], \"src\": [32,112], \"f\": 0, \"d\": [46,409,226] },\n\t\t\t\t\t{ \"px\": [512,48], \"src\": [32,112], \"f\": 0, \"d\": [46,410,226] },\n\t\t\t\t\t{ \"px\": [720,48], \"src\": [32,112], \"f\": 0, \"d\": [46,423,226] },\n\t\t\t\t\t{ \"px\": [736,48], \"src\": [0,112], \"f\": 0, \"d\": [46,424,224] },\n\t\t\t\t\t{ \"px\": [1696,48], \"src\": [16,112], \"f\": 0, \"d\": [46,484,225] },\n\t\t\t\t\t{ \"px\": [1728,48], \"src\": [32,112], \"f\": 0, \"d\": [46,486,226] },\n\t\t\t\t\t{ \"px\": [1744,48], \"src\": [0,112], \"f\": 0, \"d\": [46,487,224] },\n\t\t\t\t\t{ \"px\": [1760,48], \"src\": [0,112], \"f\": 0, \"d\": [46,488,224] },\n\t\t\t\t\t{ \"px\": [1776,48], \"src\": [16,112], \"f\": 0, \"d\": [46,489,225] },\n\t\t\t\t\t{ \"px\": [1808,48], \"src\": [16,112], \"f\": 0, \"d\": [46,491,225] },\n\t\t\t\t\t{ \"px\": [1984,48], \"src\": [16,112], \"f\": 0, \"d\": [46,502,225] },\n\t\t\t\t\t{ \"px\": [0,64], \"src\": [16,112], \"f\": 0, \"d\": [46,504,225] },\n\t\t\t\t\t{ \"px\": [16,64], \"src\": [16,112], \"f\": 0, \"d\": [46,505,225] },\n\t\t\t\t\t{ \"px\": [32,64], \"src\": [0,112], \"f\": 0, \"d\": [46,506,224] },\n\t\t\t\t\t{ \"px\": [48,64], \"src\": [0,112], \"f\": 0, \"d\": [46,507,224] },\n\t\t\t\t\t{ \"px\": [64,64], \"src\": [16,112], \"f\": 0, \"d\": [46,508,225] },\n\t\t\t\t\t{ \"px\": [80,64], \"src\": [16,112], \"f\": 0, \"d\": [46,509,225] },\n\t\t\t\t\t{ \"px\": [112,64], \"src\": [0,112], \"f\": 0, \"d\": [46,511,224] },\n\t\t\t\t\t{ \"px\": [144,64], \"src\": [16,112], \"f\": 0, \"d\": [46,513,225] },\n\t\t\t\t\t{ \"px\": [160,64], \"src\": [16,112], \"f\": 0, \"d\": [46,514,225] },\n\t\t\t\t\t{ \"px\": [176,64], \"src\": [0,112], \"f\": 0, \"d\": [46,515,224] },\n\t\t\t\t\t{ \"px\": [352,64], \"src\": [32,112], \"f\": 0, \"d\": [46,526,226] },\n\t\t\t\t\t{ \"px\": [416,64], \"src\": [16,112], \"f\": 0, \"d\": [46,530,225] },\n\t\t\t\t\t{ \"px\": [432,64], \"src\": [16,112], \"f\": 0, \"d\": [46,531,225] },\n\t\t\t\t\t{ \"px\": [464,64], \"src\": [16,112], \"f\": 0, \"d\": [46,533,225] },\n\t\t\t\t\t{ \"px\": [480,64], \"src\": [0,112], \"f\": 0, \"d\": [46,534,224] },\n\t\t\t\t\t{ \"px\": [560,64], \"src\": [16,112], \"f\": 0, \"d\": [46,539,225] },\n\t\t\t\t\t{ \"px\": [576,64], \"src\": [16,112], \"f\": 0, \"d\": [46,540,225] },\n\t\t\t\t\t{ \"px\": [592,64], \"src\": [16,112], \"f\": 0, \"d\": [46,541,225] },\n\t\t\t\t\t{ \"px\": [720,64], \"src\": [0,112], \"f\": 0, \"d\": [46,549,224] },\n\t\t\t\t\t{ \"px\": [736,64], \"src\": [16,112], \"f\": 0, \"d\": [46,550,225] },\n\t\t\t\t\t{ \"px\": [1552,64], \"src\": [0,112], \"f\": 0, \"d\": [46,601,224] },\n\t\t\t\t\t{ \"px\": [1568,64], \"src\": [32,112], \"f\": 0, \"d\": [46,602,226] },\n\t\t\t\t\t{ \"px\": [1744,64], \"src\": [0,112], \"f\": 0, \"d\": [46,613,224] },\n\t\t\t\t\t{ \"px\": [1760,64], \"src\": [32,112], \"f\": 0, \"d\": [46,614,226] },\n\t\t\t\t\t{ \"px\": [1776,64], \"src\": [0,112], \"f\": 0, \"d\": [46,615,224] },\n\t\t\t\t\t{ \"px\": [1792,64], \"src\": [16,112], \"f\": 0, \"d\": [46,616,225] },\n\t\t\t\t\t{ \"px\": [1808,64], \"src\": [16,112], \"f\": 0, \"d\": [46,617,225] },\n\t\t\t\t\t{ \"px\": [1936,64], \"src\": [16,112], \"f\": 0, \"d\": [46,625,225] },\n\t\t\t\t\t{ \"px\": [0,80], \"src\": [0,112], \"f\": 0, \"d\": [46,630,224] },\n\t\t\t\t\t{ \"px\": [48,80], \"src\": [32,112], \"f\": 0, \"d\": [46,633,226] },\n\t\t\t\t\t{ \"px\": [80,80], \"src\": [32,112], \"f\": 0, \"d\": [46,635,226] },\n\t\t\t\t\t{ \"px\": [176,80], \"src\": [32,112], \"f\": 0, \"d\": [46,641,226] },\n\t\t\t\t\t{ \"px\": [256,80], \"src\": [32,112], \"f\": 0, \"d\": [46,646,226] },\n\t\t\t\t\t{ \"px\": [352,80], \"src\": [0,112], \"f\": 0, \"d\": [46,652,224] },\n\t\t\t\t\t{ \"px\": [384,80], \"src\": [16,112], \"f\": 0, \"d\": [46,654,225] },\n\t\t\t\t\t{ \"px\": [432,80], \"src\": [0,112], \"f\": 0, \"d\": [46,657,224] },\n\t\t\t\t\t{ \"px\": [480,80], \"src\": [16,112], \"f\": 0, \"d\": [46,660,225] },\n\t\t\t\t\t{ \"px\": [496,80], \"src\": [32,112], \"f\": 0, \"d\": [46,661,226] },\n\t\t\t\t\t{ \"px\": [560,80], \"src\": [16,112], \"f\": 0, \"d\": [46,665,225] },\n\t\t\t\t\t{ \"px\": [576,80], \"src\": [32,112], \"f\": 0, \"d\": [46,666,226] },\n\t\t\t\t\t{ \"px\": [592,80], \"src\": [0,112], \"f\": 0, \"d\": [46,667,224] },\n\t\t\t\t\t{ \"px\": [640,80], \"src\": [0,112], \"f\": 0, \"d\": [46,670,224] },\n\t\t\t\t\t{ \"px\": [1616,80], \"src\": [32,112], \"f\": 0, \"d\": [46,731,226] },\n\t\t\t\t\t{ \"px\": [1712,80], \"src\": [16,112], \"f\": 0, \"d\": [46,737,225] },\n\t\t\t\t\t{ \"px\": [1728,80], \"src\": [16,112], \"f\": 0, \"d\": [46,738,225] },\n\t\t\t\t\t{ \"px\": [1744,80], \"src\": [0,112], \"f\": 0, \"d\": [46,739,224] },\n\t\t\t\t\t{ \"px\": [1760,80], \"src\": [0,112], \"f\": 0, \"d\": [46,740,224] },\n\t\t\t\t\t{ \"px\": [1824,80], \"src\": [32,112], \"f\": 0, \"d\": [46,744,226] },\n\t\t\t\t\t{ \"px\": [1840,80], \"src\": [0,112], \"f\": 0, \"d\": [46,745,224] },\n\t\t\t\t\t{ \"px\": [1920,80], \"src\": [16,112], \"f\": 0, \"d\": [46,750,225] },\n\t\t\t\t\t{ \"px\": [1936,80], \"src\": [32,112], \"f\": 0, \"d\": [46,751,226] },\n\t\t\t\t\t{ \"px\": [2000,80], \"src\": [32,112], \"f\": 0, \"d\": [46,755,226] },\n\t\t\t\t\t{ \"px\": [1584,96], \"src\": [32,112], \"f\": 0, \"d\": [46,855,226] },\n\t\t\t\t\t{ \"px\": [1600,96], \"src\": [16,112], \"f\": 0, \"d\": [46,856,225] },\n\t\t\t\t\t{ \"px\": [1872,96], \"src\": [0,112], \"f\": 0, \"d\": [46,873,224] },\n\t\t\t\t\t{ \"px\": [1888,96], \"src\": [16,112], \"f\": 0, \"d\": [46,874,225] },\n\t\t\t\t\t{ \"px\": [1936,96], \"src\": [16,112], \"f\": 0, \"d\": [46,877,225] },\n\t\t\t\t\t{ \"px\": [1952,96], \"src\": [16,112], \"f\": 0, \"d\": [46,878,225] },\n\t\t\t\t\t{ \"px\": [2000,96], \"src\": [16,112], \"f\": 0, \"d\": [46,881,225] },\n\t\t\t\t\t{ \"px\": [1872,112], \"src\": [0,112], \"f\": 0, \"d\": [46,999,224] },\n\t\t\t\t\t{ \"px\": [1888,112], \"src\": [0,112], \"f\": 0, \"d\": [46,1000,224] },\n\t\t\t\t\t{ \"px\": [1936,112], \"src\": [0,112], \"f\": 0, \"d\": [46,1003,224] },\n\t\t\t\t\t{ \"px\": [1952,112], \"src\": [16,112], \"f\": 0, \"d\": [46,1004,225] },\n\t\t\t\t\t{ \"px\": [2000,112], \"src\": [0,112], \"f\": 0, \"d\": [46,1007,224] },\n\t\t\t\t\t{ \"px\": [1872,128], \"src\": [0,112], \"f\": 0, \"d\": [46,1125,224] },\n\t\t\t\t\t{ \"px\": [1888,128], \"src\": [0,112], \"f\": 0, \"d\": [46,1126,224] },\n\t\t\t\t\t{ \"px\": [1904,128], \"src\": [16,112], \"f\": 0, \"d\": [46,1127,225] },\n\t\t\t\t\t{ \"px\": [1952,128], \"src\": [0,112], \"f\": 0, \"d\": [46,1130,224] },\n\t\t\t\t\t{ \"px\": [2000,128], \"src\": [0,112], \"f\": 0, \"d\": [46,1133,224] },\n\t\t\t\t\t{ \"px\": [1888,144], \"src\": [32,112], \"f\": 0, \"d\": [46,1252,226] },\n\t\t\t\t\t{ \"px\": [1904,144], \"src\": [16,112], \"f\": 0, \"d\": [46,1253,225] },\n\t\t\t\t\t{ \"px\": [1984,144], \"src\": [16,112], \"f\": 0, \"d\": [46,1258,225] },\n\t\t\t\t\t{ \"px\": [0,160], \"src\": [0,112], \"f\": 0, \"d\": [46,1260,224] },\n\t\t\t\t\t{ \"px\": [1872,160], \"src\": [0,112], \"f\": 0, \"d\": [46,1377,224] },\n\t\t\t\t\t{ \"px\": [1904,160], \"src\": [0,112], \"f\": 0, \"d\": [46,1379,224] },\n\t\t\t\t\t{ \"px\": [16,176], \"src\": [0,112], \"f\": 0, \"d\": [46,1387,224] },\n\t\t\t\t\t{ \"px\": [96,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1392,225] },\n\t\t\t\t\t{ \"px\": [112,176], \"src\": [32,112], \"f\": 0, \"d\": [46,1393,226] },\n\t\t\t\t\t{ \"px\": [144,176], \"src\": [0,112], \"f\": 0, \"d\": [46,1395,224] },\n\t\t\t\t\t{ \"px\": [400,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1411,225] },\n\t\t\t\t\t{ \"px\": [416,176], \"src\": [32,112], \"f\": 0, \"d\": [46,1412,226] },\n\t\t\t\t\t{ \"px\": [448,176], \"src\": [32,112], \"f\": 0, \"d\": [46,1414,226] },\n\t\t\t\t\t{ \"px\": [496,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1417,225] },\n\t\t\t\t\t{ \"px\": [512,176], \"src\": [32,112], \"f\": 0, \"d\": [46,1418,226] },\n\t\t\t\t\t{ \"px\": [560,176], \"src\": [0,112], \"f\": 0, \"d\": [46,1421,224] },\n\t\t\t\t\t{ \"px\": [576,176], \"src\": [32,112], \"f\": 0, \"d\": [46,1422,226] },\n\t\t\t\t\t{ \"px\": [592,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1423,225] },\n\t\t\t\t\t{ \"px\": [608,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1424,225] },\n\t\t\t\t\t{ \"px\": [624,176], \"src\": [0,112], \"f\": 0, \"d\": [46,1425,224] },\n\t\t\t\t\t{ \"px\": [672,176], \"src\": [0,112], \"f\": 0, \"d\": [46,1428,224] },\n\t\t\t\t\t{ \"px\": [1872,176], \"src\": [32,112], \"f\": 0, \"d\": [46,1503,226] },\n\t\t\t\t\t{ \"px\": [1888,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1504,225] },\n\t\t\t\t\t{ \"px\": [1904,176], \"src\": [16,112], \"f\": 0, \"d\": [46,1505,225] },\n\t\t\t\t\t{ \"px\": [0,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1512,224] },\n\t\t\t\t\t{ \"px\": [128,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1520,224] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1542,224] },\n\t\t\t\t\t{ \"px\": [528,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1545,224] },\n\t\t\t\t\t{ \"px\": [560,192], \"src\": [16,112], \"f\": 0, \"d\": [46,1547,225] },\n\t\t\t\t\t{ \"px\": [576,192], \"src\": [16,112], \"f\": 0, \"d\": [46,1548,225] },\n\t\t\t\t\t{ \"px\": [592,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1549,224] },\n\t\t\t\t\t{ \"px\": [640,192], \"src\": [32,112], \"f\": 0, \"d\": [46,1552,226] },\n\t\t\t\t\t{ \"px\": [656,192], \"src\": [32,112], \"f\": 0, \"d\": [46,1553,226] },\n\t\t\t\t\t{ \"px\": [672,192], \"src\": [16,112], \"f\": 0, \"d\": [46,1554,225] },\n\t\t\t\t\t{ \"px\": [688,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1555,224] },\n\t\t\t\t\t{ \"px\": [704,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1556,224] },\n\t\t\t\t\t{ \"px\": [1760,192], \"src\": [32,112], \"f\": 0, \"d\": [46,1622,226] },\n\t\t\t\t\t{ \"px\": [1776,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1623,224] },\n\t\t\t\t\t{ \"px\": [1792,192], \"src\": [0,112], \"f\": 0, \"d\": [46,1624,224] },\n\t\t\t\t\t{ \"px\": [1888,192], \"src\": [16,112], \"f\": 0, \"d\": [46,1630,225] },\n\t\t\t\t\t{ \"px\": [144,208], \"src\": [0,112], \"f\": 0, \"d\": [46,1647,224] },\n\t\t\t\t\t{ \"px\": [544,208], \"src\": [32,112], \"f\": 0, \"d\": [46,1672,226] },\n\t\t\t\t\t{ \"px\": [560,208], \"src\": [16,112], \"f\": 0, \"d\": [46,1673,225] },\n\t\t\t\t\t{ \"px\": [592,208], \"src\": [32,112], \"f\": 0, \"d\": [46,1675,226] },\n\t\t\t\t\t{ \"px\": [640,208], \"src\": [16,112], \"f\": 0, \"d\": [46,1678,225] },\n\t\t\t\t\t{ \"px\": [656,208], \"src\": [32,112], \"f\": 0, \"d\": [46,1679,226] },\n\t\t\t\t\t{ \"px\": [672,208], \"src\": [16,112], \"f\": 0, \"d\": [46,1680,225] },\n\t\t\t\t\t{ \"px\": [688,208], \"src\": [0,112], \"f\": 0, \"d\": [46,1681,224] },\n\t\t\t\t\t{ \"px\": [704,208], \"src\": [32,112], \"f\": 0, \"d\": [46,1682,226] },\n\t\t\t\t\t{ \"px\": [720,208], \"src\": [32,112], \"f\": 0, \"d\": [46,1683,226] },\n\t\t\t\t\t{ \"px\": [1696,208], \"src\": [16,112], \"f\": 0, \"d\": [46,1744,225] },\n\t\t\t\t\t{ \"px\": [1760,208], \"src\": [16,112], \"f\": 0, \"d\": [46,1748,225] },\n\t\t\t\t\t{ \"px\": [1872,208], \"src\": [32,112], \"f\": 0, \"d\": [46,1755,226] },\n\t\t\t\t\t{ \"px\": [128,224], \"src\": [32,112], \"f\": 0, \"d\": [46,1772,226] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [16,112], \"f\": 0, \"d\": [46,1800,225] },\n\t\t\t\t\t{ \"px\": [592,224], \"src\": [16,112], \"f\": 0, \"d\": [46,1801,225] },\n\t\t\t\t\t{ \"px\": [608,224], \"src\": [0,112], \"f\": 0, \"d\": [46,1802,224] },\n\t\t\t\t\t{ \"px\": [640,224], \"src\": [16,112], \"f\": 0, \"d\": [46,1804,225] },\n\t\t\t\t\t{ \"px\": [656,224], \"src\": [16,112], \"f\": 0, \"d\": [46,1805,225] },\n\t\t\t\t\t{ \"px\": [704,224], \"src\": [16,112], \"f\": 0, \"d\": [46,1808,225] },\n\t\t\t\t\t{ \"px\": [1696,224], \"src\": [32,112], \"f\": 0, \"d\": [46,1870,226] },\n\t\t\t\t\t{ \"px\": [1712,224], \"src\": [0,112], \"f\": 0, \"d\": [46,1871,224] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [0,112], \"f\": 0, \"d\": [46,1876,224] },\n\t\t\t\t\t{ \"px\": [0,240], \"src\": [32,112], \"f\": 0, \"d\": [46,1890,226] },\n\t\t\t\t\t{ \"px\": [720,240], \"src\": [0,112], \"f\": 0, \"d\": [46,1935,224] },\n\t\t\t\t\t{ \"px\": [1920,240], \"src\": [16,112], \"f\": 0, \"d\": [46,2010,225] },\n\t\t\t\t\t{ \"px\": [1888,256], \"src\": [16,112], \"f\": 0, \"d\": [46,2134,225] },\n\t\t\t\t\t{ \"px\": [1936,256], \"src\": [32,112], \"f\": 0, \"d\": [46,2137,226] },\n\t\t\t\t\t{ \"px\": [1984,256], \"src\": [32,112], \"f\": 0, \"d\": [46,2140,226] },\n\t\t\t\t\t{ \"px\": [0,272], \"src\": [16,112], \"f\": 0, \"d\": [46,2142,225] },\n\t\t\t\t\t{ \"px\": [16,272], \"src\": [32,112], \"f\": 0, \"d\": [46,2143,226] },\n\t\t\t\t\t{ \"px\": [32,272], \"src\": [0,112], \"f\": 0, \"d\": [46,2144,224] },\n\t\t\t\t\t{ \"px\": [1920,272], \"src\": [0,112], \"f\": 0, \"d\": [46,2262,224] },\n\t\t\t\t\t{ \"px\": [1952,272], \"src\": [0,112], \"f\": 0, \"d\": [46,2264,224] },\n\t\t\t\t\t{ \"px\": [1968,272], \"src\": [0,112], \"f\": 0, \"d\": [46,2265,224] },\n\t\t\t\t\t{ \"px\": [2000,272], \"src\": [0,112], \"f\": 0, \"d\": [46,2267,224] },\n\t\t\t\t\t{ \"px\": [16,288], \"src\": [0,112], \"f\": 0, \"d\": [46,2269,224] },\n\t\t\t\t\t{ \"px\": [1904,288], \"src\": [16,112], \"f\": 0, \"d\": [46,2387,225] },\n\t\t\t\t\t{ \"px\": [1952,288], \"src\": [16,112], \"f\": 0, \"d\": [46,2390,225] },\n\t\t\t\t\t{ \"px\": [2000,288], \"src\": [32,112], \"f\": 0, \"d\": [46,2393,226] },\n\t\t\t\t\t{ \"px\": [0,304], \"src\": [0,112], \"f\": 0, \"d\": [46,2394,224] },\n\t\t\t\t\t{ \"px\": [80,304], \"src\": [32,112], \"f\": 0, \"d\": [46,2399,226] },\n\t\t\t\t\t{ \"px\": [96,304], \"src\": [32,112], \"f\": 0, \"d\": [46,2400,226] },\n\t\t\t\t\t{ \"px\": [128,304], \"src\": [16,112], \"f\": 0, \"d\": [46,2402,225] },\n\t\t\t\t\t{ \"px\": [416,304], \"src\": [0,112], \"f\": 0, \"d\": [46,2420,224] },\n\t\t\t\t\t{ \"px\": [1872,304], \"src\": [32,112], \"f\": 0, \"d\": [46,2511,226] },\n\t\t\t\t\t{ \"px\": [1888,304], \"src\": [0,112], \"f\": 0, \"d\": [46,2512,224] },\n\t\t\t\t\t{ \"px\": [1904,304], \"src\": [16,112], \"f\": 0, \"d\": [46,2513,225] },\n\t\t\t\t\t{ \"px\": [1920,304], \"src\": [0,112], \"f\": 0, \"d\": [46,2514,224] },\n\t\t\t\t\t{ \"px\": [1968,304], \"src\": [32,112], \"f\": 0, \"d\": [46,2517,226] },\n\t\t\t\t\t{ \"px\": [0,320], \"src\": [16,112], \"f\": 0, \"d\": [46,2520,225] },\n\t\t\t\t\t{ \"px\": [80,320], \"src\": [16,112], \"f\": 0, \"d\": [46,2525,225] },\n\t\t\t\t\t{ \"px\": [144,320], \"src\": [16,112], \"f\": 0, \"d\": [46,2529,225] },\n\t\t\t\t\t{ \"px\": [416,320], \"src\": [0,112], \"f\": 0, \"d\": [46,2546,224] },\n\t\t\t\t\t{ \"px\": [512,320], \"src\": [32,112], \"f\": 0, \"d\": [46,2552,226] },\n\t\t\t\t\t{ \"px\": [560,320], \"src\": [0,112], \"f\": 0, \"d\": [46,2555,224] },\n\t\t\t\t\t{ \"px\": [576,320], \"src\": [32,112], \"f\": 0, \"d\": [46,2556,226] },\n\t\t\t\t\t{ \"px\": [1600,320], \"src\": [32,112], \"f\": 0, \"d\": [46,2620,226] },\n\t\t\t\t\t{ \"px\": [1616,320], \"src\": [0,112], \"f\": 0, \"d\": [46,2621,224] },\n\t\t\t\t\t{ \"px\": [1632,320], \"src\": [0,112], \"f\": 0, \"d\": [46,2622,224] },\n\t\t\t\t\t{ \"px\": [1904,320], \"src\": [32,112], \"f\": 0, \"d\": [46,2639,226] },\n\t\t\t\t\t{ \"px\": [1920,320], \"src\": [0,112], \"f\": 0, \"d\": [46,2640,224] },\n\t\t\t\t\t{ \"px\": [2000,320], \"src\": [32,112], \"f\": 0, \"d\": [46,2645,226] },\n\t\t\t\t\t{ \"px\": [96,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2652,224] },\n\t\t\t\t\t{ \"px\": [128,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2654,224] },\n\t\t\t\t\t{ \"px\": [144,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2655,224] },\n\t\t\t\t\t{ \"px\": [272,336], \"src\": [32,112], \"f\": 0, \"d\": [46,2663,226] },\n\t\t\t\t\t{ \"px\": [288,336], \"src\": [32,112], \"f\": 0, \"d\": [46,2664,226] },\n\t\t\t\t\t{ \"px\": [304,336], \"src\": [32,112], \"f\": 0, \"d\": [46,2665,226] },\n\t\t\t\t\t{ \"px\": [336,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2667,224] },\n\t\t\t\t\t{ \"px\": [384,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2670,224] },\n\t\t\t\t\t{ \"px\": [400,336], \"src\": [32,112], \"f\": 0, \"d\": [46,2671,226] },\n\t\t\t\t\t{ \"px\": [496,336], \"src\": [16,112], \"f\": 0, \"d\": [46,2677,225] },\n\t\t\t\t\t{ \"px\": [560,336], \"src\": [32,112], \"f\": 0, \"d\": [46,2681,226] },\n\t\t\t\t\t{ \"px\": [576,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2682,224] },\n\t\t\t\t\t{ \"px\": [1856,336], \"src\": [16,112], \"f\": 0, \"d\": [46,2762,225] },\n\t\t\t\t\t{ \"px\": [1952,336], \"src\": [16,112], \"f\": 0, \"d\": [46,2768,225] },\n\t\t\t\t\t{ \"px\": [1984,336], \"src\": [32,112], \"f\": 0, \"d\": [46,2770,226] },\n\t\t\t\t\t{ \"px\": [2000,336], \"src\": [0,112], \"f\": 0, \"d\": [46,2771,224] },\n\t\t\t\t\t{ \"px\": [96,352], \"src\": [0,112], \"f\": 0, \"d\": [46,2778,224] },\n\t\t\t\t\t{ \"px\": [112,352], \"src\": [32,112], \"f\": 0, \"d\": [46,2779,226] },\n\t\t\t\t\t{ \"px\": [144,352], \"src\": [0,112], \"f\": 0, \"d\": [46,2781,224] },\n\t\t\t\t\t{ \"px\": [192,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2784,225] },\n\t\t\t\t\t{ \"px\": [240,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2787,225] },\n\t\t\t\t\t{ \"px\": [272,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2789,225] },\n\t\t\t\t\t{ \"px\": [304,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2791,225] },\n\t\t\t\t\t{ \"px\": [336,352], \"src\": [0,112], \"f\": 0, \"d\": [46,2793,224] },\n\t\t\t\t\t{ \"px\": [496,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2803,225] },\n\t\t\t\t\t{ \"px\": [608,352], \"src\": [0,112], \"f\": 0, \"d\": [46,2810,224] },\n\t\t\t\t\t{ \"px\": [640,352], \"src\": [32,112], \"f\": 0, \"d\": [46,2812,226] },\n\t\t\t\t\t{ \"px\": [1632,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2874,225] },\n\t\t\t\t\t{ \"px\": [1648,352], \"src\": [32,112], \"f\": 0, \"d\": [46,2875,226] },\n\t\t\t\t\t{ \"px\": [1664,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2876,225] },\n\t\t\t\t\t{ \"px\": [1792,352], \"src\": [0,112], \"f\": 0, \"d\": [46,2884,224] },\n\t\t\t\t\t{ \"px\": [1808,352], \"src\": [32,112], \"f\": 0, \"d\": [46,2885,226] },\n\t\t\t\t\t{ \"px\": [1856,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2888,225] },\n\t\t\t\t\t{ \"px\": [1904,352], \"src\": [0,112], \"f\": 0, \"d\": [46,2891,224] },\n\t\t\t\t\t{ \"px\": [1968,352], \"src\": [32,112], \"f\": 0, \"d\": [46,2895,226] },\n\t\t\t\t\t{ \"px\": [1984,352], \"src\": [16,112], \"f\": 0, \"d\": [46,2896,225] },\n\t\t\t\t\t{ \"px\": [96,368], \"src\": [16,112], \"f\": 0, \"d\": [46,2904,225] },\n\t\t\t\t\t{ \"px\": [112,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2905,224] },\n\t\t\t\t\t{ \"px\": [144,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2907,224] },\n\t\t\t\t\t{ \"px\": [208,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2911,224] },\n\t\t\t\t\t{ \"px\": [240,368], \"src\": [16,112], \"f\": 0, \"d\": [46,2913,225] },\n\t\t\t\t\t{ \"px\": [256,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2914,224] },\n\t\t\t\t\t{ \"px\": [272,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2915,224] },\n\t\t\t\t\t{ \"px\": [304,368], \"src\": [32,112], \"f\": 0, \"d\": [46,2917,226] },\n\t\t\t\t\t{ \"px\": [448,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2926,224] },\n\t\t\t\t\t{ \"px\": [544,368], \"src\": [16,112], \"f\": 0, \"d\": [46,2932,225] },\n\t\t\t\t\t{ \"px\": [576,368], \"src\": [32,112], \"f\": 0, \"d\": [46,2934,226] },\n\t\t\t\t\t{ \"px\": [592,368], \"src\": [0,112], \"f\": 0, \"d\": [46,2935,224] },\n\t\t\t\t\t{ \"px\": [624,368], \"src\": [16,112], \"f\": 0, \"d\": [46,2937,225] },\n\t\t\t\t\t{ \"px\": [640,368], \"src\": [16,112], \"f\": 0, \"d\": [46,2938,225] },\n\t\t\t\t\t{ \"px\": [1776,368], \"src\": [0,112], \"f\": 0, \"d\": [46,3009,224] },\n\t\t\t\t\t{ \"px\": [1792,368], \"src\": [16,112], \"f\": 0, \"d\": [46,3010,225] },\n\t\t\t\t\t{ \"px\": [1904,368], \"src\": [32,112], \"f\": 0, \"d\": [46,3017,226] },\n\t\t\t\t\t{ \"px\": [1920,368], \"src\": [16,112], \"f\": 0, \"d\": [46,3018,225] },\n\t\t\t\t\t{ \"px\": [1936,368], \"src\": [16,112], \"f\": 0, \"d\": [46,3019,225] },\n\t\t\t\t\t{ \"px\": [1968,368], \"src\": [32,112], \"f\": 0, \"d\": [46,3021,226] },\n\t\t\t\t\t{ \"px\": [1984,368], \"src\": [16,112], \"f\": 0, \"d\": [46,3022,225] },\n\t\t\t\t\t{ \"px\": [2000,368], \"src\": [32,112], \"f\": 0, \"d\": [46,3023,226] },\n\t\t\t\t\t{ \"px\": [256,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3040,224] },\n\t\t\t\t\t{ \"px\": [288,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3042,225] },\n\t\t\t\t\t{ \"px\": [304,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3043,224] },\n\t\t\t\t\t{ \"px\": [320,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3044,226] },\n\t\t\t\t\t{ \"px\": [432,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3051,226] },\n\t\t\t\t\t{ \"px\": [448,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3052,224] },\n\t\t\t\t\t{ \"px\": [528,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3057,224] },\n\t\t\t\t\t{ \"px\": [592,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3061,225] },\n\t\t\t\t\t{ \"px\": [608,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3062,225] },\n\t\t\t\t\t{ \"px\": [624,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3063,225] },\n\t\t\t\t\t{ \"px\": [640,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3064,226] },\n\t\t\t\t\t{ \"px\": [1296,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3105,226] },\n\t\t\t\t\t{ \"px\": [1360,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3109,226] },\n\t\t\t\t\t{ \"px\": [1424,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3113,224] },\n\t\t\t\t\t{ \"px\": [1472,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3116,225] },\n\t\t\t\t\t{ \"px\": [1488,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3117,226] },\n\t\t\t\t\t{ \"px\": [1520,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3119,226] },\n\t\t\t\t\t{ \"px\": [1536,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3120,225] },\n\t\t\t\t\t{ \"px\": [1552,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3121,226] },\n\t\t\t\t\t{ \"px\": [1568,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3122,225] },\n\t\t\t\t\t{ \"px\": [1632,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3126,224] },\n\t\t\t\t\t{ \"px\": [1648,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3127,225] },\n\t\t\t\t\t{ \"px\": [1664,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3128,225] },\n\t\t\t\t\t{ \"px\": [1680,384], \"src\": [16,112], \"f\": 0, \"d\": [46,3129,225] },\n\t\t\t\t\t{ \"px\": [1792,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3136,226] },\n\t\t\t\t\t{ \"px\": [1904,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3143,226] },\n\t\t\t\t\t{ \"px\": [1920,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3144,224] },\n\t\t\t\t\t{ \"px\": [1936,384], \"src\": [0,112], \"f\": 0, \"d\": [46,3145,224] },\n\t\t\t\t\t{ \"px\": [1952,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3146,226] },\n\t\t\t\t\t{ \"px\": [2000,384], \"src\": [32,112], \"f\": 0, \"d\": [46,3149,226] },\n\t\t\t\t\t{ \"px\": [0,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3150,225] },\n\t\t\t\t\t{ \"px\": [16,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3151,225] },\n\t\t\t\t\t{ \"px\": [80,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3155,225] },\n\t\t\t\t\t{ \"px\": [96,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3156,225] },\n\t\t\t\t\t{ \"px\": [112,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3157,225] },\n\t\t\t\t\t{ \"px\": [160,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3160,224] },\n\t\t\t\t\t{ \"px\": [176,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3161,224] },\n\t\t\t\t\t{ \"px\": [240,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3165,224] },\n\t\t\t\t\t{ \"px\": [256,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3166,226] },\n\t\t\t\t\t{ \"px\": [320,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3170,225] },\n\t\t\t\t\t{ \"px\": [384,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3174,224] },\n\t\t\t\t\t{ \"px\": [400,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3175,226] },\n\t\t\t\t\t{ \"px\": [432,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3177,224] },\n\t\t\t\t\t{ \"px\": [448,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3178,225] },\n\t\t\t\t\t{ \"px\": [480,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3180,225] },\n\t\t\t\t\t{ \"px\": [560,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3185,224] },\n\t\t\t\t\t{ \"px\": [608,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3188,225] },\n\t\t\t\t\t{ \"px\": [640,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3190,225] },\n\t\t\t\t\t{ \"px\": [720,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3195,225] },\n\t\t\t\t\t{ \"px\": [736,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3196,225] },\n\t\t\t\t\t{ \"px\": [800,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3200,225] },\n\t\t\t\t\t{ \"px\": [816,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3201,225] },\n\t\t\t\t\t{ \"px\": [848,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3203,225] },\n\t\t\t\t\t{ \"px\": [880,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3205,225] },\n\t\t\t\t\t{ \"px\": [944,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3209,224] },\n\t\t\t\t\t{ \"px\": [960,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3210,225] },\n\t\t\t\t\t{ \"px\": [976,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3211,226] },\n\t\t\t\t\t{ \"px\": [1008,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3213,225] },\n\t\t\t\t\t{ \"px\": [1168,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3223,225] },\n\t\t\t\t\t{ \"px\": [1184,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3224,225] },\n\t\t\t\t\t{ \"px\": [1200,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3225,225] },\n\t\t\t\t\t{ \"px\": [1280,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3230,225] },\n\t\t\t\t\t{ \"px\": [1296,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3231,226] },\n\t\t\t\t\t{ \"px\": [1312,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3232,225] },\n\t\t\t\t\t{ \"px\": [1328,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3233,224] },\n\t\t\t\t\t{ \"px\": [1344,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3234,226] },\n\t\t\t\t\t{ \"px\": [1360,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3235,225] },\n\t\t\t\t\t{ \"px\": [1424,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3239,224] },\n\t\t\t\t\t{ \"px\": [1440,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3240,226] },\n\t\t\t\t\t{ \"px\": [1536,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3246,225] },\n\t\t\t\t\t{ \"px\": [1584,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3249,224] },\n\t\t\t\t\t{ \"px\": [1616,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3251,224] },\n\t\t\t\t\t{ \"px\": [1648,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3253,226] },\n\t\t\t\t\t{ \"px\": [1808,400], \"src\": [0,112], \"f\": 0, \"d\": [46,3263,224] },\n\t\t\t\t\t{ \"px\": [1824,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3264,226] },\n\t\t\t\t\t{ \"px\": [1920,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3270,225] },\n\t\t\t\t\t{ \"px\": [1936,400], \"src\": [16,112], \"f\": 0, \"d\": [46,3271,225] },\n\t\t\t\t\t{ \"px\": [2000,400], \"src\": [32,112], \"f\": 0, \"d\": [46,3275,226] },\n\t\t\t\t\t{ \"px\": [32,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3278,224] },\n\t\t\t\t\t{ \"px\": [48,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3279,226] },\n\t\t\t\t\t{ \"px\": [96,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3282,226] },\n\t\t\t\t\t{ \"px\": [208,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3289,224] },\n\t\t\t\t\t{ \"px\": [224,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3290,224] },\n\t\t\t\t\t{ \"px\": [240,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3291,224] },\n\t\t\t\t\t{ \"px\": [384,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3300,225] },\n\t\t\t\t\t{ \"px\": [400,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3301,226] },\n\t\t\t\t\t{ \"px\": [432,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3303,226] },\n\t\t\t\t\t{ \"px\": [448,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3304,224] },\n\t\t\t\t\t{ \"px\": [464,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3305,224] },\n\t\t\t\t\t{ \"px\": [496,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3307,225] },\n\t\t\t\t\t{ \"px\": [560,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3311,224] },\n\t\t\t\t\t{ \"px\": [736,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3322,226] },\n\t\t\t\t\t{ \"px\": [752,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3323,225] },\n\t\t\t\t\t{ \"px\": [768,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3324,224] },\n\t\t\t\t\t{ \"px\": [784,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3325,224] },\n\t\t\t\t\t{ \"px\": [800,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3326,226] },\n\t\t\t\t\t{ \"px\": [832,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3328,224] },\n\t\t\t\t\t{ \"px\": [880,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3331,225] },\n\t\t\t\t\t{ \"px\": [896,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3332,226] },\n\t\t\t\t\t{ \"px\": [928,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3334,226] },\n\t\t\t\t\t{ \"px\": [1008,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3339,224] },\n\t\t\t\t\t{ \"px\": [1024,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3340,224] },\n\t\t\t\t\t{ \"px\": [1056,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3342,226] },\n\t\t\t\t\t{ \"px\": [1120,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3346,226] },\n\t\t\t\t\t{ \"px\": [1152,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3348,226] },\n\t\t\t\t\t{ \"px\": [1200,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3351,224] },\n\t\t\t\t\t{ \"px\": [1296,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3357,224] },\n\t\t\t\t\t{ \"px\": [1312,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3358,224] },\n\t\t\t\t\t{ \"px\": [1328,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3359,225] },\n\t\t\t\t\t{ \"px\": [1344,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3360,224] },\n\t\t\t\t\t{ \"px\": [1536,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3372,226] },\n\t\t\t\t\t{ \"px\": [1552,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3373,224] },\n\t\t\t\t\t{ \"px\": [1568,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3374,224] },\n\t\t\t\t\t{ \"px\": [1584,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3375,225] },\n\t\t\t\t\t{ \"px\": [1760,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3386,226] },\n\t\t\t\t\t{ \"px\": [1776,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3387,226] },\n\t\t\t\t\t{ \"px\": [1792,416], \"src\": [16,112], \"f\": 0, \"d\": [46,3388,225] },\n\t\t\t\t\t{ \"px\": [1824,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3390,226] },\n\t\t\t\t\t{ \"px\": [1840,416], \"src\": [0,112], \"f\": 0, \"d\": [46,3391,224] },\n\t\t\t\t\t{ \"px\": [2000,416], \"src\": [32,112], \"f\": 0, \"d\": [46,3401,226] },\n\t\t\t\t\t{ \"px\": [32,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3404,225] },\n\t\t\t\t\t{ \"px\": [96,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3408,225] },\n\t\t\t\t\t{ \"px\": [128,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3410,225] },\n\t\t\t\t\t{ \"px\": [176,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3413,226] },\n\t\t\t\t\t{ \"px\": [192,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3414,224] },\n\t\t\t\t\t{ \"px\": [208,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3415,224] },\n\t\t\t\t\t{ \"px\": [224,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3416,226] },\n\t\t\t\t\t{ \"px\": [368,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3425,224] },\n\t\t\t\t\t{ \"px\": [432,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3429,226] },\n\t\t\t\t\t{ \"px\": [464,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3431,226] },\n\t\t\t\t\t{ \"px\": [496,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3433,226] },\n\t\t\t\t\t{ \"px\": [512,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3434,225] },\n\t\t\t\t\t{ \"px\": [592,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3439,225] },\n\t\t\t\t\t{ \"px\": [736,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3448,224] },\n\t\t\t\t\t{ \"px\": [768,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3450,226] },\n\t\t\t\t\t{ \"px\": [784,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3451,225] },\n\t\t\t\t\t{ \"px\": [816,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3453,226] },\n\t\t\t\t\t{ \"px\": [912,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3459,226] },\n\t\t\t\t\t{ \"px\": [928,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3460,225] },\n\t\t\t\t\t{ \"px\": [944,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3461,226] },\n\t\t\t\t\t{ \"px\": [976,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3463,225] },\n\t\t\t\t\t{ \"px\": [1008,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3465,226] },\n\t\t\t\t\t{ \"px\": [1024,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3466,225] },\n\t\t\t\t\t{ \"px\": [1040,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3467,226] },\n\t\t\t\t\t{ \"px\": [1056,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3468,226] },\n\t\t\t\t\t{ \"px\": [1120,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3472,226] },\n\t\t\t\t\t{ \"px\": [1136,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3473,225] },\n\t\t\t\t\t{ \"px\": [1152,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3474,224] },\n\t\t\t\t\t{ \"px\": [1168,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3475,226] },\n\t\t\t\t\t{ \"px\": [1216,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3478,226] },\n\t\t\t\t\t{ \"px\": [1312,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3484,225] },\n\t\t\t\t\t{ \"px\": [1328,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3485,226] },\n\t\t\t\t\t{ \"px\": [1344,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3486,225] },\n\t\t\t\t\t{ \"px\": [1584,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3501,226] },\n\t\t\t\t\t{ \"px\": [1600,432], \"src\": [32,112], \"f\": 0, \"d\": [46,3502,226] },\n\t\t\t\t\t{ \"px\": [1632,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3504,224] },\n\t\t\t\t\t{ \"px\": [1648,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3505,225] },\n\t\t\t\t\t{ \"px\": [1776,432], \"src\": [0,112], \"f\": 0, \"d\": [46,3513,224] },\n\t\t\t\t\t{ \"px\": [1936,432], \"src\": [16,112], \"f\": 0, \"d\": [46,3523,225] },\n\t\t\t\t\t{ \"px\": [16,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3529,224] },\n\t\t\t\t\t{ \"px\": [32,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3530,226] },\n\t\t\t\t\t{ \"px\": [112,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3535,224] },\n\t\t\t\t\t{ \"px\": [192,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3540,225] },\n\t\t\t\t\t{ \"px\": [448,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3556,226] },\n\t\t\t\t\t{ \"px\": [464,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3557,224] },\n\t\t\t\t\t{ \"px\": [480,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3558,226] },\n\t\t\t\t\t{ \"px\": [496,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3559,226] },\n\t\t\t\t\t{ \"px\": [512,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3560,225] },\n\t\t\t\t\t{ \"px\": [576,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3564,224] },\n\t\t\t\t\t{ \"px\": [592,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3565,226] },\n\t\t\t\t\t{ \"px\": [640,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3568,224] },\n\t\t\t\t\t{ \"px\": [768,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3576,226] },\n\t\t\t\t\t{ \"px\": [816,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3579,225] },\n\t\t\t\t\t{ \"px\": [832,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3580,225] },\n\t\t\t\t\t{ \"px\": [928,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3586,226] },\n\t\t\t\t\t{ \"px\": [944,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3587,225] },\n\t\t\t\t\t{ \"px\": [960,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3588,224] },\n\t\t\t\t\t{ \"px\": [976,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3589,224] },\n\t\t\t\t\t{ \"px\": [1056,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3594,225] },\n\t\t\t\t\t{ \"px\": [1136,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3599,225] },\n\t\t\t\t\t{ \"px\": [1168,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3601,225] },\n\t\t\t\t\t{ \"px\": [1184,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3602,224] },\n\t\t\t\t\t{ \"px\": [1200,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3603,224] },\n\t\t\t\t\t{ \"px\": [1232,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3605,225] },\n\t\t\t\t\t{ \"px\": [1296,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3609,226] },\n\t\t\t\t\t{ \"px\": [1344,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3612,224] },\n\t\t\t\t\t{ \"px\": [1360,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3613,226] },\n\t\t\t\t\t{ \"px\": [1376,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3614,224] },\n\t\t\t\t\t{ \"px\": [1584,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3627,226] },\n\t\t\t\t\t{ \"px\": [1648,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3631,225] },\n\t\t\t\t\t{ \"px\": [1664,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3632,225] },\n\t\t\t\t\t{ \"px\": [1776,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3639,226] },\n\t\t\t\t\t{ \"px\": [1792,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3640,225] },\n\t\t\t\t\t{ \"px\": [1808,448], \"src\": [32,112], \"f\": 0, \"d\": [46,3641,226] },\n\t\t\t\t\t{ \"px\": [1920,448], \"src\": [0,112], \"f\": 0, \"d\": [46,3648,224] },\n\t\t\t\t\t{ \"px\": [1936,448], \"src\": [16,112], \"f\": 0, \"d\": [46,3649,225] },\n\t\t\t\t\t{ \"px\": [0,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3654,226] },\n\t\t\t\t\t{ \"px\": [16,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3655,226] },\n\t\t\t\t\t{ \"px\": [96,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3660,225] },\n\t\t\t\t\t{ \"px\": [112,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3661,225] },\n\t\t\t\t\t{ \"px\": [128,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3662,225] },\n\t\t\t\t\t{ \"px\": [384,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3678,226] },\n\t\t\t\t\t{ \"px\": [400,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3679,224] },\n\t\t\t\t\t{ \"px\": [464,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3683,225] },\n\t\t\t\t\t{ \"px\": [480,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3684,225] },\n\t\t\t\t\t{ \"px\": [576,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3690,226] },\n\t\t\t\t\t{ \"px\": [592,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3691,225] },\n\t\t\t\t\t{ \"px\": [608,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3692,224] },\n\t\t\t\t\t{ \"px\": [624,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3693,226] },\n\t\t\t\t\t{ \"px\": [928,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3712,224] },\n\t\t\t\t\t{ \"px\": [944,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3713,226] },\n\t\t\t\t\t{ \"px\": [960,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3714,224] },\n\t\t\t\t\t{ \"px\": [976,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3715,224] },\n\t\t\t\t\t{ \"px\": [992,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3716,225] },\n\t\t\t\t\t{ \"px\": [1008,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3717,225] },\n\t\t\t\t\t{ \"px\": [1040,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3719,225] },\n\t\t\t\t\t{ \"px\": [1120,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3724,226] },\n\t\t\t\t\t{ \"px\": [1152,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3726,225] },\n\t\t\t\t\t{ \"px\": [1168,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3727,226] },\n\t\t\t\t\t{ \"px\": [1200,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3729,226] },\n\t\t\t\t\t{ \"px\": [1216,464], \"src\": [16,112], \"f\": 0, \"d\": [46,3730,225] },\n\t\t\t\t\t{ \"px\": [1264,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3733,224] },\n\t\t\t\t\t{ \"px\": [1280,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3734,226] },\n\t\t\t\t\t{ \"px\": [1312,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3736,226] },\n\t\t\t\t\t{ \"px\": [1328,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3737,226] },\n\t\t\t\t\t{ \"px\": [1456,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3745,224] },\n\t\t\t\t\t{ \"px\": [1472,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3746,226] },\n\t\t\t\t\t{ \"px\": [1584,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3753,224] },\n\t\t\t\t\t{ \"px\": [1600,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3754,226] },\n\t\t\t\t\t{ \"px\": [1632,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3756,224] },\n\t\t\t\t\t{ \"px\": [1648,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3757,226] },\n\t\t\t\t\t{ \"px\": [1664,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3758,224] },\n\t\t\t\t\t{ \"px\": [1792,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3766,226] },\n\t\t\t\t\t{ \"px\": [1808,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3767,224] },\n\t\t\t\t\t{ \"px\": [1824,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3768,224] },\n\t\t\t\t\t{ \"px\": [1904,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3773,224] },\n\t\t\t\t\t{ \"px\": [1920,464], \"src\": [32,112], \"f\": 0, \"d\": [46,3774,226] },\n\t\t\t\t\t{ \"px\": [1936,464], \"src\": [0,112], \"f\": 0, \"d\": [46,3775,224] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [64,80], \"f\": 0, \"d\": [52,475,164] },\n\t\t\t\t\t{ \"px\": [1568,48], \"src\": [64,80], \"f\": 0, \"d\": [52,476,164] },\n\t\t\t\t\t{ \"px\": [1584,48], \"src\": [64,80], \"f\": 0, \"d\": [52,477,164] },\n\t\t\t\t\t{ \"px\": [1600,48], \"src\": [64,80], \"f\": 0, \"d\": [52,478,164] },\n\t\t\t\t\t{ \"px\": [1616,48], \"src\": [64,80], \"f\": 0, \"d\": [52,479,164] },\n\t\t\t\t\t{ \"px\": [1632,48], \"src\": [64,80], \"f\": 0, \"d\": [52,480,164] },\n\t\t\t\t\t{ \"px\": [1648,48], \"src\": [64,80], \"f\": 0, \"d\": [52,481,164] },\n\t\t\t\t\t{ \"px\": [1664,48], \"src\": [64,80], \"f\": 0, \"d\": [52,482,164] },\n\t\t\t\t\t{ \"px\": [1680,48], \"src\": [64,80], \"f\": 0, \"d\": [52,483,164] },\n\t\t\t\t\t{ \"px\": [80,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1265,164] },\n\t\t\t\t\t{ \"px\": [96,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1266,164] },\n\t\t\t\t\t{ \"px\": [112,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1267,164] },\n\t\t\t\t\t{ \"px\": [128,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1268,164] },\n\t\t\t\t\t{ \"px\": [144,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1269,164] },\n\t\t\t\t\t{ \"px\": [400,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1285,164] },\n\t\t\t\t\t{ \"px\": [416,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1286,164] },\n\t\t\t\t\t{ \"px\": [432,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1287,164] },\n\t\t\t\t\t{ \"px\": [448,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1288,164] },\n\t\t\t\t\t{ \"px\": [464,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1289,164] },\n\t\t\t\t\t{ \"px\": [480,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1290,164] },\n\t\t\t\t\t{ \"px\": [496,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1291,164] },\n\t\t\t\t\t{ \"px\": [512,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1292,164] },\n\t\t\t\t\t{ \"px\": [528,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1293,164] },\n\t\t\t\t\t{ \"px\": [544,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1294,164] },\n\t\t\t\t\t{ \"px\": [560,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1295,164] },\n\t\t\t\t\t{ \"px\": [576,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1296,164] },\n\t\t\t\t\t{ \"px\": [592,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1297,164] },\n\t\t\t\t\t{ \"px\": [608,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1298,164] },\n\t\t\t\t\t{ \"px\": [624,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1299,164] },\n\t\t\t\t\t{ \"px\": [640,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1300,164] },\n\t\t\t\t\t{ \"px\": [656,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1301,164] },\n\t\t\t\t\t{ \"px\": [672,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1302,164] },\n\t\t\t\t\t{ \"px\": [688,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1303,164] },\n\t\t\t\t\t{ \"px\": [704,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1304,164] },\n\t\t\t\t\t{ \"px\": [720,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1305,164] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [64,80], \"f\": 0, \"d\": [52,1306,164] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1491,164] },\n\t\t\t\t\t{ \"px\": [1696,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1492,164] },\n\t\t\t\t\t{ \"px\": [1712,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1493,164] },\n\t\t\t\t\t{ \"px\": [1728,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1494,164] },\n\t\t\t\t\t{ \"px\": [1744,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1495,164] },\n\t\t\t\t\t{ \"px\": [1760,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1496,164] },\n\t\t\t\t\t{ \"px\": [1776,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1497,164] },\n\t\t\t\t\t{ \"px\": [1792,176], \"src\": [64,80], \"f\": 0, \"d\": [52,1498,164] },\n\t\t\t\t\t{ \"px\": [752,192], \"src\": [64,80], \"f\": 0, \"d\": [52,1559,164] },\n\t\t\t\t\t{ \"px\": [768,224], \"src\": [64,80], \"f\": 0, \"d\": [52,1812,164] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [64,80], \"f\": 0, \"d\": [52,1813,164] },\n\t\t\t\t\t{ \"px\": [80,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2273,164] },\n\t\t\t\t\t{ \"px\": [96,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2274,164] },\n\t\t\t\t\t{ \"px\": [112,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2275,164] },\n\t\t\t\t\t{ \"px\": [128,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2276,164] },\n\t\t\t\t\t{ \"px\": [144,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2277,164] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2293,164] },\n\t\t\t\t\t{ \"px\": [416,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2294,164] },\n\t\t\t\t\t{ \"px\": [432,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2295,164] },\n\t\t\t\t\t{ \"px\": [448,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2296,164] },\n\t\t\t\t\t{ \"px\": [464,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2297,164] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [64,80], \"f\": 0, \"d\": [52,2298,164] },\n\t\t\t\t\t{ \"px\": [496,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2425,164] },\n\t\t\t\t\t{ \"px\": [512,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2426,164] },\n\t\t\t\t\t{ \"px\": [528,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2427,164] },\n\t\t\t\t\t{ \"px\": [544,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2428,164] },\n\t\t\t\t\t{ \"px\": [560,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2429,164] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2430,164] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2493,164] },\n\t\t\t\t\t{ \"px\": [1600,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2494,164] },\n\t\t\t\t\t{ \"px\": [1616,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2495,164] },\n\t\t\t\t\t{ \"px\": [1632,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2496,164] },\n\t\t\t\t\t{ \"px\": [1648,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2497,164] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [64,80], \"f\": 0, \"d\": [52,2498,164] },\n\t\t\t\t\t{ \"px\": [160,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2530,164] },\n\t\t\t\t\t{ \"px\": [176,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2531,164] },\n\t\t\t\t\t{ \"px\": [192,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2532,164] },\n\t\t\t\t\t{ \"px\": [208,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2533,164] },\n\t\t\t\t\t{ \"px\": [224,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2534,164] },\n\t\t\t\t\t{ \"px\": [240,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2535,164] },\n\t\t\t\t\t{ \"px\": [256,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2536,164] },\n\t\t\t\t\t{ \"px\": [272,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2537,164] },\n\t\t\t\t\t{ \"px\": [288,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2538,164] },\n\t\t\t\t\t{ \"px\": [304,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2539,164] },\n\t\t\t\t\t{ \"px\": [320,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2540,164] },\n\t\t\t\t\t{ \"px\": [336,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2541,164] },\n\t\t\t\t\t{ \"px\": [352,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2542,164] },\n\t\t\t\t\t{ \"px\": [368,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2543,164] },\n\t\t\t\t\t{ \"px\": [384,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2544,164] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2634,164] },\n\t\t\t\t\t{ \"px\": [1840,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2635,164] },\n\t\t\t\t\t{ \"px\": [1856,320], \"src\": [64,80], \"f\": 0, \"d\": [52,2636,164] },\n\t\t\t\t\t{ \"px\": [592,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2683,164] },\n\t\t\t\t\t{ \"px\": [608,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2684,164] },\n\t\t\t\t\t{ \"px\": [624,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2685,164] },\n\t\t\t\t\t{ \"px\": [640,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2686,164] },\n\t\t\t\t\t{ \"px\": [1680,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2751,164] },\n\t\t\t\t\t{ \"px\": [1696,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2752,164] },\n\t\t\t\t\t{ \"px\": [1712,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2753,164] },\n\t\t\t\t\t{ \"px\": [1728,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2754,164] },\n\t\t\t\t\t{ \"px\": [1744,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2755,164] },\n\t\t\t\t\t{ \"px\": [1760,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2756,164] },\n\t\t\t\t\t{ \"px\": [1776,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2757,164] },\n\t\t\t\t\t{ \"px\": [1792,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2758,164] },\n\t\t\t\t\t{ \"px\": [1808,336], \"src\": [64,80], \"f\": 0, \"d\": [52,2759,164] },\n\t\t\t\t\t{ \"px\": [656,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2939,164] },\n\t\t\t\t\t{ \"px\": [672,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2940,164] },\n\t\t\t\t\t{ \"px\": [688,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2941,164] },\n\t\t\t\t\t{ \"px\": [704,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2942,164] },\n\t\t\t\t\t{ \"px\": [720,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2943,164] },\n\t\t\t\t\t{ \"px\": [736,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2944,164] },\n\t\t\t\t\t{ \"px\": [752,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2945,164] },\n\t\t\t\t\t{ \"px\": [768,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2946,164] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2975,164] },\n\t\t\t\t\t{ \"px\": [1248,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2976,164] },\n\t\t\t\t\t{ \"px\": [1264,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2977,164] },\n\t\t\t\t\t{ \"px\": [1280,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2978,164] },\n\t\t\t\t\t{ \"px\": [1296,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2979,164] },\n\t\t\t\t\t{ \"px\": [1312,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2980,164] },\n\t\t\t\t\t{ \"px\": [1328,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2981,164] },\n\t\t\t\t\t{ \"px\": [1344,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2982,164] },\n\t\t\t\t\t{ \"px\": [1360,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2983,164] },\n\t\t\t\t\t{ \"px\": [1376,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2984,164] },\n\t\t\t\t\t{ \"px\": [1392,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2985,164] },\n\t\t\t\t\t{ \"px\": [1408,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2986,164] },\n\t\t\t\t\t{ \"px\": [1424,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2987,164] },\n\t\t\t\t\t{ \"px\": [1440,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2988,164] },\n\t\t\t\t\t{ \"px\": [1456,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2989,164] },\n\t\t\t\t\t{ \"px\": [1472,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2990,164] },\n\t\t\t\t\t{ \"px\": [1488,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2991,164] },\n\t\t\t\t\t{ \"px\": [1504,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2992,164] },\n\t\t\t\t\t{ \"px\": [1520,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2993,164] },\n\t\t\t\t\t{ \"px\": [1536,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2994,164] },\n\t\t\t\t\t{ \"px\": [1552,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2995,164] },\n\t\t\t\t\t{ \"px\": [1568,368], \"src\": [64,80], \"f\": 0, \"d\": [52,2996,164] },\n\t\t\t\t\t{ \"px\": [784,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3073,164] },\n\t\t\t\t\t{ \"px\": [800,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3074,164] },\n\t\t\t\t\t{ \"px\": [816,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3075,164] },\n\t\t\t\t\t{ \"px\": [832,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3076,164] },\n\t\t\t\t\t{ \"px\": [848,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3077,164] },\n\t\t\t\t\t{ \"px\": [864,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3078,164] },\n\t\t\t\t\t{ \"px\": [880,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3079,164] },\n\t\t\t\t\t{ \"px\": [896,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3080,164] },\n\t\t\t\t\t{ \"px\": [912,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3081,164] },\n\t\t\t\t\t{ \"px\": [928,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3082,164] },\n\t\t\t\t\t{ \"px\": [944,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3083,164] },\n\t\t\t\t\t{ \"px\": [960,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3084,164] },\n\t\t\t\t\t{ \"px\": [976,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3085,164] },\n\t\t\t\t\t{ \"px\": [992,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3086,164] },\n\t\t\t\t\t{ \"px\": [1008,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3087,164] },\n\t\t\t\t\t{ \"px\": [1024,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3088,164] },\n\t\t\t\t\t{ \"px\": [1040,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3089,164] },\n\t\t\t\t\t{ \"px\": [1056,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3090,164] },\n\t\t\t\t\t{ \"px\": [1072,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3091,164] },\n\t\t\t\t\t{ \"px\": [1088,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3092,164] },\n\t\t\t\t\t{ \"px\": [1104,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3093,164] },\n\t\t\t\t\t{ \"px\": [1120,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3094,164] },\n\t\t\t\t\t{ \"px\": [1136,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3095,164] },\n\t\t\t\t\t{ \"px\": [1152,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3096,164] },\n\t\t\t\t\t{ \"px\": [1168,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3097,164] },\n\t\t\t\t\t{ \"px\": [1184,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3098,164] },\n\t\t\t\t\t{ \"px\": [1200,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3099,164] },\n\t\t\t\t\t{ \"px\": [1216,384], \"src\": [64,80], \"f\": 0, \"d\": [52,3100,164] },\n\t\t\t\t\t{ \"px\": [736,0], \"src\": [48,96], \"f\": 1, \"d\": [53,46,195] },\n\t\t\t\t\t{ \"px\": [1696,0], \"src\": [48,96], \"f\": 0, \"d\": [53,106,195] },\n\t\t\t\t\t{ \"px\": [736,16], \"src\": [48,96], \"f\": 1, \"d\": [53,172,195] },\n\t\t\t\t\t{ \"px\": [1696,16], \"src\": [48,96], \"f\": 0, \"d\": [53,232,195] },\n\t\t\t\t\t{ \"px\": [736,32], \"src\": [48,96], \"f\": 1, \"d\": [53,298,195] },\n\t\t\t\t\t{ \"px\": [1696,32], \"src\": [48,96], \"f\": 0, \"d\": [53,358,195] },\n\t\t\t\t\t{ \"px\": [736,48], \"src\": [48,96], \"f\": 1, \"d\": [53,424,195] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [48,96], \"f\": 0, \"d\": [53,475,195] },\n\t\t\t\t\t{ \"px\": [736,64], \"src\": [48,96], \"f\": 1, \"d\": [53,550,195] },\n\t\t\t\t\t{ \"px\": [1552,64], \"src\": [48,96], \"f\": 0, \"d\": [53,601,195] },\n\t\t\t\t\t{ \"px\": [736,80], \"src\": [48,96], \"f\": 1, \"d\": [53,676,195] },\n\t\t\t\t\t{ \"px\": [1552,80], \"src\": [48,96], \"f\": 0, \"d\": [53,727,195] },\n\t\t\t\t\t{ \"px\": [64,96], \"src\": [48,96], \"f\": 1, \"d\": [53,760,195] },\n\t\t\t\t\t{ \"px\": [736,96], \"src\": [48,96], \"f\": 0, \"d\": [53,802,195] },\n\t\t\t\t\t{ \"px\": [1552,96], \"src\": [48,96], \"f\": 0, \"d\": [53,853,195] },\n\t\t\t\t\t{ \"px\": [64,112], \"src\": [48,96], \"f\": 1, \"d\": [53,886,195] },\n\t\t\t\t\t{ \"px\": [1872,112], \"src\": [48,96], \"f\": 0, \"d\": [53,999,195] },\n\t\t\t\t\t{ \"px\": [64,128], \"src\": [48,96], \"f\": 1, \"d\": [53,1012,195] },\n\t\t\t\t\t{ \"px\": [1872,128], \"src\": [48,96], \"f\": 0, \"d\": [53,1125,195] },\n\t\t\t\t\t{ \"px\": [64,144], \"src\": [48,96], \"f\": 1, \"d\": [53,1138,195] },\n\t\t\t\t\t{ \"px\": [1872,144], \"src\": [48,96], \"f\": 0, \"d\": [53,1251,195] },\n\t\t\t\t\t{ \"px\": [144,160], \"src\": [48,96], \"f\": 1, \"d\": [53,1269,195] },\n\t\t\t\t\t{ \"px\": [400,160], \"src\": [48,96], \"f\": 0, \"d\": [53,1285,195] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [48,96], \"f\": 1, \"d\": [53,1306,195] },\n\t\t\t\t\t{ \"px\": [1872,160], \"src\": [48,96], \"f\": 0, \"d\": [53,1377,195] },\n\t\t\t\t\t{ \"px\": [144,176], \"src\": [48,96], \"f\": 1, \"d\": [53,1395,195] },\n\t\t\t\t\t{ \"px\": [400,176], \"src\": [48,96], \"f\": 0, \"d\": [53,1411,195] },\n\t\t\t\t\t{ \"px\": [736,176], \"src\": [48,96], \"f\": 1, \"d\": [53,1432,195] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [48,96], \"f\": 0, \"d\": [53,1491,195] },\n\t\t\t\t\t{ \"px\": [1792,176], \"src\": [48,96], \"f\": 1, \"d\": [53,1498,195] },\n\t\t\t\t\t{ \"px\": [1872,176], \"src\": [48,96], \"f\": 0, \"d\": [53,1503,195] },\n\t\t\t\t\t{ \"px\": [64,192], \"src\": [48,96], \"f\": 1, \"d\": [53,1516,195] },\n\t\t\t\t\t{ \"px\": [128,192], \"src\": [48,96], \"f\": 0, \"d\": [53,1520,195] },\n\t\t\t\t\t{ \"px\": [144,192], \"src\": [48,96], \"f\": 1, \"d\": [53,1521,195] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [48,96], \"f\": 0, \"d\": [53,1542,195] },\n\t\t\t\t\t{ \"px\": [752,192], \"src\": [48,96], \"f\": 1, \"d\": [53,1559,195] },\n\t\t\t\t\t{ \"px\": [1680,192], \"src\": [48,96], \"f\": 0, \"d\": [53,1617,195] },\n\t\t\t\t\t{ \"px\": [1792,192], \"src\": [48,96], \"f\": 1, \"d\": [53,1624,195] },\n\t\t\t\t\t{ \"px\": [1872,192], \"src\": [48,96], \"f\": 0, \"d\": [53,1629,195] },\n\t\t\t\t\t{ \"px\": [64,208], \"src\": [48,96], \"f\": 1, \"d\": [53,1642,195] },\n\t\t\t\t\t{ \"px\": [128,208], \"src\": [48,96], \"f\": 0, \"d\": [53,1646,195] },\n\t\t\t\t\t{ \"px\": [144,208], \"src\": [48,96], \"f\": 1, \"d\": [53,1647,195] },\n\t\t\t\t\t{ \"px\": [512,208], \"src\": [48,96], \"f\": 0, \"d\": [53,1670,195] },\n\t\t\t\t\t{ \"px\": [752,208], \"src\": [48,96], \"f\": 1, \"d\": [53,1685,195] },\n\t\t\t\t\t{ \"px\": [1680,208], \"src\": [48,96], \"f\": 0, \"d\": [53,1743,195] },\n\t\t\t\t\t{ \"px\": [1792,208], \"src\": [48,96], \"f\": 1, \"d\": [53,1750,195] },\n\t\t\t\t\t{ \"px\": [1872,208], \"src\": [48,96], \"f\": 0, \"d\": [53,1755,195] },\n\t\t\t\t\t{ \"px\": [64,224], \"src\": [48,96], \"f\": 1, \"d\": [53,1768,195] },\n\t\t\t\t\t{ \"px\": [128,224], \"src\": [48,96], \"f\": 0, \"d\": [53,1772,195] },\n\t\t\t\t\t{ \"px\": [144,224], \"src\": [48,96], \"f\": 1, \"d\": [53,1773,195] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [48,96], \"f\": 0, \"d\": [53,1800,195] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [48,96], \"f\": 1, \"d\": [53,1813,195] },\n\t\t\t\t\t{ \"px\": [1680,224], \"src\": [48,96], \"f\": 0, \"d\": [53,1869,195] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [48,96], \"f\": 1, \"d\": [53,1876,195] },\n\t\t\t\t\t{ \"px\": [1872,224], \"src\": [48,96], \"f\": 0, \"d\": [53,1881,195] },\n\t\t\t\t\t{ \"px\": [64,240], \"src\": [48,96], \"f\": 1, \"d\": [53,1894,195] },\n\t\t\t\t\t{ \"px\": [608,240], \"src\": [48,96], \"f\": 0, \"d\": [53,1928,195] },\n\t\t\t\t\t{ \"px\": [784,240], \"src\": [48,96], \"f\": 1, \"d\": [53,1939,195] },\n\t\t\t\t\t{ \"px\": [1872,240], \"src\": [48,96], \"f\": 0, \"d\": [53,2007,195] },\n\t\t\t\t\t{ \"px\": [64,256], \"src\": [48,96], \"f\": 1, \"d\": [53,2020,195] },\n\t\t\t\t\t{ \"px\": [608,256], \"src\": [48,96], \"f\": 0, \"d\": [53,2054,195] },\n\t\t\t\t\t{ \"px\": [784,256], \"src\": [48,96], \"f\": 1, \"d\": [53,2065,195] },\n\t\t\t\t\t{ \"px\": [1872,256], \"src\": [48,96], \"f\": 0, \"d\": [53,2133,195] },\n\t\t\t\t\t{ \"px\": [64,272], \"src\": [48,96], \"f\": 1, \"d\": [53,2146,195] },\n\t\t\t\t\t{ \"px\": [672,272], \"src\": [48,96], \"f\": 0, \"d\": [53,2184,195] },\n\t\t\t\t\t{ \"px\": [784,272], \"src\": [48,96], \"f\": 1, \"d\": [53,2191,195] },\n\t\t\t\t\t{ \"px\": [1872,272], \"src\": [48,96], \"f\": 0, \"d\": [53,2259,195] },\n\t\t\t\t\t{ \"px\": [144,288], \"src\": [48,96], \"f\": 1, \"d\": [53,2277,195] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [48,96], \"f\": 0, \"d\": [53,2293,195] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [48,96], \"f\": 1, \"d\": [53,2298,195] },\n\t\t\t\t\t{ \"px\": [672,288], \"src\": [48,96], \"f\": 0, \"d\": [53,2310,195] },\n\t\t\t\t\t{ \"px\": [768,288], \"src\": [48,96], \"f\": 1, \"d\": [53,2316,195] },\n\t\t\t\t\t{ \"px\": [1872,288], \"src\": [48,96], \"f\": 0, \"d\": [53,2385,195] },\n\t\t\t\t\t{ \"px\": [144,304], \"src\": [48,96], \"f\": 1, \"d\": [53,2403,195] },\n\t\t\t\t\t{ \"px\": [400,304], \"src\": [48,96], \"f\": 0, \"d\": [53,2419,195] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [48,96], \"f\": 1, \"d\": [53,2430,195] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [48,96], \"f\": 0, \"d\": [53,2493,195] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [48,96], \"f\": 1, \"d\": [53,2498,195] },\n\t\t\t\t\t{ \"px\": [1872,304], \"src\": [48,96], \"f\": 0, \"d\": [53,2511,195] },\n\t\t\t\t\t{ \"px\": [576,320], \"src\": [48,96], \"f\": 1, \"d\": [53,2556,195] },\n\t\t\t\t\t{ \"px\": [1584,320], \"src\": [48,96], \"f\": 0, \"d\": [53,2619,195] },\n\t\t\t\t\t{ \"px\": [1664,320], \"src\": [48,96], \"f\": 1, \"d\": [53,2624,195] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [48,96], \"f\": 0, \"d\": [53,2634,195] },\n\t\t\t\t\t{ \"px\": [640,336], \"src\": [48,96], \"f\": 1, \"d\": [53,2686,195] },\n\t\t\t\t\t{ \"px\": [1584,336], \"src\": [48,96], \"f\": 0, \"d\": [53,2745,195] },\n\t\t\t\t\t{ \"px\": [640,352], \"src\": [48,96], \"f\": 1, \"d\": [53,2812,195] },\n\t\t\t\t\t{ \"px\": [1584,352], \"src\": [48,96], \"f\": 0, \"d\": [53,2871,195] },\n\t\t\t\t\t{ \"px\": [768,368], \"src\": [48,96], \"f\": 1, \"d\": [53,2946,195] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [48,96], \"f\": 0, \"d\": [53,2975,195] },\n\t\t\t\t\t{ \"px\": [80,80], \"src\": [64,112], \"f\": 0, \"d\": [55,635,228] },\n\t\t\t\t\t{ \"px\": [96,80], \"src\": [64,112], \"f\": 0, \"d\": [55,636,228] },\n\t\t\t\t\t{ \"px\": [112,80], \"src\": [64,112], \"f\": 0, \"d\": [55,637,228] },\n\t\t\t\t\t{ \"px\": [128,80], \"src\": [64,112], \"f\": 0, \"d\": [55,638,228] },\n\t\t\t\t\t{ \"px\": [144,80], \"src\": [64,112], \"f\": 0, \"d\": [55,639,228] },\n\t\t\t\t\t{ \"px\": [160,80], \"src\": [64,112], \"f\": 0, \"d\": [55,640,228] },\n\t\t\t\t\t{ \"px\": [176,80], \"src\": [64,112], \"f\": 0, \"d\": [55,641,228] },\n\t\t\t\t\t{ \"px\": [192,80], \"src\": [64,112], \"f\": 0, \"d\": [55,642,228] },\n\t\t\t\t\t{ \"px\": [208,80], \"src\": [64,112], \"f\": 0, \"d\": [55,643,228] },\n\t\t\t\t\t{ \"px\": [224,80], \"src\": [64,112], \"f\": 0, \"d\": [55,644,228] },\n\t\t\t\t\t{ \"px\": [240,80], \"src\": [64,112], \"f\": 0, \"d\": [55,645,228] },\n\t\t\t\t\t{ \"px\": [256,80], \"src\": [64,112], \"f\": 0, \"d\": [55,646,228] },\n\t\t\t\t\t{ \"px\": [272,80], \"src\": [64,112], \"f\": 0, \"d\": [55,647,228] },\n\t\t\t\t\t{ \"px\": [288,80], \"src\": [64,112], \"f\": 0, \"d\": [55,648,228] },\n\t\t\t\t\t{ \"px\": [304,80], \"src\": [64,112], \"f\": 0, \"d\": [55,649,228] },\n\t\t\t\t\t{ \"px\": [320,80], \"src\": [64,112], \"f\": 0, \"d\": [55,650,228] },\n\t\t\t\t\t{ \"px\": [336,80], \"src\": [64,112], \"f\": 0, \"d\": [55,651,228] },\n\t\t\t\t\t{ \"px\": [352,80], \"src\": [64,112], \"f\": 0, \"d\": [55,652,228] },\n\t\t\t\t\t{ \"px\": [368,80], \"src\": [64,112], \"f\": 0, \"d\": [55,653,228] },\n\t\t\t\t\t{ \"px\": [384,80], \"src\": [64,112], \"f\": 0, \"d\": [55,654,228] },\n\t\t\t\t\t{ \"px\": [400,80], \"src\": [64,112], \"f\": 0, \"d\": [55,655,228] },\n\t\t\t\t\t{ \"px\": [416,80], \"src\": [64,112], \"f\": 0, \"d\": [55,656,228] },\n\t\t\t\t\t{ \"px\": [432,80], \"src\": [64,112], \"f\": 0, \"d\": [55,657,228] },\n\t\t\t\t\t{ \"px\": [448,80], \"src\": [64,112], \"f\": 0, \"d\": [55,658,228] },\n\t\t\t\t\t{ \"px\": [464,80], \"src\": [64,112], \"f\": 0, \"d\": [55,659,228] },\n\t\t\t\t\t{ \"px\": [480,80], \"src\": [64,112], \"f\": 0, \"d\": [55,660,228] },\n\t\t\t\t\t{ \"px\": [496,80], \"src\": [64,112], \"f\": 0, \"d\": [55,661,228] },\n\t\t\t\t\t{ \"px\": [512,80], \"src\": [64,112], \"f\": 0, \"d\": [55,662,228] },\n\t\t\t\t\t{ \"px\": [528,80], \"src\": [64,112], \"f\": 0, \"d\": [55,663,228] },\n\t\t\t\t\t{ \"px\": [544,80], \"src\": [64,112], \"f\": 0, \"d\": [55,664,228] },\n\t\t\t\t\t{ \"px\": [560,80], \"src\": [64,112], \"f\": 0, \"d\": [55,665,228] },\n\t\t\t\t\t{ \"px\": [576,80], \"src\": [64,112], \"f\": 0, \"d\": [55,666,228] },\n\t\t\t\t\t{ \"px\": [592,80], \"src\": [64,112], \"f\": 0, \"d\": [55,667,228] },\n\t\t\t\t\t{ \"px\": [608,80], \"src\": [64,112], \"f\": 0, \"d\": [55,668,228] },\n\t\t\t\t\t{ \"px\": [624,80], \"src\": [64,112], \"f\": 0, \"d\": [55,669,228] },\n\t\t\t\t\t{ \"px\": [640,80], \"src\": [64,112], \"f\": 0, \"d\": [55,670,228] },\n\t\t\t\t\t{ \"px\": [656,80], \"src\": [64,112], \"f\": 0, \"d\": [55,671,228] },\n\t\t\t\t\t{ \"px\": [672,80], \"src\": [64,112], \"f\": 0, \"d\": [55,672,228] },\n\t\t\t\t\t{ \"px\": [688,80], \"src\": [64,112], \"f\": 0, \"d\": [55,673,228] },\n\t\t\t\t\t{ \"px\": [704,80], \"src\": [64,112], \"f\": 0, \"d\": [55,674,228] },\n\t\t\t\t\t{ \"px\": [720,80], \"src\": [64,112], \"f\": 0, \"d\": [55,675,228] },\n\t\t\t\t\t{ \"px\": [736,96], \"src\": [64,112], \"f\": 0, \"d\": [55,802,228] },\n\t\t\t\t\t{ \"px\": [1552,96], \"src\": [64,112], \"f\": 0, \"d\": [55,853,228] },\n\t\t\t\t\t{ \"px\": [1568,96], \"src\": [64,112], \"f\": 0, \"d\": [55,854,228] },\n\t\t\t\t\t{ \"px\": [1584,96], \"src\": [64,112], \"f\": 0, \"d\": [55,855,228] },\n\t\t\t\t\t{ \"px\": [1600,96], \"src\": [64,112], \"f\": 0, \"d\": [55,856,228] },\n\t\t\t\t\t{ \"px\": [1616,96], \"src\": [64,112], \"f\": 0, \"d\": [55,857,228] },\n\t\t\t\t\t{ \"px\": [1632,96], \"src\": [64,112], \"f\": 0, \"d\": [55,858,228] },\n\t\t\t\t\t{ \"px\": [1648,96], \"src\": [64,112], \"f\": 0, \"d\": [55,859,228] },\n\t\t\t\t\t{ \"px\": [1664,96], \"src\": [64,112], \"f\": 0, \"d\": [55,860,228] },\n\t\t\t\t\t{ \"px\": [1680,96], \"src\": [64,112], \"f\": 0, \"d\": [55,861,228] },\n\t\t\t\t\t{ \"px\": [1696,96], \"src\": [64,112], \"f\": 0, \"d\": [55,862,228] },\n\t\t\t\t\t{ \"px\": [1712,96], \"src\": [64,112], \"f\": 0, \"d\": [55,863,228] },\n\t\t\t\t\t{ \"px\": [1728,96], \"src\": [64,112], \"f\": 0, \"d\": [55,864,228] },\n\t\t\t\t\t{ \"px\": [1744,96], \"src\": [64,112], \"f\": 0, \"d\": [55,865,228] },\n\t\t\t\t\t{ \"px\": [1760,96], \"src\": [64,112], \"f\": 0, \"d\": [55,866,228] },\n\t\t\t\t\t{ \"px\": [1776,96], \"src\": [64,112], \"f\": 0, \"d\": [55,867,228] },\n\t\t\t\t\t{ \"px\": [1792,96], \"src\": [64,112], \"f\": 0, \"d\": [55,868,228] },\n\t\t\t\t\t{ \"px\": [1808,96], \"src\": [64,112], \"f\": 0, \"d\": [55,869,228] },\n\t\t\t\t\t{ \"px\": [1824,96], \"src\": [64,112], \"f\": 0, \"d\": [55,870,228] },\n\t\t\t\t\t{ \"px\": [1840,96], \"src\": [64,112], \"f\": 0, \"d\": [55,871,228] },\n\t\t\t\t\t{ \"px\": [1856,96], \"src\": [64,112], \"f\": 0, \"d\": [55,872,228] },\n\t\t\t\t\t{ \"px\": [80,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1391,228] },\n\t\t\t\t\t{ \"px\": [96,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1392,228] },\n\t\t\t\t\t{ \"px\": [112,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1393,228] },\n\t\t\t\t\t{ \"px\": [400,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1411,228] },\n\t\t\t\t\t{ \"px\": [416,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1412,228] },\n\t\t\t\t\t{ \"px\": [432,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1413,228] },\n\t\t\t\t\t{ \"px\": [448,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1414,228] },\n\t\t\t\t\t{ \"px\": [464,176], \"src\": [64,112], \"f\": 0, \"d\": [55,1415,228] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [64,112], \"f\": 0, \"d\": [55,1542,228] },\n\t\t\t\t\t{ \"px\": [496,192], \"src\": [64,112], \"f\": 0, \"d\": [55,1543,228] },\n\t\t\t\t\t{ \"px\": [512,208], \"src\": [64,112], \"f\": 0, \"d\": [55,1670,228] },\n\t\t\t\t\t{ \"px\": [528,208], \"src\": [64,112], \"f\": 0, \"d\": [55,1671,228] },\n\t\t\t\t\t{ \"px\": [544,208], \"src\": [64,112], \"f\": 0, \"d\": [55,1672,228] },\n\t\t\t\t\t{ \"px\": [560,208], \"src\": [64,112], \"f\": 0, \"d\": [55,1673,228] },\n\t\t\t\t\t{ \"px\": [128,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1772,228] },\n\t\t\t\t\t{ \"px\": [144,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1773,228] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1800,228] },\n\t\t\t\t\t{ \"px\": [592,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1801,228] },\n\t\t\t\t\t{ \"px\": [1680,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1869,228] },\n\t\t\t\t\t{ \"px\": [1696,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1870,228] },\n\t\t\t\t\t{ \"px\": [1712,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1871,228] },\n\t\t\t\t\t{ \"px\": [1728,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1872,228] },\n\t\t\t\t\t{ \"px\": [1744,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1873,228] },\n\t\t\t\t\t{ \"px\": [1760,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1874,228] },\n\t\t\t\t\t{ \"px\": [1776,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1875,228] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [64,112], \"f\": 0, \"d\": [55,1876,228] },\n\t\t\t\t\t{ \"px\": [608,256], \"src\": [64,112], \"f\": 0, \"d\": [55,2054,228] },\n\t\t\t\t\t{ \"px\": [624,256], \"src\": [64,112], \"f\": 0, \"d\": [55,2055,228] },\n\t\t\t\t\t{ \"px\": [640,256], \"src\": [64,112], \"f\": 0, \"d\": [55,2056,228] },\n\t\t\t\t\t{ \"px\": [656,256], \"src\": [64,112], \"f\": 0, \"d\": [55,2057,228] },\n\t\t\t\t\t{ \"px\": [784,272], \"src\": [64,112], \"f\": 0, \"d\": [55,2191,228] },\n\t\t\t\t\t{ \"px\": [672,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2310,228] },\n\t\t\t\t\t{ \"px\": [688,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2311,228] },\n\t\t\t\t\t{ \"px\": [704,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2312,228] },\n\t\t\t\t\t{ \"px\": [720,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2313,228] },\n\t\t\t\t\t{ \"px\": [736,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2314,228] },\n\t\t\t\t\t{ \"px\": [752,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2315,228] },\n\t\t\t\t\t{ \"px\": [768,288], \"src\": [64,112], \"f\": 0, \"d\": [55,2316,228] },\n\t\t\t\t\t{ \"px\": [736,96], \"src\": [48,112], \"f\": 0, \"d\": [56,802,227] },\n\t\t\t\t\t{ \"px\": [1552,96], \"src\": [48,112], \"f\": 0, \"d\": [56,853,227] },\n\t\t\t\t\t{ \"px\": [400,176], \"src\": [48,112], \"f\": 0, \"d\": [56,1411,227] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [48,112], \"f\": 0, \"d\": [56,1542,227] },\n\t\t\t\t\t{ \"px\": [512,208], \"src\": [48,112], \"f\": 0, \"d\": [56,1670,227] },\n\t\t\t\t\t{ \"px\": [128,224], \"src\": [48,112], \"f\": 0, \"d\": [56,1772,227] },\n\t\t\t\t\t{ \"px\": [144,224], \"src\": [48,112], \"f\": 1, \"d\": [56,1773,227] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [48,112], \"f\": 0, \"d\": [56,1800,227] },\n\t\t\t\t\t{ \"px\": [1680,224], \"src\": [48,112], \"f\": 0, \"d\": [56,1869,227] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [48,112], \"f\": 1, \"d\": [56,1876,227] },\n\t\t\t\t\t{ \"px\": [608,256], \"src\": [48,112], \"f\": 0, \"d\": [56,2054,227] },\n\t\t\t\t\t{ \"px\": [784,272], \"src\": [48,112], \"f\": 1, \"d\": [56,2191,227] },\n\t\t\t\t\t{ \"px\": [672,288], \"src\": [48,112], \"f\": 0, \"d\": [56,2310,227] },\n\t\t\t\t\t{ \"px\": [768,288], \"src\": [48,112], \"f\": 1, \"d\": [56,2316,227] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [48,80], \"f\": 0, \"d\": [51,475,163] },\n\t\t\t\t\t{ \"px\": [144,160], \"src\": [48,80], \"f\": 1, \"d\": [51,1269,163] },\n\t\t\t\t\t{ \"px\": [400,160], \"src\": [48,80], \"f\": 0, \"d\": [51,1285,163] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [48,80], \"f\": 1, \"d\": [51,1306,163] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [48,80], \"f\": 0, \"d\": [51,1491,163] },\n\t\t\t\t\t{ \"px\": [1792,176], \"src\": [48,80], \"f\": 1, \"d\": [51,1498,163] },\n\t\t\t\t\t{ \"px\": [752,192], \"src\": [48,80], \"f\": 1, \"d\": [51,1559,163] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [48,80], \"f\": 1, \"d\": [51,1813,163] },\n\t\t\t\t\t{ \"px\": [144,288], \"src\": [48,80], \"f\": 1, \"d\": [51,2277,163] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [48,80], \"f\": 0, \"d\": [51,2293,163] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [48,80], \"f\": 1, \"d\": [51,2298,163] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [48,80], \"f\": 1, \"d\": [51,2430,163] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [48,80], \"f\": 0, \"d\": [51,2493,163] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [48,80], \"f\": 1, \"d\": [51,2498,163] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [48,80], \"f\": 0, \"d\": [51,2634,163] },\n\t\t\t\t\t{ \"px\": [640,336], \"src\": [48,80], \"f\": 1, \"d\": [51,2686,163] },\n\t\t\t\t\t{ \"px\": [768,368], \"src\": [48,80], \"f\": 1, \"d\": [51,2946,163] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [48,80], \"f\": 0, \"d\": [51,2975,163] },\n\t\t\t\t\t{ \"px\": [1696,48], \"src\": [64,96], \"f\": 0, \"d\": [54,484,196] },\n\t\t\t\t\t{ \"px\": [64,80], \"src\": [64,96], \"f\": 3, \"d\": [54,634,196] },\n\t\t\t\t\t{ \"px\": [736,80], \"src\": [64,96], \"f\": 2, \"d\": [54,676,196] },\n\t\t\t\t\t{ \"px\": [1872,96], \"src\": [64,96], \"f\": 2, \"d\": [54,873,196] },\n\t\t\t\t\t{ \"px\": [64,160], \"src\": [64,96], \"f\": 1, \"d\": [54,1264,196] },\n\t\t\t\t\t{ \"px\": [64,176], \"src\": [64,96], \"f\": 3, \"d\": [54,1390,196] },\n\t\t\t\t\t{ \"px\": [128,176], \"src\": [64,96], \"f\": 2, \"d\": [54,1394,196] },\n\t\t\t\t\t{ \"px\": [480,176], \"src\": [64,96], \"f\": 2, \"d\": [54,1416,196] },\n\t\t\t\t\t{ \"px\": [512,192], \"src\": [64,96], \"f\": 2, \"d\": [54,1544,196] },\n\t\t\t\t\t{ \"px\": [736,192], \"src\": [64,96], \"f\": 1, \"d\": [54,1558,196] },\n\t\t\t\t\t{ \"px\": [576,208], \"src\": [64,96], \"f\": 2, \"d\": [54,1674,196] },\n\t\t\t\t\t{ \"px\": [608,224], \"src\": [64,96], \"f\": 2, \"d\": [54,1802,196] },\n\t\t\t\t\t{ \"px\": [752,224], \"src\": [64,96], \"f\": 1, \"d\": [54,1811,196] },\n\t\t\t\t\t{ \"px\": [672,256], \"src\": [64,96], \"f\": 2, \"d\": [54,2058,196] },\n\t\t\t\t\t{ \"px\": [768,272], \"src\": [64,96], \"f\": 3, \"d\": [54,2190,196] },\n\t\t\t\t\t{ \"px\": [64,288], \"src\": [64,96], \"f\": 1, \"d\": [54,2272,196] },\n\t\t\t\t\t{ \"px\": [480,304], \"src\": [64,96], \"f\": 1, \"d\": [54,2424,196] },\n\t\t\t\t\t{ \"px\": [144,320], \"src\": [64,96], \"f\": 1, \"d\": [54,2529,196] },\n\t\t\t\t\t{ \"px\": [400,320], \"src\": [64,96], \"f\": 0, \"d\": [54,2545,196] },\n\t\t\t\t\t{ \"px\": [1872,320], \"src\": [64,96], \"f\": 0, \"d\": [54,2637,196] },\n\t\t\t\t\t{ \"px\": [576,336], \"src\": [64,96], \"f\": 1, \"d\": [54,2682,196] },\n\t\t\t\t\t{ \"px\": [1664,336], \"src\": [64,96], \"f\": 1, \"d\": [54,2750,196] },\n\t\t\t\t\t{ \"px\": [1824,336], \"src\": [64,96], \"f\": 0, \"d\": [54,2760,196] },\n\t\t\t\t\t{ \"px\": [640,368], \"src\": [64,96], \"f\": 1, \"d\": [54,2938,196] },\n\t\t\t\t\t{ \"px\": [1584,368], \"src\": [64,96], \"f\": 0, \"d\": [54,2997,196] },\n\t\t\t\t\t{ \"px\": [768,384], \"src\": [64,96], \"f\": 1, \"d\": [54,3072,196] },\n\t\t\t\t\t{ \"px\": [1232,384], \"src\": [64,96], \"f\": 0, \"d\": [54,3101,196] },\n\t\t\t\t\t{ \"px\": [752,0], \"src\": [96,80], \"f\": 1, \"d\": [60,47,166] },\n\t\t\t\t\t{ \"px\": [1680,0], \"src\": [96,112], \"f\": 0, \"d\": [60,105,230] },\n\t\t\t\t\t{ \"px\": [752,16], \"src\": [96,80], \"f\": 1, \"d\": [60,173,166] },\n\t\t\t\t\t{ \"px\": [1680,16], \"src\": [96,112], \"f\": 0, \"d\": [60,231,230] },\n\t\t\t\t\t{ \"px\": [752,32], \"src\": [96,96], \"f\": 1, \"d\": [60,299,198] },\n\t\t\t\t\t{ \"px\": [1680,32], \"src\": [96,112], \"f\": 0, \"d\": [60,357,230] },\n\t\t\t\t\t{ \"px\": [752,48], \"src\": [96,96], \"f\": 1, \"d\": [60,425,198] },\n\t\t\t\t\t{ \"px\": [1536,48], \"src\": [96,96], \"f\": 0, \"d\": [60,474,198] },\n\t\t\t\t\t{ \"px\": [752,64], \"src\": [96,112], \"f\": 1, \"d\": [60,551,230] },\n\t\t\t\t\t{ \"px\": [1536,64], \"src\": [96,80], \"f\": 0, \"d\": [60,600,166] },\n\t\t\t\t\t{ \"px\": [752,80], \"src\": [96,96], \"f\": 1, \"d\": [60,677,198] },\n\t\t\t\t\t{ \"px\": [1536,80], \"src\": [96,96], \"f\": 0, \"d\": [60,726,198] },\n\t\t\t\t\t{ \"px\": [80,96], \"src\": [96,96], \"f\": 1, \"d\": [60,761,198] },\n\t\t\t\t\t{ \"px\": [720,96], \"src\": [96,80], \"f\": 0, \"d\": [60,801,166] },\n\t\t\t\t\t{ \"px\": [752,96], \"src\": [96,96], \"f\": 1, \"d\": [60,803,198] },\n\t\t\t\t\t{ \"px\": [1536,96], \"src\": [96,80], \"f\": 0, \"d\": [60,852,166] },\n\t\t\t\t\t{ \"px\": [80,112], \"src\": [96,112], \"f\": 1, \"d\": [60,887,230] },\n\t\t\t\t\t{ \"px\": [1856,112], \"src\": [96,112], \"f\": 0, \"d\": [60,998,230] },\n\t\t\t\t\t{ \"px\": [80,128], \"src\": [96,112], \"f\": 1, \"d\": [60,1013,230] },\n\t\t\t\t\t{ \"px\": [1856,128], \"src\": [96,96], \"f\": 0, \"d\": [60,1124,198] },\n\t\t\t\t\t{ \"px\": [80,144], \"src\": [96,96], \"f\": 1, \"d\": [60,1139,198] },\n\t\t\t\t\t{ \"px\": [1856,144], \"src\": [96,80], \"f\": 0, \"d\": [60,1250,166] },\n\t\t\t\t\t{ \"px\": [160,160], \"src\": [96,112], \"f\": 1, \"d\": [60,1270,230] },\n\t\t\t\t\t{ \"px\": [384,160], \"src\": [96,96], \"f\": 0, \"d\": [60,1284,198] },\n\t\t\t\t\t{ \"px\": [752,160], \"src\": [96,112], \"f\": 1, \"d\": [60,1307,230] },\n\t\t\t\t\t{ \"px\": [1856,160], \"src\": [96,80], \"f\": 0, \"d\": [60,1376,166] },\n\t\t\t\t\t{ \"px\": [160,176], \"src\": [96,96], \"f\": 1, \"d\": [60,1396,198] },\n\t\t\t\t\t{ \"px\": [384,176], \"src\": [96,96], \"f\": 0, \"d\": [60,1410,198] },\n\t\t\t\t\t{ \"px\": [752,176], \"src\": [96,80], \"f\": 1, \"d\": [60,1433,166] },\n\t\t\t\t\t{ \"px\": [1664,176], \"src\": [96,112], \"f\": 0, \"d\": [60,1490,230] },\n\t\t\t\t\t{ \"px\": [1808,176], \"src\": [96,96], \"f\": 1, \"d\": [60,1499,198] },\n\t\t\t\t\t{ \"px\": [1856,176], \"src\": [96,96], \"f\": 0, \"d\": [60,1502,198] },\n\t\t\t\t\t{ \"px\": [80,192], \"src\": [96,96], \"f\": 1, \"d\": [60,1517,198] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [96,112], \"f\": 0, \"d\": [60,1519,230] },\n\t\t\t\t\t{ \"px\": [160,192], \"src\": [96,96], \"f\": 1, \"d\": [60,1522,198] },\n\t\t\t\t\t{ \"px\": [464,192], \"src\": [96,80], \"f\": 0, \"d\": [60,1541,166] },\n\t\t\t\t\t{ \"px\": [768,192], \"src\": [96,96], \"f\": 1, \"d\": [60,1560,198] },\n\t\t\t\t\t{ \"px\": [1664,192], \"src\": [96,96], \"f\": 0, \"d\": [60,1616,198] },\n\t\t\t\t\t{ \"px\": [1808,192], \"src\": [96,96], \"f\": 1, \"d\": [60,1625,198] },\n\t\t\t\t\t{ \"px\": [1856,192], \"src\": [96,96], \"f\": 0, \"d\": [60,1628,198] },\n\t\t\t\t\t{ \"px\": [80,208], \"src\": [96,80], \"f\": 1, \"d\": [60,1643,166] },\n\t\t\t\t\t{ \"px\": [112,208], \"src\": [96,96], \"f\": 0, \"d\": [60,1645,198] },\n\t\t\t\t\t{ \"px\": [160,208], \"src\": [96,80], \"f\": 1, \"d\": [60,1648,166] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [96,112], \"f\": 0, \"d\": [60,1669,230] },\n\t\t\t\t\t{ \"px\": [768,208], \"src\": [96,80], \"f\": 1, \"d\": [60,1686,166] },\n\t\t\t\t\t{ \"px\": [1664,208], \"src\": [96,80], \"f\": 0, \"d\": [60,1742,166] },\n\t\t\t\t\t{ \"px\": [1808,208], \"src\": [96,80], \"f\": 1, \"d\": [60,1751,166] },\n\t\t\t\t\t{ \"px\": [1856,208], \"src\": [96,96], \"f\": 0, \"d\": [60,1754,198] },\n\t\t\t\t\t{ \"px\": [80,224], \"src\": [96,112], \"f\": 1, \"d\": [60,1769,230] },\n\t\t\t\t\t{ \"px\": [112,224], \"src\": [96,80], \"f\": 0, \"d\": [60,1771,166] },\n\t\t\t\t\t{ \"px\": [160,224], \"src\": [96,112], \"f\": 1, \"d\": [60,1774,230] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [96,96], \"f\": 0, \"d\": [60,1799,198] },\n\t\t\t\t\t{ \"px\": [800,224], \"src\": [96,112], \"f\": 1, \"d\": [60,1814,230] },\n\t\t\t\t\t{ \"px\": [1664,224], \"src\": [96,96], \"f\": 0, \"d\": [60,1868,198] },\n\t\t\t\t\t{ \"px\": [1808,224], \"src\": [96,80], \"f\": 1, \"d\": [60,1877,166] },\n\t\t\t\t\t{ \"px\": [1856,224], \"src\": [96,96], \"f\": 0, \"d\": [60,1880,198] },\n\t\t\t\t\t{ \"px\": [80,240], \"src\": [96,112], \"f\": 1, \"d\": [60,1895,230] },\n\t\t\t\t\t{ \"px\": [592,240], \"src\": [96,80], \"f\": 0, \"d\": [60,1927,166] },\n\t\t\t\t\t{ \"px\": [800,240], \"src\": [96,96], \"f\": 1, \"d\": [60,1940,198] },\n\t\t\t\t\t{ \"px\": [1856,240], \"src\": [96,112], \"f\": 0, \"d\": [60,2006,230] },\n\t\t\t\t\t{ \"px\": [80,256], \"src\": [96,112], \"f\": 1, \"d\": [60,2021,230] },\n\t\t\t\t\t{ \"px\": [592,256], \"src\": [96,96], \"f\": 0, \"d\": [60,2053,198] },\n\t\t\t\t\t{ \"px\": [800,256], \"src\": [96,80], \"f\": 1, \"d\": [60,2066,166] },\n\t\t\t\t\t{ \"px\": [1856,256], \"src\": [96,112], \"f\": 0, \"d\": [60,2132,230] },\n\t\t\t\t\t{ \"px\": [80,272], \"src\": [96,112], \"f\": 1, \"d\": [60,2147,230] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [96,80], \"f\": 0, \"d\": [60,2183,166] },\n\t\t\t\t\t{ \"px\": [800,272], \"src\": [96,96], \"f\": 1, \"d\": [60,2192,198] },\n\t\t\t\t\t{ \"px\": [1856,272], \"src\": [96,96], \"f\": 0, \"d\": [60,2258,198] },\n\t\t\t\t\t{ \"px\": [160,288], \"src\": [96,112], \"f\": 1, \"d\": [60,2278,230] },\n\t\t\t\t\t{ \"px\": [384,288], \"src\": [96,112], \"f\": 0, \"d\": [60,2292,230] },\n\t\t\t\t\t{ \"px\": [496,288], \"src\": [96,112], \"f\": 1, \"d\": [60,2299,230] },\n\t\t\t\t\t{ \"px\": [656,288], \"src\": [96,80], \"f\": 0, \"d\": [60,2309,166] },\n\t\t\t\t\t{ \"px\": [784,288], \"src\": [96,112], \"f\": 1, \"d\": [60,2317,230] },\n\t\t\t\t\t{ \"px\": [1856,288], \"src\": [96,112], \"f\": 0, \"d\": [60,2384,230] },\n\t\t\t\t\t{ \"px\": [160,304], \"src\": [96,80], \"f\": 1, \"d\": [60,2404,166] },\n\t\t\t\t\t{ \"px\": [384,304], \"src\": [96,112], \"f\": 0, \"d\": [60,2418,230] },\n\t\t\t\t\t{ \"px\": [592,304], \"src\": [96,112], \"f\": 1, \"d\": [60,2431,230] },\n\t\t\t\t\t{ \"px\": [1568,304], \"src\": [96,96], \"f\": 0, \"d\": [60,2492,198] },\n\t\t\t\t\t{ \"px\": [1680,304], \"src\": [96,96], \"f\": 1, \"d\": [60,2499,198] },\n\t\t\t\t\t{ \"px\": [1856,304], \"src\": [96,112], \"f\": 0, \"d\": [60,2510,230] },\n\t\t\t\t\t{ \"px\": [592,320], \"src\": [96,112], \"f\": 1, \"d\": [60,2557,230] },\n\t\t\t\t\t{ \"px\": [1568,320], \"src\": [96,96], \"f\": 0, \"d\": [60,2618,198] },\n\t\t\t\t\t{ \"px\": [1680,320], \"src\": [96,80], \"f\": 1, \"d\": [60,2625,166] },\n\t\t\t\t\t{ \"px\": [1808,320], \"src\": [96,80], \"f\": 0, \"d\": [60,2633,166] },\n\t\t\t\t\t{ \"px\": [656,336], \"src\": [96,112], \"f\": 1, \"d\": [60,2687,230] },\n\t\t\t\t\t{ \"px\": [1568,336], \"src\": [96,96], \"f\": 0, \"d\": [60,2744,198] },\n\t\t\t\t\t{ \"px\": [656,352], \"src\": [96,112], \"f\": 1, \"d\": [60,2813,230] },\n\t\t\t\t\t{ \"px\": [1568,352], \"src\": [96,112], \"f\": 0, \"d\": [60,2870,230] },\n\t\t\t\t\t{ \"px\": [784,368], \"src\": [96,112], \"f\": 1, \"d\": [60,2947,230] },\n\t\t\t\t\t{ \"px\": [1216,368], \"src\": [96,80], \"f\": 0, \"d\": [60,2974,166] },\n\t\t\t\t\t{ \"px\": [752,0], \"src\": [80,112], \"f\": 1, \"d\": [59,47,229] },\n\t\t\t\t\t{ \"px\": [1680,0], \"src\": [80,80], \"f\": 0, \"d\": [59,105,165] },\n\t\t\t\t\t{ \"px\": [752,16], \"src\": [80,80], \"f\": 1, \"d\": [59,173,165] },\n\t\t\t\t\t{ \"px\": [752,32], \"src\": [80,80], \"f\": 1, \"d\": [59,299,165] },\n\t\t\t\t\t{ \"px\": [1680,32], \"src\": [80,96], \"f\": 0, \"d\": [59,357,197] },\n\t\t\t\t\t{ \"px\": [752,48], \"src\": [80,96], \"f\": 1, \"d\": [59,425,197] },\n\t\t\t\t\t{ \"px\": [752,64], \"src\": [80,96], \"f\": 1, \"d\": [59,551,197] },\n\t\t\t\t\t{ \"px\": [752,80], \"src\": [80,112], \"f\": 1, \"d\": [59,677,229] },\n\t\t\t\t\t{ \"px\": [1536,80], \"src\": [80,96], \"f\": 0, \"d\": [59,726,197] },\n\t\t\t\t\t{ \"px\": [80,96], \"src\": [80,80], \"f\": 1, \"d\": [59,761,165] },\n\t\t\t\t\t{ \"px\": [720,96], \"src\": [80,80], \"f\": 0, \"d\": [59,801,165] },\n\t\t\t\t\t{ \"px\": [752,96], \"src\": [80,112], \"f\": 1, \"d\": [59,803,229] },\n\t\t\t\t\t{ \"px\": [1536,96], \"src\": [80,96], \"f\": 0, \"d\": [59,852,197] },\n\t\t\t\t\t{ \"px\": [80,112], \"src\": [80,96], \"f\": 1, \"d\": [59,887,197] },\n\t\t\t\t\t{ \"px\": [1856,112], \"src\": [80,96], \"f\": 0, \"d\": [59,998,197] },\n\t\t\t\t\t{ \"px\": [80,128], \"src\": [80,96], \"f\": 1, \"d\": [59,1013,197] },\n\t\t\t\t\t{ \"px\": [1856,128], \"src\": [80,96], \"f\": 0, \"d\": [59,1124,197] },\n\t\t\t\t\t{ \"px\": [80,144], \"src\": [80,80], \"f\": 1, \"d\": [59,1139,165] },\n\t\t\t\t\t{ \"px\": [1856,144], \"src\": [80,112], \"f\": 0, \"d\": [59,1250,229] },\n\t\t\t\t\t{ \"px\": [160,160], \"src\": [80,112], \"f\": 1, \"d\": [59,1270,229] },\n\t\t\t\t\t{ \"px\": [384,160], \"src\": [80,96], \"f\": 0, \"d\": [59,1284,197] },\n\t\t\t\t\t{ \"px\": [752,160], \"src\": [80,112], \"f\": 1, \"d\": [59,1307,229] },\n\t\t\t\t\t{ \"px\": [384,176], \"src\": [80,80], \"f\": 0, \"d\": [59,1410,165] },\n\t\t\t\t\t{ \"px\": [752,176], \"src\": [80,80], \"f\": 1, \"d\": [59,1433,165] },\n\t\t\t\t\t{ \"px\": [1664,176], \"src\": [80,96], \"f\": 0, \"d\": [59,1490,197] },\n\t\t\t\t\t{ \"px\": [80,192], \"src\": [80,112], \"f\": 1, \"d\": [59,1517,229] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [80,96], \"f\": 0, \"d\": [59,1519,197] },\n\t\t\t\t\t{ \"px\": [464,192], \"src\": [80,112], \"f\": 0, \"d\": [59,1541,229] },\n\t\t\t\t\t{ \"px\": [1664,192], \"src\": [80,80], \"f\": 0, \"d\": [59,1616,165] },\n\t\t\t\t\t{ \"px\": [1856,192], \"src\": [80,80], \"f\": 0, \"d\": [59,1628,165] },\n\t\t\t\t\t{ \"px\": [80,208], \"src\": [80,112], \"f\": 1, \"d\": [59,1643,229] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [80,96], \"f\": 0, \"d\": [59,1669,197] },\n\t\t\t\t\t{ \"px\": [1664,208], \"src\": [80,112], \"f\": 0, \"d\": [59,1742,229] },\n\t\t\t\t\t{ \"px\": [1856,208], \"src\": [80,80], \"f\": 0, \"d\": [59,1754,165] },\n\t\t\t\t\t{ \"px\": [80,224], \"src\": [80,96], \"f\": 1, \"d\": [59,1769,197] },\n\t\t\t\t\t{ \"px\": [1856,224], \"src\": [80,80], \"f\": 0, \"d\": [59,1880,165] },\n\t\t\t\t\t{ \"px\": [80,240], \"src\": [80,80], \"f\": 1, \"d\": [59,1895,165] },\n\t\t\t\t\t{ \"px\": [800,240], \"src\": [80,80], \"f\": 1, \"d\": [59,1940,165] },\n\t\t\t\t\t{ \"px\": [1856,240], \"src\": [80,112], \"f\": 0, \"d\": [59,2006,229] },\n\t\t\t\t\t{ \"px\": [592,256], \"src\": [80,96], \"f\": 0, \"d\": [59,2053,197] },\n\t\t\t\t\t{ \"px\": [800,256], \"src\": [80,112], \"f\": 1, \"d\": [59,2066,229] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [80,96], \"f\": 0, \"d\": [59,2183,197] },\n\t\t\t\t\t{ \"px\": [800,272], \"src\": [80,112], \"f\": 1, \"d\": [59,2192,229] },\n\t\t\t\t\t{ \"px\": [160,288], \"src\": [80,96], \"f\": 1, \"d\": [59,2278,197] },\n\t\t\t\t\t{ \"px\": [384,288], \"src\": [80,96], \"f\": 0, \"d\": [59,2292,197] },\n\t\t\t\t\t{ \"px\": [656,288], \"src\": [80,80], \"f\": 0, \"d\": [59,2309,165] },\n\t\t\t\t\t{ \"px\": [784,288], \"src\": [80,80], \"f\": 1, \"d\": [59,2317,165] },\n\t\t\t\t\t{ \"px\": [160,304], \"src\": [80,112], \"f\": 1, \"d\": [59,2404,229] },\n\t\t\t\t\t{ \"px\": [384,304], \"src\": [80,80], \"f\": 0, \"d\": [59,2418,165] },\n\t\t\t\t\t{ \"px\": [1568,304], \"src\": [80,112], \"f\": 0, \"d\": [59,2492,229] },\n\t\t\t\t\t{ \"px\": [1680,304], \"src\": [80,96], \"f\": 1, \"d\": [59,2499,197] },\n\t\t\t\t\t{ \"px\": [1568,320], \"src\": [80,112], \"f\": 0, \"d\": [59,2618,229] },\n\t\t\t\t\t{ \"px\": [1680,320], \"src\": [80,112], \"f\": 1, \"d\": [59,2625,229] },\n\t\t\t\t\t{ \"px\": [1808,320], \"src\": [80,112], \"f\": 0, \"d\": [59,2633,229] },\n\t\t\t\t\t{ \"px\": [1568,336], \"src\": [80,96], \"f\": 0, \"d\": [59,2744,197] },\n\t\t\t\t\t{ \"px\": [1568,352], \"src\": [80,112], \"f\": 0, \"d\": [59,2870,229] },\n\t\t\t\t\t{ \"px\": [784,368], \"src\": [80,80], \"f\": 1, \"d\": [59,2947,165] },\n\t\t\t\t\t{ \"px\": [1216,368], \"src\": [80,80], \"f\": 0, \"d\": [59,2974,165] },\n\t\t\t\t\t{ \"px\": [80,96], \"src\": [112,80], \"f\": 0, \"d\": [113,761,167] },\n\t\t\t\t\t{ \"px\": [96,96], \"src\": [112,80], \"f\": 0, \"d\": [113,762,167] },\n\t\t\t\t\t{ \"px\": [112,96], \"src\": [128,80], \"f\": 0, \"d\": [113,763,168] },\n\t\t\t\t\t{ \"px\": [128,96], \"src\": [112,96], \"f\": 0, \"d\": [113,764,199] },\n\t\t\t\t\t{ \"px\": [144,96], \"src\": [112,96], \"f\": 0, \"d\": [113,765,199] },\n\t\t\t\t\t{ \"px\": [160,96], \"src\": [128,96], \"f\": 0, \"d\": [113,766,200] },\n\t\t\t\t\t{ \"px\": [176,96], \"src\": [112,80], \"f\": 0, \"d\": [113,767,167] },\n\t\t\t\t\t{ \"px\": [192,96], \"src\": [128,80], \"f\": 0, \"d\": [113,768,168] },\n\t\t\t\t\t{ \"px\": [208,96], \"src\": [112,80], \"f\": 0, \"d\": [113,769,167] },\n\t\t\t\t\t{ \"px\": [224,96], \"src\": [128,80], \"f\": 0, \"d\": [113,770,168] },\n\t\t\t\t\t{ \"px\": [240,96], \"src\": [144,96], \"f\": 0, \"d\": [113,771,201] },\n\t\t\t\t\t{ \"px\": [256,96], \"src\": [128,96], \"f\": 0, \"d\": [113,772,200] },\n\t\t\t\t\t{ \"px\": [272,96], \"src\": [128,96], \"f\": 0, \"d\": [113,773,200] },\n\t\t\t\t\t{ \"px\": [288,96], \"src\": [112,96], \"f\": 0, \"d\": [113,774,199] },\n\t\t\t\t\t{ \"px\": [304,96], \"src\": [144,96], \"f\": 0, \"d\": [113,775,201] },\n\t\t\t\t\t{ \"px\": [320,96], \"src\": [128,96], \"f\": 0, \"d\": [113,776,200] },\n\t\t\t\t\t{ \"px\": [336,96], \"src\": [144,96], \"f\": 0, \"d\": [113,777,201] },\n\t\t\t\t\t{ \"px\": [352,96], \"src\": [112,80], \"f\": 0, \"d\": [113,778,167] },\n\t\t\t\t\t{ \"px\": [368,96], \"src\": [112,80], \"f\": 0, \"d\": [113,779,167] },\n\t\t\t\t\t{ \"px\": [384,96], \"src\": [112,96], \"f\": 0, \"d\": [113,780,199] },\n\t\t\t\t\t{ \"px\": [400,96], \"src\": [144,96], \"f\": 0, \"d\": [113,781,201] },\n\t\t\t\t\t{ \"px\": [416,96], \"src\": [112,96], \"f\": 0, \"d\": [113,782,199] },\n\t\t\t\t\t{ \"px\": [432,96], \"src\": [128,96], \"f\": 0, \"d\": [113,783,200] },\n\t\t\t\t\t{ \"px\": [448,96], \"src\": [112,80], \"f\": 0, \"d\": [113,784,167] },\n\t\t\t\t\t{ \"px\": [464,96], \"src\": [128,80], \"f\": 0, \"d\": [113,785,168] },\n\t\t\t\t\t{ \"px\": [480,96], \"src\": [128,96], \"f\": 0, \"d\": [113,786,200] },\n\t\t\t\t\t{ \"px\": [496,96], \"src\": [144,96], \"f\": 0, \"d\": [113,787,201] },\n\t\t\t\t\t{ \"px\": [512,96], \"src\": [128,80], \"f\": 0, \"d\": [113,788,168] },\n\t\t\t\t\t{ \"px\": [528,96], \"src\": [112,96], \"f\": 0, \"d\": [113,789,199] },\n\t\t\t\t\t{ \"px\": [544,96], \"src\": [128,80], \"f\": 0, \"d\": [113,790,168] },\n\t\t\t\t\t{ \"px\": [560,96], \"src\": [144,80], \"f\": 0, \"d\": [113,791,169] },\n\t\t\t\t\t{ \"px\": [576,96], \"src\": [144,80], \"f\": 0, \"d\": [113,792,169] },\n\t\t\t\t\t{ \"px\": [592,96], \"src\": [144,80], \"f\": 0, \"d\": [113,793,169] },\n\t\t\t\t\t{ \"px\": [608,96], \"src\": [112,96], \"f\": 0, \"d\": [113,794,199] },\n\t\t\t\t\t{ \"px\": [624,96], \"src\": [112,96], \"f\": 0, \"d\": [113,795,199] },\n\t\t\t\t\t{ \"px\": [640,96], \"src\": [144,96], \"f\": 0, \"d\": [113,796,201] },\n\t\t\t\t\t{ \"px\": [656,96], \"src\": [144,80], \"f\": 0, \"d\": [113,797,169] },\n\t\t\t\t\t{ \"px\": [672,96], \"src\": [128,96], \"f\": 0, \"d\": [113,798,200] },\n\t\t\t\t\t{ \"px\": [688,96], \"src\": [112,80], \"f\": 0, \"d\": [113,799,167] },\n\t\t\t\t\t{ \"px\": [704,96], \"src\": [144,80], \"f\": 0, \"d\": [113,800,169] },\n\t\t\t\t\t{ \"px\": [720,96], \"src\": [112,96], \"f\": 0, \"d\": [113,801,199] },\n\t\t\t\t\t{ \"px\": [736,112], \"src\": [128,96], \"f\": 0, \"d\": [113,928,200] },\n\t\t\t\t\t{ \"px\": [1568,112], \"src\": [128,80], \"f\": 0, \"d\": [113,980,168] },\n\t\t\t\t\t{ \"px\": [1584,112], \"src\": [128,96], \"f\": 0, \"d\": [113,981,200] },\n\t\t\t\t\t{ \"px\": [1632,112], \"src\": [128,80], \"f\": 0, \"d\": [113,984,168] },\n\t\t\t\t\t{ \"px\": [1648,112], \"src\": [128,96], \"f\": 0, \"d\": [113,985,200] },\n\t\t\t\t\t{ \"px\": [1696,112], \"src\": [128,96], \"f\": 0, \"d\": [113,988,200] },\n\t\t\t\t\t{ \"px\": [1712,112], \"src\": [144,80], \"f\": 0, \"d\": [113,989,169] },\n\t\t\t\t\t{ \"px\": [1760,112], \"src\": [128,80], \"f\": 0, \"d\": [113,992,168] },\n\t\t\t\t\t{ \"px\": [1776,112], \"src\": [112,96], \"f\": 0, \"d\": [113,993,199] },\n\t\t\t\t\t{ \"px\": [80,192], \"src\": [144,96], \"f\": 0, \"d\": [113,1517,201] },\n\t\t\t\t\t{ \"px\": [96,192], \"src\": [128,80], \"f\": 0, \"d\": [113,1518,168] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [112,96], \"f\": 0, \"d\": [113,1519,199] },\n\t\t\t\t\t{ \"px\": [400,192], \"src\": [128,96], \"f\": 0, \"d\": [113,1537,200] },\n\t\t\t\t\t{ \"px\": [416,192], \"src\": [128,80], \"f\": 0, \"d\": [113,1538,168] },\n\t\t\t\t\t{ \"px\": [432,192], \"src\": [144,96], \"f\": 0, \"d\": [113,1539,201] },\n\t\t\t\t\t{ \"px\": [448,192], \"src\": [144,96], \"f\": 0, \"d\": [113,1540,201] },\n\t\t\t\t\t{ \"px\": [464,192], \"src\": [112,96], \"f\": 0, \"d\": [113,1541,199] },\n\t\t\t\t\t{ \"px\": [480,208], \"src\": [128,96], \"f\": 0, \"d\": [113,1668,200] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [112,96], \"f\": 0, \"d\": [113,1669,199] },\n\t\t\t\t\t{ \"px\": [512,224], \"src\": [128,80], \"f\": 0, \"d\": [113,1796,168] },\n\t\t\t\t\t{ \"px\": [528,224], \"src\": [128,96], \"f\": 0, \"d\": [113,1797,200] },\n\t\t\t\t\t{ \"px\": [544,224], \"src\": [144,96], \"f\": 0, \"d\": [113,1798,201] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [128,96], \"f\": 0, \"d\": [113,1799,200] },\n\t\t\t\t\t{ \"px\": [128,240], \"src\": [128,80], \"f\": 0, \"d\": [113,1898,168] },\n\t\t\t\t\t{ \"px\": [144,240], \"src\": [112,96], \"f\": 0, \"d\": [113,1899,199] },\n\t\t\t\t\t{ \"px\": [576,240], \"src\": [128,96], \"f\": 0, \"d\": [113,1926,200] },\n\t\t\t\t\t{ \"px\": [592,240], \"src\": [128,80], \"f\": 0, \"d\": [113,1927,168] },\n\t\t\t\t\t{ \"px\": [1712,240], \"src\": [144,96], \"f\": 0, \"d\": [113,1997,201] },\n\t\t\t\t\t{ \"px\": [1728,240], \"src\": [144,80], \"f\": 0, \"d\": [113,1998,169] },\n\t\t\t\t\t{ \"px\": [1744,240], \"src\": [128,80], \"f\": 0, \"d\": [113,1999,168] },\n\t\t\t\t\t{ \"px\": [1760,240], \"src\": [144,80], \"f\": 0, \"d\": [113,2000,169] },\n\t\t\t\t\t{ \"px\": [1776,240], \"src\": [128,96], \"f\": 0, \"d\": [113,2001,200] },\n\t\t\t\t\t{ \"px\": [1792,240], \"src\": [128,80], \"f\": 0, \"d\": [113,2002,168] },\n\t\t\t\t\t{ \"px\": [608,272], \"src\": [128,80], \"f\": 0, \"d\": [113,2180,168] },\n\t\t\t\t\t{ \"px\": [624,272], \"src\": [112,96], \"f\": 0, \"d\": [113,2181,199] },\n\t\t\t\t\t{ \"px\": [640,272], \"src\": [144,80], \"f\": 0, \"d\": [113,2182,169] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [112,96], \"f\": 0, \"d\": [113,2183,199] },\n\t\t\t\t\t{ \"px\": [672,304], \"src\": [144,80], \"f\": 0, \"d\": [113,2436,169] },\n\t\t\t\t\t{ \"px\": [688,304], \"src\": [128,80], \"f\": 0, \"d\": [113,2437,168] },\n\t\t\t\t\t{ \"px\": [704,304], \"src\": [112,80], \"f\": 0, \"d\": [113,2438,167] },\n\t\t\t\t\t{ \"px\": [720,304], \"src\": [128,96], \"f\": 0, \"d\": [113,2439,200] },\n\t\t\t\t\t{ \"px\": [736,304], \"src\": [128,96], \"f\": 0, \"d\": [113,2440,200] },\n\t\t\t\t\t{ \"px\": [752,304], \"src\": [144,96], \"f\": 0, \"d\": [113,2441,201] },\n\t\t\t\t\t{ \"px\": [128,96], \"src\": [144,112], \"f\": 0, \"d\": [114,764,233] },\n\t\t\t\t\t{ \"px\": [144,96], \"src\": [144,112], \"f\": 0, \"d\": [114,765,233] },\n\t\t\t\t\t{ \"px\": [160,96], \"src\": [128,128], \"f\": 0, \"d\": [114,766,264] },\n\t\t\t\t\t{ \"px\": [208,96], \"src\": [144,112], \"f\": 0, \"d\": [114,769,233] },\n\t\t\t\t\t{ \"px\": [224,96], \"src\": [112,112], \"f\": 0, \"d\": [114,770,231] },\n\t\t\t\t\t{ \"px\": [288,96], \"src\": [112,128], \"f\": 0, \"d\": [114,774,263] },\n\t\t\t\t\t{ \"px\": [352,96], \"src\": [144,128], \"f\": 0, \"d\": [114,778,265] },\n\t\t\t\t\t{ \"px\": [384,96], \"src\": [144,128], \"f\": 0, \"d\": [114,780,265] },\n\t\t\t\t\t{ \"px\": [400,96], \"src\": [128,128], \"f\": 0, \"d\": [114,781,264] },\n\t\t\t\t\t{ \"px\": [480,96], \"src\": [112,112], \"f\": 0, \"d\": [114,786,231] },\n\t\t\t\t\t{ \"px\": [512,96], \"src\": [112,112], \"f\": 0, \"d\": [114,788,231] },\n\t\t\t\t\t{ \"px\": [528,96], \"src\": [128,112], \"f\": 0, \"d\": [114,789,232] },\n\t\t\t\t\t{ \"px\": [544,96], \"src\": [112,112], \"f\": 0, \"d\": [114,790,231] },\n\t\t\t\t\t{ \"px\": [560,96], \"src\": [112,128], \"f\": 0, \"d\": [114,791,263] },\n\t\t\t\t\t{ \"px\": [576,96], \"src\": [112,128], \"f\": 0, \"d\": [114,792,263] },\n\t\t\t\t\t{ \"px\": [592,96], \"src\": [144,128], \"f\": 0, \"d\": [114,793,265] },\n\t\t\t\t\t{ \"px\": [656,96], \"src\": [128,112], \"f\": 0, \"d\": [114,797,232] },\n\t\t\t\t\t{ \"px\": [672,96], \"src\": [144,128], \"f\": 0, \"d\": [114,798,265] },\n\t\t\t\t\t{ \"px\": [688,96], \"src\": [144,112], \"f\": 0, \"d\": [114,799,233] },\n\t\t\t\t\t{ \"px\": [704,96], \"src\": [112,128], \"f\": 0, \"d\": [114,800,263] },\n\t\t\t\t\t{ \"px\": [736,112], \"src\": [128,128], \"f\": 0, \"d\": [114,928,264] },\n\t\t\t\t\t{ \"px\": [1664,112], \"src\": [144,128], \"f\": 0, \"d\": [114,986,265] },\n\t\t\t\t\t{ \"px\": [1728,112], \"src\": [144,128], \"f\": 0, \"d\": [114,990,265] },\n\t\t\t\t\t{ \"px\": [1760,112], \"src\": [128,128], \"f\": 0, \"d\": [114,992,264] },\n\t\t\t\t\t{ \"px\": [1792,112], \"src\": [144,128], \"f\": 0, \"d\": [114,994,265] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [112,112], \"f\": 0, \"d\": [114,1519,231] },\n\t\t\t\t\t{ \"px\": [432,192], \"src\": [144,112], \"f\": 0, \"d\": [114,1539,233] },\n\t\t\t\t\t{ \"px\": [480,208], \"src\": [128,112], \"f\": 0, \"d\": [114,1668,232] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [112,128], \"f\": 0, \"d\": [114,1669,263] },\n\t\t\t\t\t{ \"px\": [528,224], \"src\": [112,128], \"f\": 0, \"d\": [114,1797,263] },\n\t\t\t\t\t{ \"px\": [544,224], \"src\": [144,128], \"f\": 0, \"d\": [114,1798,265] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [112,128], \"f\": 0, \"d\": [114,1799,263] },\n\t\t\t\t\t{ \"px\": [1680,240], \"src\": [128,112], \"f\": 0, \"d\": [114,1995,232] },\n\t\t\t\t\t{ \"px\": [1696,240], \"src\": [112,128], \"f\": 0, \"d\": [114,1996,263] },\n\t\t\t\t\t{ \"px\": [1712,240], \"src\": [144,128], \"f\": 0, \"d\": [114,1997,265] },\n\t\t\t\t\t{ \"px\": [1760,240], \"src\": [144,128], \"f\": 0, \"d\": [114,2000,265] },\n\t\t\t\t\t{ \"px\": [1776,240], \"src\": [144,128], \"f\": 0, \"d\": [114,2001,265] },\n\t\t\t\t\t{ \"px\": [1792,240], \"src\": [128,128], \"f\": 0, \"d\": [114,2002,264] },\n\t\t\t\t\t{ \"px\": [624,272], \"src\": [112,112], \"f\": 0, \"d\": [114,2181,231] },\n\t\t\t\t\t{ \"px\": [640,272], \"src\": [144,128], \"f\": 0, \"d\": [114,2182,265] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [144,112], \"f\": 0, \"d\": [114,2183,233] },\n\t\t\t\t\t{ \"px\": [672,304], \"src\": [112,112], \"f\": 0, \"d\": [114,2436,231] },\n\t\t\t\t\t{ \"px\": [688,304], \"src\": [112,128], \"f\": 0, \"d\": [114,2437,263] },\n\t\t\t\t\t{ \"px\": [704,304], \"src\": [128,128], \"f\": 0, \"d\": [114,2438,264] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [32,64], \"f\": 0, \"d\": [43,475,130] },\n\t\t\t\t\t{ \"px\": [1568,48], \"src\": [32,64], \"f\": 0, \"d\": [43,476,130] },\n\t\t\t\t\t{ \"px\": [1584,48], \"src\": [32,64], \"f\": 0, \"d\": [43,477,130] },\n\t\t\t\t\t{ \"px\": [1600,48], \"src\": [32,64], \"f\": 0, \"d\": [43,478,130] },\n\t\t\t\t\t{ \"px\": [1616,48], \"src\": [32,64], \"f\": 0, \"d\": [43,479,130] },\n\t\t\t\t\t{ \"px\": [1632,48], \"src\": [32,64], \"f\": 0, \"d\": [43,480,130] },\n\t\t\t\t\t{ \"px\": [1648,48], \"src\": [32,64], \"f\": 0, \"d\": [43,481,130] },\n\t\t\t\t\t{ \"px\": [1664,48], \"src\": [32,64], \"f\": 0, \"d\": [43,482,130] },\n\t\t\t\t\t{ \"px\": [1680,48], \"src\": [32,64], \"f\": 0, \"d\": [43,483,130] },\n\t\t\t\t\t{ \"px\": [80,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1265,130] },\n\t\t\t\t\t{ \"px\": [96,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1266,130] },\n\t\t\t\t\t{ \"px\": [112,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1267,130] },\n\t\t\t\t\t{ \"px\": [128,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1268,130] },\n\t\t\t\t\t{ \"px\": [144,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1269,130] },\n\t\t\t\t\t{ \"px\": [400,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1285,130] },\n\t\t\t\t\t{ \"px\": [416,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1286,130] },\n\t\t\t\t\t{ \"px\": [432,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1287,130] },\n\t\t\t\t\t{ \"px\": [448,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1288,130] },\n\t\t\t\t\t{ \"px\": [464,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1289,130] },\n\t\t\t\t\t{ \"px\": [480,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1290,130] },\n\t\t\t\t\t{ \"px\": [496,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1291,130] },\n\t\t\t\t\t{ \"px\": [512,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1292,130] },\n\t\t\t\t\t{ \"px\": [528,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1293,130] },\n\t\t\t\t\t{ \"px\": [544,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1294,130] },\n\t\t\t\t\t{ \"px\": [560,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1295,130] },\n\t\t\t\t\t{ \"px\": [576,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1296,130] },\n\t\t\t\t\t{ \"px\": [592,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1297,130] },\n\t\t\t\t\t{ \"px\": [608,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1298,130] },\n\t\t\t\t\t{ \"px\": [624,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1299,130] },\n\t\t\t\t\t{ \"px\": [640,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1300,130] },\n\t\t\t\t\t{ \"px\": [656,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1301,130] },\n\t\t\t\t\t{ \"px\": [672,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1302,130] },\n\t\t\t\t\t{ \"px\": [688,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1303,130] },\n\t\t\t\t\t{ \"px\": [704,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1304,130] },\n\t\t\t\t\t{ \"px\": [720,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1305,130] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [32,64], \"f\": 0, \"d\": [43,1306,130] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1491,130] },\n\t\t\t\t\t{ \"px\": [1696,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1492,130] },\n\t\t\t\t\t{ \"px\": [1712,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1493,130] },\n\t\t\t\t\t{ \"px\": [1728,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1494,130] },\n\t\t\t\t\t{ \"px\": [1744,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1495,130] },\n\t\t\t\t\t{ \"px\": [1760,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1496,130] },\n\t\t\t\t\t{ \"px\": [1776,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1497,130] },\n\t\t\t\t\t{ \"px\": [1792,176], \"src\": [32,64], \"f\": 0, \"d\": [43,1498,130] },\n\t\t\t\t\t{ \"px\": [752,192], \"src\": [32,64], \"f\": 0, \"d\": [43,1559,130] },\n\t\t\t\t\t{ \"px\": [768,224], \"src\": [32,64], \"f\": 0, \"d\": [43,1812,130] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [32,64], \"f\": 0, \"d\": [43,1813,130] },\n\t\t\t\t\t{ \"px\": [80,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2273,130] },\n\t\t\t\t\t{ \"px\": [96,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2274,130] },\n\t\t\t\t\t{ \"px\": [112,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2275,130] },\n\t\t\t\t\t{ \"px\": [128,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2276,130] },\n\t\t\t\t\t{ \"px\": [144,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2277,130] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2293,130] },\n\t\t\t\t\t{ \"px\": [416,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2294,130] },\n\t\t\t\t\t{ \"px\": [432,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2295,130] },\n\t\t\t\t\t{ \"px\": [448,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2296,130] },\n\t\t\t\t\t{ \"px\": [464,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2297,130] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [32,64], \"f\": 0, \"d\": [43,2298,130] },\n\t\t\t\t\t{ \"px\": [496,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2425,130] },\n\t\t\t\t\t{ \"px\": [512,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2426,130] },\n\t\t\t\t\t{ \"px\": [528,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2427,130] },\n\t\t\t\t\t{ \"px\": [544,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2428,130] },\n\t\t\t\t\t{ \"px\": [560,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2429,130] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2430,130] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2493,130] },\n\t\t\t\t\t{ \"px\": [1600,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2494,130] },\n\t\t\t\t\t{ \"px\": [1616,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2495,130] },\n\t\t\t\t\t{ \"px\": [1632,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2496,130] },\n\t\t\t\t\t{ \"px\": [1648,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2497,130] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [32,64], \"f\": 0, \"d\": [43,2498,130] },\n\t\t\t\t\t{ \"px\": [160,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2530,130] },\n\t\t\t\t\t{ \"px\": [176,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2531,130] },\n\t\t\t\t\t{ \"px\": [192,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2532,130] },\n\t\t\t\t\t{ \"px\": [208,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2533,130] },\n\t\t\t\t\t{ \"px\": [224,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2534,130] },\n\t\t\t\t\t{ \"px\": [240,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2535,130] },\n\t\t\t\t\t{ \"px\": [256,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2536,130] },\n\t\t\t\t\t{ \"px\": [272,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2537,130] },\n\t\t\t\t\t{ \"px\": [288,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2538,130] },\n\t\t\t\t\t{ \"px\": [304,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2539,130] },\n\t\t\t\t\t{ \"px\": [320,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2540,130] },\n\t\t\t\t\t{ \"px\": [336,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2541,130] },\n\t\t\t\t\t{ \"px\": [352,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2542,130] },\n\t\t\t\t\t{ \"px\": [368,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2543,130] },\n\t\t\t\t\t{ \"px\": [384,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2544,130] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2634,130] },\n\t\t\t\t\t{ \"px\": [1840,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2635,130] },\n\t\t\t\t\t{ \"px\": [1856,320], \"src\": [32,64], \"f\": 0, \"d\": [43,2636,130] },\n\t\t\t\t\t{ \"px\": [592,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2683,130] },\n\t\t\t\t\t{ \"px\": [608,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2684,130] },\n\t\t\t\t\t{ \"px\": [624,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2685,130] },\n\t\t\t\t\t{ \"px\": [640,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2686,130] },\n\t\t\t\t\t{ \"px\": [1680,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2751,130] },\n\t\t\t\t\t{ \"px\": [1696,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2752,130] },\n\t\t\t\t\t{ \"px\": [1712,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2753,130] },\n\t\t\t\t\t{ \"px\": [1728,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2754,130] },\n\t\t\t\t\t{ \"px\": [1744,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2755,130] },\n\t\t\t\t\t{ \"px\": [1760,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2756,130] },\n\t\t\t\t\t{ \"px\": [1776,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2757,130] },\n\t\t\t\t\t{ \"px\": [1792,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2758,130] },\n\t\t\t\t\t{ \"px\": [1808,336], \"src\": [32,64], \"f\": 0, \"d\": [43,2759,130] },\n\t\t\t\t\t{ \"px\": [656,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2939,130] },\n\t\t\t\t\t{ \"px\": [672,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2940,130] },\n\t\t\t\t\t{ \"px\": [688,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2941,130] },\n\t\t\t\t\t{ \"px\": [704,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2942,130] },\n\t\t\t\t\t{ \"px\": [720,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2943,130] },\n\t\t\t\t\t{ \"px\": [736,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2944,130] },\n\t\t\t\t\t{ \"px\": [752,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2945,130] },\n\t\t\t\t\t{ \"px\": [768,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2946,130] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2975,130] },\n\t\t\t\t\t{ \"px\": [1248,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2976,130] },\n\t\t\t\t\t{ \"px\": [1264,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2977,130] },\n\t\t\t\t\t{ \"px\": [1280,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2978,130] },\n\t\t\t\t\t{ \"px\": [1296,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2979,130] },\n\t\t\t\t\t{ \"px\": [1312,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2980,130] },\n\t\t\t\t\t{ \"px\": [1328,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2981,130] },\n\t\t\t\t\t{ \"px\": [1344,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2982,130] },\n\t\t\t\t\t{ \"px\": [1360,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2983,130] },\n\t\t\t\t\t{ \"px\": [1376,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2984,130] },\n\t\t\t\t\t{ \"px\": [1392,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2985,130] },\n\t\t\t\t\t{ \"px\": [1408,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2986,130] },\n\t\t\t\t\t{ \"px\": [1424,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2987,130] },\n\t\t\t\t\t{ \"px\": [1440,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2988,130] },\n\t\t\t\t\t{ \"px\": [1456,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2989,130] },\n\t\t\t\t\t{ \"px\": [1472,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2990,130] },\n\t\t\t\t\t{ \"px\": [1488,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2991,130] },\n\t\t\t\t\t{ \"px\": [1504,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2992,130] },\n\t\t\t\t\t{ \"px\": [1520,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2993,130] },\n\t\t\t\t\t{ \"px\": [1536,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2994,130] },\n\t\t\t\t\t{ \"px\": [1552,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2995,130] },\n\t\t\t\t\t{ \"px\": [1568,368], \"src\": [32,64], \"f\": 0, \"d\": [43,2996,130] },\n\t\t\t\t\t{ \"px\": [784,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3073,130] },\n\t\t\t\t\t{ \"px\": [800,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3074,130] },\n\t\t\t\t\t{ \"px\": [816,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3075,130] },\n\t\t\t\t\t{ \"px\": [832,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3076,130] },\n\t\t\t\t\t{ \"px\": [848,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3077,130] },\n\t\t\t\t\t{ \"px\": [864,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3078,130] },\n\t\t\t\t\t{ \"px\": [880,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3079,130] },\n\t\t\t\t\t{ \"px\": [896,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3080,130] },\n\t\t\t\t\t{ \"px\": [912,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3081,130] },\n\t\t\t\t\t{ \"px\": [928,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3082,130] },\n\t\t\t\t\t{ \"px\": [944,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3083,130] },\n\t\t\t\t\t{ \"px\": [960,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3084,130] },\n\t\t\t\t\t{ \"px\": [976,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3085,130] },\n\t\t\t\t\t{ \"px\": [992,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3086,130] },\n\t\t\t\t\t{ \"px\": [1008,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3087,130] },\n\t\t\t\t\t{ \"px\": [1024,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3088,130] },\n\t\t\t\t\t{ \"px\": [1040,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3089,130] },\n\t\t\t\t\t{ \"px\": [1056,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3090,130] },\n\t\t\t\t\t{ \"px\": [1072,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3091,130] },\n\t\t\t\t\t{ \"px\": [1088,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3092,130] },\n\t\t\t\t\t{ \"px\": [1104,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3093,130] },\n\t\t\t\t\t{ \"px\": [1120,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3094,130] },\n\t\t\t\t\t{ \"px\": [1136,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3095,130] },\n\t\t\t\t\t{ \"px\": [1152,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3096,130] },\n\t\t\t\t\t{ \"px\": [1168,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3097,130] },\n\t\t\t\t\t{ \"px\": [1184,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3098,130] },\n\t\t\t\t\t{ \"px\": [1200,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3099,130] },\n\t\t\t\t\t{ \"px\": [1216,384], \"src\": [32,64], \"f\": 0, \"d\": [43,3100,130] },\n\t\t\t\t\t{ \"px\": [1552,48], \"src\": [16,64], \"f\": 0, \"d\": [44,475,129] },\n\t\t\t\t\t{ \"px\": [144,160], \"src\": [16,64], \"f\": 1, \"d\": [44,1269,129] },\n\t\t\t\t\t{ \"px\": [400,160], \"src\": [16,64], \"f\": 0, \"d\": [44,1285,129] },\n\t\t\t\t\t{ \"px\": [736,160], \"src\": [16,64], \"f\": 1, \"d\": [44,1306,129] },\n\t\t\t\t\t{ \"px\": [1680,176], \"src\": [16,64], \"f\": 0, \"d\": [44,1491,129] },\n\t\t\t\t\t{ \"px\": [1792,176], \"src\": [16,64], \"f\": 1, \"d\": [44,1498,129] },\n\t\t\t\t\t{ \"px\": [752,192], \"src\": [16,64], \"f\": 1, \"d\": [44,1559,129] },\n\t\t\t\t\t{ \"px\": [784,224], \"src\": [16,64], \"f\": 1, \"d\": [44,1813,129] },\n\t\t\t\t\t{ \"px\": [144,288], \"src\": [16,64], \"f\": 1, \"d\": [44,2277,129] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [16,64], \"f\": 0, \"d\": [44,2293,129] },\n\t\t\t\t\t{ \"px\": [480,288], \"src\": [16,64], \"f\": 1, \"d\": [44,2298,129] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [16,64], \"f\": 1, \"d\": [44,2430,129] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [16,64], \"f\": 0, \"d\": [44,2493,129] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [16,64], \"f\": 1, \"d\": [44,2498,129] },\n\t\t\t\t\t{ \"px\": [1824,320], \"src\": [16,64], \"f\": 0, \"d\": [44,2634,129] },\n\t\t\t\t\t{ \"px\": [640,336], \"src\": [16,64], \"f\": 1, \"d\": [44,2686,129] },\n\t\t\t\t\t{ \"px\": [768,368], \"src\": [16,64], \"f\": 1, \"d\": [44,2946,129] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [16,64], \"f\": 0, \"d\": [44,2975,129] },\n\t\t\t\t\t{ \"px\": [1616,32], \"src\": [48,64], \"f\": 0, \"d\": [58,353,131] },\n\t\t\t\t\t{ \"px\": [1632,32], \"src\": [64,64], \"f\": 0, \"d\": [58,354,132] },\n\t\t\t\t\t{ \"px\": [1648,32], \"src\": [48,64], \"f\": 0, \"d\": [58,355,131] },\n\t\t\t\t\t{ \"px\": [1664,32], \"src\": [80,64], \"f\": 0, \"d\": [58,356,133] },\n\t\t\t\t\t{ \"px\": [1680,32], \"src\": [80,64], \"f\": 0, \"d\": [58,357,133] },\n\t\t\t\t\t{ \"px\": [80,144], \"src\": [80,64], \"f\": 0, \"d\": [58,1139,133] },\n\t\t\t\t\t{ \"px\": [96,144], \"src\": [80,64], \"f\": 0, \"d\": [58,1140,133] },\n\t\t\t\t\t{ \"px\": [112,144], \"src\": [96,64], \"f\": 0, \"d\": [58,1141,134] },\n\t\t\t\t\t{ \"px\": [400,144], \"src\": [64,64], \"f\": 0, \"d\": [58,1159,132] },\n\t\t\t\t\t{ \"px\": [416,144], \"src\": [64,64], \"f\": 0, \"d\": [58,1160,132] },\n\t\t\t\t\t{ \"px\": [432,144], \"src\": [48,64], \"f\": 0, \"d\": [58,1161,131] },\n\t\t\t\t\t{ \"px\": [448,144], \"src\": [96,64], \"f\": 0, \"d\": [58,1162,134] },\n\t\t\t\t\t{ \"px\": [464,144], \"src\": [48,64], \"f\": 0, \"d\": [58,1163,131] },\n\t\t\t\t\t{ \"px\": [480,144], \"src\": [48,64], \"f\": 0, \"d\": [58,1164,131] },\n\t\t\t\t\t{ \"px\": [496,144], \"src\": [48,64], \"f\": 0, \"d\": [58,1165,131] },\n\t\t\t\t\t{ \"px\": [624,144], \"src\": [96,64], \"f\": 0, \"d\": [58,1173,134] },\n\t\t\t\t\t{ \"px\": [640,144], \"src\": [64,64], \"f\": 0, \"d\": [58,1174,132] },\n\t\t\t\t\t{ \"px\": [656,144], \"src\": [80,64], \"f\": 0, \"d\": [58,1175,133] },\n\t\t\t\t\t{ \"px\": [672,144], \"src\": [96,64], \"f\": 0, \"d\": [58,1176,134] },\n\t\t\t\t\t{ \"px\": [688,144], \"src\": [48,64], \"f\": 0, \"d\": [58,1177,131] },\n\t\t\t\t\t{ \"px\": [704,144], \"src\": [80,64], \"f\": 0, \"d\": [58,1178,133] },\n\t\t\t\t\t{ \"px\": [720,144], \"src\": [80,64], \"f\": 0, \"d\": [58,1179,133] },\n\t\t\t\t\t{ \"px\": [736,144], \"src\": [48,64], \"f\": 0, \"d\": [58,1180,131] },\n\t\t\t\t\t{ \"px\": [1680,160], \"src\": [96,64], \"f\": 0, \"d\": [58,1365,134] },\n\t\t\t\t\t{ \"px\": [1696,160], \"src\": [80,64], \"f\": 0, \"d\": [58,1366,133] },\n\t\t\t\t\t{ \"px\": [1712,160], \"src\": [96,64], \"f\": 0, \"d\": [58,1367,134] },\n\t\t\t\t\t{ \"px\": [1728,160], \"src\": [64,64], \"f\": 0, \"d\": [58,1368,132] },\n\t\t\t\t\t{ \"px\": [1744,160], \"src\": [96,64], \"f\": 0, \"d\": [58,1369,134] },\n\t\t\t\t\t{ \"px\": [1760,160], \"src\": [80,64], \"f\": 0, \"d\": [58,1370,133] },\n\t\t\t\t\t{ \"px\": [80,272], \"src\": [64,64], \"f\": 0, \"d\": [58,2147,132] },\n\t\t\t\t\t{ \"px\": [96,272], \"src\": [64,64], \"f\": 0, \"d\": [58,2148,132] },\n\t\t\t\t\t{ \"px\": [112,272], \"src\": [96,64], \"f\": 0, \"d\": [58,2149,134] },\n\t\t\t\t\t{ \"px\": [128,272], \"src\": [80,64], \"f\": 0, \"d\": [58,2150,133] },\n\t\t\t\t\t{ \"px\": [144,272], \"src\": [96,64], \"f\": 0, \"d\": [58,2151,134] },\n\t\t\t\t\t{ \"px\": [400,272], \"src\": [64,64], \"f\": 0, \"d\": [58,2167,132] },\n\t\t\t\t\t{ \"px\": [416,272], \"src\": [80,64], \"f\": 0, \"d\": [58,2168,133] },\n\t\t\t\t\t{ \"px\": [512,288], \"src\": [80,64], \"f\": 0, \"d\": [58,2300,133] },\n\t\t\t\t\t{ \"px\": [1584,288], \"src\": [96,64], \"f\": 0, \"d\": [58,2367,134] },\n\t\t\t\t\t{ \"px\": [1600,288], \"src\": [64,64], \"f\": 0, \"d\": [58,2368,132] },\n\t\t\t\t\t{ \"px\": [1616,288], \"src\": [48,64], \"f\": 0, \"d\": [58,2369,131] },\n\t\t\t\t\t{ \"px\": [1632,288], \"src\": [48,64], \"f\": 0, \"d\": [58,2370,131] },\n\t\t\t\t\t{ \"px\": [336,304], \"src\": [48,64], \"f\": 0, \"d\": [58,2415,131] },\n\t\t\t\t\t{ \"px\": [352,304], \"src\": [48,64], \"f\": 0, \"d\": [58,2416,131] },\n\t\t\t\t\t{ \"px\": [368,304], \"src\": [48,64], \"f\": 0, \"d\": [58,2417,131] },\n\t\t\t\t\t{ \"px\": [384,304], \"src\": [80,64], \"f\": 0, \"d\": [58,2418,133] },\n\t\t\t\t\t{ \"px\": [1824,304], \"src\": [96,64], \"f\": 0, \"d\": [58,2508,134] },\n\t\t\t\t\t{ \"px\": [1840,304], \"src\": [80,64], \"f\": 0, \"d\": [58,2509,133] },\n\t\t\t\t\t{ \"px\": [1856,304], \"src\": [96,64], \"f\": 0, \"d\": [58,2510,134] },\n\t\t\t\t\t{ \"px\": [640,320], \"src\": [64,64], \"f\": 0, \"d\": [58,2560,132] },\n\t\t\t\t\t{ \"px\": [1728,320], \"src\": [64,64], \"f\": 0, \"d\": [58,2628,132] },\n\t\t\t\t\t{ \"px\": [1760,320], \"src\": [80,64], \"f\": 0, \"d\": [58,2630,133] },\n\t\t\t\t\t{ \"px\": [1776,320], \"src\": [48,64], \"f\": 0, \"d\": [58,2631,131] },\n\t\t\t\t\t{ \"px\": [1792,320], \"src\": [64,64], \"f\": 0, \"d\": [58,2632,132] },\n\t\t\t\t\t{ \"px\": [1808,320], \"src\": [64,64], \"f\": 0, \"d\": [58,2633,132] },\n\t\t\t\t\t{ \"px\": [656,352], \"src\": [80,64], \"f\": 0, \"d\": [58,2813,133] },\n\t\t\t\t\t{ \"px\": [672,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2814,132] },\n\t\t\t\t\t{ \"px\": [688,352], \"src\": [48,64], \"f\": 0, \"d\": [58,2815,131] },\n\t\t\t\t\t{ \"px\": [704,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2816,132] },\n\t\t\t\t\t{ \"px\": [720,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2817,132] },\n\t\t\t\t\t{ \"px\": [1232,352], \"src\": [96,64], \"f\": 0, \"d\": [58,2849,134] },\n\t\t\t\t\t{ \"px\": [1248,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2850,132] },\n\t\t\t\t\t{ \"px\": [1408,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2860,132] },\n\t\t\t\t\t{ \"px\": [1424,352], \"src\": [80,64], \"f\": 0, \"d\": [58,2861,133] },\n\t\t\t\t\t{ \"px\": [1440,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2862,132] },\n\t\t\t\t\t{ \"px\": [1456,352], \"src\": [96,64], \"f\": 0, \"d\": [58,2863,134] },\n\t\t\t\t\t{ \"px\": [1472,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2864,132] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2865,132] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [64,64], \"f\": 0, \"d\": [58,2866,132] },\n\t\t\t\t\t{ \"px\": [1520,352], \"src\": [80,64], \"f\": 0, \"d\": [58,2867,133] },\n\t\t\t\t\t{ \"px\": [1536,352], \"src\": [80,64], \"f\": 0, \"d\": [58,2868,133] },\n\t\t\t\t\t{ \"px\": [784,368], \"src\": [64,64], \"f\": 0, \"d\": [58,2947,132] },\n\t\t\t\t\t{ \"px\": [1168,368], \"src\": [96,64], \"f\": 0, \"d\": [58,2971,134] },\n\t\t\t\t\t{ \"px\": [1184,368], \"src\": [64,64], \"f\": 0, \"d\": [58,2972,132] },\n\t\t\t\t\t{ \"px\": [1200,368], \"src\": [48,64], \"f\": 0, \"d\": [58,2973,131] },\n\t\t\t\t\t{ \"px\": [1216,368], \"src\": [48,64], \"f\": 0, \"d\": [58,2974,131] },\n\t\t\t\t\t{ \"px\": [1552,32], \"src\": [48,48], \"f\": 0, \"d\": [48,349,99] },\n\t\t\t\t\t{ \"px\": [1568,32], \"src\": [16,48], \"f\": 0, \"d\": [48,350,97] },\n\t\t\t\t\t{ \"px\": [1584,32], \"src\": [32,48], \"f\": 0, \"d\": [48,351,98] },\n\t\t\t\t\t{ \"px\": [1600,32], \"src\": [48,48], \"f\": 0, \"d\": [48,352,99] },\n\t\t\t\t\t{ \"px\": [1616,32], \"src\": [32,48], \"f\": 0, \"d\": [48,353,98] },\n\t\t\t\t\t{ \"px\": [1632,32], \"src\": [64,48], \"f\": 0, \"d\": [48,354,100] },\n\t\t\t\t\t{ \"px\": [1648,32], \"src\": [48,48], \"f\": 0, \"d\": [48,355,99] },\n\t\t\t\t\t{ \"px\": [1664,32], \"src\": [16,48], \"f\": 0, \"d\": [48,356,97] },\n\t\t\t\t\t{ \"px\": [1680,32], \"src\": [48,48], \"f\": 0, \"d\": [48,357,99] },\n\t\t\t\t\t{ \"px\": [80,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1139,99] },\n\t\t\t\t\t{ \"px\": [96,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1140,98] },\n\t\t\t\t\t{ \"px\": [112,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1141,99] },\n\t\t\t\t\t{ \"px\": [128,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1142,98] },\n\t\t\t\t\t{ \"px\": [144,144], \"src\": [64,48], \"f\": 0, \"d\": [48,1143,100] },\n\t\t\t\t\t{ \"px\": [400,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1159,98] },\n\t\t\t\t\t{ \"px\": [416,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1160,98] },\n\t\t\t\t\t{ \"px\": [432,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1161,99] },\n\t\t\t\t\t{ \"px\": [448,144], \"src\": [64,48], \"f\": 0, \"d\": [48,1162,100] },\n\t\t\t\t\t{ \"px\": [464,144], \"src\": [64,48], \"f\": 0, \"d\": [48,1163,100] },\n\t\t\t\t\t{ \"px\": [480,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1164,98] },\n\t\t\t\t\t{ \"px\": [496,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1165,99] },\n\t\t\t\t\t{ \"px\": [512,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1166,99] },\n\t\t\t\t\t{ \"px\": [528,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1167,98] },\n\t\t\t\t\t{ \"px\": [544,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1168,99] },\n\t\t\t\t\t{ \"px\": [560,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1169,98] },\n\t\t\t\t\t{ \"px\": [576,144], \"src\": [16,48], \"f\": 0, \"d\": [48,1170,97] },\n\t\t\t\t\t{ \"px\": [592,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1171,99] },\n\t\t\t\t\t{ \"px\": [608,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1172,98] },\n\t\t\t\t\t{ \"px\": [624,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1173,98] },\n\t\t\t\t\t{ \"px\": [640,144], \"src\": [16,48], \"f\": 0, \"d\": [48,1174,97] },\n\t\t\t\t\t{ \"px\": [656,144], \"src\": [64,48], \"f\": 0, \"d\": [48,1175,100] },\n\t\t\t\t\t{ \"px\": [672,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1176,98] },\n\t\t\t\t\t{ \"px\": [688,144], \"src\": [16,48], \"f\": 0, \"d\": [48,1177,97] },\n\t\t\t\t\t{ \"px\": [704,144], \"src\": [32,48], \"f\": 0, \"d\": [48,1178,98] },\n\t\t\t\t\t{ \"px\": [720,144], \"src\": [48,48], \"f\": 0, \"d\": [48,1179,99] },\n\t\t\t\t\t{ \"px\": [736,144], \"src\": [64,48], \"f\": 0, \"d\": [48,1180,100] },\n\t\t\t\t\t{ \"px\": [1680,160], \"src\": [48,48], \"f\": 0, \"d\": [48,1365,99] },\n\t\t\t\t\t{ \"px\": [1696,160], \"src\": [32,48], \"f\": 0, \"d\": [48,1366,98] },\n\t\t\t\t\t{ \"px\": [1712,160], \"src\": [64,48], \"f\": 0, \"d\": [48,1367,100] },\n\t\t\t\t\t{ \"px\": [1728,160], \"src\": [16,48], \"f\": 0, \"d\": [48,1368,97] },\n\t\t\t\t\t{ \"px\": [1744,160], \"src\": [64,48], \"f\": 0, \"d\": [48,1369,100] },\n\t\t\t\t\t{ \"px\": [1760,160], \"src\": [64,48], \"f\": 0, \"d\": [48,1370,100] },\n\t\t\t\t\t{ \"px\": [1776,160], \"src\": [48,48], \"f\": 0, \"d\": [48,1371,99] },\n\t\t\t\t\t{ \"px\": [1792,160], \"src\": [64,48], \"f\": 0, \"d\": [48,1372,100] },\n\t\t\t\t\t{ \"px\": [752,176], \"src\": [48,48], \"f\": 0, \"d\": [48,1433,99] },\n\t\t\t\t\t{ \"px\": [768,208], \"src\": [64,48], \"f\": 0, \"d\": [48,1686,100] },\n\t\t\t\t\t{ \"px\": [784,208], \"src\": [48,48], \"f\": 0, \"d\": [48,1687,99] },\n\t\t\t\t\t{ \"px\": [80,272], \"src\": [32,48], \"f\": 0, \"d\": [48,2147,98] },\n\t\t\t\t\t{ \"px\": [96,272], \"src\": [64,48], \"f\": 0, \"d\": [48,2148,100] },\n\t\t\t\t\t{ \"px\": [112,272], \"src\": [64,48], \"f\": 0, \"d\": [48,2149,100] },\n\t\t\t\t\t{ \"px\": [128,272], \"src\": [16,48], \"f\": 0, \"d\": [48,2150,97] },\n\t\t\t\t\t{ \"px\": [144,272], \"src\": [32,48], \"f\": 0, \"d\": [48,2151,98] },\n\t\t\t\t\t{ \"px\": [400,272], \"src\": [16,48], \"f\": 0, \"d\": [48,2167,97] },\n\t\t\t\t\t{ \"px\": [416,272], \"src\": [16,48], \"f\": 0, \"d\": [48,2168,97] },\n\t\t\t\t\t{ \"px\": [432,272], \"src\": [64,48], \"f\": 0, \"d\": [48,2169,100] },\n\t\t\t\t\t{ \"px\": [448,272], \"src\": [48,48], \"f\": 0, \"d\": [48,2170,99] },\n\t\t\t\t\t{ \"px\": [464,272], \"src\": [48,48], \"f\": 0, \"d\": [48,2171,99] },\n\t\t\t\t\t{ \"px\": [480,272], \"src\": [32,48], \"f\": 0, \"d\": [48,2172,98] },\n\t\t\t\t\t{ \"px\": [496,288], \"src\": [48,48], \"f\": 0, \"d\": [48,2299,99] },\n\t\t\t\t\t{ \"px\": [512,288], \"src\": [16,48], \"f\": 0, \"d\": [48,2300,97] },\n\t\t\t\t\t{ \"px\": [528,288], \"src\": [64,48], \"f\": 0, \"d\": [48,2301,100] },\n\t\t\t\t\t{ \"px\": [544,288], \"src\": [48,48], \"f\": 0, \"d\": [48,2302,99] },\n\t\t\t\t\t{ \"px\": [560,288], \"src\": [16,48], \"f\": 0, \"d\": [48,2303,97] },\n\t\t\t\t\t{ \"px\": [576,288], \"src\": [32,48], \"f\": 0, \"d\": [48,2304,98] },\n\t\t\t\t\t{ \"px\": [1584,288], \"src\": [64,48], \"f\": 0, \"d\": [48,2367,100] },\n\t\t\t\t\t{ \"px\": [1600,288], \"src\": [32,48], \"f\": 0, \"d\": [48,2368,98] },\n\t\t\t\t\t{ \"px\": [1616,288], \"src\": [16,48], \"f\": 0, \"d\": [48,2369,97] },\n\t\t\t\t\t{ \"px\": [1632,288], \"src\": [48,48], \"f\": 0, \"d\": [48,2370,99] },\n\t\t\t\t\t{ \"px\": [1648,288], \"src\": [64,48], \"f\": 0, \"d\": [48,2371,100] },\n\t\t\t\t\t{ \"px\": [1664,288], \"src\": [32,48], \"f\": 0, \"d\": [48,2372,98] },\n\t\t\t\t\t{ \"px\": [160,304], \"src\": [32,48], \"f\": 0, \"d\": [48,2404,98] },\n\t\t\t\t\t{ \"px\": [176,304], \"src\": [16,48], \"f\": 0, \"d\": [48,2405,97] },\n\t\t\t\t\t{ \"px\": [192,304], \"src\": [16,48], \"f\": 0, \"d\": [48,2406,97] },\n\t\t\t\t\t{ \"px\": [208,304], \"src\": [16,48], \"f\": 0, \"d\": [48,2407,97] },\n\t\t\t\t\t{ \"px\": [224,304], \"src\": [64,48], \"f\": 0, \"d\": [48,2408,100] },\n\t\t\t\t\t{ \"px\": [240,304], \"src\": [16,48], \"f\": 0, \"d\": [48,2409,97] },\n\t\t\t\t\t{ \"px\": [256,304], \"src\": [32,48], \"f\": 0, \"d\": [48,2410,98] },\n\t\t\t\t\t{ \"px\": [272,304], \"src\": [16,48], \"f\": 0, \"d\": [48,2411,97] },\n\t\t\t\t\t{ \"px\": [288,304], \"src\": [48,48], \"f\": 0, \"d\": [48,2412,99] },\n\t\t\t\t\t{ \"px\": [304,304], \"src\": [16,48], \"f\": 0, \"d\": [48,2413,97] },\n\t\t\t\t\t{ \"px\": [320,304], \"src\": [48,48], \"f\": 0, \"d\": [48,2414,99] },\n\t\t\t\t\t{ \"px\": [336,304], \"src\": [48,48], \"f\": 0, \"d\": [48,2415,99] },\n\t\t\t\t\t{ \"px\": [352,304], \"src\": [32,48], \"f\": 0, \"d\": [48,2416,98] },\n\t\t\t\t\t{ \"px\": [368,304], \"src\": [48,48], \"f\": 0, \"d\": [48,2417,99] },\n\t\t\t\t\t{ \"px\": [384,304], \"src\": [48,48], \"f\": 0, \"d\": [48,2418,99] },\n\t\t\t\t\t{ \"px\": [1824,304], \"src\": [32,48], \"f\": 0, \"d\": [48,2508,98] },\n\t\t\t\t\t{ \"px\": [1840,304], \"src\": [32,48], \"f\": 0, \"d\": [48,2509,98] },\n\t\t\t\t\t{ \"px\": [1856,304], \"src\": [64,48], \"f\": 0, \"d\": [48,2510,100] },\n\t\t\t\t\t{ \"px\": [592,320], \"src\": [64,48], \"f\": 0, \"d\": [48,2557,100] },\n\t\t\t\t\t{ \"px\": [608,320], \"src\": [16,48], \"f\": 0, \"d\": [48,2558,97] },\n\t\t\t\t\t{ \"px\": [624,320], \"src\": [48,48], \"f\": 0, \"d\": [48,2559,99] },\n\t\t\t\t\t{ \"px\": [640,320], \"src\": [32,48], \"f\": 0, \"d\": [48,2560,98] },\n\t\t\t\t\t{ \"px\": [1680,320], \"src\": [16,48], \"f\": 0, \"d\": [48,2625,97] },\n\t\t\t\t\t{ \"px\": [1696,320], \"src\": [32,48], \"f\": 0, \"d\": [48,2626,98] },\n\t\t\t\t\t{ \"px\": [1712,320], \"src\": [32,48], \"f\": 0, \"d\": [48,2627,98] },\n\t\t\t\t\t{ \"px\": [1728,320], \"src\": [64,48], \"f\": 0, \"d\": [48,2628,100] },\n\t\t\t\t\t{ \"px\": [1744,320], \"src\": [32,48], \"f\": 0, \"d\": [48,2629,98] },\n\t\t\t\t\t{ \"px\": [1760,320], \"src\": [16,48], \"f\": 0, \"d\": [48,2630,97] },\n\t\t\t\t\t{ \"px\": [1776,320], \"src\": [16,48], \"f\": 0, \"d\": [48,2631,97] },\n\t\t\t\t\t{ \"px\": [1792,320], \"src\": [32,48], \"f\": 0, \"d\": [48,2632,98] },\n\t\t\t\t\t{ \"px\": [1808,320], \"src\": [48,48], \"f\": 0, \"d\": [48,2633,99] },\n\t\t\t\t\t{ \"px\": [656,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2813,100] },\n\t\t\t\t\t{ \"px\": [672,352], \"src\": [32,48], \"f\": 0, \"d\": [48,2814,98] },\n\t\t\t\t\t{ \"px\": [688,352], \"src\": [32,48], \"f\": 0, \"d\": [48,2815,98] },\n\t\t\t\t\t{ \"px\": [704,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2816,100] },\n\t\t\t\t\t{ \"px\": [720,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2817,97] },\n\t\t\t\t\t{ \"px\": [736,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2818,97] },\n\t\t\t\t\t{ \"px\": [752,352], \"src\": [32,48], \"f\": 0, \"d\": [48,2819,98] },\n\t\t\t\t\t{ \"px\": [768,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2820,100] },\n\t\t\t\t\t{ \"px\": [1232,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2849,99] },\n\t\t\t\t\t{ \"px\": [1248,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2850,97] },\n\t\t\t\t\t{ \"px\": [1264,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2851,99] },\n\t\t\t\t\t{ \"px\": [1280,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2852,100] },\n\t\t\t\t\t{ \"px\": [1296,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2853,99] },\n\t\t\t\t\t{ \"px\": [1312,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2854,97] },\n\t\t\t\t\t{ \"px\": [1328,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2855,99] },\n\t\t\t\t\t{ \"px\": [1344,352], \"src\": [32,48], \"f\": 0, \"d\": [48,2856,98] },\n\t\t\t\t\t{ \"px\": [1360,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2857,100] },\n\t\t\t\t\t{ \"px\": [1376,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2858,100] },\n\t\t\t\t\t{ \"px\": [1392,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2859,97] },\n\t\t\t\t\t{ \"px\": [1408,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2860,99] },\n\t\t\t\t\t{ \"px\": [1424,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2861,99] },\n\t\t\t\t\t{ \"px\": [1440,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2862,97] },\n\t\t\t\t\t{ \"px\": [1456,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2863,100] },\n\t\t\t\t\t{ \"px\": [1472,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2864,99] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2865,97] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2866,99] },\n\t\t\t\t\t{ \"px\": [1520,352], \"src\": [32,48], \"f\": 0, \"d\": [48,2867,98] },\n\t\t\t\t\t{ \"px\": [1536,352], \"src\": [48,48], \"f\": 0, \"d\": [48,2868,99] },\n\t\t\t\t\t{ \"px\": [1552,352], \"src\": [16,48], \"f\": 0, \"d\": [48,2869,97] },\n\t\t\t\t\t{ \"px\": [1568,352], \"src\": [64,48], \"f\": 0, \"d\": [48,2870,100] },\n\t\t\t\t\t{ \"px\": [784,368], \"src\": [32,48], \"f\": 0, \"d\": [48,2947,98] },\n\t\t\t\t\t{ \"px\": [800,368], \"src\": [48,48], \"f\": 0, \"d\": [48,2948,99] },\n\t\t\t\t\t{ \"px\": [816,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2949,97] },\n\t\t\t\t\t{ \"px\": [832,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2950,100] },\n\t\t\t\t\t{ \"px\": [848,368], \"src\": [48,48], \"f\": 0, \"d\": [48,2951,99] },\n\t\t\t\t\t{ \"px\": [864,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2952,97] },\n\t\t\t\t\t{ \"px\": [880,368], \"src\": [48,48], \"f\": 0, \"d\": [48,2953,99] },\n\t\t\t\t\t{ \"px\": [896,368], \"src\": [32,48], \"f\": 0, \"d\": [48,2954,98] },\n\t\t\t\t\t{ \"px\": [912,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2955,97] },\n\t\t\t\t\t{ \"px\": [928,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2956,100] },\n\t\t\t\t\t{ \"px\": [944,368], \"src\": [32,48], \"f\": 0, \"d\": [48,2957,98] },\n\t\t\t\t\t{ \"px\": [960,368], \"src\": [48,48], \"f\": 0, \"d\": [48,2958,99] },\n\t\t\t\t\t{ \"px\": [976,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2959,100] },\n\t\t\t\t\t{ \"px\": [992,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2960,97] },\n\t\t\t\t\t{ \"px\": [1008,368], \"src\": [48,48], \"f\": 0, \"d\": [48,2961,99] },\n\t\t\t\t\t{ \"px\": [1024,368], \"src\": [32,48], \"f\": 0, \"d\": [48,2962,98] },\n\t\t\t\t\t{ \"px\": [1040,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2963,97] },\n\t\t\t\t\t{ \"px\": [1056,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2964,100] },\n\t\t\t\t\t{ \"px\": [1072,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2965,100] },\n\t\t\t\t\t{ \"px\": [1088,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2966,97] },\n\t\t\t\t\t{ \"px\": [1104,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2967,97] },\n\t\t\t\t\t{ \"px\": [1120,368], \"src\": [32,48], \"f\": 0, \"d\": [48,2968,98] },\n\t\t\t\t\t{ \"px\": [1136,368], \"src\": [48,48], \"f\": 0, \"d\": [48,2969,99] },\n\t\t\t\t\t{ \"px\": [1152,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2970,100] },\n\t\t\t\t\t{ \"px\": [1168,368], \"src\": [32,48], \"f\": 0, \"d\": [48,2971,98] },\n\t\t\t\t\t{ \"px\": [1184,368], \"src\": [64,48], \"f\": 0, \"d\": [48,2972,100] },\n\t\t\t\t\t{ \"px\": [1200,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2973,97] },\n\t\t\t\t\t{ \"px\": [1216,368], \"src\": [16,48], \"f\": 0, \"d\": [48,2974,97] },\n\t\t\t\t\t{ \"px\": [1616,32], \"src\": [144,48], \"f\": 0, \"d\": [57,353,105] },\n\t\t\t\t\t{ \"px\": [400,144], \"src\": [128,48], \"f\": 0, \"d\": [57,1159,104] },\n\t\t\t\t\t{ \"px\": [528,144], \"src\": [144,48], \"f\": 0, \"d\": [57,1167,105] },\n\t\t\t\t\t{ \"px\": [544,144], \"src\": [144,48], \"f\": 0, \"d\": [57,1168,105] },\n\t\t\t\t\t{ \"px\": [608,144], \"src\": [112,48], \"f\": 0, \"d\": [57,1172,103] },\n\t\t\t\t\t{ \"px\": [736,144], \"src\": [144,48], \"f\": 0, \"d\": [57,1180,105] },\n\t\t\t\t\t{ \"px\": [1760,160], \"src\": [128,48], \"f\": 0, \"d\": [57,1370,104] },\n\t\t\t\t\t{ \"px\": [784,208], \"src\": [80,48], \"f\": 0, \"d\": [57,1687,101] },\n\t\t\t\t\t{ \"px\": [80,272], \"src\": [96,48], \"f\": 0, \"d\": [57,2147,102] },\n\t\t\t\t\t{ \"px\": [112,272], \"src\": [144,48], \"f\": 0, \"d\": [57,2149,105] },\n\t\t\t\t\t{ \"px\": [528,288], \"src\": [80,48], \"f\": 0, \"d\": [57,2301,101] },\n\t\t\t\t\t{ \"px\": [272,304], \"src\": [96,48], \"f\": 0, \"d\": [57,2411,102] },\n\t\t\t\t\t{ \"px\": [304,304], \"src\": [128,48], \"f\": 0, \"d\": [57,2413,104] },\n\t\t\t\t\t{ \"px\": [336,304], \"src\": [144,48], \"f\": 0, \"d\": [57,2415,105] },\n\t\t\t\t\t{ \"px\": [1808,320], \"src\": [144,48], \"f\": 0, \"d\": [57,2633,105] },\n\t\t\t\t\t{ \"px\": [752,352], \"src\": [112,48], \"f\": 0, \"d\": [57,2819,103] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [96,48], \"f\": 0, \"d\": [57,2865,102] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [144,48], \"f\": 0, \"d\": [57,2866,105] },\n\t\t\t\t\t{ \"px\": [1008,368], \"src\": [96,48], \"f\": 0, \"d\": [57,2961,102] },\n\t\t\t\t\t{ \"px\": [1584,32], \"src\": [96,32], \"f\": 0, \"d\": [61,351,70] },\n\t\t\t\t\t{ \"px\": [1616,32], \"src\": [128,32], \"f\": 0, \"d\": [61,353,72] },\n\t\t\t\t\t{ \"px\": [1632,32], \"src\": [80,32], \"f\": 0, \"d\": [61,354,69] },\n\t\t\t\t\t{ \"px\": [112,144], \"src\": [80,32], \"f\": 0, \"d\": [61,1141,69] },\n\t\t\t\t\t{ \"px\": [448,144], \"src\": [80,32], \"f\": 0, \"d\": [61,1162,69] },\n\t\t\t\t\t{ \"px\": [480,144], \"src\": [144,32], \"f\": 0, \"d\": [61,1164,73] },\n\t\t\t\t\t{ \"px\": [528,144], \"src\": [144,32], \"f\": 0, \"d\": [61,1167,73] },\n\t\t\t\t\t{ \"px\": [560,144], \"src\": [144,32], \"f\": 0, \"d\": [61,1169,73] },\n\t\t\t\t\t{ \"px\": [576,144], \"src\": [112,32], \"f\": 0, \"d\": [61,1170,71] },\n\t\t\t\t\t{ \"px\": [608,144], \"src\": [128,32], \"f\": 0, \"d\": [61,1172,72] },\n\t\t\t\t\t{ \"px\": [704,144], \"src\": [112,32], \"f\": 0, \"d\": [61,1178,71] },\n\t\t\t\t\t{ \"px\": [1760,160], \"src\": [128,32], \"f\": 0, \"d\": [61,1370,72] },\n\t\t\t\t\t{ \"px\": [112,272], \"src\": [112,32], \"f\": 0, \"d\": [61,2149,71] },\n\t\t\t\t\t{ \"px\": [128,272], \"src\": [96,32], \"f\": 0, \"d\": [61,2150,70] },\n\t\t\t\t\t{ \"px\": [448,272], \"src\": [112,32], \"f\": 0, \"d\": [61,2170,71] },\n\t\t\t\t\t{ \"px\": [1600,288], \"src\": [128,32], \"f\": 0, \"d\": [61,2368,72] },\n\t\t\t\t\t{ \"px\": [1632,288], \"src\": [128,32], \"f\": 0, \"d\": [61,2370,72] },\n\t\t\t\t\t{ \"px\": [192,304], \"src\": [128,32], \"f\": 0, \"d\": [61,2406,72] },\n\t\t\t\t\t{ \"px\": [256,304], \"src\": [128,32], \"f\": 0, \"d\": [61,2410,72] },\n\t\t\t\t\t{ \"px\": [272,304], \"src\": [80,32], \"f\": 0, \"d\": [61,2411,69] },\n\t\t\t\t\t{ \"px\": [288,304], \"src\": [112,32], \"f\": 0, \"d\": [61,2412,71] },\n\t\t\t\t\t{ \"px\": [336,304], \"src\": [80,32], \"f\": 0, \"d\": [61,2415,69] },\n\t\t\t\t\t{ \"px\": [352,304], \"src\": [128,32], \"f\": 0, \"d\": [61,2416,72] },\n\t\t\t\t\t{ \"px\": [368,304], \"src\": [96,32], \"f\": 0, \"d\": [61,2417,70] },\n\t\t\t\t\t{ \"px\": [1728,320], \"src\": [80,32], \"f\": 0, \"d\": [61,2628,69] },\n\t\t\t\t\t{ \"px\": [672,352], \"src\": [80,32], \"f\": 0, \"d\": [61,2814,69] },\n\t\t\t\t\t{ \"px\": [736,352], \"src\": [80,32], \"f\": 0, \"d\": [61,2818,69] },\n\t\t\t\t\t{ \"px\": [752,352], \"src\": [128,32], \"f\": 0, \"d\": [61,2819,72] },\n\t\t\t\t\t{ \"px\": [1248,352], \"src\": [112,32], \"f\": 0, \"d\": [61,2850,71] },\n\t\t\t\t\t{ \"px\": [1472,352], \"src\": [96,32], \"f\": 0, \"d\": [61,2864,70] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [96,32], \"f\": 0, \"d\": [61,2866,70] },\n\t\t\t\t\t{ \"px\": [1552,352], \"src\": [112,32], \"f\": 0, \"d\": [61,2869,71] },\n\t\t\t\t\t{ \"px\": [800,368], \"src\": [80,32], \"f\": 0, \"d\": [61,2948,69] },\n\t\t\t\t\t{ \"px\": [864,368], \"src\": [144,32], \"f\": 0, \"d\": [61,2952,73] },\n\t\t\t\t\t{ \"px\": [880,368], \"src\": [112,32], \"f\": 0, \"d\": [61,2953,71] },\n\t\t\t\t\t{ \"px\": [944,368], \"src\": [128,32], \"f\": 0, \"d\": [61,2957,72] },\n\t\t\t\t\t{ \"px\": [960,368], \"src\": [128,32], \"f\": 0, \"d\": [61,2958,72] },\n\t\t\t\t\t{ \"px\": [1088,368], \"src\": [144,32], \"f\": 0, \"d\": [61,2966,73] },\n\t\t\t\t\t{ \"px\": [1152,368], \"src\": [128,32], \"f\": 0, \"d\": [61,2970,72] },\n\t\t\t\t\t{ \"px\": [1528,160], \"src\": [384,64], \"f\": 0, \"d\": [109,1610,152] },\n\t\t\t\t\t{ \"px\": [1528,176], \"src\": [384,80], \"f\": 0, \"d\": [109,1610,184] },\n\t\t\t\t\t{ \"px\": [1528,192], \"src\": [384,96], \"f\": 0, \"d\": [109,1610,216] },\n\t\t\t\t\t{ \"px\": [1528,208], \"src\": [384,112], \"f\": 0, \"d\": [109,1610,248] },\n\t\t\t\t\t{ \"px\": [1528,224], \"src\": [384,128], \"f\": 0, \"d\": [109,1610,280] },\n\t\t\t\t\t{ \"px\": [1544,160], \"src\": [400,64], \"f\": 0, \"d\": [109,1610,153] },\n\t\t\t\t\t{ \"px\": [1544,176], \"src\": [400,80], \"f\": 0, \"d\": [109,1610,185] },\n\t\t\t\t\t{ \"px\": [1544,192], \"src\": [400,96], \"f\": 0, \"d\": [109,1610,217] },\n\t\t\t\t\t{ \"px\": [1544,208], \"src\": [400,112], \"f\": 0, \"d\": [109,1610,249] },\n\t\t\t\t\t{ \"px\": [1544,224], \"src\": [400,128], \"f\": 0, \"d\": [109,1610,281] },\n\t\t\t\t\t{ \"px\": [1560,160], \"src\": [416,64], \"f\": 0, \"d\": [109,1610,154] },\n\t\t\t\t\t{ \"px\": [1560,176], \"src\": [416,80], \"f\": 0, \"d\": [109,1610,186] },\n\t\t\t\t\t{ \"px\": [1560,192], \"src\": [416,96], \"f\": 0, \"d\": [109,1610,218] },\n\t\t\t\t\t{ \"px\": [1560,208], \"src\": [416,112], \"f\": 0, \"d\": [109,1610,250] },\n\t\t\t\t\t{ \"px\": [1560,224], \"src\": [416,128], \"f\": 0, \"d\": [109,1610,282] },\n\t\t\t\t\t{ \"px\": [1576,160], \"src\": [432,64], \"f\": 0, \"d\": [109,1610,155] },\n\t\t\t\t\t{ \"px\": [1576,176], \"src\": [432,80], \"f\": 0, \"d\": [109,1610,187] },\n\t\t\t\t\t{ \"px\": [1576,192], \"src\": [432,96], \"f\": 0, \"d\": [109,1610,219] },\n\t\t\t\t\t{ \"px\": [1576,208], \"src\": [432,112], \"f\": 0, \"d\": [109,1610,251] },\n\t\t\t\t\t{ \"px\": [1576,224], \"src\": [432,128], \"f\": 0, \"d\": [109,1610,283] },\n\t\t\t\t\t{ \"px\": [1592,160], \"src\": [448,64], \"f\": 0, \"d\": [109,1610,156] },\n\t\t\t\t\t{ \"px\": [1592,176], \"src\": [448,80], \"f\": 0, \"d\": [109,1610,188] },\n\t\t\t\t\t{ \"px\": [1592,192], \"src\": [448,96], \"f\": 0, \"d\": [109,1610,220] },\n\t\t\t\t\t{ \"px\": [1592,208], \"src\": [448,112], \"f\": 0, \"d\": [109,1610,252] },\n\t\t\t\t\t{ \"px\": [1592,224], \"src\": [448,128], \"f\": 0, \"d\": [109,1610,284] },\n\t\t\t\t\t{ \"px\": [1608,160], \"src\": [464,64], \"f\": 0, \"d\": [109,1610,157] },\n\t\t\t\t\t{ \"px\": [1608,176], \"src\": [464,80], \"f\": 0, \"d\": [109,1610,189] },\n\t\t\t\t\t{ \"px\": [1608,192], \"src\": [464,96], \"f\": 0, \"d\": [109,1610,221] },\n\t\t\t\t\t{ \"px\": [1608,208], \"src\": [464,112], \"f\": 0, \"d\": [109,1610,253] },\n\t\t\t\t\t{ \"px\": [1608,224], \"src\": [464,128], \"f\": 0, \"d\": [109,1610,285] },\n\t\t\t\t\t{ \"px\": [1576,160], \"src\": [384,64], \"f\": 0, \"d\": [109,1613,152] },\n\t\t\t\t\t{ \"px\": [1576,176], \"src\": [384,80], \"f\": 0, \"d\": [109,1613,184] },\n\t\t\t\t\t{ \"px\": [1576,192], \"src\": [384,96], \"f\": 0, \"d\": [109,1613,216] },\n\t\t\t\t\t{ \"px\": [1576,208], \"src\": [384,112], \"f\": 0, \"d\": [109,1613,248] },\n\t\t\t\t\t{ \"px\": [1576,224], \"src\": [384,128], \"f\": 0, \"d\": [109,1613,280] },\n\t\t\t\t\t{ \"px\": [1592,160], \"src\": [400,64], \"f\": 0, \"d\": [109,1613,153] },\n\t\t\t\t\t{ \"px\": [1592,176], \"src\": [400,80], \"f\": 0, \"d\": [109,1613,185] },\n\t\t\t\t\t{ \"px\": [1592,192], \"src\": [400,96], \"f\": 0, \"d\": [109,1613,217] },\n\t\t\t\t\t{ \"px\": [1592,208], \"src\": [400,112], \"f\": 0, \"d\": [109,1613,249] },\n\t\t\t\t\t{ \"px\": [1592,224], \"src\": [400,128], \"f\": 0, \"d\": [109,1613,281] },\n\t\t\t\t\t{ \"px\": [1608,160], \"src\": [416,64], \"f\": 0, \"d\": [109,1613,154] },\n\t\t\t\t\t{ \"px\": [1608,176], \"src\": [416,80], \"f\": 0, \"d\": [109,1613,186] },\n\t\t\t\t\t{ \"px\": [1608,192], \"src\": [416,96], \"f\": 0, \"d\": [109,1613,218] },\n\t\t\t\t\t{ \"px\": [1608,208], \"src\": [416,112], \"f\": 0, \"d\": [109,1613,250] },\n\t\t\t\t\t{ \"px\": [1608,224], \"src\": [416,128], \"f\": 0, \"d\": [109,1613,282] },\n\t\t\t\t\t{ \"px\": [1624,160], \"src\": [432,64], \"f\": 0, \"d\": [109,1613,155] },\n\t\t\t\t\t{ \"px\": [1624,176], \"src\": [432,80], \"f\": 0, \"d\": [109,1613,187] },\n\t\t\t\t\t{ \"px\": [1624,192], \"src\": [432,96], \"f\": 0, \"d\": [109,1613,219] },\n\t\t\t\t\t{ \"px\": [1624,208], \"src\": [432,112], \"f\": 0, \"d\": [109,1613,251] },\n\t\t\t\t\t{ \"px\": [1624,224], \"src\": [432,128], \"f\": 0, \"d\": [109,1613,283] },\n\t\t\t\t\t{ \"px\": [1640,160], \"src\": [448,64], \"f\": 0, \"d\": [109,1613,156] },\n\t\t\t\t\t{ \"px\": [1640,176], \"src\": [448,80], \"f\": 0, \"d\": [109,1613,188] },\n\t\t\t\t\t{ \"px\": [1640,192], \"src\": [448,96], \"f\": 0, \"d\": [109,1613,220] },\n\t\t\t\t\t{ \"px\": [1640,208], \"src\": [448,112], \"f\": 0, \"d\": [109,1613,252] },\n\t\t\t\t\t{ \"px\": [1640,224], \"src\": [448,128], \"f\": 0, \"d\": [109,1613,284] },\n\t\t\t\t\t{ \"px\": [1656,160], \"src\": [464,64], \"f\": 0, \"d\": [109,1613,157] },\n\t\t\t\t\t{ \"px\": [1656,176], \"src\": [464,80], \"f\": 0, \"d\": [109,1613,189] },\n\t\t\t\t\t{ \"px\": [1656,192], \"src\": [464,96], \"f\": 0, \"d\": [109,1613,221] },\n\t\t\t\t\t{ \"px\": [1656,208], \"src\": [464,112], \"f\": 0, \"d\": [109,1613,253] },\n\t\t\t\t\t{ \"px\": [1656,224], \"src\": [464,128], \"f\": 0, \"d\": [109,1613,285] },\n\t\t\t\t\t{ \"px\": [1448,176], \"src\": [384,64], \"f\": 0, \"d\": [109,1731,152] },\n\t\t\t\t\t{ \"px\": [1448,192], \"src\": [384,80], \"f\": 0, \"d\": [109,1731,184] },\n\t\t\t\t\t{ \"px\": [1448,208], \"src\": [384,96], \"f\": 0, \"d\": [109,1731,216] },\n\t\t\t\t\t{ \"px\": [1448,224], \"src\": [384,112], \"f\": 0, \"d\": [109,1731,248] },\n\t\t\t\t\t{ \"px\": [1448,240], \"src\": [384,128], \"f\": 0, \"d\": [109,1731,280] },\n\t\t\t\t\t{ \"px\": [1464,176], \"src\": [400,64], \"f\": 0, \"d\": [109,1731,153] },\n\t\t\t\t\t{ \"px\": [1464,192], \"src\": [400,80], \"f\": 0, \"d\": [109,1731,185] },\n\t\t\t\t\t{ \"px\": [1464,208], \"src\": [400,96], \"f\": 0, \"d\": [109,1731,217] },\n\t\t\t\t\t{ \"px\": [1464,224], \"src\": [400,112], \"f\": 0, \"d\": [109,1731,249] },\n\t\t\t\t\t{ \"px\": [1464,240], \"src\": [400,128], \"f\": 0, \"d\": [109,1731,281] },\n\t\t\t\t\t{ \"px\": [1480,176], \"src\": [416,64], \"f\": 0, \"d\": [109,1731,154] },\n\t\t\t\t\t{ \"px\": [1480,192], \"src\": [416,80], \"f\": 0, \"d\": [109,1731,186] },\n\t\t\t\t\t{ \"px\": [1480,208], \"src\": [416,96], \"f\": 0, \"d\": [109,1731,218] },\n\t\t\t\t\t{ \"px\": [1480,224], \"src\": [416,112], \"f\": 0, \"d\": [109,1731,250] },\n\t\t\t\t\t{ \"px\": [1480,240], \"src\": [416,128], \"f\": 0, \"d\": [109,1731,282] },\n\t\t\t\t\t{ \"px\": [1496,176], \"src\": [432,64], \"f\": 0, \"d\": [109,1731,155] },\n\t\t\t\t\t{ \"px\": [1496,192], \"src\": [432,80], \"f\": 0, \"d\": [109,1731,187] },\n\t\t\t\t\t{ \"px\": [1496,208], \"src\": [432,96], \"f\": 0, \"d\": [109,1731,219] },\n\t\t\t\t\t{ \"px\": [1496,224], \"src\": [432,112], \"f\": 0, \"d\": [109,1731,251] },\n\t\t\t\t\t{ \"px\": [1496,240], \"src\": [432,128], \"f\": 0, \"d\": [109,1731,283] },\n\t\t\t\t\t{ \"px\": [1512,176], \"src\": [448,64], \"f\": 0, \"d\": [109,1731,156] },\n\t\t\t\t\t{ \"px\": [1512,192], \"src\": [448,80], \"f\": 0, \"d\": [109,1731,188] },\n\t\t\t\t\t{ \"px\": [1512,208], \"src\": [448,96], \"f\": 0, \"d\": [109,1731,220] },\n\t\t\t\t\t{ \"px\": [1512,224], \"src\": [448,112], \"f\": 0, \"d\": [109,1731,252] },\n\t\t\t\t\t{ \"px\": [1512,240], \"src\": [448,128], \"f\": 0, \"d\": [109,1731,284] },\n\t\t\t\t\t{ \"px\": [1528,176], \"src\": [464,64], \"f\": 0, \"d\": [109,1731,157] },\n\t\t\t\t\t{ \"px\": [1528,192], \"src\": [464,80], \"f\": 0, \"d\": [109,1731,189] },\n\t\t\t\t\t{ \"px\": [1528,208], \"src\": [464,96], \"f\": 0, \"d\": [109,1731,221] },\n\t\t\t\t\t{ \"px\": [1528,224], \"src\": [464,112], \"f\": 0, \"d\": [109,1731,253] },\n\t\t\t\t\t{ \"px\": [1528,240], \"src\": [464,128], \"f\": 0, \"d\": [109,1731,285] },\n\t\t\t\t\t{ \"px\": [232,192], \"src\": [384,64], \"f\": 0, \"d\": [109,1781,152] },\n\t\t\t\t\t{ \"px\": [232,208], \"src\": [384,80], \"f\": 0, \"d\": [109,1781,184] },\n\t\t\t\t\t{ \"px\": [232,224], \"src\": [384,96], \"f\": 0, \"d\": [109,1781,216] },\n\t\t\t\t\t{ \"px\": [232,240], \"src\": [384,112], \"f\": 0, \"d\": [109,1781,248] },\n\t\t\t\t\t{ \"px\": [232,256], \"src\": [384,128], \"f\": 0, \"d\": [109,1781,280] },\n\t\t\t\t\t{ \"px\": [248,192], \"src\": [400,64], \"f\": 0, \"d\": [109,1781,153] },\n\t\t\t\t\t{ \"px\": [248,208], \"src\": [400,80], \"f\": 0, \"d\": [109,1781,185] },\n\t\t\t\t\t{ \"px\": [248,224], \"src\": [400,96], \"f\": 0, \"d\": [109,1781,217] },\n\t\t\t\t\t{ \"px\": [248,240], \"src\": [400,112], \"f\": 0, \"d\": [109,1781,249] },\n\t\t\t\t\t{ \"px\": [248,256], \"src\": [400,128], \"f\": 0, \"d\": [109,1781,281] },\n\t\t\t\t\t{ \"px\": [264,192], \"src\": [416,64], \"f\": 0, \"d\": [109,1781,154] },\n\t\t\t\t\t{ \"px\": [264,208], \"src\": [416,80], \"f\": 0, \"d\": [109,1781,186] },\n\t\t\t\t\t{ \"px\": [264,224], \"src\": [416,96], \"f\": 0, \"d\": [109,1781,218] },\n\t\t\t\t\t{ \"px\": [264,240], \"src\": [416,112], \"f\": 0, \"d\": [109,1781,250] },\n\t\t\t\t\t{ \"px\": [264,256], \"src\": [416,128], \"f\": 0, \"d\": [109,1781,282] },\n\t\t\t\t\t{ \"px\": [280,192], \"src\": [432,64], \"f\": 0, \"d\": [109,1781,155] },\n\t\t\t\t\t{ \"px\": [280,208], \"src\": [432,80], \"f\": 0, \"d\": [109,1781,187] },\n\t\t\t\t\t{ \"px\": [280,224], \"src\": [432,96], \"f\": 0, \"d\": [109,1781,219] },\n\t\t\t\t\t{ \"px\": [280,240], \"src\": [432,112], \"f\": 0, \"d\": [109,1781,251] },\n\t\t\t\t\t{ \"px\": [280,256], \"src\": [432,128], \"f\": 0, \"d\": [109,1781,283] },\n\t\t\t\t\t{ \"px\": [296,192], \"src\": [448,64], \"f\": 0, \"d\": [109,1781,156] },\n\t\t\t\t\t{ \"px\": [296,208], \"src\": [448,80], \"f\": 0, \"d\": [109,1781,188] },\n\t\t\t\t\t{ \"px\": [296,224], \"src\": [448,96], \"f\": 0, \"d\": [109,1781,220] },\n\t\t\t\t\t{ \"px\": [296,240], \"src\": [448,112], \"f\": 0, \"d\": [109,1781,252] },\n\t\t\t\t\t{ \"px\": [296,256], \"src\": [448,128], \"f\": 0, \"d\": [109,1781,284] },\n\t\t\t\t\t{ \"px\": [312,192], \"src\": [464,64], \"f\": 0, \"d\": [109,1781,157] },\n\t\t\t\t\t{ \"px\": [312,208], \"src\": [464,80], \"f\": 0, \"d\": [109,1781,189] },\n\t\t\t\t\t{ \"px\": [312,224], \"src\": [464,96], \"f\": 0, \"d\": [109,1781,221] },\n\t\t\t\t\t{ \"px\": [312,240], \"src\": [464,112], \"f\": 0, \"d\": [109,1781,253] },\n\t\t\t\t\t{ \"px\": [312,256], \"src\": [464,128], \"f\": 0, \"d\": [109,1781,285] },\n\t\t\t\t\t{ \"px\": [200,208], \"src\": [384,64], \"f\": 0, \"d\": [109,1905,152] },\n\t\t\t\t\t{ \"px\": [200,224], \"src\": [384,80], \"f\": 0, \"d\": [109,1905,184] },\n\t\t\t\t\t{ \"px\": [200,240], \"src\": [384,96], \"f\": 0, \"d\": [109,1905,216] },\n\t\t\t\t\t{ \"px\": [200,256], \"src\": [384,112], \"f\": 0, \"d\": [109,1905,248] },\n\t\t\t\t\t{ \"px\": [200,272], \"src\": [384,128], \"f\": 0, \"d\": [109,1905,280] },\n\t\t\t\t\t{ \"px\": [216,208], \"src\": [400,64], \"f\": 0, \"d\": [109,1905,153] },\n\t\t\t\t\t{ \"px\": [216,224], \"src\": [400,80], \"f\": 0, \"d\": [109,1905,185] },\n\t\t\t\t\t{ \"px\": [216,240], \"src\": [400,96], \"f\": 0, \"d\": [109,1905,217] },\n\t\t\t\t\t{ \"px\": [216,256], \"src\": [400,112], \"f\": 0, \"d\": [109,1905,249] },\n\t\t\t\t\t{ \"px\": [216,272], \"src\": [400,128], \"f\": 0, \"d\": [109,1905,281] },\n\t\t\t\t\t{ \"px\": [232,208], \"src\": [416,64], \"f\": 0, \"d\": [109,1905,154] },\n\t\t\t\t\t{ \"px\": [232,224], \"src\": [416,80], \"f\": 0, \"d\": [109,1905,186] },\n\t\t\t\t\t{ \"px\": [232,240], \"src\": [416,96], \"f\": 0, \"d\": [109,1905,218] },\n\t\t\t\t\t{ \"px\": [232,256], \"src\": [416,112], \"f\": 0, \"d\": [109,1905,250] },\n\t\t\t\t\t{ \"px\": [232,272], \"src\": [416,128], \"f\": 0, \"d\": [109,1905,282] },\n\t\t\t\t\t{ \"px\": [248,208], \"src\": [432,64], \"f\": 0, \"d\": [109,1905,155] },\n\t\t\t\t\t{ \"px\": [248,224], \"src\": [432,80], \"f\": 0, \"d\": [109,1905,187] },\n\t\t\t\t\t{ \"px\": [248,240], \"src\": [432,96], \"f\": 0, \"d\": [109,1905,219] },\n\t\t\t\t\t{ \"px\": [248,256], \"src\": [432,112], \"f\": 0, \"d\": [109,1905,251] },\n\t\t\t\t\t{ \"px\": [248,272], \"src\": [432,128], \"f\": 0, \"d\": [109,1905,283] },\n\t\t\t\t\t{ \"px\": [264,208], \"src\": [448,64], \"f\": 0, \"d\": [109,1905,156] },\n\t\t\t\t\t{ \"px\": [264,224], \"src\": [448,80], \"f\": 0, \"d\": [109,1905,188] },\n\t\t\t\t\t{ \"px\": [264,240], \"src\": [448,96], \"f\": 0, \"d\": [109,1905,220] },\n\t\t\t\t\t{ \"px\": [264,256], \"src\": [448,112], \"f\": 0, \"d\": [109,1905,252] },\n\t\t\t\t\t{ \"px\": [264,272], \"src\": [448,128], \"f\": 0, \"d\": [109,1905,284] },\n\t\t\t\t\t{ \"px\": [280,208], \"src\": [464,64], \"f\": 0, \"d\": [109,1905,157] },\n\t\t\t\t\t{ \"px\": [280,224], \"src\": [464,80], \"f\": 0, \"d\": [109,1905,189] },\n\t\t\t\t\t{ \"px\": [280,240], \"src\": [464,96], \"f\": 0, \"d\": [109,1905,221] },\n\t\t\t\t\t{ \"px\": [280,256], \"src\": [464,112], \"f\": 0, \"d\": [109,1905,253] },\n\t\t\t\t\t{ \"px\": [280,272], \"src\": [464,128], \"f\": 0, \"d\": [109,1905,285] },\n\t\t\t\t\t{ \"px\": [280,208], \"src\": [384,64], \"f\": 0, \"d\": [109,1910,152] },\n\t\t\t\t\t{ \"px\": [280,224], \"src\": [384,80], \"f\": 0, \"d\": [109,1910,184] },\n\t\t\t\t\t{ \"px\": [280,240], \"src\": [384,96], \"f\": 0, \"d\": [109,1910,216] },\n\t\t\t\t\t{ \"px\": [280,256], \"src\": [384,112], \"f\": 0, \"d\": [109,1910,248] },\n\t\t\t\t\t{ \"px\": [280,272], \"src\": [384,128], \"f\": 0, \"d\": [109,1910,280] },\n\t\t\t\t\t{ \"px\": [296,208], \"src\": [400,64], \"f\": 0, \"d\": [109,1910,153] },\n\t\t\t\t\t{ \"px\": [296,224], \"src\": [400,80], \"f\": 0, \"d\": [109,1910,185] },\n\t\t\t\t\t{ \"px\": [296,240], \"src\": [400,96], \"f\": 0, \"d\": [109,1910,217] },\n\t\t\t\t\t{ \"px\": [296,256], \"src\": [400,112], \"f\": 0, \"d\": [109,1910,249] },\n\t\t\t\t\t{ \"px\": [296,272], \"src\": [400,128], \"f\": 0, \"d\": [109,1910,281] },\n\t\t\t\t\t{ \"px\": [312,208], \"src\": [416,64], \"f\": 0, \"d\": [109,1910,154] },\n\t\t\t\t\t{ \"px\": [312,224], \"src\": [416,80], \"f\": 0, \"d\": [109,1910,186] },\n\t\t\t\t\t{ \"px\": [312,240], \"src\": [416,96], \"f\": 0, \"d\": [109,1910,218] },\n\t\t\t\t\t{ \"px\": [312,256], \"src\": [416,112], \"f\": 0, \"d\": [109,1910,250] },\n\t\t\t\t\t{ \"px\": [312,272], \"src\": [416,128], \"f\": 0, \"d\": [109,1910,282] },\n\t\t\t\t\t{ \"px\": [328,208], \"src\": [432,64], \"f\": 0, \"d\": [109,1910,155] },\n\t\t\t\t\t{ \"px\": [328,224], \"src\": [432,80], \"f\": 0, \"d\": [109,1910,187] },\n\t\t\t\t\t{ \"px\": [328,240], \"src\": [432,96], \"f\": 0, \"d\": [109,1910,219] },\n\t\t\t\t\t{ \"px\": [328,256], \"src\": [432,112], \"f\": 0, \"d\": [109,1910,251] },\n\t\t\t\t\t{ \"px\": [328,272], \"src\": [432,128], \"f\": 0, \"d\": [109,1910,283] },\n\t\t\t\t\t{ \"px\": [344,208], \"src\": [448,64], \"f\": 0, \"d\": [109,1910,156] },\n\t\t\t\t\t{ \"px\": [344,224], \"src\": [448,80], \"f\": 0, \"d\": [109,1910,188] },\n\t\t\t\t\t{ \"px\": [344,240], \"src\": [448,96], \"f\": 0, \"d\": [109,1910,220] },\n\t\t\t\t\t{ \"px\": [344,256], \"src\": [448,112], \"f\": 0, \"d\": [109,1910,252] },\n\t\t\t\t\t{ \"px\": [344,272], \"src\": [448,128], \"f\": 0, \"d\": [109,1910,284] },\n\t\t\t\t\t{ \"px\": [360,208], \"src\": [464,64], \"f\": 0, \"d\": [109,1910,157] },\n\t\t\t\t\t{ \"px\": [360,224], \"src\": [464,80], \"f\": 0, \"d\": [109,1910,189] },\n\t\t\t\t\t{ \"px\": [360,240], \"src\": [464,96], \"f\": 0, \"d\": [109,1910,221] },\n\t\t\t\t\t{ \"px\": [360,256], \"src\": [464,112], \"f\": 0, \"d\": [109,1910,253] },\n\t\t\t\t\t{ \"px\": [360,272], \"src\": [464,128], \"f\": 0, \"d\": [109,1910,285] },\n\t\t\t\t\t{ \"px\": [952,208], \"src\": [384,64], \"f\": 0, \"d\": [109,1952,152] },\n\t\t\t\t\t{ \"px\": [952,224], \"src\": [384,80], \"f\": 0, \"d\": [109,1952,184] },\n\t\t\t\t\t{ \"px\": [952,240], \"src\": [384,96], \"f\": 0, \"d\": [109,1952,216] },\n\t\t\t\t\t{ \"px\": [952,256], \"src\": [384,112], \"f\": 0, \"d\": [109,1952,248] },\n\t\t\t\t\t{ \"px\": [952,272], \"src\": [384,128], \"f\": 0, \"d\": [109,1952,280] },\n\t\t\t\t\t{ \"px\": [968,208], \"src\": [400,64], \"f\": 0, \"d\": [109,1952,153] },\n\t\t\t\t\t{ \"px\": [968,224], \"src\": [400,80], \"f\": 0, \"d\": [109,1952,185] },\n\t\t\t\t\t{ \"px\": [968,240], \"src\": [400,96], \"f\": 0, \"d\": [109,1952,217] },\n\t\t\t\t\t{ \"px\": [968,256], \"src\": [400,112], \"f\": 0, \"d\": [109,1952,249] },\n\t\t\t\t\t{ \"px\": [968,272], \"src\": [400,128], \"f\": 0, \"d\": [109,1952,281] },\n\t\t\t\t\t{ \"px\": [984,208], \"src\": [416,64], \"f\": 0, \"d\": [109,1952,154] },\n\t\t\t\t\t{ \"px\": [984,224], \"src\": [416,80], \"f\": 0, \"d\": [109,1952,186] },\n\t\t\t\t\t{ \"px\": [984,240], \"src\": [416,96], \"f\": 0, \"d\": [109,1952,218] },\n\t\t\t\t\t{ \"px\": [984,256], \"src\": [416,112], \"f\": 0, \"d\": [109,1952,250] },\n\t\t\t\t\t{ \"px\": [984,272], \"src\": [416,128], \"f\": 0, \"d\": [109,1952,282] },\n\t\t\t\t\t{ \"px\": [1000,208], \"src\": [432,64], \"f\": 0, \"d\": [109,1952,155] },\n\t\t\t\t\t{ \"px\": [1000,224], \"src\": [432,80], \"f\": 0, \"d\": [109,1952,187] },\n\t\t\t\t\t{ \"px\": [1000,240], \"src\": [432,96], \"f\": 0, \"d\": [109,1952,219] },\n\t\t\t\t\t{ \"px\": [1000,256], \"src\": [432,112], \"f\": 0, \"d\": [109,1952,251] },\n\t\t\t\t\t{ \"px\": [1000,272], \"src\": [432,128], \"f\": 0, \"d\": [109,1952,283] },\n\t\t\t\t\t{ \"px\": [1016,208], \"src\": [448,64], \"f\": 0, \"d\": [109,1952,156] },\n\t\t\t\t\t{ \"px\": [1016,224], \"src\": [448,80], \"f\": 0, \"d\": [109,1952,188] },\n\t\t\t\t\t{ \"px\": [1016,240], \"src\": [448,96], \"f\": 0, \"d\": [109,1952,220] },\n\t\t\t\t\t{ \"px\": [1016,256], \"src\": [448,112], \"f\": 0, \"d\": [109,1952,252] },\n\t\t\t\t\t{ \"px\": [1016,272], \"src\": [448,128], \"f\": 0, \"d\": [109,1952,284] },\n\t\t\t\t\t{ \"px\": [1032,208], \"src\": [464,64], \"f\": 0, \"d\": [109,1952,157] },\n\t\t\t\t\t{ \"px\": [1032,224], \"src\": [464,80], \"f\": 0, \"d\": [109,1952,189] },\n\t\t\t\t\t{ \"px\": [1032,240], \"src\": [464,96], \"f\": 0, \"d\": [109,1952,221] },\n\t\t\t\t\t{ \"px\": [1032,256], \"src\": [464,112], \"f\": 0, \"d\": [109,1952,253] },\n\t\t\t\t\t{ \"px\": [1032,272], \"src\": [464,128], \"f\": 0, \"d\": [109,1952,285] },\n\t\t\t\t\t{ \"px\": [1496,208], \"src\": [384,64], \"f\": 0, \"d\": [109,1986,152] },\n\t\t\t\t\t{ \"px\": [1496,224], \"src\": [384,80], \"f\": 0, \"d\": [109,1986,184] },\n\t\t\t\t\t{ \"px\": [1496,240], \"src\": [384,96], \"f\": 0, \"d\": [109,1986,216] },\n\t\t\t\t\t{ \"px\": [1496,256], \"src\": [384,112], \"f\": 0, \"d\": [109,1986,248] },\n\t\t\t\t\t{ \"px\": [1496,272], \"src\": [384,128], \"f\": 0, \"d\": [109,1986,280] },\n\t\t\t\t\t{ \"px\": [1512,208], \"src\": [400,64], \"f\": 0, \"d\": [109,1986,153] },\n\t\t\t\t\t{ \"px\": [1512,224], \"src\": [400,80], \"f\": 0, \"d\": [109,1986,185] },\n\t\t\t\t\t{ \"px\": [1512,240], \"src\": [400,96], \"f\": 0, \"d\": [109,1986,217] },\n\t\t\t\t\t{ \"px\": [1512,256], \"src\": [400,112], \"f\": 0, \"d\": [109,1986,249] },\n\t\t\t\t\t{ \"px\": [1512,272], \"src\": [400,128], \"f\": 0, \"d\": [109,1986,281] },\n\t\t\t\t\t{ \"px\": [1528,208], \"src\": [416,64], \"f\": 0, \"d\": [109,1986,154] },\n\t\t\t\t\t{ \"px\": [1528,224], \"src\": [416,80], \"f\": 0, \"d\": [109,1986,186] },\n\t\t\t\t\t{ \"px\": [1528,240], \"src\": [416,96], \"f\": 0, \"d\": [109,1986,218] },\n\t\t\t\t\t{ \"px\": [1528,256], \"src\": [416,112], \"f\": 0, \"d\": [109,1986,250] },\n\t\t\t\t\t{ \"px\": [1528,272], \"src\": [416,128], \"f\": 0, \"d\": [109,1986,282] },\n\t\t\t\t\t{ \"px\": [1544,208], \"src\": [432,64], \"f\": 0, \"d\": [109,1986,155] },\n\t\t\t\t\t{ \"px\": [1544,224], \"src\": [432,80], \"f\": 0, \"d\": [109,1986,187] },\n\t\t\t\t\t{ \"px\": [1544,240], \"src\": [432,96], \"f\": 0, \"d\": [109,1986,219] },\n\t\t\t\t\t{ \"px\": [1544,256], \"src\": [432,112], \"f\": 0, \"d\": [109,1986,251] },\n\t\t\t\t\t{ \"px\": [1544,272], \"src\": [432,128], \"f\": 0, \"d\": [109,1986,283] },\n\t\t\t\t\t{ \"px\": [1560,208], \"src\": [448,64], \"f\": 0, \"d\": [109,1986,156] },\n\t\t\t\t\t{ \"px\": [1560,224], \"src\": [448,80], \"f\": 0, \"d\": [109,1986,188] },\n\t\t\t\t\t{ \"px\": [1560,240], \"src\": [448,96], \"f\": 0, \"d\": [109,1986,220] },\n\t\t\t\t\t{ \"px\": [1560,256], \"src\": [448,112], \"f\": 0, \"d\": [109,1986,252] },\n\t\t\t\t\t{ \"px\": [1560,272], \"src\": [448,128], \"f\": 0, \"d\": [109,1986,284] },\n\t\t\t\t\t{ \"px\": [1576,208], \"src\": [464,64], \"f\": 0, \"d\": [109,1986,157] },\n\t\t\t\t\t{ \"px\": [1576,224], \"src\": [464,80], \"f\": 0, \"d\": [109,1986,189] },\n\t\t\t\t\t{ \"px\": [1576,240], \"src\": [464,96], \"f\": 0, \"d\": [109,1986,221] },\n\t\t\t\t\t{ \"px\": [1576,256], \"src\": [464,112], \"f\": 0, \"d\": [109,1986,253] },\n\t\t\t\t\t{ \"px\": [1576,272], \"src\": [464,128], \"f\": 0, \"d\": [109,1986,285] },\n\t\t\t\t\t{ \"px\": [248,224], \"src\": [384,64], \"f\": 0, \"d\": [109,2034,152] },\n\t\t\t\t\t{ \"px\": [248,240], \"src\": [384,80], \"f\": 0, \"d\": [109,2034,184] },\n\t\t\t\t\t{ \"px\": [248,256], \"src\": [384,96], \"f\": 0, \"d\": [109,2034,216] },\n\t\t\t\t\t{ \"px\": [248,272], \"src\": [384,112], \"f\": 0, \"d\": [109,2034,248] },\n\t\t\t\t\t{ \"px\": [248,288], \"src\": [384,128], \"f\": 0, \"d\": [109,2034,280] },\n\t\t\t\t\t{ \"px\": [264,224], \"src\": [400,64], \"f\": 0, \"d\": [109,2034,153] },\n\t\t\t\t\t{ \"px\": [264,240], \"src\": [400,80], \"f\": 0, \"d\": [109,2034,185] },\n\t\t\t\t\t{ \"px\": [264,256], \"src\": [400,96], \"f\": 0, \"d\": [109,2034,217] },\n\t\t\t\t\t{ \"px\": [264,272], \"src\": [400,112], \"f\": 0, \"d\": [109,2034,249] },\n\t\t\t\t\t{ \"px\": [264,288], \"src\": [400,128], \"f\": 0, \"d\": [109,2034,281] },\n\t\t\t\t\t{ \"px\": [280,224], \"src\": [416,64], \"f\": 0, \"d\": [109,2034,154] },\n\t\t\t\t\t{ \"px\": [280,240], \"src\": [416,80], \"f\": 0, \"d\": [109,2034,186] },\n\t\t\t\t\t{ \"px\": [280,256], \"src\": [416,96], \"f\": 0, \"d\": [109,2034,218] },\n\t\t\t\t\t{ \"px\": [280,272], \"src\": [416,112], \"f\": 0, \"d\": [109,2034,250] },\n\t\t\t\t\t{ \"px\": [280,288], \"src\": [416,128], \"f\": 0, \"d\": [109,2034,282] },\n\t\t\t\t\t{ \"px\": [296,224], \"src\": [432,64], \"f\": 0, \"d\": [109,2034,155] },\n\t\t\t\t\t{ \"px\": [296,240], \"src\": [432,80], \"f\": 0, \"d\": [109,2034,187] },\n\t\t\t\t\t{ \"px\": [296,256], \"src\": [432,96], \"f\": 0, \"d\": [109,2034,219] },\n\t\t\t\t\t{ \"px\": [296,272], \"src\": [432,112], \"f\": 0, \"d\": [109,2034,251] },\n\t\t\t\t\t{ \"px\": [296,288], \"src\": [432,128], \"f\": 0, \"d\": [109,2034,283] },\n\t\t\t\t\t{ \"px\": [312,224], \"src\": [448,64], \"f\": 0, \"d\": [109,2034,156] },\n\t\t\t\t\t{ \"px\": [312,240], \"src\": [448,80], \"f\": 0, \"d\": [109,2034,188] },\n\t\t\t\t\t{ \"px\": [312,256], \"src\": [448,96], \"f\": 0, \"d\": [109,2034,220] },\n\t\t\t\t\t{ \"px\": [312,272], \"src\": [448,112], \"f\": 0, \"d\": [109,2034,252] },\n\t\t\t\t\t{ \"px\": [312,288], \"src\": [448,128], \"f\": 0, \"d\": [109,2034,284] },\n\t\t\t\t\t{ \"px\": [328,224], \"src\": [464,64], \"f\": 0, \"d\": [109,2034,157] },\n\t\t\t\t\t{ \"px\": [328,240], \"src\": [464,80], \"f\": 0, \"d\": [109,2034,189] },\n\t\t\t\t\t{ \"px\": [328,256], \"src\": [464,96], \"f\": 0, \"d\": [109,2034,221] },\n\t\t\t\t\t{ \"px\": [328,272], \"src\": [464,112], \"f\": 0, \"d\": [109,2034,253] },\n\t\t\t\t\t{ \"px\": [328,288], \"src\": [464,128], \"f\": 0, \"d\": [109,2034,285] },\n\t\t\t\t\t{ \"px\": [1384,224], \"src\": [384,64], \"f\": 0, \"d\": [109,2105,152] },\n\t\t\t\t\t{ \"px\": [1384,240], \"src\": [384,80], \"f\": 0, \"d\": [109,2105,184] },\n\t\t\t\t\t{ \"px\": [1384,256], \"src\": [384,96], \"f\": 0, \"d\": [109,2105,216] },\n\t\t\t\t\t{ \"px\": [1384,272], \"src\": [384,112], \"f\": 0, \"d\": [109,2105,248] },\n\t\t\t\t\t{ \"px\": [1384,288], \"src\": [384,128], \"f\": 0, \"d\": [109,2105,280] },\n\t\t\t\t\t{ \"px\": [1400,224], \"src\": [400,64], \"f\": 0, \"d\": [109,2105,153] },\n\t\t\t\t\t{ \"px\": [1400,240], \"src\": [400,80], \"f\": 0, \"d\": [109,2105,185] },\n\t\t\t\t\t{ \"px\": [1400,256], \"src\": [400,96], \"f\": 0, \"d\": [109,2105,217] },\n\t\t\t\t\t{ \"px\": [1400,272], \"src\": [400,112], \"f\": 0, \"d\": [109,2105,249] },\n\t\t\t\t\t{ \"px\": [1400,288], \"src\": [400,128], \"f\": 0, \"d\": [109,2105,281] },\n\t\t\t\t\t{ \"px\": [1416,224], \"src\": [416,64], \"f\": 0, \"d\": [109,2105,154] },\n\t\t\t\t\t{ \"px\": [1416,240], \"src\": [416,80], \"f\": 0, \"d\": [109,2105,186] },\n\t\t\t\t\t{ \"px\": [1416,256], \"src\": [416,96], \"f\": 0, \"d\": [109,2105,218] },\n\t\t\t\t\t{ \"px\": [1416,272], \"src\": [416,112], \"f\": 0, \"d\": [109,2105,250] },\n\t\t\t\t\t{ \"px\": [1416,288], \"src\": [416,128], \"f\": 0, \"d\": [109,2105,282] },\n\t\t\t\t\t{ \"px\": [1432,224], \"src\": [432,64], \"f\": 0, \"d\": [109,2105,155] },\n\t\t\t\t\t{ \"px\": [1432,240], \"src\": [432,80], \"f\": 0, \"d\": [109,2105,187] },\n\t\t\t\t\t{ \"px\": [1432,256], \"src\": [432,96], \"f\": 0, \"d\": [109,2105,219] },\n\t\t\t\t\t{ \"px\": [1432,272], \"src\": [432,112], \"f\": 0, \"d\": [109,2105,251] },\n\t\t\t\t\t{ \"px\": [1432,288], \"src\": [432,128], \"f\": 0, \"d\": [109,2105,283] },\n\t\t\t\t\t{ \"px\": [1448,224], \"src\": [448,64], \"f\": 0, \"d\": [109,2105,156] },\n\t\t\t\t\t{ \"px\": [1448,240], \"src\": [448,80], \"f\": 0, \"d\": [109,2105,188] },\n\t\t\t\t\t{ \"px\": [1448,256], \"src\": [448,96], \"f\": 0, \"d\": [109,2105,220] },\n\t\t\t\t\t{ \"px\": [1448,272], \"src\": [448,112], \"f\": 0, \"d\": [109,2105,252] },\n\t\t\t\t\t{ \"px\": [1448,288], \"src\": [448,128], \"f\": 0, \"d\": [109,2105,284] },\n\t\t\t\t\t{ \"px\": [1464,224], \"src\": [464,64], \"f\": 0, \"d\": [109,2105,157] },\n\t\t\t\t\t{ \"px\": [1464,240], \"src\": [464,80], \"f\": 0, \"d\": [109,2105,189] },\n\t\t\t\t\t{ \"px\": [1464,256], \"src\": [464,96], \"f\": 0, \"d\": [109,2105,221] },\n\t\t\t\t\t{ \"px\": [1464,272], \"src\": [464,112], \"f\": 0, \"d\": [109,2105,253] },\n\t\t\t\t\t{ \"px\": [1464,288], \"src\": [464,128], \"f\": 0, \"d\": [109,2105,285] },\n\t\t\t\t\t{ \"px\": [1432,224], \"src\": [384,64], \"f\": 0, \"d\": [109,2108,152] },\n\t\t\t\t\t{ \"px\": [1432,240], \"src\": [384,80], \"f\": 0, \"d\": [109,2108,184] },\n\t\t\t\t\t{ \"px\": [1432,256], \"src\": [384,96], \"f\": 0, \"d\": [109,2108,216] },\n\t\t\t\t\t{ \"px\": [1432,272], \"src\": [384,112], \"f\": 0, \"d\": [109,2108,248] },\n\t\t\t\t\t{ \"px\": [1432,288], \"src\": [384,128], \"f\": 0, \"d\": [109,2108,280] },\n\t\t\t\t\t{ \"px\": [1448,224], \"src\": [400,64], \"f\": 0, \"d\": [109,2108,153] },\n\t\t\t\t\t{ \"px\": [1448,240], \"src\": [400,80], \"f\": 0, \"d\": [109,2108,185] },\n\t\t\t\t\t{ \"px\": [1448,256], \"src\": [400,96], \"f\": 0, \"d\": [109,2108,217] },\n\t\t\t\t\t{ \"px\": [1448,272], \"src\": [400,112], \"f\": 0, \"d\": [109,2108,249] },\n\t\t\t\t\t{ \"px\": [1448,288], \"src\": [400,128], \"f\": 0, \"d\": [109,2108,281] },\n\t\t\t\t\t{ \"px\": [1464,224], \"src\": [416,64], \"f\": 0, \"d\": [109,2108,154] },\n\t\t\t\t\t{ \"px\": [1464,240], \"src\": [416,80], \"f\": 0, \"d\": [109,2108,186] },\n\t\t\t\t\t{ \"px\": [1464,256], \"src\": [416,96], \"f\": 0, \"d\": [109,2108,218] },\n\t\t\t\t\t{ \"px\": [1464,272], \"src\": [416,112], \"f\": 0, \"d\": [109,2108,250] },\n\t\t\t\t\t{ \"px\": [1464,288], \"src\": [416,128], \"f\": 0, \"d\": [109,2108,282] },\n\t\t\t\t\t{ \"px\": [1480,224], \"src\": [432,64], \"f\": 0, \"d\": [109,2108,155] },\n\t\t\t\t\t{ \"px\": [1480,240], \"src\": [432,80], \"f\": 0, \"d\": [109,2108,187] },\n\t\t\t\t\t{ \"px\": [1480,256], \"src\": [432,96], \"f\": 0, \"d\": [109,2108,219] },\n\t\t\t\t\t{ \"px\": [1480,272], \"src\": [432,112], \"f\": 0, \"d\": [109,2108,251] },\n\t\t\t\t\t{ \"px\": [1480,288], \"src\": [432,128], \"f\": 0, \"d\": [109,2108,283] },\n\t\t\t\t\t{ \"px\": [1496,224], \"src\": [448,64], \"f\": 0, \"d\": [109,2108,156] },\n\t\t\t\t\t{ \"px\": [1496,240], \"src\": [448,80], \"f\": 0, \"d\": [109,2108,188] },\n\t\t\t\t\t{ \"px\": [1496,256], \"src\": [448,96], \"f\": 0, \"d\": [109,2108,220] },\n\t\t\t\t\t{ \"px\": [1496,272], \"src\": [448,112], \"f\": 0, \"d\": [109,2108,252] },\n\t\t\t\t\t{ \"px\": [1496,288], \"src\": [448,128], \"f\": 0, \"d\": [109,2108,284] },\n\t\t\t\t\t{ \"px\": [1512,224], \"src\": [464,64], \"f\": 0, \"d\": [109,2108,157] },\n\t\t\t\t\t{ \"px\": [1512,240], \"src\": [464,80], \"f\": 0, \"d\": [109,2108,189] },\n\t\t\t\t\t{ \"px\": [1512,256], \"src\": [464,96], \"f\": 0, \"d\": [109,2108,221] },\n\t\t\t\t\t{ \"px\": [1512,272], \"src\": [464,112], \"f\": 0, \"d\": [109,2108,253] },\n\t\t\t\t\t{ \"px\": [1512,288], \"src\": [464,128], \"f\": 0, \"d\": [109,2108,285] },\n\t\t\t\t\t{ \"px\": [920,240], \"src\": [384,64], \"f\": 0, \"d\": [109,2202,152] },\n\t\t\t\t\t{ \"px\": [920,256], \"src\": [384,80], \"f\": 0, \"d\": [109,2202,184] },\n\t\t\t\t\t{ \"px\": [920,272], \"src\": [384,96], \"f\": 0, \"d\": [109,2202,216] },\n\t\t\t\t\t{ \"px\": [920,288], \"src\": [384,112], \"f\": 0, \"d\": [109,2202,248] },\n\t\t\t\t\t{ \"px\": [920,304], \"src\": [384,128], \"f\": 0, \"d\": [109,2202,280] },\n\t\t\t\t\t{ \"px\": [936,240], \"src\": [400,64], \"f\": 0, \"d\": [109,2202,153] },\n\t\t\t\t\t{ \"px\": [936,256], \"src\": [400,80], \"f\": 0, \"d\": [109,2202,185] },\n\t\t\t\t\t{ \"px\": [936,272], \"src\": [400,96], \"f\": 0, \"d\": [109,2202,217] },\n\t\t\t\t\t{ \"px\": [936,288], \"src\": [400,112], \"f\": 0, \"d\": [109,2202,249] },\n\t\t\t\t\t{ \"px\": [936,304], \"src\": [400,128], \"f\": 0, \"d\": [109,2202,281] },\n\t\t\t\t\t{ \"px\": [952,240], \"src\": [416,64], \"f\": 0, \"d\": [109,2202,154] },\n\t\t\t\t\t{ \"px\": [952,256], \"src\": [416,80], \"f\": 0, \"d\": [109,2202,186] },\n\t\t\t\t\t{ \"px\": [952,272], \"src\": [416,96], \"f\": 0, \"d\": [109,2202,218] },\n\t\t\t\t\t{ \"px\": [952,288], \"src\": [416,112], \"f\": 0, \"d\": [109,2202,250] },\n\t\t\t\t\t{ \"px\": [952,304], \"src\": [416,128], \"f\": 0, \"d\": [109,2202,282] },\n\t\t\t\t\t{ \"px\": [968,240], \"src\": [432,64], \"f\": 0, \"d\": [109,2202,155] },\n\t\t\t\t\t{ \"px\": [968,256], \"src\": [432,80], \"f\": 0, \"d\": [109,2202,187] },\n\t\t\t\t\t{ \"px\": [968,272], \"src\": [432,96], \"f\": 0, \"d\": [109,2202,219] },\n\t\t\t\t\t{ \"px\": [968,288], \"src\": [432,112], \"f\": 0, \"d\": [109,2202,251] },\n\t\t\t\t\t{ \"px\": [968,304], \"src\": [432,128], \"f\": 0, \"d\": [109,2202,283] },\n\t\t\t\t\t{ \"px\": [984,240], \"src\": [448,64], \"f\": 0, \"d\": [109,2202,156] },\n\t\t\t\t\t{ \"px\": [984,256], \"src\": [448,80], \"f\": 0, \"d\": [109,2202,188] },\n\t\t\t\t\t{ \"px\": [984,272], \"src\": [448,96], \"f\": 0, \"d\": [109,2202,220] },\n\t\t\t\t\t{ \"px\": [984,288], \"src\": [448,112], \"f\": 0, \"d\": [109,2202,252] },\n\t\t\t\t\t{ \"px\": [984,304], \"src\": [448,128], \"f\": 0, \"d\": [109,2202,284] },\n\t\t\t\t\t{ \"px\": [1000,240], \"src\": [464,64], \"f\": 0, \"d\": [109,2202,157] },\n\t\t\t\t\t{ \"px\": [1000,256], \"src\": [464,80], \"f\": 0, \"d\": [109,2202,189] },\n\t\t\t\t\t{ \"px\": [1000,272], \"src\": [464,96], \"f\": 0, \"d\": [109,2202,221] },\n\t\t\t\t\t{ \"px\": [1000,288], \"src\": [464,112], \"f\": 0, \"d\": [109,2202,253] },\n\t\t\t\t\t{ \"px\": [1000,304], \"src\": [464,128], \"f\": 0, \"d\": [109,2202,285] },\n\t\t\t\t\t{ \"px\": [1288,240], \"src\": [384,64], \"f\": 0, \"d\": [109,2225,152] },\n\t\t\t\t\t{ \"px\": [1288,256], \"src\": [384,80], \"f\": 0, \"d\": [109,2225,184] },\n\t\t\t\t\t{ \"px\": [1288,272], \"src\": [384,96], \"f\": 0, \"d\": [109,2225,216] },\n\t\t\t\t\t{ \"px\": [1288,288], \"src\": [384,112], \"f\": 0, \"d\": [109,2225,248] },\n\t\t\t\t\t{ \"px\": [1288,304], \"src\": [384,128], \"f\": 0, \"d\": [109,2225,280] },\n\t\t\t\t\t{ \"px\": [1304,240], \"src\": [400,64], \"f\": 0, \"d\": [109,2225,153] },\n\t\t\t\t\t{ \"px\": [1304,256], \"src\": [400,80], \"f\": 0, \"d\": [109,2225,185] },\n\t\t\t\t\t{ \"px\": [1304,272], \"src\": [400,96], \"f\": 0, \"d\": [109,2225,217] },\n\t\t\t\t\t{ \"px\": [1304,288], \"src\": [400,112], \"f\": 0, \"d\": [109,2225,249] },\n\t\t\t\t\t{ \"px\": [1304,304], \"src\": [400,128], \"f\": 0, \"d\": [109,2225,281] },\n\t\t\t\t\t{ \"px\": [1320,240], \"src\": [416,64], \"f\": 0, \"d\": [109,2225,154] },\n\t\t\t\t\t{ \"px\": [1320,256], \"src\": [416,80], \"f\": 0, \"d\": [109,2225,186] },\n\t\t\t\t\t{ \"px\": [1320,272], \"src\": [416,96], \"f\": 0, \"d\": [109,2225,218] },\n\t\t\t\t\t{ \"px\": [1320,288], \"src\": [416,112], \"f\": 0, \"d\": [109,2225,250] },\n\t\t\t\t\t{ \"px\": [1320,304], \"src\": [416,128], \"f\": 0, \"d\": [109,2225,282] },\n\t\t\t\t\t{ \"px\": [1336,240], \"src\": [432,64], \"f\": 0, \"d\": [109,2225,155] },\n\t\t\t\t\t{ \"px\": [1336,256], \"src\": [432,80], \"f\": 0, \"d\": [109,2225,187] },\n\t\t\t\t\t{ \"px\": [1336,272], \"src\": [432,96], \"f\": 0, \"d\": [109,2225,219] },\n\t\t\t\t\t{ \"px\": [1336,288], \"src\": [432,112], \"f\": 0, \"d\": [109,2225,251] },\n\t\t\t\t\t{ \"px\": [1336,304], \"src\": [432,128], \"f\": 0, \"d\": [109,2225,283] },\n\t\t\t\t\t{ \"px\": [1352,240], \"src\": [448,64], \"f\": 0, \"d\": [109,2225,156] },\n\t\t\t\t\t{ \"px\": [1352,256], \"src\": [448,80], \"f\": 0, \"d\": [109,2225,188] },\n\t\t\t\t\t{ \"px\": [1352,272], \"src\": [448,96], \"f\": 0, \"d\": [109,2225,220] },\n\t\t\t\t\t{ \"px\": [1352,288], \"src\": [448,112], \"f\": 0, \"d\": [109,2225,252] },\n\t\t\t\t\t{ \"px\": [1352,304], \"src\": [448,128], \"f\": 0, \"d\": [109,2225,284] },\n\t\t\t\t\t{ \"px\": [1368,240], \"src\": [464,64], \"f\": 0, \"d\": [109,2225,157] },\n\t\t\t\t\t{ \"px\": [1368,256], \"src\": [464,80], \"f\": 0, \"d\": [109,2225,189] },\n\t\t\t\t\t{ \"px\": [1368,272], \"src\": [464,96], \"f\": 0, \"d\": [109,2225,221] },\n\t\t\t\t\t{ \"px\": [1368,288], \"src\": [464,112], \"f\": 0, \"d\": [109,2225,253] },\n\t\t\t\t\t{ \"px\": [1368,304], \"src\": [464,128], \"f\": 0, \"d\": [109,2225,285] },\n\t\t\t\t\t{ \"px\": [1464,240], \"src\": [384,64], \"f\": 0, \"d\": [109,2236,152] },\n\t\t\t\t\t{ \"px\": [1464,256], \"src\": [384,80], \"f\": 0, \"d\": [109,2236,184] },\n\t\t\t\t\t{ \"px\": [1464,272], \"src\": [384,96], \"f\": 0, \"d\": [109,2236,216] },\n\t\t\t\t\t{ \"px\": [1464,288], \"src\": [384,112], \"f\": 0, \"d\": [109,2236,248] },\n\t\t\t\t\t{ \"px\": [1464,304], \"src\": [384,128], \"f\": 0, \"d\": [109,2236,280] },\n\t\t\t\t\t{ \"px\": [1480,240], \"src\": [400,64], \"f\": 0, \"d\": [109,2236,153] },\n\t\t\t\t\t{ \"px\": [1480,256], \"src\": [400,80], \"f\": 0, \"d\": [109,2236,185] },\n\t\t\t\t\t{ \"px\": [1480,272], \"src\": [400,96], \"f\": 0, \"d\": [109,2236,217] },\n\t\t\t\t\t{ \"px\": [1480,288], \"src\": [400,112], \"f\": 0, \"d\": [109,2236,249] },\n\t\t\t\t\t{ \"px\": [1480,304], \"src\": [400,128], \"f\": 0, \"d\": [109,2236,281] },\n\t\t\t\t\t{ \"px\": [1496,240], \"src\": [416,64], \"f\": 0, \"d\": [109,2236,154] },\n\t\t\t\t\t{ \"px\": [1496,256], \"src\": [416,80], \"f\": 0, \"d\": [109,2236,186] },\n\t\t\t\t\t{ \"px\": [1496,272], \"src\": [416,96], \"f\": 0, \"d\": [109,2236,218] },\n\t\t\t\t\t{ \"px\": [1496,288], \"src\": [416,112], \"f\": 0, \"d\": [109,2236,250] },\n\t\t\t\t\t{ \"px\": [1496,304], \"src\": [416,128], \"f\": 0, \"d\": [109,2236,282] },\n\t\t\t\t\t{ \"px\": [1512,240], \"src\": [432,64], \"f\": 0, \"d\": [109,2236,155] },\n\t\t\t\t\t{ \"px\": [1512,256], \"src\": [432,80], \"f\": 0, \"d\": [109,2236,187] },\n\t\t\t\t\t{ \"px\": [1512,272], \"src\": [432,96], \"f\": 0, \"d\": [109,2236,219] },\n\t\t\t\t\t{ \"px\": [1512,288], \"src\": [432,112], \"f\": 0, \"d\": [109,2236,251] },\n\t\t\t\t\t{ \"px\": [1512,304], \"src\": [432,128], \"f\": 0, \"d\": [109,2236,283] },\n\t\t\t\t\t{ \"px\": [1528,240], \"src\": [448,64], \"f\": 0, \"d\": [109,2236,156] },\n\t\t\t\t\t{ \"px\": [1528,256], \"src\": [448,80], \"f\": 0, \"d\": [109,2236,188] },\n\t\t\t\t\t{ \"px\": [1528,272], \"src\": [448,96], \"f\": 0, \"d\": [109,2236,220] },\n\t\t\t\t\t{ \"px\": [1528,288], \"src\": [448,112], \"f\": 0, \"d\": [109,2236,252] },\n\t\t\t\t\t{ \"px\": [1528,304], \"src\": [448,128], \"f\": 0, \"d\": [109,2236,284] },\n\t\t\t\t\t{ \"px\": [1544,240], \"src\": [464,64], \"f\": 0, \"d\": [109,2236,157] },\n\t\t\t\t\t{ \"px\": [1544,256], \"src\": [464,80], \"f\": 0, \"d\": [109,2236,189] },\n\t\t\t\t\t{ \"px\": [1544,272], \"src\": [464,96], \"f\": 0, \"d\": [109,2236,221] },\n\t\t\t\t\t{ \"px\": [1544,288], \"src\": [464,112], \"f\": 0, \"d\": [109,2236,253] },\n\t\t\t\t\t{ \"px\": [1544,304], \"src\": [464,128], \"f\": 0, \"d\": [109,2236,285] },\n\t\t\t\t\t{ \"px\": [1208,256], \"src\": [384,64], \"f\": 0, \"d\": [109,2346,152] },\n\t\t\t\t\t{ \"px\": [1208,272], \"src\": [384,80], \"f\": 0, \"d\": [109,2346,184] },\n\t\t\t\t\t{ \"px\": [1208,288], \"src\": [384,96], \"f\": 0, \"d\": [109,2346,216] },\n\t\t\t\t\t{ \"px\": [1208,304], \"src\": [384,112], \"f\": 0, \"d\": [109,2346,248] },\n\t\t\t\t\t{ \"px\": [1208,320], \"src\": [384,128], \"f\": 0, \"d\": [109,2346,280] },\n\t\t\t\t\t{ \"px\": [1224,256], \"src\": [400,64], \"f\": 0, \"d\": [109,2346,153] },\n\t\t\t\t\t{ \"px\": [1224,272], \"src\": [400,80], \"f\": 0, \"d\": [109,2346,185] },\n\t\t\t\t\t{ \"px\": [1224,288], \"src\": [400,96], \"f\": 0, \"d\": [109,2346,217] },\n\t\t\t\t\t{ \"px\": [1224,304], \"src\": [400,112], \"f\": 0, \"d\": [109,2346,249] },\n\t\t\t\t\t{ \"px\": [1224,320], \"src\": [400,128], \"f\": 0, \"d\": [109,2346,281] },\n\t\t\t\t\t{ \"px\": [1240,256], \"src\": [416,64], \"f\": 0, \"d\": [109,2346,154] },\n\t\t\t\t\t{ \"px\": [1240,272], \"src\": [416,80], \"f\": 0, \"d\": [109,2346,186] },\n\t\t\t\t\t{ \"px\": [1240,288], \"src\": [416,96], \"f\": 0, \"d\": [109,2346,218] },\n\t\t\t\t\t{ \"px\": [1240,304], \"src\": [416,112], \"f\": 0, \"d\": [109,2346,250] },\n\t\t\t\t\t{ \"px\": [1240,320], \"src\": [416,128], \"f\": 0, \"d\": [109,2346,282] },\n\t\t\t\t\t{ \"px\": [1256,256], \"src\": [432,64], \"f\": 0, \"d\": [109,2346,155] },\n\t\t\t\t\t{ \"px\": [1256,272], \"src\": [432,80], \"f\": 0, \"d\": [109,2346,187] },\n\t\t\t\t\t{ \"px\": [1256,288], \"src\": [432,96], \"f\": 0, \"d\": [109,2346,219] },\n\t\t\t\t\t{ \"px\": [1256,304], \"src\": [432,112], \"f\": 0, \"d\": [109,2346,251] },\n\t\t\t\t\t{ \"px\": [1256,320], \"src\": [432,128], \"f\": 0, \"d\": [109,2346,283] },\n\t\t\t\t\t{ \"px\": [1272,256], \"src\": [448,64], \"f\": 0, \"d\": [109,2346,156] },\n\t\t\t\t\t{ \"px\": [1272,272], \"src\": [448,80], \"f\": 0, \"d\": [109,2346,188] },\n\t\t\t\t\t{ \"px\": [1272,288], \"src\": [448,96], \"f\": 0, \"d\": [109,2346,220] },\n\t\t\t\t\t{ \"px\": [1272,304], \"src\": [448,112], \"f\": 0, \"d\": [109,2346,252] },\n\t\t\t\t\t{ \"px\": [1272,320], \"src\": [448,128], \"f\": 0, \"d\": [109,2346,284] },\n\t\t\t\t\t{ \"px\": [1288,256], \"src\": [464,64], \"f\": 0, \"d\": [109,2346,157] },\n\t\t\t\t\t{ \"px\": [1288,272], \"src\": [464,80], \"f\": 0, \"d\": [109,2346,189] },\n\t\t\t\t\t{ \"px\": [1288,288], \"src\": [464,96], \"f\": 0, \"d\": [109,2346,221] },\n\t\t\t\t\t{ \"px\": [1288,304], \"src\": [464,112], \"f\": 0, \"d\": [109,2346,253] },\n\t\t\t\t\t{ \"px\": [1288,320], \"src\": [464,128], \"f\": 0, \"d\": [109,2346,285] },\n\t\t\t\t\t{ \"px\": [1512,256], \"src\": [384,64], \"f\": 0, \"d\": [109,2365,152] },\n\t\t\t\t\t{ \"px\": [1512,272], \"src\": [384,80], \"f\": 0, \"d\": [109,2365,184] },\n\t\t\t\t\t{ \"px\": [1512,288], \"src\": [384,96], \"f\": 0, \"d\": [109,2365,216] },\n\t\t\t\t\t{ \"px\": [1512,304], \"src\": [384,112], \"f\": 0, \"d\": [109,2365,248] },\n\t\t\t\t\t{ \"px\": [1512,320], \"src\": [384,128], \"f\": 0, \"d\": [109,2365,280] },\n\t\t\t\t\t{ \"px\": [1528,256], \"src\": [400,64], \"f\": 0, \"d\": [109,2365,153] },\n\t\t\t\t\t{ \"px\": [1528,272], \"src\": [400,80], \"f\": 0, \"d\": [109,2365,185] },\n\t\t\t\t\t{ \"px\": [1528,288], \"src\": [400,96], \"f\": 0, \"d\": [109,2365,217] },\n\t\t\t\t\t{ \"px\": [1528,304], \"src\": [400,112], \"f\": 0, \"d\": [109,2365,249] },\n\t\t\t\t\t{ \"px\": [1528,320], \"src\": [400,128], \"f\": 0, \"d\": [109,2365,281] },\n\t\t\t\t\t{ \"px\": [1544,256], \"src\": [416,64], \"f\": 0, \"d\": [109,2365,154] },\n\t\t\t\t\t{ \"px\": [1544,272], \"src\": [416,80], \"f\": 0, \"d\": [109,2365,186] },\n\t\t\t\t\t{ \"px\": [1544,288], \"src\": [416,96], \"f\": 0, \"d\": [109,2365,218] },\n\t\t\t\t\t{ \"px\": [1544,304], \"src\": [416,112], \"f\": 0, \"d\": [109,2365,250] },\n\t\t\t\t\t{ \"px\": [1544,320], \"src\": [416,128], \"f\": 0, \"d\": [109,2365,282] },\n\t\t\t\t\t{ \"px\": [1560,256], \"src\": [432,64], \"f\": 0, \"d\": [109,2365,155] },\n\t\t\t\t\t{ \"px\": [1560,272], \"src\": [432,80], \"f\": 0, \"d\": [109,2365,187] },\n\t\t\t\t\t{ \"px\": [1560,288], \"src\": [432,96], \"f\": 0, \"d\": [109,2365,219] },\n\t\t\t\t\t{ \"px\": [1560,304], \"src\": [432,112], \"f\": 0, \"d\": [109,2365,251] },\n\t\t\t\t\t{ \"px\": [1560,320], \"src\": [432,128], \"f\": 0, \"d\": [109,2365,283] },\n\t\t\t\t\t{ \"px\": [1576,256], \"src\": [448,64], \"f\": 0, \"d\": [109,2365,156] },\n\t\t\t\t\t{ \"px\": [1576,272], \"src\": [448,80], \"f\": 0, \"d\": [109,2365,188] },\n\t\t\t\t\t{ \"px\": [1576,288], \"src\": [448,96], \"f\": 0, \"d\": [109,2365,220] },\n\t\t\t\t\t{ \"px\": [1576,304], \"src\": [448,112], \"f\": 0, \"d\": [109,2365,252] },\n\t\t\t\t\t{ \"px\": [1576,320], \"src\": [448,128], \"f\": 0, \"d\": [109,2365,284] },\n\t\t\t\t\t{ \"px\": [1592,256], \"src\": [464,64], \"f\": 0, \"d\": [109,2365,157] },\n\t\t\t\t\t{ \"px\": [1592,272], \"src\": [464,80], \"f\": 0, \"d\": [109,2365,189] },\n\t\t\t\t\t{ \"px\": [1592,288], \"src\": [464,96], \"f\": 0, \"d\": [109,2365,221] },\n\t\t\t\t\t{ \"px\": [1592,304], \"src\": [464,112], \"f\": 0, \"d\": [109,2365,253] },\n\t\t\t\t\t{ \"px\": [1592,320], \"src\": [464,128], \"f\": 0, \"d\": [109,2365,285] },\n\t\t\t\t\t{ \"px\": [1240,272], \"src\": [384,64], \"f\": 0, \"d\": [109,2474,152] },\n\t\t\t\t\t{ \"px\": [1240,288], \"src\": [384,80], \"f\": 0, \"d\": [109,2474,184] },\n\t\t\t\t\t{ \"px\": [1240,304], \"src\": [384,96], \"f\": 0, \"d\": [109,2474,216] },\n\t\t\t\t\t{ \"px\": [1240,320], \"src\": [384,112], \"f\": 0, \"d\": [109,2474,248] },\n\t\t\t\t\t{ \"px\": [1240,336], \"src\": [384,128], \"f\": 0, \"d\": [109,2474,280] },\n\t\t\t\t\t{ \"px\": [1256,272], \"src\": [400,64], \"f\": 0, \"d\": [109,2474,153] },\n\t\t\t\t\t{ \"px\": [1256,288], \"src\": [400,80], \"f\": 0, \"d\": [109,2474,185] },\n\t\t\t\t\t{ \"px\": [1256,304], \"src\": [400,96], \"f\": 0, \"d\": [109,2474,217] },\n\t\t\t\t\t{ \"px\": [1256,320], \"src\": [400,112], \"f\": 0, \"d\": [109,2474,249] },\n\t\t\t\t\t{ \"px\": [1256,336], \"src\": [400,128], \"f\": 0, \"d\": [109,2474,281] },\n\t\t\t\t\t{ \"px\": [1272,272], \"src\": [416,64], \"f\": 0, \"d\": [109,2474,154] },\n\t\t\t\t\t{ \"px\": [1272,288], \"src\": [416,80], \"f\": 0, \"d\": [109,2474,186] },\n\t\t\t\t\t{ \"px\": [1272,304], \"src\": [416,96], \"f\": 0, \"d\": [109,2474,218] },\n\t\t\t\t\t{ \"px\": [1272,320], \"src\": [416,112], \"f\": 0, \"d\": [109,2474,250] },\n\t\t\t\t\t{ \"px\": [1272,336], \"src\": [416,128], \"f\": 0, \"d\": [109,2474,282] },\n\t\t\t\t\t{ \"px\": [1288,272], \"src\": [432,64], \"f\": 0, \"d\": [109,2474,155] },\n\t\t\t\t\t{ \"px\": [1288,288], \"src\": [432,80], \"f\": 0, \"d\": [109,2474,187] },\n\t\t\t\t\t{ \"px\": [1288,304], \"src\": [432,96], \"f\": 0, \"d\": [109,2474,219] },\n\t\t\t\t\t{ \"px\": [1288,320], \"src\": [432,112], \"f\": 0, \"d\": [109,2474,251] },\n\t\t\t\t\t{ \"px\": [1288,336], \"src\": [432,128], \"f\": 0, \"d\": [109,2474,283] },\n\t\t\t\t\t{ \"px\": [1304,272], \"src\": [448,64], \"f\": 0, \"d\": [109,2474,156] },\n\t\t\t\t\t{ \"px\": [1304,288], \"src\": [448,80], \"f\": 0, \"d\": [109,2474,188] },\n\t\t\t\t\t{ \"px\": [1304,304], \"src\": [448,96], \"f\": 0, \"d\": [109,2474,220] },\n\t\t\t\t\t{ \"px\": [1304,320], \"src\": [448,112], \"f\": 0, \"d\": [109,2474,252] },\n\t\t\t\t\t{ \"px\": [1304,336], \"src\": [448,128], \"f\": 0, \"d\": [109,2474,284] },\n\t\t\t\t\t{ \"px\": [1320,272], \"src\": [464,64], \"f\": 0, \"d\": [109,2474,157] },\n\t\t\t\t\t{ \"px\": [1320,288], \"src\": [464,80], \"f\": 0, \"d\": [109,2474,189] },\n\t\t\t\t\t{ \"px\": [1320,304], \"src\": [464,96], \"f\": 0, \"d\": [109,2474,221] },\n\t\t\t\t\t{ \"px\": [1320,320], \"src\": [464,112], \"f\": 0, \"d\": [109,2474,253] },\n\t\t\t\t\t{ \"px\": [1320,336], \"src\": [464,128], \"f\": 0, \"d\": [109,2474,285] },\n\t\t\t\t\t{ \"px\": [1272,272], \"src\": [384,64], \"f\": 0, \"d\": [109,2476,152] },\n\t\t\t\t\t{ \"px\": [1272,288], \"src\": [384,80], \"f\": 0, \"d\": [109,2476,184] },\n\t\t\t\t\t{ \"px\": [1272,304], \"src\": [384,96], \"f\": 0, \"d\": [109,2476,216] },\n\t\t\t\t\t{ \"px\": [1272,320], \"src\": [384,112], \"f\": 0, \"d\": [109,2476,248] },\n\t\t\t\t\t{ \"px\": [1272,336], \"src\": [384,128], \"f\": 0, \"d\": [109,2476,280] },\n\t\t\t\t\t{ \"px\": [1288,272], \"src\": [400,64], \"f\": 0, \"d\": [109,2476,153] },\n\t\t\t\t\t{ \"px\": [1288,288], \"src\": [400,80], \"f\": 0, \"d\": [109,2476,185] },\n\t\t\t\t\t{ \"px\": [1288,304], \"src\": [400,96], \"f\": 0, \"d\": [109,2476,217] },\n\t\t\t\t\t{ \"px\": [1288,320], \"src\": [400,112], \"f\": 0, \"d\": [109,2476,249] },\n\t\t\t\t\t{ \"px\": [1288,336], \"src\": [400,128], \"f\": 0, \"d\": [109,2476,281] },\n\t\t\t\t\t{ \"px\": [1304,272], \"src\": [416,64], \"f\": 0, \"d\": [109,2476,154] },\n\t\t\t\t\t{ \"px\": [1304,288], \"src\": [416,80], \"f\": 0, \"d\": [109,2476,186] },\n\t\t\t\t\t{ \"px\": [1304,304], \"src\": [416,96], \"f\": 0, \"d\": [109,2476,218] },\n\t\t\t\t\t{ \"px\": [1304,320], \"src\": [416,112], \"f\": 0, \"d\": [109,2476,250] },\n\t\t\t\t\t{ \"px\": [1304,336], \"src\": [416,128], \"f\": 0, \"d\": [109,2476,282] },\n\t\t\t\t\t{ \"px\": [1320,272], \"src\": [432,64], \"f\": 0, \"d\": [109,2476,155] },\n\t\t\t\t\t{ \"px\": [1320,288], \"src\": [432,80], \"f\": 0, \"d\": [109,2476,187] },\n\t\t\t\t\t{ \"px\": [1320,304], \"src\": [432,96], \"f\": 0, \"d\": [109,2476,219] },\n\t\t\t\t\t{ \"px\": [1320,320], \"src\": [432,112], \"f\": 0, \"d\": [109,2476,251] },\n\t\t\t\t\t{ \"px\": [1320,336], \"src\": [432,128], \"f\": 0, \"d\": [109,2476,283] },\n\t\t\t\t\t{ \"px\": [1336,272], \"src\": [448,64], \"f\": 0, \"d\": [109,2476,156] },\n\t\t\t\t\t{ \"px\": [1336,288], \"src\": [448,80], \"f\": 0, \"d\": [109,2476,188] },\n\t\t\t\t\t{ \"px\": [1336,304], \"src\": [448,96], \"f\": 0, \"d\": [109,2476,220] },\n\t\t\t\t\t{ \"px\": [1336,320], \"src\": [448,112], \"f\": 0, \"d\": [109,2476,252] },\n\t\t\t\t\t{ \"px\": [1336,336], \"src\": [448,128], \"f\": 0, \"d\": [109,2476,284] },\n\t\t\t\t\t{ \"px\": [1352,272], \"src\": [464,64], \"f\": 0, \"d\": [109,2476,157] },\n\t\t\t\t\t{ \"px\": [1352,288], \"src\": [464,80], \"f\": 0, \"d\": [109,2476,189] },\n\t\t\t\t\t{ \"px\": [1352,304], \"src\": [464,96], \"f\": 0, \"d\": [109,2476,221] },\n\t\t\t\t\t{ \"px\": [1352,320], \"src\": [464,112], \"f\": 0, \"d\": [109,2476,253] },\n\t\t\t\t\t{ \"px\": [1352,336], \"src\": [464,128], \"f\": 0, \"d\": [109,2476,285] },\n\t\t\t\t\t{ \"px\": [1432,272], \"src\": [384,64], \"f\": 0, \"d\": [109,2486,152] },\n\t\t\t\t\t{ \"px\": [1432,288], \"src\": [384,80], \"f\": 0, \"d\": [109,2486,184] },\n\t\t\t\t\t{ \"px\": [1432,304], \"src\": [384,96], \"f\": 0, \"d\": [109,2486,216] },\n\t\t\t\t\t{ \"px\": [1432,320], \"src\": [384,112], \"f\": 0, \"d\": [109,2486,248] },\n\t\t\t\t\t{ \"px\": [1432,336], \"src\": [384,128], \"f\": 0, \"d\": [109,2486,280] },\n\t\t\t\t\t{ \"px\": [1448,272], \"src\": [400,64], \"f\": 0, \"d\": [109,2486,153] },\n\t\t\t\t\t{ \"px\": [1448,288], \"src\": [400,80], \"f\": 0, \"d\": [109,2486,185] },\n\t\t\t\t\t{ \"px\": [1448,304], \"src\": [400,96], \"f\": 0, \"d\": [109,2486,217] },\n\t\t\t\t\t{ \"px\": [1448,320], \"src\": [400,112], \"f\": 0, \"d\": [109,2486,249] },\n\t\t\t\t\t{ \"px\": [1448,336], \"src\": [400,128], \"f\": 0, \"d\": [109,2486,281] },\n\t\t\t\t\t{ \"px\": [1464,272], \"src\": [416,64], \"f\": 0, \"d\": [109,2486,154] },\n\t\t\t\t\t{ \"px\": [1464,288], \"src\": [416,80], \"f\": 0, \"d\": [109,2486,186] },\n\t\t\t\t\t{ \"px\": [1464,304], \"src\": [416,96], \"f\": 0, \"d\": [109,2486,218] },\n\t\t\t\t\t{ \"px\": [1464,320], \"src\": [416,112], \"f\": 0, \"d\": [109,2486,250] },\n\t\t\t\t\t{ \"px\": [1464,336], \"src\": [416,128], \"f\": 0, \"d\": [109,2486,282] },\n\t\t\t\t\t{ \"px\": [1480,272], \"src\": [432,64], \"f\": 0, \"d\": [109,2486,155] },\n\t\t\t\t\t{ \"px\": [1480,288], \"src\": [432,80], \"f\": 0, \"d\": [109,2486,187] },\n\t\t\t\t\t{ \"px\": [1480,304], \"src\": [432,96], \"f\": 0, \"d\": [109,2486,219] },\n\t\t\t\t\t{ \"px\": [1480,320], \"src\": [432,112], \"f\": 0, \"d\": [109,2486,251] },\n\t\t\t\t\t{ \"px\": [1480,336], \"src\": [432,128], \"f\": 0, \"d\": [109,2486,283] },\n\t\t\t\t\t{ \"px\": [1496,272], \"src\": [448,64], \"f\": 0, \"d\": [109,2486,156] },\n\t\t\t\t\t{ \"px\": [1496,288], \"src\": [448,80], \"f\": 0, \"d\": [109,2486,188] },\n\t\t\t\t\t{ \"px\": [1496,304], \"src\": [448,96], \"f\": 0, \"d\": [109,2486,220] },\n\t\t\t\t\t{ \"px\": [1496,320], \"src\": [448,112], \"f\": 0, \"d\": [109,2486,252] },\n\t\t\t\t\t{ \"px\": [1496,336], \"src\": [448,128], \"f\": 0, \"d\": [109,2486,284] },\n\t\t\t\t\t{ \"px\": [1512,272], \"src\": [464,64], \"f\": 0, \"d\": [109,2486,157] },\n\t\t\t\t\t{ \"px\": [1512,288], \"src\": [464,80], \"f\": 0, \"d\": [109,2486,189] },\n\t\t\t\t\t{ \"px\": [1512,304], \"src\": [464,96], \"f\": 0, \"d\": [109,2486,221] },\n\t\t\t\t\t{ \"px\": [1512,320], \"src\": [464,112], \"f\": 0, \"d\": [109,2486,253] },\n\t\t\t\t\t{ \"px\": [1512,336], \"src\": [464,128], \"f\": 0, \"d\": [109,2486,285] },\n\t\t\t\t\t{ \"px\": [1496,272], \"src\": [384,64], \"f\": 0, \"d\": [109,2490,152] },\n\t\t\t\t\t{ \"px\": [1496,288], \"src\": [384,80], \"f\": 0, \"d\": [109,2490,184] },\n\t\t\t\t\t{ \"px\": [1496,304], \"src\": [384,96], \"f\": 0, \"d\": [109,2490,216] },\n\t\t\t\t\t{ \"px\": [1496,320], \"src\": [384,112], \"f\": 0, \"d\": [109,2490,248] },\n\t\t\t\t\t{ \"px\": [1496,336], \"src\": [384,128], \"f\": 0, \"d\": [109,2490,280] },\n\t\t\t\t\t{ \"px\": [1512,272], \"src\": [400,64], \"f\": 0, \"d\": [109,2490,153] },\n\t\t\t\t\t{ \"px\": [1512,288], \"src\": [400,80], \"f\": 0, \"d\": [109,2490,185] },\n\t\t\t\t\t{ \"px\": [1512,304], \"src\": [400,96], \"f\": 0, \"d\": [109,2490,217] },\n\t\t\t\t\t{ \"px\": [1512,320], \"src\": [400,112], \"f\": 0, \"d\": [109,2490,249] },\n\t\t\t\t\t{ \"px\": [1512,336], \"src\": [400,128], \"f\": 0, \"d\": [109,2490,281] },\n\t\t\t\t\t{ \"px\": [1528,272], \"src\": [416,64], \"f\": 0, \"d\": [109,2490,154] },\n\t\t\t\t\t{ \"px\": [1528,288], \"src\": [416,80], \"f\": 0, \"d\": [109,2490,186] },\n\t\t\t\t\t{ \"px\": [1528,304], \"src\": [416,96], \"f\": 0, \"d\": [109,2490,218] },\n\t\t\t\t\t{ \"px\": [1528,320], \"src\": [416,112], \"f\": 0, \"d\": [109,2490,250] },\n\t\t\t\t\t{ \"px\": [1528,336], \"src\": [416,128], \"f\": 0, \"d\": [109,2490,282] },\n\t\t\t\t\t{ \"px\": [1544,272], \"src\": [432,64], \"f\": 0, \"d\": [109,2490,155] },\n\t\t\t\t\t{ \"px\": [1544,288], \"src\": [432,80], \"f\": 0, \"d\": [109,2490,187] },\n\t\t\t\t\t{ \"px\": [1544,304], \"src\": [432,96], \"f\": 0, \"d\": [109,2490,219] },\n\t\t\t\t\t{ \"px\": [1544,320], \"src\": [432,112], \"f\": 0, \"d\": [109,2490,251] },\n\t\t\t\t\t{ \"px\": [1544,336], \"src\": [432,128], \"f\": 0, \"d\": [109,2490,283] },\n\t\t\t\t\t{ \"px\": [1560,272], \"src\": [448,64], \"f\": 0, \"d\": [109,2490,156] },\n\t\t\t\t\t{ \"px\": [1560,288], \"src\": [448,80], \"f\": 0, \"d\": [109,2490,188] },\n\t\t\t\t\t{ \"px\": [1560,304], \"src\": [448,96], \"f\": 0, \"d\": [109,2490,220] },\n\t\t\t\t\t{ \"px\": [1560,320], \"src\": [448,112], \"f\": 0, \"d\": [109,2490,252] },\n\t\t\t\t\t{ \"px\": [1560,336], \"src\": [448,128], \"f\": 0, \"d\": [109,2490,284] },\n\t\t\t\t\t{ \"px\": [1576,272], \"src\": [464,64], \"f\": 0, \"d\": [109,2490,157] },\n\t\t\t\t\t{ \"px\": [1576,288], \"src\": [464,80], \"f\": 0, \"d\": [109,2490,189] },\n\t\t\t\t\t{ \"px\": [1576,304], \"src\": [464,96], \"f\": 0, \"d\": [109,2490,221] },\n\t\t\t\t\t{ \"px\": [1576,320], \"src\": [464,112], \"f\": 0, \"d\": [109,2490,253] },\n\t\t\t\t\t{ \"px\": [1576,336], \"src\": [464,128], \"f\": 0, \"d\": [109,2490,285] },\n\t\t\t\t\t{ \"px\": [920,288], \"src\": [384,64], \"f\": 0, \"d\": [109,2580,152] },\n\t\t\t\t\t{ \"px\": [920,304], \"src\": [384,80], \"f\": 0, \"d\": [109,2580,184] },\n\t\t\t\t\t{ \"px\": [920,320], \"src\": [384,96], \"f\": 0, \"d\": [109,2580,216] },\n\t\t\t\t\t{ \"px\": [920,336], \"src\": [384,112], \"f\": 0, \"d\": [109,2580,248] },\n\t\t\t\t\t{ \"px\": [920,352], \"src\": [384,128], \"f\": 0, \"d\": [109,2580,280] },\n\t\t\t\t\t{ \"px\": [936,288], \"src\": [400,64], \"f\": 0, \"d\": [109,2580,153] },\n\t\t\t\t\t{ \"px\": [936,304], \"src\": [400,80], \"f\": 0, \"d\": [109,2580,185] },\n\t\t\t\t\t{ \"px\": [936,320], \"src\": [400,96], \"f\": 0, \"d\": [109,2580,217] },\n\t\t\t\t\t{ \"px\": [936,336], \"src\": [400,112], \"f\": 0, \"d\": [109,2580,249] },\n\t\t\t\t\t{ \"px\": [936,352], \"src\": [400,128], \"f\": 0, \"d\": [109,2580,281] },\n\t\t\t\t\t{ \"px\": [952,288], \"src\": [416,64], \"f\": 0, \"d\": [109,2580,154] },\n\t\t\t\t\t{ \"px\": [952,304], \"src\": [416,80], \"f\": 0, \"d\": [109,2580,186] },\n\t\t\t\t\t{ \"px\": [952,320], \"src\": [416,96], \"f\": 0, \"d\": [109,2580,218] },\n\t\t\t\t\t{ \"px\": [952,336], \"src\": [416,112], \"f\": 0, \"d\": [109,2580,250] },\n\t\t\t\t\t{ \"px\": [952,352], \"src\": [416,128], \"f\": 0, \"d\": [109,2580,282] },\n\t\t\t\t\t{ \"px\": [968,288], \"src\": [432,64], \"f\": 0, \"d\": [109,2580,155] },\n\t\t\t\t\t{ \"px\": [968,304], \"src\": [432,80], \"f\": 0, \"d\": [109,2580,187] },\n\t\t\t\t\t{ \"px\": [968,320], \"src\": [432,96], \"f\": 0, \"d\": [109,2580,219] },\n\t\t\t\t\t{ \"px\": [968,336], \"src\": [432,112], \"f\": 0, \"d\": [109,2580,251] },\n\t\t\t\t\t{ \"px\": [968,352], \"src\": [432,128], \"f\": 0, \"d\": [109,2580,283] },\n\t\t\t\t\t{ \"px\": [984,288], \"src\": [448,64], \"f\": 0, \"d\": [109,2580,156] },\n\t\t\t\t\t{ \"px\": [984,304], \"src\": [448,80], \"f\": 0, \"d\": [109,2580,188] },\n\t\t\t\t\t{ \"px\": [984,320], \"src\": [448,96], \"f\": 0, \"d\": [109,2580,220] },\n\t\t\t\t\t{ \"px\": [984,336], \"src\": [448,112], \"f\": 0, \"d\": [109,2580,252] },\n\t\t\t\t\t{ \"px\": [984,352], \"src\": [448,128], \"f\": 0, \"d\": [109,2580,284] },\n\t\t\t\t\t{ \"px\": [1000,288], \"src\": [464,64], \"f\": 0, \"d\": [109,2580,157] },\n\t\t\t\t\t{ \"px\": [1000,304], \"src\": [464,80], \"f\": 0, \"d\": [109,2580,189] },\n\t\t\t\t\t{ \"px\": [1000,320], \"src\": [464,96], \"f\": 0, \"d\": [109,2580,221] },\n\t\t\t\t\t{ \"px\": [1000,336], \"src\": [464,112], \"f\": 0, \"d\": [109,2580,253] },\n\t\t\t\t\t{ \"px\": [1000,352], \"src\": [464,128], \"f\": 0, \"d\": [109,2580,285] },\n\t\t\t\t\t{ \"px\": [1224,288], \"src\": [384,64], \"f\": 0, \"d\": [109,2599,152] },\n\t\t\t\t\t{ \"px\": [1224,304], \"src\": [384,80], \"f\": 0, \"d\": [109,2599,184] },\n\t\t\t\t\t{ \"px\": [1224,320], \"src\": [384,96], \"f\": 0, \"d\": [109,2599,216] },\n\t\t\t\t\t{ \"px\": [1224,336], \"src\": [384,112], \"f\": 0, \"d\": [109,2599,248] },\n\t\t\t\t\t{ \"px\": [1224,352], \"src\": [384,128], \"f\": 0, \"d\": [109,2599,280] },\n\t\t\t\t\t{ \"px\": [1240,288], \"src\": [400,64], \"f\": 0, \"d\": [109,2599,153] },\n\t\t\t\t\t{ \"px\": [1240,304], \"src\": [400,80], \"f\": 0, \"d\": [109,2599,185] },\n\t\t\t\t\t{ \"px\": [1240,320], \"src\": [400,96], \"f\": 0, \"d\": [109,2599,217] },\n\t\t\t\t\t{ \"px\": [1240,336], \"src\": [400,112], \"f\": 0, \"d\": [109,2599,249] },\n\t\t\t\t\t{ \"px\": [1240,352], \"src\": [400,128], \"f\": 0, \"d\": [109,2599,281] },\n\t\t\t\t\t{ \"px\": [1256,288], \"src\": [416,64], \"f\": 0, \"d\": [109,2599,154] },\n\t\t\t\t\t{ \"px\": [1256,304], \"src\": [416,80], \"f\": 0, \"d\": [109,2599,186] },\n\t\t\t\t\t{ \"px\": [1256,320], \"src\": [416,96], \"f\": 0, \"d\": [109,2599,218] },\n\t\t\t\t\t{ \"px\": [1256,336], \"src\": [416,112], \"f\": 0, \"d\": [109,2599,250] },\n\t\t\t\t\t{ \"px\": [1256,352], \"src\": [416,128], \"f\": 0, \"d\": [109,2599,282] },\n\t\t\t\t\t{ \"px\": [1272,288], \"src\": [432,64], \"f\": 0, \"d\": [109,2599,155] },\n\t\t\t\t\t{ \"px\": [1272,304], \"src\": [432,80], \"f\": 0, \"d\": [109,2599,187] },\n\t\t\t\t\t{ \"px\": [1272,320], \"src\": [432,96], \"f\": 0, \"d\": [109,2599,219] },\n\t\t\t\t\t{ \"px\": [1272,336], \"src\": [432,112], \"f\": 0, \"d\": [109,2599,251] },\n\t\t\t\t\t{ \"px\": [1272,352], \"src\": [432,128], \"f\": 0, \"d\": [109,2599,283] },\n\t\t\t\t\t{ \"px\": [1288,288], \"src\": [448,64], \"f\": 0, \"d\": [109,2599,156] },\n\t\t\t\t\t{ \"px\": [1288,304], \"src\": [448,80], \"f\": 0, \"d\": [109,2599,188] },\n\t\t\t\t\t{ \"px\": [1288,320], \"src\": [448,96], \"f\": 0, \"d\": [109,2599,220] },\n\t\t\t\t\t{ \"px\": [1288,336], \"src\": [448,112], \"f\": 0, \"d\": [109,2599,252] },\n\t\t\t\t\t{ \"px\": [1288,352], \"src\": [448,128], \"f\": 0, \"d\": [109,2599,284] },\n\t\t\t\t\t{ \"px\": [1304,288], \"src\": [464,64], \"f\": 0, \"d\": [109,2599,157] },\n\t\t\t\t\t{ \"px\": [1304,304], \"src\": [464,80], \"f\": 0, \"d\": [109,2599,189] },\n\t\t\t\t\t{ \"px\": [1304,320], \"src\": [464,96], \"f\": 0, \"d\": [109,2599,221] },\n\t\t\t\t\t{ \"px\": [1304,336], \"src\": [464,112], \"f\": 0, \"d\": [109,2599,253] },\n\t\t\t\t\t{ \"px\": [1304,352], \"src\": [464,128], \"f\": 0, \"d\": [109,2599,285] },\n\t\t\t\t\t{ \"px\": [1464,288], \"src\": [384,64], \"f\": 0, \"d\": [109,2614,152] },\n\t\t\t\t\t{ \"px\": [1464,304], \"src\": [384,80], \"f\": 0, \"d\": [109,2614,184] },\n\t\t\t\t\t{ \"px\": [1464,320], \"src\": [384,96], \"f\": 0, \"d\": [109,2614,216] },\n\t\t\t\t\t{ \"px\": [1464,336], \"src\": [384,112], \"f\": 0, \"d\": [109,2614,248] },\n\t\t\t\t\t{ \"px\": [1464,352], \"src\": [384,128], \"f\": 0, \"d\": [109,2614,280] },\n\t\t\t\t\t{ \"px\": [1480,288], \"src\": [400,64], \"f\": 0, \"d\": [109,2614,153] },\n\t\t\t\t\t{ \"px\": [1480,304], \"src\": [400,80], \"f\": 0, \"d\": [109,2614,185] },\n\t\t\t\t\t{ \"px\": [1480,320], \"src\": [400,96], \"f\": 0, \"d\": [109,2614,217] },\n\t\t\t\t\t{ \"px\": [1480,336], \"src\": [400,112], \"f\": 0, \"d\": [109,2614,249] },\n\t\t\t\t\t{ \"px\": [1480,352], \"src\": [400,128], \"f\": 0, \"d\": [109,2614,281] },\n\t\t\t\t\t{ \"px\": [1496,288], \"src\": [416,64], \"f\": 0, \"d\": [109,2614,154] },\n\t\t\t\t\t{ \"px\": [1496,304], \"src\": [416,80], \"f\": 0, \"d\": [109,2614,186] },\n\t\t\t\t\t{ \"px\": [1496,320], \"src\": [416,96], \"f\": 0, \"d\": [109,2614,218] },\n\t\t\t\t\t{ \"px\": [1496,336], \"src\": [416,112], \"f\": 0, \"d\": [109,2614,250] },\n\t\t\t\t\t{ \"px\": [1496,352], \"src\": [416,128], \"f\": 0, \"d\": [109,2614,282] },\n\t\t\t\t\t{ \"px\": [1512,288], \"src\": [432,64], \"f\": 0, \"d\": [109,2614,155] },\n\t\t\t\t\t{ \"px\": [1512,304], \"src\": [432,80], \"f\": 0, \"d\": [109,2614,187] },\n\t\t\t\t\t{ \"px\": [1512,320], \"src\": [432,96], \"f\": 0, \"d\": [109,2614,219] },\n\t\t\t\t\t{ \"px\": [1512,336], \"src\": [432,112], \"f\": 0, \"d\": [109,2614,251] },\n\t\t\t\t\t{ \"px\": [1512,352], \"src\": [432,128], \"f\": 0, \"d\": [109,2614,283] },\n\t\t\t\t\t{ \"px\": [1528,288], \"src\": [448,64], \"f\": 0, \"d\": [109,2614,156] },\n\t\t\t\t\t{ \"px\": [1528,304], \"src\": [448,80], \"f\": 0, \"d\": [109,2614,188] },\n\t\t\t\t\t{ \"px\": [1528,320], \"src\": [448,96], \"f\": 0, \"d\": [109,2614,220] },\n\t\t\t\t\t{ \"px\": [1528,336], \"src\": [448,112], \"f\": 0, \"d\": [109,2614,252] },\n\t\t\t\t\t{ \"px\": [1528,352], \"src\": [448,128], \"f\": 0, \"d\": [109,2614,284] },\n\t\t\t\t\t{ \"px\": [1544,288], \"src\": [464,64], \"f\": 0, \"d\": [109,2614,157] },\n\t\t\t\t\t{ \"px\": [1544,304], \"src\": [464,80], \"f\": 0, \"d\": [109,2614,189] },\n\t\t\t\t\t{ \"px\": [1544,320], \"src\": [464,96], \"f\": 0, \"d\": [109,2614,221] },\n\t\t\t\t\t{ \"px\": [1544,336], \"src\": [464,112], \"f\": 0, \"d\": [109,2614,253] },\n\t\t\t\t\t{ \"px\": [1544,352], \"src\": [464,128], \"f\": 0, \"d\": [109,2614,285] },\n\t\t\t\t\t{ \"px\": [1064,304], \"src\": [384,64], \"f\": 0, \"d\": [109,2715,152] },\n\t\t\t\t\t{ \"px\": [1064,320], \"src\": [384,80], \"f\": 0, \"d\": [109,2715,184] },\n\t\t\t\t\t{ \"px\": [1064,336], \"src\": [384,96], \"f\": 0, \"d\": [109,2715,216] },\n\t\t\t\t\t{ \"px\": [1064,352], \"src\": [384,112], \"f\": 0, \"d\": [109,2715,248] },\n\t\t\t\t\t{ \"px\": [1064,368], \"src\": [384,128], \"f\": 0, \"d\": [109,2715,280] },\n\t\t\t\t\t{ \"px\": [1080,304], \"src\": [400,64], \"f\": 0, \"d\": [109,2715,153] },\n\t\t\t\t\t{ \"px\": [1080,320], \"src\": [400,80], \"f\": 0, \"d\": [109,2715,185] },\n\t\t\t\t\t{ \"px\": [1080,336], \"src\": [400,96], \"f\": 0, \"d\": [109,2715,217] },\n\t\t\t\t\t{ \"px\": [1080,352], \"src\": [400,112], \"f\": 0, \"d\": [109,2715,249] },\n\t\t\t\t\t{ \"px\": [1080,368], \"src\": [400,128], \"f\": 0, \"d\": [109,2715,281] },\n\t\t\t\t\t{ \"px\": [1096,304], \"src\": [416,64], \"f\": 0, \"d\": [109,2715,154] },\n\t\t\t\t\t{ \"px\": [1096,320], \"src\": [416,80], \"f\": 0, \"d\": [109,2715,186] },\n\t\t\t\t\t{ \"px\": [1096,336], \"src\": [416,96], \"f\": 0, \"d\": [109,2715,218] },\n\t\t\t\t\t{ \"px\": [1096,352], \"src\": [416,112], \"f\": 0, \"d\": [109,2715,250] },\n\t\t\t\t\t{ \"px\": [1096,368], \"src\": [416,128], \"f\": 0, \"d\": [109,2715,282] },\n\t\t\t\t\t{ \"px\": [1112,304], \"src\": [432,64], \"f\": 0, \"d\": [109,2715,155] },\n\t\t\t\t\t{ \"px\": [1112,320], \"src\": [432,80], \"f\": 0, \"d\": [109,2715,187] },\n\t\t\t\t\t{ \"px\": [1112,336], \"src\": [432,96], \"f\": 0, \"d\": [109,2715,219] },\n\t\t\t\t\t{ \"px\": [1112,352], \"src\": [432,112], \"f\": 0, \"d\": [109,2715,251] },\n\t\t\t\t\t{ \"px\": [1112,368], \"src\": [432,128], \"f\": 0, \"d\": [109,2715,283] },\n\t\t\t\t\t{ \"px\": [1128,304], \"src\": [448,64], \"f\": 0, \"d\": [109,2715,156] },\n\t\t\t\t\t{ \"px\": [1128,320], \"src\": [448,80], \"f\": 0, \"d\": [109,2715,188] },\n\t\t\t\t\t{ \"px\": [1128,336], \"src\": [448,96], \"f\": 0, \"d\": [109,2715,220] },\n\t\t\t\t\t{ \"px\": [1128,352], \"src\": [448,112], \"f\": 0, \"d\": [109,2715,252] },\n\t\t\t\t\t{ \"px\": [1128,368], \"src\": [448,128], \"f\": 0, \"d\": [109,2715,284] },\n\t\t\t\t\t{ \"px\": [1144,304], \"src\": [464,64], \"f\": 0, \"d\": [109,2715,157] },\n\t\t\t\t\t{ \"px\": [1144,320], \"src\": [464,80], \"f\": 0, \"d\": [109,2715,189] },\n\t\t\t\t\t{ \"px\": [1144,336], \"src\": [464,96], \"f\": 0, \"d\": [109,2715,221] },\n\t\t\t\t\t{ \"px\": [1144,352], \"src\": [464,112], \"f\": 0, \"d\": [109,2715,253] },\n\t\t\t\t\t{ \"px\": [1144,368], \"src\": [464,128], \"f\": 0, \"d\": [109,2715,285] },\n\t\t\t\t\t{ \"px\": [1536,176], \"src\": [240,128], \"f\": 0, \"d\": [110,1610,271] },\n\t\t\t\t\t{ \"px\": [1536,192], \"src\": [240,144], \"f\": 0, \"d\": [110,1610,303] },\n\t\t\t\t\t{ \"px\": [1536,208], \"src\": [240,160], \"f\": 0, \"d\": [110,1610,335] },\n\t\t\t\t\t{ \"px\": [1552,176], \"src\": [256,128], \"f\": 0, \"d\": [110,1610,272] },\n\t\t\t\t\t{ \"px\": [1552,192], \"src\": [256,144], \"f\": 0, \"d\": [110,1610,304] },\n\t\t\t\t\t{ \"px\": [1552,208], \"src\": [256,160], \"f\": 0, \"d\": [110,1610,336] },\n\t\t\t\t\t{ \"px\": [1568,176], \"src\": [272,128], \"f\": 0, \"d\": [110,1610,273] },\n\t\t\t\t\t{ \"px\": [1568,192], \"src\": [272,144], \"f\": 0, \"d\": [110,1610,305] },\n\t\t\t\t\t{ \"px\": [1568,208], \"src\": [272,160], \"f\": 0, \"d\": [110,1610,337] },\n\t\t\t\t\t{ \"px\": [1584,176], \"src\": [288,128], \"f\": 0, \"d\": [110,1610,274] },\n\t\t\t\t\t{ \"px\": [1584,192], \"src\": [288,144], \"f\": 0, \"d\": [110,1610,306] },\n\t\t\t\t\t{ \"px\": [1584,208], \"src\": [288,160], \"f\": 0, \"d\": [110,1610,338] },\n\t\t\t\t\t{ \"px\": [1600,176], \"src\": [304,128], \"f\": 0, \"d\": [110,1610,275] },\n\t\t\t\t\t{ \"px\": [1600,192], \"src\": [304,144], \"f\": 0, \"d\": [110,1610,307] },\n\t\t\t\t\t{ \"px\": [1600,208], \"src\": [304,160], \"f\": 0, \"d\": [110,1610,339] },\n\t\t\t\t\t{ \"px\": [1584,176], \"src\": [240,128], \"f\": 0, \"d\": [110,1613,271] },\n\t\t\t\t\t{ \"px\": [1584,192], \"src\": [240,144], \"f\": 0, \"d\": [110,1613,303] },\n\t\t\t\t\t{ \"px\": [1584,208], \"src\": [240,160], \"f\": 0, \"d\": [110,1613,335] },\n\t\t\t\t\t{ \"px\": [1600,176], \"src\": [256,128], \"f\": 0, \"d\": [110,1613,272] },\n\t\t\t\t\t{ \"px\": [1600,192], \"src\": [256,144], \"f\": 0, \"d\": [110,1613,304] },\n\t\t\t\t\t{ \"px\": [1600,208], \"src\": [256,160], \"f\": 0, \"d\": [110,1613,336] },\n\t\t\t\t\t{ \"px\": [1616,176], \"src\": [272,128], \"f\": 0, \"d\": [110,1613,273] },\n\t\t\t\t\t{ \"px\": [1616,192], \"src\": [272,144], \"f\": 0, \"d\": [110,1613,305] },\n\t\t\t\t\t{ \"px\": [1616,208], \"src\": [272,160], \"f\": 0, \"d\": [110,1613,337] },\n\t\t\t\t\t{ \"px\": [1632,176], \"src\": [288,128], \"f\": 0, \"d\": [110,1613,274] },\n\t\t\t\t\t{ \"px\": [1632,192], \"src\": [288,144], \"f\": 0, \"d\": [110,1613,306] },\n\t\t\t\t\t{ \"px\": [1632,208], \"src\": [288,160], \"f\": 0, \"d\": [110,1613,338] },\n\t\t\t\t\t{ \"px\": [1648,176], \"src\": [304,128], \"f\": 0, \"d\": [110,1613,275] },\n\t\t\t\t\t{ \"px\": [1648,192], \"src\": [304,144], \"f\": 0, \"d\": [110,1613,307] },\n\t\t\t\t\t{ \"px\": [1648,208], \"src\": [304,160], \"f\": 0, \"d\": [110,1613,339] },\n\t\t\t\t\t{ \"px\": [1456,192], \"src\": [240,128], \"f\": 0, \"d\": [110,1731,271] },\n\t\t\t\t\t{ \"px\": [1456,208], \"src\": [240,144], \"f\": 0, \"d\": [110,1731,303] },\n\t\t\t\t\t{ \"px\": [1456,224], \"src\": [240,160], \"f\": 0, \"d\": [110,1731,335] },\n\t\t\t\t\t{ \"px\": [1472,192], \"src\": [256,128], \"f\": 0, \"d\": [110,1731,272] },\n\t\t\t\t\t{ \"px\": [1472,208], \"src\": [256,144], \"f\": 0, \"d\": [110,1731,304] },\n\t\t\t\t\t{ \"px\": [1472,224], \"src\": [256,160], \"f\": 0, \"d\": [110,1731,336] },\n\t\t\t\t\t{ \"px\": [1488,192], \"src\": [272,128], \"f\": 0, \"d\": [110,1731,273] },\n\t\t\t\t\t{ \"px\": [1488,208], \"src\": [272,144], \"f\": 0, \"d\": [110,1731,305] },\n\t\t\t\t\t{ \"px\": [1488,224], \"src\": [272,160], \"f\": 0, \"d\": [110,1731,337] },\n\t\t\t\t\t{ \"px\": [1504,192], \"src\": [288,128], \"f\": 0, \"d\": [110,1731,274] },\n\t\t\t\t\t{ \"px\": [1504,208], \"src\": [288,144], \"f\": 0, \"d\": [110,1731,306] },\n\t\t\t\t\t{ \"px\": [1504,224], \"src\": [288,160], \"f\": 0, \"d\": [110,1731,338] },\n\t\t\t\t\t{ \"px\": [1520,192], \"src\": [304,128], \"f\": 0, \"d\": [110,1731,275] },\n\t\t\t\t\t{ \"px\": [1520,208], \"src\": [304,144], \"f\": 0, \"d\": [110,1731,307] },\n\t\t\t\t\t{ \"px\": [1520,224], \"src\": [304,160], \"f\": 0, \"d\": [110,1731,339] },\n\t\t\t\t\t{ \"px\": [240,208], \"src\": [240,128], \"f\": 0, \"d\": [110,1781,271] },\n\t\t\t\t\t{ \"px\": [240,224], \"src\": [240,144], \"f\": 0, \"d\": [110,1781,303] },\n\t\t\t\t\t{ \"px\": [240,240], \"src\": [240,160], \"f\": 0, \"d\": [110,1781,335] },\n\t\t\t\t\t{ \"px\": [256,208], \"src\": [256,128], \"f\": 0, \"d\": [110,1781,272] },\n\t\t\t\t\t{ \"px\": [256,224], \"src\": [256,144], \"f\": 0, \"d\": [110,1781,304] },\n\t\t\t\t\t{ \"px\": [256,240], \"src\": [256,160], \"f\": 0, \"d\": [110,1781,336] },\n\t\t\t\t\t{ \"px\": [272,208], \"src\": [272,128], \"f\": 0, \"d\": [110,1781,273] },\n\t\t\t\t\t{ \"px\": [272,224], \"src\": [272,144], \"f\": 0, \"d\": [110,1781,305] },\n\t\t\t\t\t{ \"px\": [272,240], \"src\": [272,160], \"f\": 0, \"d\": [110,1781,337] },\n\t\t\t\t\t{ \"px\": [288,208], \"src\": [288,128], \"f\": 0, \"d\": [110,1781,274] },\n\t\t\t\t\t{ \"px\": [288,224], \"src\": [288,144], \"f\": 0, \"d\": [110,1781,306] },\n\t\t\t\t\t{ \"px\": [288,240], \"src\": [288,160], \"f\": 0, \"d\": [110,1781,338] },\n\t\t\t\t\t{ \"px\": [304,208], \"src\": [304,128], \"f\": 0, \"d\": [110,1781,275] },\n\t\t\t\t\t{ \"px\": [304,224], \"src\": [304,144], \"f\": 0, \"d\": [110,1781,307] },\n\t\t\t\t\t{ \"px\": [304,240], \"src\": [304,160], \"f\": 0, \"d\": [110,1781,339] },\n\t\t\t\t\t{ \"px\": [208,224], \"src\": [240,128], \"f\": 0, \"d\": [110,1905,271] },\n\t\t\t\t\t{ \"px\": [208,240], \"src\": [240,144], \"f\": 0, \"d\": [110,1905,303] },\n\t\t\t\t\t{ \"px\": [208,256], \"src\": [240,160], \"f\": 0, \"d\": [110,1905,335] },\n\t\t\t\t\t{ \"px\": [224,224], \"src\": [256,128], \"f\": 0, \"d\": [110,1905,272] },\n\t\t\t\t\t{ \"px\": [224,240], \"src\": [256,144], \"f\": 0, \"d\": [110,1905,304] },\n\t\t\t\t\t{ \"px\": [224,256], \"src\": [256,160], \"f\": 0, \"d\": [110,1905,336] },\n\t\t\t\t\t{ \"px\": [240,224], \"src\": [272,128], \"f\": 0, \"d\": [110,1905,273] },\n\t\t\t\t\t{ \"px\": [240,240], \"src\": [272,144], \"f\": 0, \"d\": [110,1905,305] },\n\t\t\t\t\t{ \"px\": [240,256], \"src\": [272,160], \"f\": 0, \"d\": [110,1905,337] },\n\t\t\t\t\t{ \"px\": [256,224], \"src\": [288,128], \"f\": 0, \"d\": [110,1905,274] },\n\t\t\t\t\t{ \"px\": [256,240], \"src\": [288,144], \"f\": 0, \"d\": [110,1905,306] },\n\t\t\t\t\t{ \"px\": [256,256], \"src\": [288,160], \"f\": 0, \"d\": [110,1905,338] },\n\t\t\t\t\t{ \"px\": [272,224], \"src\": [304,128], \"f\": 0, \"d\": [110,1905,275] },\n\t\t\t\t\t{ \"px\": [272,240], \"src\": [304,144], \"f\": 0, \"d\": [110,1905,307] },\n\t\t\t\t\t{ \"px\": [272,256], \"src\": [304,160], \"f\": 0, \"d\": [110,1905,339] },\n\t\t\t\t\t{ \"px\": [288,224], \"src\": [240,128], \"f\": 0, \"d\": [110,1910,271] },\n\t\t\t\t\t{ \"px\": [288,240], \"src\": [240,144], \"f\": 0, \"d\": [110,1910,303] },\n\t\t\t\t\t{ \"px\": [288,256], \"src\": [240,160], \"f\": 0, \"d\": [110,1910,335] },\n\t\t\t\t\t{ \"px\": [304,224], \"src\": [256,128], \"f\": 0, \"d\": [110,1910,272] },\n\t\t\t\t\t{ \"px\": [304,240], \"src\": [256,144], \"f\": 0, \"d\": [110,1910,304] },\n\t\t\t\t\t{ \"px\": [304,256], \"src\": [256,160], \"f\": 0, \"d\": [110,1910,336] },\n\t\t\t\t\t{ \"px\": [320,224], \"src\": [272,128], \"f\": 0, \"d\": [110,1910,273] },\n\t\t\t\t\t{ \"px\": [320,240], \"src\": [272,144], \"f\": 0, \"d\": [110,1910,305] },\n\t\t\t\t\t{ \"px\": [320,256], \"src\": [272,160], \"f\": 0, \"d\": [110,1910,337] },\n\t\t\t\t\t{ \"px\": [336,224], \"src\": [288,128], \"f\": 0, \"d\": [110,1910,274] },\n\t\t\t\t\t{ \"px\": [336,240], \"src\": [288,144], \"f\": 0, \"d\": [110,1910,306] },\n\t\t\t\t\t{ \"px\": [336,256], \"src\": [288,160], \"f\": 0, \"d\": [110,1910,338] },\n\t\t\t\t\t{ \"px\": [352,224], \"src\": [304,128], \"f\": 0, \"d\": [110,1910,275] },\n\t\t\t\t\t{ \"px\": [352,240], \"src\": [304,144], \"f\": 0, \"d\": [110,1910,307] },\n\t\t\t\t\t{ \"px\": [352,256], \"src\": [304,160], \"f\": 0, \"d\": [110,1910,339] },\n\t\t\t\t\t{ \"px\": [960,224], \"src\": [240,128], \"f\": 0, \"d\": [110,1952,271] },\n\t\t\t\t\t{ \"px\": [960,240], \"src\": [240,144], \"f\": 0, \"d\": [110,1952,303] },\n\t\t\t\t\t{ \"px\": [960,256], \"src\": [240,160], \"f\": 0, \"d\": [110,1952,335] },\n\t\t\t\t\t{ \"px\": [976,224], \"src\": [256,128], \"f\": 0, \"d\": [110,1952,272] },\n\t\t\t\t\t{ \"px\": [976,240], \"src\": [256,144], \"f\": 0, \"d\": [110,1952,304] },\n\t\t\t\t\t{ \"px\": [976,256], \"src\": [256,160], \"f\": 0, \"d\": [110,1952,336] },\n\t\t\t\t\t{ \"px\": [992,224], \"src\": [272,128], \"f\": 0, \"d\": [110,1952,273] },\n\t\t\t\t\t{ \"px\": [992,240], \"src\": [272,144], \"f\": 0, \"d\": [110,1952,305] },\n\t\t\t\t\t{ \"px\": [992,256], \"src\": [272,160], \"f\": 0, \"d\": [110,1952,337] },\n\t\t\t\t\t{ \"px\": [1008,224], \"src\": [288,128], \"f\": 0, \"d\": [110,1952,274] },\n\t\t\t\t\t{ \"px\": [1008,240], \"src\": [288,144], \"f\": 0, \"d\": [110,1952,306] },\n\t\t\t\t\t{ \"px\": [1008,256], \"src\": [288,160], \"f\": 0, \"d\": [110,1952,338] },\n\t\t\t\t\t{ \"px\": [1024,224], \"src\": [304,128], \"f\": 0, \"d\": [110,1952,275] },\n\t\t\t\t\t{ \"px\": [1024,240], \"src\": [304,144], \"f\": 0, \"d\": [110,1952,307] },\n\t\t\t\t\t{ \"px\": [1024,256], \"src\": [304,160], \"f\": 0, \"d\": [110,1952,339] },\n\t\t\t\t\t{ \"px\": [1504,224], \"src\": [240,128], \"f\": 0, \"d\": [110,1986,271] },\n\t\t\t\t\t{ \"px\": [1504,240], \"src\": [240,144], \"f\": 0, \"d\": [110,1986,303] },\n\t\t\t\t\t{ \"px\": [1504,256], \"src\": [240,160], \"f\": 0, \"d\": [110,1986,335] },\n\t\t\t\t\t{ \"px\": [1520,224], \"src\": [256,128], \"f\": 0, \"d\": [110,1986,272] },\n\t\t\t\t\t{ \"px\": [1520,240], \"src\": [256,144], \"f\": 0, \"d\": [110,1986,304] },\n\t\t\t\t\t{ \"px\": [1520,256], \"src\": [256,160], \"f\": 0, \"d\": [110,1986,336] },\n\t\t\t\t\t{ \"px\": [1536,224], \"src\": [272,128], \"f\": 0, \"d\": [110,1986,273] },\n\t\t\t\t\t{ \"px\": [1536,240], \"src\": [272,144], \"f\": 0, \"d\": [110,1986,305] },\n\t\t\t\t\t{ \"px\": [1536,256], \"src\": [272,160], \"f\": 0, \"d\": [110,1986,337] },\n\t\t\t\t\t{ \"px\": [1552,224], \"src\": [288,128], \"f\": 0, \"d\": [110,1986,274] },\n\t\t\t\t\t{ \"px\": [1552,240], \"src\": [288,144], \"f\": 0, \"d\": [110,1986,306] },\n\t\t\t\t\t{ \"px\": [1552,256], \"src\": [288,160], \"f\": 0, \"d\": [110,1986,338] },\n\t\t\t\t\t{ \"px\": [1568,224], \"src\": [304,128], \"f\": 0, \"d\": [110,1986,275] },\n\t\t\t\t\t{ \"px\": [1568,240], \"src\": [304,144], \"f\": 0, \"d\": [110,1986,307] },\n\t\t\t\t\t{ \"px\": [1568,256], \"src\": [304,160], \"f\": 0, \"d\": [110,1986,339] },\n\t\t\t\t\t{ \"px\": [256,240], \"src\": [240,128], \"f\": 0, \"d\": [110,2034,271] },\n\t\t\t\t\t{ \"px\": [256,256], \"src\": [240,144], \"f\": 0, \"d\": [110,2034,303] },\n\t\t\t\t\t{ \"px\": [256,272], \"src\": [240,160], \"f\": 0, \"d\": [110,2034,335] },\n\t\t\t\t\t{ \"px\": [272,240], \"src\": [256,128], \"f\": 0, \"d\": [110,2034,272] },\n\t\t\t\t\t{ \"px\": [272,256], \"src\": [256,144], \"f\": 0, \"d\": [110,2034,304] },\n\t\t\t\t\t{ \"px\": [272,272], \"src\": [256,160], \"f\": 0, \"d\": [110,2034,336] },\n\t\t\t\t\t{ \"px\": [288,240], \"src\": [272,128], \"f\": 0, \"d\": [110,2034,273] },\n\t\t\t\t\t{ \"px\": [288,256], \"src\": [272,144], \"f\": 0, \"d\": [110,2034,305] },\n\t\t\t\t\t{ \"px\": [288,272], \"src\": [272,160], \"f\": 0, \"d\": [110,2034,337] },\n\t\t\t\t\t{ \"px\": [304,240], \"src\": [288,128], \"f\": 0, \"d\": [110,2034,274] },\n\t\t\t\t\t{ \"px\": [304,256], \"src\": [288,144], \"f\": 0, \"d\": [110,2034,306] },\n\t\t\t\t\t{ \"px\": [304,272], \"src\": [288,160], \"f\": 0, \"d\": [110,2034,338] },\n\t\t\t\t\t{ \"px\": [320,240], \"src\": [304,128], \"f\": 0, \"d\": [110,2034,275] },\n\t\t\t\t\t{ \"px\": [320,256], \"src\": [304,144], \"f\": 0, \"d\": [110,2034,307] },\n\t\t\t\t\t{ \"px\": [320,272], \"src\": [304,160], \"f\": 0, \"d\": [110,2034,339] },\n\t\t\t\t\t{ \"px\": [1392,240], \"src\": [240,128], \"f\": 0, \"d\": [110,2105,271] },\n\t\t\t\t\t{ \"px\": [1392,256], \"src\": [240,144], \"f\": 0, \"d\": [110,2105,303] },\n\t\t\t\t\t{ \"px\": [1392,272], \"src\": [240,160], \"f\": 0, \"d\": [110,2105,335] },\n\t\t\t\t\t{ \"px\": [1408,240], \"src\": [256,128], \"f\": 0, \"d\": [110,2105,272] },\n\t\t\t\t\t{ \"px\": [1408,256], \"src\": [256,144], \"f\": 0, \"d\": [110,2105,304] },\n\t\t\t\t\t{ \"px\": [1408,272], \"src\": [256,160], \"f\": 0, \"d\": [110,2105,336] },\n\t\t\t\t\t{ \"px\": [1424,240], \"src\": [272,128], \"f\": 0, \"d\": [110,2105,273] },\n\t\t\t\t\t{ \"px\": [1424,256], \"src\": [272,144], \"f\": 0, \"d\": [110,2105,305] },\n\t\t\t\t\t{ \"px\": [1424,272], \"src\": [272,160], \"f\": 0, \"d\": [110,2105,337] },\n\t\t\t\t\t{ \"px\": [1440,240], \"src\": [288,128], \"f\": 0, \"d\": [110,2105,274] },\n\t\t\t\t\t{ \"px\": [1440,256], \"src\": [288,144], \"f\": 0, \"d\": [110,2105,306] },\n\t\t\t\t\t{ \"px\": [1440,272], \"src\": [288,160], \"f\": 0, \"d\": [110,2105,338] },\n\t\t\t\t\t{ \"px\": [1456,240], \"src\": [304,128], \"f\": 0, \"d\": [110,2105,275] },\n\t\t\t\t\t{ \"px\": [1456,256], \"src\": [304,144], \"f\": 0, \"d\": [110,2105,307] },\n\t\t\t\t\t{ \"px\": [1456,272], \"src\": [304,160], \"f\": 0, \"d\": [110,2105,339] },\n\t\t\t\t\t{ \"px\": [1440,240], \"src\": [240,128], \"f\": 0, \"d\": [110,2108,271] },\n\t\t\t\t\t{ \"px\": [1440,256], \"src\": [240,144], \"f\": 0, \"d\": [110,2108,303] },\n\t\t\t\t\t{ \"px\": [1440,272], \"src\": [240,160], \"f\": 0, \"d\": [110,2108,335] },\n\t\t\t\t\t{ \"px\": [1456,240], \"src\": [256,128], \"f\": 0, \"d\": [110,2108,272] },\n\t\t\t\t\t{ \"px\": [1456,256], \"src\": [256,144], \"f\": 0, \"d\": [110,2108,304] },\n\t\t\t\t\t{ \"px\": [1456,272], \"src\": [256,160], \"f\": 0, \"d\": [110,2108,336] },\n\t\t\t\t\t{ \"px\": [1472,240], \"src\": [272,128], \"f\": 0, \"d\": [110,2108,273] },\n\t\t\t\t\t{ \"px\": [1472,256], \"src\": [272,144], \"f\": 0, \"d\": [110,2108,305] },\n\t\t\t\t\t{ \"px\": [1472,272], \"src\": [272,160], \"f\": 0, \"d\": [110,2108,337] },\n\t\t\t\t\t{ \"px\": [1488,240], \"src\": [288,128], \"f\": 0, \"d\": [110,2108,274] },\n\t\t\t\t\t{ \"px\": [1488,256], \"src\": [288,144], \"f\": 0, \"d\": [110,2108,306] },\n\t\t\t\t\t{ \"px\": [1488,272], \"src\": [288,160], \"f\": 0, \"d\": [110,2108,338] },\n\t\t\t\t\t{ \"px\": [1504,240], \"src\": [304,128], \"f\": 0, \"d\": [110,2108,275] },\n\t\t\t\t\t{ \"px\": [1504,256], \"src\": [304,144], \"f\": 0, \"d\": [110,2108,307] },\n\t\t\t\t\t{ \"px\": [1504,272], \"src\": [304,160], \"f\": 0, \"d\": [110,2108,339] },\n\t\t\t\t\t{ \"px\": [928,256], \"src\": [240,128], \"f\": 0, \"d\": [110,2202,271] },\n\t\t\t\t\t{ \"px\": [928,272], \"src\": [240,144], \"f\": 0, \"d\": [110,2202,303] },\n\t\t\t\t\t{ \"px\": [928,288], \"src\": [240,160], \"f\": 0, \"d\": [110,2202,335] },\n\t\t\t\t\t{ \"px\": [944,256], \"src\": [256,128], \"f\": 0, \"d\": [110,2202,272] },\n\t\t\t\t\t{ \"px\": [944,272], \"src\": [256,144], \"f\": 0, \"d\": [110,2202,304] },\n\t\t\t\t\t{ \"px\": [944,288], \"src\": [256,160], \"f\": 0, \"d\": [110,2202,336] },\n\t\t\t\t\t{ \"px\": [960,256], \"src\": [272,128], \"f\": 0, \"d\": [110,2202,273] },\n\t\t\t\t\t{ \"px\": [960,272], \"src\": [272,144], \"f\": 0, \"d\": [110,2202,305] },\n\t\t\t\t\t{ \"px\": [960,288], \"src\": [272,160], \"f\": 0, \"d\": [110,2202,337] },\n\t\t\t\t\t{ \"px\": [976,256], \"src\": [288,128], \"f\": 0, \"d\": [110,2202,274] },\n\t\t\t\t\t{ \"px\": [976,272], \"src\": [288,144], \"f\": 0, \"d\": [110,2202,306] },\n\t\t\t\t\t{ \"px\": [976,288], \"src\": [288,160], \"f\": 0, \"d\": [110,2202,338] },\n\t\t\t\t\t{ \"px\": [992,256], \"src\": [304,128], \"f\": 0, \"d\": [110,2202,275] },\n\t\t\t\t\t{ \"px\": [992,272], \"src\": [304,144], \"f\": 0, \"d\": [110,2202,307] },\n\t\t\t\t\t{ \"px\": [992,288], \"src\": [304,160], \"f\": 0, \"d\": [110,2202,339] },\n\t\t\t\t\t{ \"px\": [1296,256], \"src\": [240,128], \"f\": 0, \"d\": [110,2225,271] },\n\t\t\t\t\t{ \"px\": [1296,272], \"src\": [240,144], \"f\": 0, \"d\": [110,2225,303] },\n\t\t\t\t\t{ \"px\": [1296,288], \"src\": [240,160], \"f\": 0, \"d\": [110,2225,335] },\n\t\t\t\t\t{ \"px\": [1312,256], \"src\": [256,128], \"f\": 0, \"d\": [110,2225,272] },\n\t\t\t\t\t{ \"px\": [1312,272], \"src\": [256,144], \"f\": 0, \"d\": [110,2225,304] },\n\t\t\t\t\t{ \"px\": [1312,288], \"src\": [256,160], \"f\": 0, \"d\": [110,2225,336] },\n\t\t\t\t\t{ \"px\": [1328,256], \"src\": [272,128], \"f\": 0, \"d\": [110,2225,273] },\n\t\t\t\t\t{ \"px\": [1328,272], \"src\": [272,144], \"f\": 0, \"d\": [110,2225,305] },\n\t\t\t\t\t{ \"px\": [1328,288], \"src\": [272,160], \"f\": 0, \"d\": [110,2225,337] },\n\t\t\t\t\t{ \"px\": [1344,256], \"src\": [288,128], \"f\": 0, \"d\": [110,2225,274] },\n\t\t\t\t\t{ \"px\": [1344,272], \"src\": [288,144], \"f\": 0, \"d\": [110,2225,306] },\n\t\t\t\t\t{ \"px\": [1344,288], \"src\": [288,160], \"f\": 0, \"d\": [110,2225,338] },\n\t\t\t\t\t{ \"px\": [1360,256], \"src\": [304,128], \"f\": 0, \"d\": [110,2225,275] },\n\t\t\t\t\t{ \"px\": [1360,272], \"src\": [304,144], \"f\": 0, \"d\": [110,2225,307] },\n\t\t\t\t\t{ \"px\": [1360,288], \"src\": [304,160], \"f\": 0, \"d\": [110,2225,339] },\n\t\t\t\t\t{ \"px\": [1472,256], \"src\": [240,128], \"f\": 0, \"d\": [110,2236,271] },\n\t\t\t\t\t{ \"px\": [1472,272], \"src\": [240,144], \"f\": 0, \"d\": [110,2236,303] },\n\t\t\t\t\t{ \"px\": [1472,288], \"src\": [240,160], \"f\": 0, \"d\": [110,2236,335] },\n\t\t\t\t\t{ \"px\": [1488,256], \"src\": [256,128], \"f\": 0, \"d\": [110,2236,272] },\n\t\t\t\t\t{ \"px\": [1488,272], \"src\": [256,144], \"f\": 0, \"d\": [110,2236,304] },\n\t\t\t\t\t{ \"px\": [1488,288], \"src\": [256,160], \"f\": 0, \"d\": [110,2236,336] },\n\t\t\t\t\t{ \"px\": [1504,256], \"src\": [272,128], \"f\": 0, \"d\": [110,2236,273] },\n\t\t\t\t\t{ \"px\": [1504,272], \"src\": [272,144], \"f\": 0, \"d\": [110,2236,305] },\n\t\t\t\t\t{ \"px\": [1504,288], \"src\": [272,160], \"f\": 0, \"d\": [110,2236,337] },\n\t\t\t\t\t{ \"px\": [1520,256], \"src\": [288,128], \"f\": 0, \"d\": [110,2236,274] },\n\t\t\t\t\t{ \"px\": [1520,272], \"src\": [288,144], \"f\": 0, \"d\": [110,2236,306] },\n\t\t\t\t\t{ \"px\": [1520,288], \"src\": [288,160], \"f\": 0, \"d\": [110,2236,338] },\n\t\t\t\t\t{ \"px\": [1536,256], \"src\": [304,128], \"f\": 0, \"d\": [110,2236,275] },\n\t\t\t\t\t{ \"px\": [1536,272], \"src\": [304,144], \"f\": 0, \"d\": [110,2236,307] },\n\t\t\t\t\t{ \"px\": [1536,288], \"src\": [304,160], \"f\": 0, \"d\": [110,2236,339] },\n\t\t\t\t\t{ \"px\": [1216,272], \"src\": [240,128], \"f\": 0, \"d\": [110,2346,271] },\n\t\t\t\t\t{ \"px\": [1216,288], \"src\": [240,144], \"f\": 0, \"d\": [110,2346,303] },\n\t\t\t\t\t{ \"px\": [1216,304], \"src\": [240,160], \"f\": 0, \"d\": [110,2346,335] },\n\t\t\t\t\t{ \"px\": [1232,272], \"src\": [256,128], \"f\": 0, \"d\": [110,2346,272] },\n\t\t\t\t\t{ \"px\": [1232,288], \"src\": [256,144], \"f\": 0, \"d\": [110,2346,304] },\n\t\t\t\t\t{ \"px\": [1232,304], \"src\": [256,160], \"f\": 0, \"d\": [110,2346,336] },\n\t\t\t\t\t{ \"px\": [1248,272], \"src\": [272,128], \"f\": 0, \"d\": [110,2346,273] },\n\t\t\t\t\t{ \"px\": [1248,288], \"src\": [272,144], \"f\": 0, \"d\": [110,2346,305] },\n\t\t\t\t\t{ \"px\": [1248,304], \"src\": [272,160], \"f\": 0, \"d\": [110,2346,337] },\n\t\t\t\t\t{ \"px\": [1264,272], \"src\": [288,128], \"f\": 0, \"d\": [110,2346,274] },\n\t\t\t\t\t{ \"px\": [1264,288], \"src\": [288,144], \"f\": 0, \"d\": [110,2346,306] },\n\t\t\t\t\t{ \"px\": [1264,304], \"src\": [288,160], \"f\": 0, \"d\": [110,2346,338] },\n\t\t\t\t\t{ \"px\": [1280,272], \"src\": [304,128], \"f\": 0, \"d\": [110,2346,275] },\n\t\t\t\t\t{ \"px\": [1280,288], \"src\": [304,144], \"f\": 0, \"d\": [110,2346,307] },\n\t\t\t\t\t{ \"px\": [1280,304], \"src\": [304,160], \"f\": 0, \"d\": [110,2346,339] },\n\t\t\t\t\t{ \"px\": [1520,272], \"src\": [240,128], \"f\": 0, \"d\": [110,2365,271] },\n\t\t\t\t\t{ \"px\": [1520,288], \"src\": [240,144], \"f\": 0, \"d\": [110,2365,303] },\n\t\t\t\t\t{ \"px\": [1520,304], \"src\": [240,160], \"f\": 0, \"d\": [110,2365,335] },\n\t\t\t\t\t{ \"px\": [1536,272], \"src\": [256,128], \"f\": 0, \"d\": [110,2365,272] },\n\t\t\t\t\t{ \"px\": [1536,288], \"src\": [256,144], \"f\": 0, \"d\": [110,2365,304] },\n\t\t\t\t\t{ \"px\": [1536,304], \"src\": [256,160], \"f\": 0, \"d\": [110,2365,336] },\n\t\t\t\t\t{ \"px\": [1552,272], \"src\": [272,128], \"f\": 0, \"d\": [110,2365,273] },\n\t\t\t\t\t{ \"px\": [1552,288], \"src\": [272,144], \"f\": 0, \"d\": [110,2365,305] },\n\t\t\t\t\t{ \"px\": [1552,304], \"src\": [272,160], \"f\": 0, \"d\": [110,2365,337] },\n\t\t\t\t\t{ \"px\": [1568,272], \"src\": [288,128], \"f\": 0, \"d\": [110,2365,274] },\n\t\t\t\t\t{ \"px\": [1568,288], \"src\": [288,144], \"f\": 0, \"d\": [110,2365,306] },\n\t\t\t\t\t{ \"px\": [1568,304], \"src\": [288,160], \"f\": 0, \"d\": [110,2365,338] },\n\t\t\t\t\t{ \"px\": [1584,272], \"src\": [304,128], \"f\": 0, \"d\": [110,2365,275] },\n\t\t\t\t\t{ \"px\": [1584,288], \"src\": [304,144], \"f\": 0, \"d\": [110,2365,307] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [304,160], \"f\": 0, \"d\": [110,2365,339] },\n\t\t\t\t\t{ \"px\": [1248,288], \"src\": [240,128], \"f\": 0, \"d\": [110,2474,271] },\n\t\t\t\t\t{ \"px\": [1248,304], \"src\": [240,144], \"f\": 0, \"d\": [110,2474,303] },\n\t\t\t\t\t{ \"px\": [1248,320], \"src\": [240,160], \"f\": 0, \"d\": [110,2474,335] },\n\t\t\t\t\t{ \"px\": [1264,288], \"src\": [256,128], \"f\": 0, \"d\": [110,2474,272] },\n\t\t\t\t\t{ \"px\": [1264,304], \"src\": [256,144], \"f\": 0, \"d\": [110,2474,304] },\n\t\t\t\t\t{ \"px\": [1264,320], \"src\": [256,160], \"f\": 0, \"d\": [110,2474,336] },\n\t\t\t\t\t{ \"px\": [1280,288], \"src\": [272,128], \"f\": 0, \"d\": [110,2474,273] },\n\t\t\t\t\t{ \"px\": [1280,304], \"src\": [272,144], \"f\": 0, \"d\": [110,2474,305] },\n\t\t\t\t\t{ \"px\": [1280,320], \"src\": [272,160], \"f\": 0, \"d\": [110,2474,337] },\n\t\t\t\t\t{ \"px\": [1296,288], \"src\": [288,128], \"f\": 0, \"d\": [110,2474,274] },\n\t\t\t\t\t{ \"px\": [1296,304], \"src\": [288,144], \"f\": 0, \"d\": [110,2474,306] },\n\t\t\t\t\t{ \"px\": [1296,320], \"src\": [288,160], \"f\": 0, \"d\": [110,2474,338] },\n\t\t\t\t\t{ \"px\": [1312,288], \"src\": [304,128], \"f\": 0, \"d\": [110,2474,275] },\n\t\t\t\t\t{ \"px\": [1312,304], \"src\": [304,144], \"f\": 0, \"d\": [110,2474,307] },\n\t\t\t\t\t{ \"px\": [1312,320], \"src\": [304,160], \"f\": 0, \"d\": [110,2474,339] },\n\t\t\t\t\t{ \"px\": [1280,288], \"src\": [240,128], \"f\": 0, \"d\": [110,2476,271] },\n\t\t\t\t\t{ \"px\": [1280,304], \"src\": [240,144], \"f\": 0, \"d\": [110,2476,303] },\n\t\t\t\t\t{ \"px\": [1280,320], \"src\": [240,160], \"f\": 0, \"d\": [110,2476,335] },\n\t\t\t\t\t{ \"px\": [1296,288], \"src\": [256,128], \"f\": 0, \"d\": [110,2476,272] },\n\t\t\t\t\t{ \"px\": [1296,304], \"src\": [256,144], \"f\": 0, \"d\": [110,2476,304] },\n\t\t\t\t\t{ \"px\": [1296,320], \"src\": [256,160], \"f\": 0, \"d\": [110,2476,336] },\n\t\t\t\t\t{ \"px\": [1312,288], \"src\": [272,128], \"f\": 0, \"d\": [110,2476,273] },\n\t\t\t\t\t{ \"px\": [1312,304], \"src\": [272,144], \"f\": 0, \"d\": [110,2476,305] },\n\t\t\t\t\t{ \"px\": [1312,320], \"src\": [272,160], \"f\": 0, \"d\": [110,2476,337] },\n\t\t\t\t\t{ \"px\": [1328,288], \"src\": [288,128], \"f\": 0, \"d\": [110,2476,274] },\n\t\t\t\t\t{ \"px\": [1328,304], \"src\": [288,144], \"f\": 0, \"d\": [110,2476,306] },\n\t\t\t\t\t{ \"px\": [1328,320], \"src\": [288,160], \"f\": 0, \"d\": [110,2476,338] },\n\t\t\t\t\t{ \"px\": [1344,288], \"src\": [304,128], \"f\": 0, \"d\": [110,2476,275] },\n\t\t\t\t\t{ \"px\": [1344,304], \"src\": [304,144], \"f\": 0, \"d\": [110,2476,307] },\n\t\t\t\t\t{ \"px\": [1344,320], \"src\": [304,160], \"f\": 0, \"d\": [110,2476,339] },\n\t\t\t\t\t{ \"px\": [1440,288], \"src\": [240,128], \"f\": 0, \"d\": [110,2486,271] },\n\t\t\t\t\t{ \"px\": [1440,304], \"src\": [240,144], \"f\": 0, \"d\": [110,2486,303] },\n\t\t\t\t\t{ \"px\": [1440,320], \"src\": [240,160], \"f\": 0, \"d\": [110,2486,335] },\n\t\t\t\t\t{ \"px\": [1456,288], \"src\": [256,128], \"f\": 0, \"d\": [110,2486,272] },\n\t\t\t\t\t{ \"px\": [1456,304], \"src\": [256,144], \"f\": 0, \"d\": [110,2486,304] },\n\t\t\t\t\t{ \"px\": [1456,320], \"src\": [256,160], \"f\": 0, \"d\": [110,2486,336] },\n\t\t\t\t\t{ \"px\": [1472,288], \"src\": [272,128], \"f\": 0, \"d\": [110,2486,273] },\n\t\t\t\t\t{ \"px\": [1472,304], \"src\": [272,144], \"f\": 0, \"d\": [110,2486,305] },\n\t\t\t\t\t{ \"px\": [1472,320], \"src\": [272,160], \"f\": 0, \"d\": [110,2486,337] },\n\t\t\t\t\t{ \"px\": [1488,288], \"src\": [288,128], \"f\": 0, \"d\": [110,2486,274] },\n\t\t\t\t\t{ \"px\": [1488,304], \"src\": [288,144], \"f\": 0, \"d\": [110,2486,306] },\n\t\t\t\t\t{ \"px\": [1488,320], \"src\": [288,160], \"f\": 0, \"d\": [110,2486,338] },\n\t\t\t\t\t{ \"px\": [1504,288], \"src\": [304,128], \"f\": 0, \"d\": [110,2486,275] },\n\t\t\t\t\t{ \"px\": [1504,304], \"src\": [304,144], \"f\": 0, \"d\": [110,2486,307] },\n\t\t\t\t\t{ \"px\": [1504,320], \"src\": [304,160], \"f\": 0, \"d\": [110,2486,339] },\n\t\t\t\t\t{ \"px\": [1504,288], \"src\": [240,128], \"f\": 0, \"d\": [110,2490,271] },\n\t\t\t\t\t{ \"px\": [1504,304], \"src\": [240,144], \"f\": 0, \"d\": [110,2490,303] },\n\t\t\t\t\t{ \"px\": [1504,320], \"src\": [240,160], \"f\": 0, \"d\": [110,2490,335] },\n\t\t\t\t\t{ \"px\": [1520,288], \"src\": [256,128], \"f\": 0, \"d\": [110,2490,272] },\n\t\t\t\t\t{ \"px\": [1520,304], \"src\": [256,144], \"f\": 0, \"d\": [110,2490,304] },\n\t\t\t\t\t{ \"px\": [1520,320], \"src\": [256,160], \"f\": 0, \"d\": [110,2490,336] },\n\t\t\t\t\t{ \"px\": [1536,288], \"src\": [272,128], \"f\": 0, \"d\": [110,2490,273] },\n\t\t\t\t\t{ \"px\": [1536,304], \"src\": [272,144], \"f\": 0, \"d\": [110,2490,305] },\n\t\t\t\t\t{ \"px\": [1536,320], \"src\": [272,160], \"f\": 0, \"d\": [110,2490,337] },\n\t\t\t\t\t{ \"px\": [1552,288], \"src\": [288,128], \"f\": 0, \"d\": [110,2490,274] },\n\t\t\t\t\t{ \"px\": [1552,304], \"src\": [288,144], \"f\": 0, \"d\": [110,2490,306] },\n\t\t\t\t\t{ \"px\": [1552,320], \"src\": [288,160], \"f\": 0, \"d\": [110,2490,338] },\n\t\t\t\t\t{ \"px\": [1568,288], \"src\": [304,128], \"f\": 0, \"d\": [110,2490,275] },\n\t\t\t\t\t{ \"px\": [1568,304], \"src\": [304,144], \"f\": 0, \"d\": [110,2490,307] },\n\t\t\t\t\t{ \"px\": [1568,320], \"src\": [304,160], \"f\": 0, \"d\": [110,2490,339] },\n\t\t\t\t\t{ \"px\": [928,304], \"src\": [240,128], \"f\": 0, \"d\": [110,2580,271] },\n\t\t\t\t\t{ \"px\": [928,320], \"src\": [240,144], \"f\": 0, \"d\": [110,2580,303] },\n\t\t\t\t\t{ \"px\": [928,336], \"src\": [240,160], \"f\": 0, \"d\": [110,2580,335] },\n\t\t\t\t\t{ \"px\": [944,304], \"src\": [256,128], \"f\": 0, \"d\": [110,2580,272] },\n\t\t\t\t\t{ \"px\": [944,320], \"src\": [256,144], \"f\": 0, \"d\": [110,2580,304] },\n\t\t\t\t\t{ \"px\": [944,336], \"src\": [256,160], \"f\": 0, \"d\": [110,2580,336] },\n\t\t\t\t\t{ \"px\": [960,304], \"src\": [272,128], \"f\": 0, \"d\": [110,2580,273] },\n\t\t\t\t\t{ \"px\": [960,320], \"src\": [272,144], \"f\": 0, \"d\": [110,2580,305] },\n\t\t\t\t\t{ \"px\": [960,336], \"src\": [272,160], \"f\": 0, \"d\": [110,2580,337] },\n\t\t\t\t\t{ \"px\": [976,304], \"src\": [288,128], \"f\": 0, \"d\": [110,2580,274] },\n\t\t\t\t\t{ \"px\": [976,320], \"src\": [288,144], \"f\": 0, \"d\": [110,2580,306] },\n\t\t\t\t\t{ \"px\": [976,336], \"src\": [288,160], \"f\": 0, \"d\": [110,2580,338] },\n\t\t\t\t\t{ \"px\": [992,304], \"src\": [304,128], \"f\": 0, \"d\": [110,2580,275] },\n\t\t\t\t\t{ \"px\": [992,320], \"src\": [304,144], \"f\": 0, \"d\": [110,2580,307] },\n\t\t\t\t\t{ \"px\": [992,336], \"src\": [304,160], \"f\": 0, \"d\": [110,2580,339] },\n\t\t\t\t\t{ \"px\": [1232,304], \"src\": [240,128], \"f\": 0, \"d\": [110,2599,271] },\n\t\t\t\t\t{ \"px\": [1232,320], \"src\": [240,144], \"f\": 0, \"d\": [110,2599,303] },\n\t\t\t\t\t{ \"px\": [1232,336], \"src\": [240,160], \"f\": 0, \"d\": [110,2599,335] },\n\t\t\t\t\t{ \"px\": [1248,304], \"src\": [256,128], \"f\": 0, \"d\": [110,2599,272] },\n\t\t\t\t\t{ \"px\": [1248,320], \"src\": [256,144], \"f\": 0, \"d\": [110,2599,304] },\n\t\t\t\t\t{ \"px\": [1248,336], \"src\": [256,160], \"f\": 0, \"d\": [110,2599,336] },\n\t\t\t\t\t{ \"px\": [1264,304], \"src\": [272,128], \"f\": 0, \"d\": [110,2599,273] },\n\t\t\t\t\t{ \"px\": [1264,320], \"src\": [272,144], \"f\": 0, \"d\": [110,2599,305] },\n\t\t\t\t\t{ \"px\": [1264,336], \"src\": [272,160], \"f\": 0, \"d\": [110,2599,337] },\n\t\t\t\t\t{ \"px\": [1280,304], \"src\": [288,128], \"f\": 0, \"d\": [110,2599,274] },\n\t\t\t\t\t{ \"px\": [1280,320], \"src\": [288,144], \"f\": 0, \"d\": [110,2599,306] },\n\t\t\t\t\t{ \"px\": [1280,336], \"src\": [288,160], \"f\": 0, \"d\": [110,2599,338] },\n\t\t\t\t\t{ \"px\": [1296,304], \"src\": [304,128], \"f\": 0, \"d\": [110,2599,275] },\n\t\t\t\t\t{ \"px\": [1296,320], \"src\": [304,144], \"f\": 0, \"d\": [110,2599,307] },\n\t\t\t\t\t{ \"px\": [1296,336], \"src\": [304,160], \"f\": 0, \"d\": [110,2599,339] },\n\t\t\t\t\t{ \"px\": [1472,304], \"src\": [240,128], \"f\": 0, \"d\": [110,2614,271] },\n\t\t\t\t\t{ \"px\": [1472,320], \"src\": [240,144], \"f\": 0, \"d\": [110,2614,303] },\n\t\t\t\t\t{ \"px\": [1472,336], \"src\": [240,160], \"f\": 0, \"d\": [110,2614,335] },\n\t\t\t\t\t{ \"px\": [1488,304], \"src\": [256,128], \"f\": 0, \"d\": [110,2614,272] },\n\t\t\t\t\t{ \"px\": [1488,320], \"src\": [256,144], \"f\": 0, \"d\": [110,2614,304] },\n\t\t\t\t\t{ \"px\": [1488,336], \"src\": [256,160], \"f\": 0, \"d\": [110,2614,336] },\n\t\t\t\t\t{ \"px\": [1504,304], \"src\": [272,128], \"f\": 0, \"d\": [110,2614,273] },\n\t\t\t\t\t{ \"px\": [1504,320], \"src\": [272,144], \"f\": 0, \"d\": [110,2614,305] },\n\t\t\t\t\t{ \"px\": [1504,336], \"src\": [272,160], \"f\": 0, \"d\": [110,2614,337] },\n\t\t\t\t\t{ \"px\": [1520,304], \"src\": [288,128], \"f\": 0, \"d\": [110,2614,274] },\n\t\t\t\t\t{ \"px\": [1520,320], \"src\": [288,144], \"f\": 0, \"d\": [110,2614,306] },\n\t\t\t\t\t{ \"px\": [1520,336], \"src\": [288,160], \"f\": 0, \"d\": [110,2614,338] },\n\t\t\t\t\t{ \"px\": [1536,304], \"src\": [304,128], \"f\": 0, \"d\": [110,2614,275] },\n\t\t\t\t\t{ \"px\": [1536,320], \"src\": [304,144], \"f\": 0, \"d\": [110,2614,307] },\n\t\t\t\t\t{ \"px\": [1536,336], \"src\": [304,160], \"f\": 0, \"d\": [110,2614,339] },\n\t\t\t\t\t{ \"px\": [1072,320], \"src\": [240,128], \"f\": 0, \"d\": [110,2715,271] },\n\t\t\t\t\t{ \"px\": [1072,336], \"src\": [240,144], \"f\": 0, \"d\": [110,2715,303] },\n\t\t\t\t\t{ \"px\": [1072,352], \"src\": [240,160], \"f\": 0, \"d\": [110,2715,335] },\n\t\t\t\t\t{ \"px\": [1088,320], \"src\": [256,128], \"f\": 0, \"d\": [110,2715,272] },\n\t\t\t\t\t{ \"px\": [1088,336], \"src\": [256,144], \"f\": 0, \"d\": [110,2715,304] },\n\t\t\t\t\t{ \"px\": [1088,352], \"src\": [256,160], \"f\": 0, \"d\": [110,2715,336] },\n\t\t\t\t\t{ \"px\": [1104,320], \"src\": [272,128], \"f\": 0, \"d\": [110,2715,273] },\n\t\t\t\t\t{ \"px\": [1104,336], \"src\": [272,144], \"f\": 0, \"d\": [110,2715,305] },\n\t\t\t\t\t{ \"px\": [1104,352], \"src\": [272,160], \"f\": 0, \"d\": [110,2715,337] },\n\t\t\t\t\t{ \"px\": [1120,320], \"src\": [288,128], \"f\": 0, \"d\": [110,2715,274] },\n\t\t\t\t\t{ \"px\": [1120,336], \"src\": [288,144], \"f\": 0, \"d\": [110,2715,306] },\n\t\t\t\t\t{ \"px\": [1120,352], \"src\": [288,160], \"f\": 0, \"d\": [110,2715,338] },\n\t\t\t\t\t{ \"px\": [1136,320], \"src\": [304,128], \"f\": 0, \"d\": [110,2715,275] },\n\t\t\t\t\t{ \"px\": [1136,336], \"src\": [304,144], \"f\": 0, \"d\": [110,2715,307] },\n\t\t\t\t\t{ \"px\": [1136,352], \"src\": [304,160], \"f\": 0, \"d\": [110,2715,339] },\n\t\t\t\t\t{ \"px\": [160,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1270,67] },\n\t\t\t\t\t{ \"px\": [176,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1271,67] },\n\t\t\t\t\t{ \"px\": [192,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1272,67] },\n\t\t\t\t\t{ \"px\": [208,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1273,67] },\n\t\t\t\t\t{ \"px\": [224,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1274,67] },\n\t\t\t\t\t{ \"px\": [240,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1275,67] },\n\t\t\t\t\t{ \"px\": [256,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1276,67] },\n\t\t\t\t\t{ \"px\": [272,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1277,67] },\n\t\t\t\t\t{ \"px\": [288,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1278,67] },\n\t\t\t\t\t{ \"px\": [304,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1279,67] },\n\t\t\t\t\t{ \"px\": [320,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1280,67] },\n\t\t\t\t\t{ \"px\": [336,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1281,67] },\n\t\t\t\t\t{ \"px\": [352,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1282,67] },\n\t\t\t\t\t{ \"px\": [368,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1283,67] },\n\t\t\t\t\t{ \"px\": [384,160], \"src\": [48,32], \"f\": 0, \"d\": [117,1284,67] },\n\t\t\t\t\t{ \"px\": [1648,176], \"src\": [48,32], \"f\": 0, \"d\": [117,1489,67] },\n\t\t\t\t\t{ \"px\": [1664,176], \"src\": [48,32], \"f\": 0, \"d\": [117,1490,67] },\n\t\t\t\t\t{ \"px\": [800,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1814,67] },\n\t\t\t\t\t{ \"px\": [816,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1815,67] },\n\t\t\t\t\t{ \"px\": [832,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1816,67] },\n\t\t\t\t\t{ \"px\": [848,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1817,67] },\n\t\t\t\t\t{ \"px\": [864,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1818,67] },\n\t\t\t\t\t{ \"px\": [880,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1819,67] },\n\t\t\t\t\t{ \"px\": [896,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1820,67] },\n\t\t\t\t\t{ \"px\": [912,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1821,67] },\n\t\t\t\t\t{ \"px\": [928,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1822,67] },\n\t\t\t\t\t{ \"px\": [944,224], \"src\": [48,32], \"f\": 0, \"d\": [117,1823,67] },\n\t\t\t\t\t{ \"px\": [1328,240], \"src\": [48,32], \"f\": 0, \"d\": [117,1973,67] },\n\t\t\t\t\t{ \"px\": [1344,240], \"src\": [48,32], \"f\": 0, \"d\": [117,1974,67] },\n\t\t\t\t\t{ \"px\": [1360,240], \"src\": [48,32], \"f\": 0, \"d\": [117,1975,67] },\n\t\t\t\t\t{ \"px\": [1376,240], \"src\": [48,32], \"f\": 0, \"d\": [117,1976,67] },\n\t\t\t\t\t{ \"px\": [1392,240], \"src\": [48,32], \"f\": 0, \"d\": [117,1977,67] },\n\t\t\t\t\t{ \"px\": [1408,240], \"src\": [48,32], \"f\": 0, \"d\": [117,1978,67] },\n\t\t\t\t\t{ \"px\": [1120,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2338,67] },\n\t\t\t\t\t{ \"px\": [1136,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2339,67] },\n\t\t\t\t\t{ \"px\": [1152,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2340,67] },\n\t\t\t\t\t{ \"px\": [1168,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2341,67] },\n\t\t\t\t\t{ \"px\": [1184,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2342,67] },\n\t\t\t\t\t{ \"px\": [1200,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2343,67] },\n\t\t\t\t\t{ \"px\": [1216,288], \"src\": [48,32], \"f\": 0, \"d\": [117,2344,67] },\n\t\t\t\t\t{ \"px\": [160,160], \"src\": [32,32], \"f\": 0, \"d\": [118,1270,66] },\n\t\t\t\t\t{ \"px\": [1648,176], \"src\": [32,32], \"f\": 0, \"d\": [118,1489,66] },\n\t\t\t\t\t{ \"px\": [800,224], \"src\": [32,32], \"f\": 0, \"d\": [118,1814,66] },\n\t\t\t\t\t{ \"px\": [1328,240], \"src\": [32,32], \"f\": 0, \"d\": [118,1973,66] },\n\t\t\t\t\t{ \"px\": [1120,288], \"src\": [32,32], \"f\": 0, \"d\": [118,2338,66] },\n\t\t\t\t\t{ \"px\": [384,160], \"src\": [64,32], \"f\": 0, \"d\": [119,1284,68] },\n\t\t\t\t\t{ \"px\": [1664,176], \"src\": [64,32], \"f\": 0, \"d\": [119,1490,68] },\n\t\t\t\t\t{ \"px\": [944,224], \"src\": [64,32], \"f\": 0, \"d\": [119,1823,68] },\n\t\t\t\t\t{ \"px\": [1408,240], \"src\": [64,32], \"f\": 0, \"d\": [119,1978,68] },\n\t\t\t\t\t{ \"px\": [1216,288], \"src\": [64,32], \"f\": 0, \"d\": [119,2344,68] }\n\t\t\t\t],\n\t\t\t\t\"seed\": 6656299,\n\t\t\t\t\"gridTiles\": [],\n\t\t\t\t\"entityInstances\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__identifier\": \"Shadows\",\n\t\t\t\t\"__type\": \"AutoLayer\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 0.43,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 74,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [],\n\t\t\t\t\"autoLayerTiles\": [\n\t\t\t\t\t{ \"px\": [80,96], \"src\": [64,128], \"f\": 0, \"d\": [76,761,260] },\n\t\t\t\t\t{ \"px\": [96,96], \"src\": [64,128], \"f\": 0, \"d\": [76,762,260] },\n\t\t\t\t\t{ \"px\": [112,96], \"src\": [64,128], \"f\": 0, \"d\": [76,763,260] },\n\t\t\t\t\t{ \"px\": [128,96], \"src\": [64,128], \"f\": 0, \"d\": [76,764,260] },\n\t\t\t\t\t{ \"px\": [144,96], \"src\": [64,128], \"f\": 0, \"d\": [76,765,260] },\n\t\t\t\t\t{ \"px\": [160,96], \"src\": [64,128], \"f\": 0, \"d\": [76,766,260] },\n\t\t\t\t\t{ \"px\": [176,96], \"src\": [64,128], \"f\": 0, \"d\": [76,767,260] },\n\t\t\t\t\t{ \"px\": [192,96], \"src\": [64,128], \"f\": 0, \"d\": [76,768,260] },\n\t\t\t\t\t{ \"px\": [208,96], \"src\": [64,128], \"f\": 0, \"d\": [76,769,260] },\n\t\t\t\t\t{ \"px\": [224,96], \"src\": [64,128], \"f\": 0, \"d\": [76,770,260] },\n\t\t\t\t\t{ \"px\": [240,96], \"src\": [64,128], \"f\": 0, \"d\": [76,771,260] },\n\t\t\t\t\t{ \"px\": [256,96], \"src\": [64,128], \"f\": 0, \"d\": [76,772,260] },\n\t\t\t\t\t{ \"px\": [272,96], \"src\": [64,128], \"f\": 0, \"d\": [76,773,260] },\n\t\t\t\t\t{ \"px\": [288,96], \"src\": [64,128], \"f\": 0, \"d\": [76,774,260] },\n\t\t\t\t\t{ \"px\": [304,96], \"src\": [64,128], \"f\": 0, \"d\": [76,775,260] },\n\t\t\t\t\t{ \"px\": [320,96], \"src\": [64,128], \"f\": 0, \"d\": [76,776,260] },\n\t\t\t\t\t{ \"px\": [336,96], \"src\": [64,128], \"f\": 0, \"d\": [76,777,260] },\n\t\t\t\t\t{ \"px\": [352,96], \"src\": [64,128], \"f\": 0, \"d\": [76,778,260] },\n\t\t\t\t\t{ \"px\": [368,96], \"src\": [64,128], \"f\": 0, \"d\": [76,779,260] },\n\t\t\t\t\t{ \"px\": [384,96], \"src\": [64,128], \"f\": 0, \"d\": [76,780,260] },\n\t\t\t\t\t{ \"px\": [400,96], \"src\": [64,128], \"f\": 0, \"d\": [76,781,260] },\n\t\t\t\t\t{ \"px\": [416,96], \"src\": [64,128], \"f\": 0, \"d\": [76,782,260] },\n\t\t\t\t\t{ \"px\": [432,96], \"src\": [64,128], \"f\": 0, \"d\": [76,783,260] },\n\t\t\t\t\t{ \"px\": [448,96], \"src\": [64,128], \"f\": 0, \"d\": [76,784,260] },\n\t\t\t\t\t{ \"px\": [464,96], \"src\": [64,128], \"f\": 0, \"d\": [76,785,260] },\n\t\t\t\t\t{ \"px\": [480,96], \"src\": [64,128], \"f\": 0, \"d\": [76,786,260] },\n\t\t\t\t\t{ \"px\": [496,96], \"src\": [64,128], \"f\": 0, \"d\": [76,787,260] },\n\t\t\t\t\t{ \"px\": [512,96], \"src\": [64,128], \"f\": 0, \"d\": [76,788,260] },\n\t\t\t\t\t{ \"px\": [528,96], \"src\": [64,128], \"f\": 0, \"d\": [76,789,260] },\n\t\t\t\t\t{ \"px\": [544,96], \"src\": [64,128], \"f\": 0, \"d\": [76,790,260] },\n\t\t\t\t\t{ \"px\": [560,96], \"src\": [64,128], \"f\": 0, \"d\": [76,791,260] },\n\t\t\t\t\t{ \"px\": [576,96], \"src\": [64,128], \"f\": 0, \"d\": [76,792,260] },\n\t\t\t\t\t{ \"px\": [592,96], \"src\": [64,128], \"f\": 0, \"d\": [76,793,260] },\n\t\t\t\t\t{ \"px\": [608,96], \"src\": [64,128], \"f\": 0, \"d\": [76,794,260] },\n\t\t\t\t\t{ \"px\": [624,96], \"src\": [64,128], \"f\": 0, \"d\": [76,795,260] },\n\t\t\t\t\t{ \"px\": [640,96], \"src\": [64,128], \"f\": 0, \"d\": [76,796,260] },\n\t\t\t\t\t{ \"px\": [656,96], \"src\": [64,128], \"f\": 0, \"d\": [76,797,260] },\n\t\t\t\t\t{ \"px\": [672,96], \"src\": [64,128], \"f\": 0, \"d\": [76,798,260] },\n\t\t\t\t\t{ \"px\": [688,96], \"src\": [64,128], \"f\": 0, \"d\": [76,799,260] },\n\t\t\t\t\t{ \"px\": [704,96], \"src\": [64,128], \"f\": 0, \"d\": [76,800,260] },\n\t\t\t\t\t{ \"px\": [720,96], \"src\": [64,128], \"f\": 0, \"d\": [76,801,260] },\n\t\t\t\t\t{ \"px\": [1568,112], \"src\": [64,128], \"f\": 0, \"d\": [76,980,260] },\n\t\t\t\t\t{ \"px\": [1584,112], \"src\": [64,128], \"f\": 0, \"d\": [76,981,260] },\n\t\t\t\t\t{ \"px\": [1632,112], \"src\": [64,128], \"f\": 0, \"d\": [76,984,260] },\n\t\t\t\t\t{ \"px\": [1648,112], \"src\": [64,128], \"f\": 0, \"d\": [76,985,260] },\n\t\t\t\t\t{ \"px\": [1696,112], \"src\": [64,128], \"f\": 0, \"d\": [76,988,260] },\n\t\t\t\t\t{ \"px\": [1712,112], \"src\": [64,128], \"f\": 0, \"d\": [76,989,260] },\n\t\t\t\t\t{ \"px\": [1760,112], \"src\": [64,128], \"f\": 0, \"d\": [76,992,260] },\n\t\t\t\t\t{ \"px\": [1776,112], \"src\": [64,128], \"f\": 0, \"d\": [76,993,260] },\n\t\t\t\t\t{ \"px\": [80,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1517,260] },\n\t\t\t\t\t{ \"px\": [96,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1518,260] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1519,260] },\n\t\t\t\t\t{ \"px\": [416,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1538,260] },\n\t\t\t\t\t{ \"px\": [432,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1539,260] },\n\t\t\t\t\t{ \"px\": [448,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1540,260] },\n\t\t\t\t\t{ \"px\": [464,192], \"src\": [64,128], \"f\": 0, \"d\": [76,1541,260] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [64,128], \"f\": 0, \"d\": [76,1669,260] },\n\t\t\t\t\t{ \"px\": [528,224], \"src\": [64,128], \"f\": 0, \"d\": [76,1797,260] },\n\t\t\t\t\t{ \"px\": [544,224], \"src\": [64,128], \"f\": 0, \"d\": [76,1798,260] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [64,128], \"f\": 0, \"d\": [76,1799,260] },\n\t\t\t\t\t{ \"px\": [592,240], \"src\": [64,128], \"f\": 0, \"d\": [76,1927,260] },\n\t\t\t\t\t{ \"px\": [1712,240], \"src\": [64,128], \"f\": 0, \"d\": [76,1997,260] },\n\t\t\t\t\t{ \"px\": [1728,240], \"src\": [64,128], \"f\": 0, \"d\": [76,1998,260] },\n\t\t\t\t\t{ \"px\": [1744,240], \"src\": [64,128], \"f\": 0, \"d\": [76,1999,260] },\n\t\t\t\t\t{ \"px\": [1760,240], \"src\": [64,128], \"f\": 0, \"d\": [76,2000,260] },\n\t\t\t\t\t{ \"px\": [1776,240], \"src\": [64,128], \"f\": 0, \"d\": [76,2001,260] },\n\t\t\t\t\t{ \"px\": [624,272], \"src\": [64,128], \"f\": 0, \"d\": [76,2181,260] },\n\t\t\t\t\t{ \"px\": [640,272], \"src\": [64,128], \"f\": 0, \"d\": [76,2182,260] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [64,128], \"f\": 0, \"d\": [76,2183,260] },\n\t\t\t\t\t{ \"px\": [688,304], \"src\": [64,128], \"f\": 0, \"d\": [76,2437,260] },\n\t\t\t\t\t{ \"px\": [704,304], \"src\": [64,128], \"f\": 0, \"d\": [76,2438,260] },\n\t\t\t\t\t{ \"px\": [720,304], \"src\": [64,128], \"f\": 0, \"d\": [76,2439,260] },\n\t\t\t\t\t{ \"px\": [736,304], \"src\": [64,128], \"f\": 0, \"d\": [76,2440,260] },\n\t\t\t\t\t{ \"px\": [752,304], \"src\": [64,128], \"f\": 0, \"d\": [76,2441,260] },\n\t\t\t\t\t{ \"px\": [720,96], \"src\": [80,128], \"f\": 0, \"d\": [77,801,261] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [80,128], \"f\": 0, \"d\": [77,1519,261] },\n\t\t\t\t\t{ \"px\": [464,192], \"src\": [80,128], \"f\": 0, \"d\": [77,1541,261] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [80,128], \"f\": 0, \"d\": [77,1669,261] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [80,128], \"f\": 0, \"d\": [77,1799,261] },\n\t\t\t\t\t{ \"px\": [592,240], \"src\": [80,128], \"f\": 0, \"d\": [77,1927,261] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [80,128], \"f\": 0, \"d\": [77,2183,261] },\n\t\t\t\t\t{ \"px\": [736,112], \"src\": [48,128], \"f\": 0, \"d\": [78,928,259] },\n\t\t\t\t\t{ \"px\": [400,192], \"src\": [48,128], \"f\": 0, \"d\": [78,1537,259] },\n\t\t\t\t\t{ \"px\": [480,208], \"src\": [48,128], \"f\": 0, \"d\": [78,1668,259] },\n\t\t\t\t\t{ \"px\": [512,224], \"src\": [48,128], \"f\": 0, \"d\": [78,1796,259] },\n\t\t\t\t\t{ \"px\": [128,240], \"src\": [48,128], \"f\": 0, \"d\": [78,1898,259] },\n\t\t\t\t\t{ \"px\": [144,240], \"src\": [48,128], \"f\": 1, \"d\": [78,1899,259] },\n\t\t\t\t\t{ \"px\": [576,240], \"src\": [48,128], \"f\": 0, \"d\": [78,1926,259] },\n\t\t\t\t\t{ \"px\": [1792,240], \"src\": [48,128], \"f\": 1, \"d\": [78,2002,259] },\n\t\t\t\t\t{ \"px\": [608,272], \"src\": [48,128], \"f\": 0, \"d\": [78,2180,259] },\n\t\t\t\t\t{ \"px\": [672,304], \"src\": [48,128], \"f\": 0, \"d\": [78,2436,259] }\n\t\t\t\t],\n\t\t\t\t\"seed\": 1169111,\n\t\t\t\t\"gridTiles\": [],\n\t\t\t\t\"entityInstances\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__identifier\": \"BgElements\",\n\t\t\t\t\"__type\": \"AutoLayer\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 1,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 68,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [],\n\t\t\t\t\"autoLayerTiles\": [\n\t\t\t\t\t{ \"px\": [1584,0], \"src\": [160,0], \"f\": 0, \"d\": [64,352,10] },\n\t\t\t\t\t{ \"px\": [1584,16], \"src\": [160,16], \"f\": 0, \"d\": [64,352,42] },\n\t\t\t\t\t{ \"px\": [1584,32], \"src\": [160,32], \"f\": 0, \"d\": [64,352,74] },\n\t\t\t\t\t{ \"px\": [1600,0], \"src\": [176,0], \"f\": 0, \"d\": [64,352,11] },\n\t\t\t\t\t{ \"px\": [1600,16], \"src\": [176,16], \"f\": 0, \"d\": [64,352,43] },\n\t\t\t\t\t{ \"px\": [1600,32], \"src\": [176,32], \"f\": 0, \"d\": [64,352,75] },\n\t\t\t\t\t{ \"px\": [1616,0], \"src\": [192,0], \"f\": 0, \"d\": [64,352,12] },\n\t\t\t\t\t{ \"px\": [1616,16], \"src\": [192,16], \"f\": 0, \"d\": [64,352,44] },\n\t\t\t\t\t{ \"px\": [1616,32], \"src\": [192,32], \"f\": 0, \"d\": [64,352,76] },\n\t\t\t\t\t{ \"px\": [1648,0], \"src\": [160,0], \"f\": 0, \"d\": [64,356,10] },\n\t\t\t\t\t{ \"px\": [1648,16], \"src\": [160,16], \"f\": 0, \"d\": [64,356,42] },\n\t\t\t\t\t{ \"px\": [1648,32], \"src\": [160,32], \"f\": 0, \"d\": [64,356,74] },\n\t\t\t\t\t{ \"px\": [1664,0], \"src\": [176,0], \"f\": 0, \"d\": [64,356,11] },\n\t\t\t\t\t{ \"px\": [1664,16], \"src\": [176,16], \"f\": 0, \"d\": [64,356,43] },\n\t\t\t\t\t{ \"px\": [1664,32], \"src\": [176,32], \"f\": 0, \"d\": [64,356,75] },\n\t\t\t\t\t{ \"px\": [1680,0], \"src\": [192,0], \"f\": 0, \"d\": [64,356,12] },\n\t\t\t\t\t{ \"px\": [1680,16], \"src\": [192,16], \"f\": 0, \"d\": [64,356,44] },\n\t\t\t\t\t{ \"px\": [1680,32], \"src\": [192,32], \"f\": 0, \"d\": [64,356,76] },\n\t\t\t\t\t{ \"px\": [1584,256], \"src\": [160,0], \"f\": 0, \"d\": [64,2368,10] },\n\t\t\t\t\t{ \"px\": [1584,272], \"src\": [160,16], \"f\": 0, \"d\": [64,2368,42] },\n\t\t\t\t\t{ \"px\": [1584,288], \"src\": [160,32], \"f\": 0, \"d\": [64,2368,74] },\n\t\t\t\t\t{ \"px\": [1600,256], \"src\": [176,0], \"f\": 0, \"d\": [64,2368,11] },\n\t\t\t\t\t{ \"px\": [1600,272], \"src\": [176,16], \"f\": 0, \"d\": [64,2368,43] },\n\t\t\t\t\t{ \"px\": [1600,288], \"src\": [176,32], \"f\": 0, \"d\": [64,2368,75] },\n\t\t\t\t\t{ \"px\": [1616,256], \"src\": [192,0], \"f\": 0, \"d\": [64,2368,12] },\n\t\t\t\t\t{ \"px\": [1616,272], \"src\": [192,16], \"f\": 0, \"d\": [64,2368,44] },\n\t\t\t\t\t{ \"px\": [1616,288], \"src\": [192,32], \"f\": 0, \"d\": [64,2368,76] },\n\t\t\t\t\t{ \"px\": [304,272], \"src\": [160,0], \"f\": 0, \"d\": [64,2414,10] },\n\t\t\t\t\t{ \"px\": [304,288], \"src\": [160,16], \"f\": 0, \"d\": [64,2414,42] },\n\t\t\t\t\t{ \"px\": [304,304], \"src\": [160,32], \"f\": 0, \"d\": [64,2414,74] },\n\t\t\t\t\t{ \"px\": [320,272], \"src\": [176,0], \"f\": 0, \"d\": [64,2414,11] },\n\t\t\t\t\t{ \"px\": [320,288], \"src\": [176,16], \"f\": 0, \"d\": [64,2414,43] },\n\t\t\t\t\t{ \"px\": [320,304], \"src\": [176,32], \"f\": 0, \"d\": [64,2414,75] },\n\t\t\t\t\t{ \"px\": [336,272], \"src\": [192,0], \"f\": 0, \"d\": [64,2414,12] },\n\t\t\t\t\t{ \"px\": [336,288], \"src\": [192,16], \"f\": 0, \"d\": [64,2414,44] },\n\t\t\t\t\t{ \"px\": [336,304], \"src\": [192,32], \"f\": 0, \"d\": [64,2414,76] },\n\t\t\t\t\t{ \"px\": [944,336], \"src\": [160,0], \"f\": 0, \"d\": [64,2958,10] },\n\t\t\t\t\t{ \"px\": [944,352], \"src\": [160,16], \"f\": 0, \"d\": [64,2958,42] },\n\t\t\t\t\t{ \"px\": [944,368], \"src\": [160,32], \"f\": 0, \"d\": [64,2958,74] },\n\t\t\t\t\t{ \"px\": [960,336], \"src\": [176,0], \"f\": 0, \"d\": [64,2958,11] },\n\t\t\t\t\t{ \"px\": [960,352], \"src\": [176,16], \"f\": 0, \"d\": [64,2958,43] },\n\t\t\t\t\t{ \"px\": [960,368], \"src\": [176,32], \"f\": 0, \"d\": [64,2958,75] },\n\t\t\t\t\t{ \"px\": [976,336], \"src\": [192,0], \"f\": 0, \"d\": [64,2958,12] },\n\t\t\t\t\t{ \"px\": [976,352], \"src\": [192,16], \"f\": 0, \"d\": [64,2958,44] },\n\t\t\t\t\t{ \"px\": [976,368], \"src\": [192,32], \"f\": 0, \"d\": [64,2958,76] },\n\t\t\t\t\t{ \"px\": [1576,0], \"src\": [208,0], \"f\": 0, \"d\": [65,351,13] },\n\t\t\t\t\t{ \"px\": [1576,16], \"src\": [208,16], \"f\": 0, \"d\": [65,351,45] },\n\t\t\t\t\t{ \"px\": [1576,32], \"src\": [208,32], \"f\": 0, \"d\": [65,351,77] },\n\t\t\t\t\t{ \"px\": [1592,0], \"src\": [224,0], \"f\": 0, \"d\": [65,351,14] },\n\t\t\t\t\t{ \"px\": [1592,16], \"src\": [224,16], \"f\": 0, \"d\": [65,351,46] },\n\t\t\t\t\t{ \"px\": [1592,32], \"src\": [224,32], \"f\": 0, \"d\": [65,351,78] },\n\t\t\t\t\t{ \"px\": [232,272], \"src\": [208,0], \"f\": 0, \"d\": [65,2409,13] },\n\t\t\t\t\t{ \"px\": [232,288], \"src\": [208,16], \"f\": 0, \"d\": [65,2409,45] },\n\t\t\t\t\t{ \"px\": [232,304], \"src\": [208,32], \"f\": 0, \"d\": [65,2409,77] },\n\t\t\t\t\t{ \"px\": [248,272], \"src\": [224,0], \"f\": 0, \"d\": [65,2409,14] },\n\t\t\t\t\t{ \"px\": [248,288], \"src\": [224,16], \"f\": 0, \"d\": [65,2409,46] },\n\t\t\t\t\t{ \"px\": [248,304], \"src\": [224,32], \"f\": 0, \"d\": [65,2409,78] },\n\t\t\t\t\t{ \"px\": [280,272], \"src\": [208,0], \"f\": 0, \"d\": [65,2412,13] },\n\t\t\t\t\t{ \"px\": [280,288], \"src\": [208,16], \"f\": 0, \"d\": [65,2412,45] },\n\t\t\t\t\t{ \"px\": [280,304], \"src\": [208,32], \"f\": 0, \"d\": [65,2412,77] },\n\t\t\t\t\t{ \"px\": [296,272], \"src\": [224,0], \"f\": 0, \"d\": [65,2412,14] },\n\t\t\t\t\t{ \"px\": [296,288], \"src\": [224,16], \"f\": 0, \"d\": [65,2412,46] },\n\t\t\t\t\t{ \"px\": [296,304], \"src\": [224,32], \"f\": 0, \"d\": [65,2412,78] },\n\t\t\t\t\t{ \"px\": [1384,320], \"src\": [208,0], \"f\": 0, \"d\": [65,2859,13] },\n\t\t\t\t\t{ \"px\": [1384,336], \"src\": [208,16], \"f\": 0, \"d\": [65,2859,45] },\n\t\t\t\t\t{ \"px\": [1384,352], \"src\": [208,32], \"f\": 0, \"d\": [65,2859,77] },\n\t\t\t\t\t{ \"px\": [1400,320], \"src\": [224,0], \"f\": 0, \"d\": [65,2859,14] },\n\t\t\t\t\t{ \"px\": [1400,336], \"src\": [224,16], \"f\": 0, \"d\": [65,2859,46] },\n\t\t\t\t\t{ \"px\": [1400,352], \"src\": [224,32], \"f\": 0, \"d\": [65,2859,78] },\n\t\t\t\t\t{ \"px\": [808,336], \"src\": [208,0], \"f\": 0, \"d\": [65,2949,13] },\n\t\t\t\t\t{ \"px\": [808,352], \"src\": [208,16], \"f\": 0, \"d\": [65,2949,45] },\n\t\t\t\t\t{ \"px\": [808,368], \"src\": [208,32], \"f\": 0, \"d\": [65,2949,77] },\n\t\t\t\t\t{ \"px\": [824,336], \"src\": [224,0], \"f\": 0, \"d\": [65,2949,14] },\n\t\t\t\t\t{ \"px\": [824,352], \"src\": [224,16], \"f\": 0, \"d\": [65,2949,46] },\n\t\t\t\t\t{ \"px\": [824,368], \"src\": [224,32], \"f\": 0, \"d\": [65,2949,78] },\n\t\t\t\t\t{ \"px\": [904,336], \"src\": [208,0], \"f\": 0, \"d\": [65,2955,13] },\n\t\t\t\t\t{ \"px\": [904,352], \"src\": [208,16], \"f\": 0, \"d\": [65,2955,45] },\n\t\t\t\t\t{ \"px\": [904,368], \"src\": [208,32], \"f\": 0, \"d\": [65,2955,77] },\n\t\t\t\t\t{ \"px\": [920,336], \"src\": [224,0], \"f\": 0, \"d\": [65,2955,14] },\n\t\t\t\t\t{ \"px\": [920,352], \"src\": [224,16], \"f\": 0, \"d\": [65,2955,46] },\n\t\t\t\t\t{ \"px\": [920,368], \"src\": [224,32], \"f\": 0, \"d\": [65,2955,78] },\n\t\t\t\t\t{ \"px\": [952,336], \"src\": [208,0], \"f\": 0, \"d\": [65,2958,13] },\n\t\t\t\t\t{ \"px\": [952,352], \"src\": [208,16], \"f\": 0, \"d\": [65,2958,45] },\n\t\t\t\t\t{ \"px\": [952,368], \"src\": [208,32], \"f\": 0, \"d\": [65,2958,77] },\n\t\t\t\t\t{ \"px\": [968,336], \"src\": [224,0], \"f\": 0, \"d\": [65,2958,14] },\n\t\t\t\t\t{ \"px\": [968,352], \"src\": [224,16], \"f\": 0, \"d\": [65,2958,46] },\n\t\t\t\t\t{ \"px\": [968,368], \"src\": [224,32], \"f\": 0, \"d\": [65,2958,78] },\n\t\t\t\t\t{ \"px\": [1048,336], \"src\": [208,0], \"f\": 0, \"d\": [65,2964,13] },\n\t\t\t\t\t{ \"px\": [1048,352], \"src\": [208,16], \"f\": 0, \"d\": [65,2964,45] },\n\t\t\t\t\t{ \"px\": [1048,368], \"src\": [208,32], \"f\": 0, \"d\": [65,2964,77] },\n\t\t\t\t\t{ \"px\": [1064,336], \"src\": [224,0], \"f\": 0, \"d\": [65,2964,14] },\n\t\t\t\t\t{ \"px\": [1064,352], \"src\": [224,16], \"f\": 0, \"d\": [65,2964,46] },\n\t\t\t\t\t{ \"px\": [1064,368], \"src\": [224,32], \"f\": 0, \"d\": [65,2964,78] },\n\t\t\t\t\t{ \"px\": [1096,336], \"src\": [208,0], \"f\": 0, \"d\": [65,2967,13] },\n\t\t\t\t\t{ \"px\": [1096,352], \"src\": [208,16], \"f\": 0, \"d\": [65,2967,45] },\n\t\t\t\t\t{ \"px\": [1096,368], \"src\": [208,32], \"f\": 0, \"d\": [65,2967,77] },\n\t\t\t\t\t{ \"px\": [1112,336], \"src\": [224,0], \"f\": 0, \"d\": [65,2967,14] },\n\t\t\t\t\t{ \"px\": [1112,352], \"src\": [224,16], \"f\": 0, \"d\": [65,2967,46] },\n\t\t\t\t\t{ \"px\": [1112,368], \"src\": [224,32], \"f\": 0, \"d\": [65,2967,78] },\n\t\t\t\t\t{ \"px\": [1144,336], \"src\": [208,0], \"f\": 0, \"d\": [65,2970,13] },\n\t\t\t\t\t{ \"px\": [1144,352], \"src\": [208,16], \"f\": 0, \"d\": [65,2970,45] },\n\t\t\t\t\t{ \"px\": [1144,368], \"src\": [208,32], \"f\": 0, \"d\": [65,2970,77] },\n\t\t\t\t\t{ \"px\": [1160,336], \"src\": [224,0], \"f\": 0, \"d\": [65,2970,14] },\n\t\t\t\t\t{ \"px\": [1160,352], \"src\": [224,16], \"f\": 0, \"d\": [65,2970,46] },\n\t\t\t\t\t{ \"px\": [1160,368], \"src\": [224,32], \"f\": 0, \"d\": [65,2970,78] },\n\t\t\t\t\t{ \"px\": [1192,336], \"src\": [240,0], \"f\": 0, \"d\": [66,2973,15] },\n\t\t\t\t\t{ \"px\": [1192,352], \"src\": [240,16], \"f\": 0, \"d\": [66,2973,47] },\n\t\t\t\t\t{ \"px\": [1192,368], \"src\": [240,32], \"f\": 0, \"d\": [66,2973,79] },\n\t\t\t\t\t{ \"px\": [1208,336], \"src\": [256,0], \"f\": 0, \"d\": [66,2973,16] },\n\t\t\t\t\t{ \"px\": [1208,352], \"src\": [256,16], \"f\": 0, \"d\": [66,2973,48] },\n\t\t\t\t\t{ \"px\": [1208,368], \"src\": [256,32], \"f\": 0, \"d\": [66,2973,80] },\n\t\t\t\t\t{ \"px\": [944,336], \"src\": [272,0], \"f\": 0, \"d\": [67,2958,17] },\n\t\t\t\t\t{ \"px\": [944,352], \"src\": [272,16], \"f\": 0, \"d\": [67,2958,49] },\n\t\t\t\t\t{ \"px\": [944,368], \"src\": [272,32], \"f\": 0, \"d\": [67,2958,81] },\n\t\t\t\t\t{ \"px\": [960,336], \"src\": [288,0], \"f\": 0, \"d\": [67,2958,18] },\n\t\t\t\t\t{ \"px\": [960,352], \"src\": [288,16], \"f\": 0, \"d\": [67,2958,50] },\n\t\t\t\t\t{ \"px\": [960,368], \"src\": [288,32], \"f\": 0, \"d\": [67,2958,82] },\n\t\t\t\t\t{ \"px\": [976,336], \"src\": [304,0], \"f\": 0, \"d\": [67,2958,19] },\n\t\t\t\t\t{ \"px\": [976,352], \"src\": [304,16], \"f\": 0, \"d\": [67,2958,51] },\n\t\t\t\t\t{ \"px\": [976,368], \"src\": [304,32], \"f\": 0, \"d\": [67,2958,83] },\n\t\t\t\t\t{ \"px\": [1072,336], \"src\": [272,0], \"f\": 0, \"d\": [67,2966,17] },\n\t\t\t\t\t{ \"px\": [1072,352], \"src\": [272,16], \"f\": 0, \"d\": [67,2966,49] },\n\t\t\t\t\t{ \"px\": [1072,368], \"src\": [272,32], \"f\": 0, \"d\": [67,2966,81] },\n\t\t\t\t\t{ \"px\": [1088,336], \"src\": [288,0], \"f\": 0, \"d\": [67,2966,18] },\n\t\t\t\t\t{ \"px\": [1088,352], \"src\": [288,16], \"f\": 0, \"d\": [67,2966,50] },\n\t\t\t\t\t{ \"px\": [1088,368], \"src\": [288,32], \"f\": 0, \"d\": [67,2966,82] },\n\t\t\t\t\t{ \"px\": [1104,336], \"src\": [304,0], \"f\": 0, \"d\": [67,2966,19] },\n\t\t\t\t\t{ \"px\": [1104,352], \"src\": [304,16], \"f\": 0, \"d\": [67,2966,51] },\n\t\t\t\t\t{ \"px\": [1104,368], \"src\": [304,32], \"f\": 0, \"d\": [67,2966,83] },\n\t\t\t\t\t{ \"px\": [1136,336], \"src\": [272,0], \"f\": 0, \"d\": [67,2970,17] },\n\t\t\t\t\t{ \"px\": [1136,352], \"src\": [272,16], \"f\": 0, \"d\": [67,2970,49] },\n\t\t\t\t\t{ \"px\": [1136,368], \"src\": [272,32], \"f\": 0, \"d\": [67,2970,81] },\n\t\t\t\t\t{ \"px\": [1152,336], \"src\": [288,0], \"f\": 0, \"d\": [67,2970,18] },\n\t\t\t\t\t{ \"px\": [1152,352], \"src\": [288,16], \"f\": 0, \"d\": [67,2970,50] },\n\t\t\t\t\t{ \"px\": [1152,368], \"src\": [288,32], \"f\": 0, \"d\": [67,2970,82] },\n\t\t\t\t\t{ \"px\": [1168,336], \"src\": [304,0], \"f\": 0, \"d\": [67,2970,19] },\n\t\t\t\t\t{ \"px\": [1168,352], \"src\": [304,16], \"f\": 0, \"d\": [67,2970,51] },\n\t\t\t\t\t{ \"px\": [1168,368], \"src\": [304,32], \"f\": 0, \"d\": [67,2970,83] },\n\t\t\t\t\t{ \"px\": [80,96], \"src\": [0,64], \"f\": 0, \"d\": [72,761,128] },\n\t\t\t\t\t{ \"px\": [96,96], \"src\": [0,64], \"f\": 0, \"d\": [72,762,128] },\n\t\t\t\t\t{ \"px\": [112,96], \"src\": [0,64], \"f\": 0, \"d\": [72,763,128] },\n\t\t\t\t\t{ \"px\": [128,96], \"src\": [0,64], \"f\": 0, \"d\": [72,764,128] },\n\t\t\t\t\t{ \"px\": [144,96], \"src\": [0,64], \"f\": 0, \"d\": [72,765,128] },\n\t\t\t\t\t{ \"px\": [160,96], \"src\": [0,64], \"f\": 0, \"d\": [72,766,128] },\n\t\t\t\t\t{ \"px\": [384,96], \"src\": [0,64], \"f\": 0, \"d\": [72,780,128] },\n\t\t\t\t\t{ \"px\": [400,96], \"src\": [0,64], \"f\": 0, \"d\": [72,781,128] },\n\t\t\t\t\t{ \"px\": [448,96], \"src\": [0,64], \"f\": 0, \"d\": [72,784,128] },\n\t\t\t\t\t{ \"px\": [464,96], \"src\": [0,64], \"f\": 0, \"d\": [72,785,128] },\n\t\t\t\t\t{ \"px\": [512,96], \"src\": [0,64], \"f\": 0, \"d\": [72,788,128] },\n\t\t\t\t\t{ \"px\": [528,96], \"src\": [0,64], \"f\": 0, \"d\": [72,789,128] },\n\t\t\t\t\t{ \"px\": [576,96], \"src\": [0,64], \"f\": 0, \"d\": [72,792,128] },\n\t\t\t\t\t{ \"px\": [592,96], \"src\": [0,64], \"f\": 0, \"d\": [72,793,128] },\n\t\t\t\t\t{ \"px\": [608,96], \"src\": [0,64], \"f\": 0, \"d\": [72,794,128] },\n\t\t\t\t\t{ \"px\": [656,96], \"src\": [0,64], \"f\": 0, \"d\": [72,797,128] },\n\t\t\t\t\t{ \"px\": [672,96], \"src\": [0,64], \"f\": 0, \"d\": [72,798,128] },\n\t\t\t\t\t{ \"px\": [720,96], \"src\": [0,64], \"f\": 0, \"d\": [72,801,128] },\n\t\t\t\t\t{ \"px\": [80,112], \"src\": [0,64], \"f\": 0, \"d\": [72,887,128] },\n\t\t\t\t\t{ \"px\": [96,112], \"src\": [0,64], \"f\": 0, \"d\": [72,888,128] },\n\t\t\t\t\t{ \"px\": [112,112], \"src\": [0,64], \"f\": 0, \"d\": [72,889,128] },\n\t\t\t\t\t{ \"px\": [128,112], \"src\": [0,64], \"f\": 0, \"d\": [72,890,128] },\n\t\t\t\t\t{ \"px\": [144,112], \"src\": [0,64], \"f\": 0, \"d\": [72,891,128] },\n\t\t\t\t\t{ \"px\": [592,112], \"src\": [0,64], \"f\": 0, \"d\": [72,919,128] },\n\t\t\t\t\t{ \"px\": [80,128], \"src\": [0,64], \"f\": 0, \"d\": [72,1013,128] },\n\t\t\t\t\t{ \"px\": [96,128], \"src\": [0,64], \"f\": 0, \"d\": [72,1014,128] },\n\t\t\t\t\t{ \"px\": [112,128], \"src\": [0,64], \"f\": 0, \"d\": [72,1015,128] },\n\t\t\t\t\t{ \"px\": [128,128], \"src\": [0,64], \"f\": 0, \"d\": [72,1016,128] },\n\t\t\t\t\t{ \"px\": [144,128], \"src\": [0,64], \"f\": 0, \"d\": [72,1017,128] },\n\t\t\t\t\t{ \"px\": [592,128], \"src\": [0,64], \"f\": 0, \"d\": [72,1045,128] },\n\t\t\t\t\t{ \"px\": [80,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1139,128] },\n\t\t\t\t\t{ \"px\": [96,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1140,128] },\n\t\t\t\t\t{ \"px\": [112,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1141,128] },\n\t\t\t\t\t{ \"px\": [128,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1142,128] },\n\t\t\t\t\t{ \"px\": [144,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1143,128] },\n\t\t\t\t\t{ \"px\": [160,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1144,128] },\n\t\t\t\t\t{ \"px\": [384,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1158,128] },\n\t\t\t\t\t{ \"px\": [400,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1159,128] },\n\t\t\t\t\t{ \"px\": [448,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1162,128] },\n\t\t\t\t\t{ \"px\": [464,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1163,128] },\n\t\t\t\t\t{ \"px\": [512,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1166,128] },\n\t\t\t\t\t{ \"px\": [528,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1167,128] },\n\t\t\t\t\t{ \"px\": [576,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1170,128] },\n\t\t\t\t\t{ \"px\": [592,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1171,128] },\n\t\t\t\t\t{ \"px\": [608,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1172,128] },\n\t\t\t\t\t{ \"px\": [656,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1175,128] },\n\t\t\t\t\t{ \"px\": [672,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1176,128] },\n\t\t\t\t\t{ \"px\": [720,144], \"src\": [0,64], \"f\": 0, \"d\": [72,1179,128] },\n\t\t\t\t\t{ \"px\": [80,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1517,128] },\n\t\t\t\t\t{ \"px\": [96,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1518,128] },\n\t\t\t\t\t{ \"px\": [112,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1519,128] },\n\t\t\t\t\t{ \"px\": [416,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1538,128] },\n\t\t\t\t\t{ \"px\": [432,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1539,128] },\n\t\t\t\t\t{ \"px\": [448,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1540,128] },\n\t\t\t\t\t{ \"px\": [464,192], \"src\": [0,64], \"f\": 0, \"d\": [72,1541,128] },\n\t\t\t\t\t{ \"px\": [80,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1643,128] },\n\t\t\t\t\t{ \"px\": [96,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1644,128] },\n\t\t\t\t\t{ \"px\": [112,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1645,128] },\n\t\t\t\t\t{ \"px\": [416,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1664,128] },\n\t\t\t\t\t{ \"px\": [432,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1665,128] },\n\t\t\t\t\t{ \"px\": [448,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1666,128] },\n\t\t\t\t\t{ \"px\": [464,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1667,128] },\n\t\t\t\t\t{ \"px\": [480,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1668,128] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [0,64], \"f\": 0, \"d\": [72,1669,128] },\n\t\t\t\t\t{ \"px\": [80,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1769,128] },\n\t\t\t\t\t{ \"px\": [96,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1770,128] },\n\t\t\t\t\t{ \"px\": [112,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1771,128] },\n\t\t\t\t\t{ \"px\": [416,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1790,128] },\n\t\t\t\t\t{ \"px\": [432,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1791,128] },\n\t\t\t\t\t{ \"px\": [448,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1792,128] },\n\t\t\t\t\t{ \"px\": [464,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1793,128] },\n\t\t\t\t\t{ \"px\": [480,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1794,128] },\n\t\t\t\t\t{ \"px\": [496,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1795,128] },\n\t\t\t\t\t{ \"px\": [512,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1796,128] },\n\t\t\t\t\t{ \"px\": [528,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1797,128] },\n\t\t\t\t\t{ \"px\": [544,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1798,128] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1799,128] },\n\t\t\t\t\t{ \"px\": [1808,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1877,128] },\n\t\t\t\t\t{ \"px\": [1824,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1878,128] },\n\t\t\t\t\t{ \"px\": [1840,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1879,128] },\n\t\t\t\t\t{ \"px\": [1856,224], \"src\": [0,64], \"f\": 0, \"d\": [72,1880,128] },\n\t\t\t\t\t{ \"px\": [80,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1895,128] },\n\t\t\t\t\t{ \"px\": [96,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1896,128] },\n\t\t\t\t\t{ \"px\": [112,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1897,128] },\n\t\t\t\t\t{ \"px\": [128,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1898,128] },\n\t\t\t\t\t{ \"px\": [416,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1916,128] },\n\t\t\t\t\t{ \"px\": [432,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1917,128] },\n\t\t\t\t\t{ \"px\": [448,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1918,128] },\n\t\t\t\t\t{ \"px\": [464,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1919,128] },\n\t\t\t\t\t{ \"px\": [480,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1920,128] },\n\t\t\t\t\t{ \"px\": [496,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1921,128] },\n\t\t\t\t\t{ \"px\": [512,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1922,128] },\n\t\t\t\t\t{ \"px\": [528,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1923,128] },\n\t\t\t\t\t{ \"px\": [544,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1924,128] },\n\t\t\t\t\t{ \"px\": [560,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1925,128] },\n\t\t\t\t\t{ \"px\": [576,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1926,128] },\n\t\t\t\t\t{ \"px\": [592,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1927,128] },\n\t\t\t\t\t{ \"px\": [1728,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1998,128] },\n\t\t\t\t\t{ \"px\": [1744,240], \"src\": [0,64], \"f\": 0, \"d\": [72,1999,128] },\n\t\t\t\t\t{ \"px\": [1760,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2000,128] },\n\t\t\t\t\t{ \"px\": [1776,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2001,128] },\n\t\t\t\t\t{ \"px\": [1792,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2002,128] },\n\t\t\t\t\t{ \"px\": [1808,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2003,128] },\n\t\t\t\t\t{ \"px\": [1824,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2004,128] },\n\t\t\t\t\t{ \"px\": [1840,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2005,128] },\n\t\t\t\t\t{ \"px\": [1856,240], \"src\": [0,64], \"f\": 0, \"d\": [72,2006,128] },\n\t\t\t\t\t{ \"px\": [80,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2021,128] },\n\t\t\t\t\t{ \"px\": [96,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2022,128] },\n\t\t\t\t\t{ \"px\": [112,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2023,128] },\n\t\t\t\t\t{ \"px\": [128,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2024,128] },\n\t\t\t\t\t{ \"px\": [416,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2042,128] },\n\t\t\t\t\t{ \"px\": [432,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2043,128] },\n\t\t\t\t\t{ \"px\": [448,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2044,128] },\n\t\t\t\t\t{ \"px\": [464,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2045,128] },\n\t\t\t\t\t{ \"px\": [480,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2046,128] },\n\t\t\t\t\t{ \"px\": [496,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2047,128] },\n\t\t\t\t\t{ \"px\": [512,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2048,128] },\n\t\t\t\t\t{ \"px\": [528,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2049,128] },\n\t\t\t\t\t{ \"px\": [544,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2050,128] },\n\t\t\t\t\t{ \"px\": [560,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2051,128] },\n\t\t\t\t\t{ \"px\": [576,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2052,128] },\n\t\t\t\t\t{ \"px\": [592,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2053,128] },\n\t\t\t\t\t{ \"px\": [1728,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2124,128] },\n\t\t\t\t\t{ \"px\": [1744,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2125,128] },\n\t\t\t\t\t{ \"px\": [1760,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2126,128] },\n\t\t\t\t\t{ \"px\": [1776,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2127,128] },\n\t\t\t\t\t{ \"px\": [1792,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2128,128] },\n\t\t\t\t\t{ \"px\": [1808,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2129,128] },\n\t\t\t\t\t{ \"px\": [1824,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2130,128] },\n\t\t\t\t\t{ \"px\": [1840,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2131,128] },\n\t\t\t\t\t{ \"px\": [1856,256], \"src\": [0,64], \"f\": 0, \"d\": [72,2132,128] },\n\t\t\t\t\t{ \"px\": [80,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2147,128] },\n\t\t\t\t\t{ \"px\": [96,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2148,128] },\n\t\t\t\t\t{ \"px\": [112,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2149,128] },\n\t\t\t\t\t{ \"px\": [128,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2150,128] },\n\t\t\t\t\t{ \"px\": [416,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2168,128] },\n\t\t\t\t\t{ \"px\": [432,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2169,128] },\n\t\t\t\t\t{ \"px\": [448,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2170,128] },\n\t\t\t\t\t{ \"px\": [464,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2171,128] },\n\t\t\t\t\t{ \"px\": [480,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2172,128] },\n\t\t\t\t\t{ \"px\": [496,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2173,128] },\n\t\t\t\t\t{ \"px\": [512,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2174,128] },\n\t\t\t\t\t{ \"px\": [528,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2175,128] },\n\t\t\t\t\t{ \"px\": [544,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2176,128] },\n\t\t\t\t\t{ \"px\": [560,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2177,128] },\n\t\t\t\t\t{ \"px\": [576,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2178,128] },\n\t\t\t\t\t{ \"px\": [592,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2179,128] },\n\t\t\t\t\t{ \"px\": [608,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2180,128] },\n\t\t\t\t\t{ \"px\": [624,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2181,128] },\n\t\t\t\t\t{ \"px\": [640,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2182,128] },\n\t\t\t\t\t{ \"px\": [656,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2183,128] },\n\t\t\t\t\t{ \"px\": [1728,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2250,128] },\n\t\t\t\t\t{ \"px\": [1744,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2251,128] },\n\t\t\t\t\t{ \"px\": [1760,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2252,128] },\n\t\t\t\t\t{ \"px\": [1776,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2253,128] },\n\t\t\t\t\t{ \"px\": [1792,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2254,128] },\n\t\t\t\t\t{ \"px\": [1808,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2255,128] },\n\t\t\t\t\t{ \"px\": [1824,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2256,128] },\n\t\t\t\t\t{ \"px\": [1840,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2257,128] },\n\t\t\t\t\t{ \"px\": [1856,272], \"src\": [0,64], \"f\": 0, \"d\": [72,2258,128] },\n\t\t\t\t\t{ \"px\": [496,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2299,128] },\n\t\t\t\t\t{ \"px\": [512,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2300,128] },\n\t\t\t\t\t{ \"px\": [528,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2301,128] },\n\t\t\t\t\t{ \"px\": [544,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2302,128] },\n\t\t\t\t\t{ \"px\": [560,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2303,128] },\n\t\t\t\t\t{ \"px\": [576,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2304,128] },\n\t\t\t\t\t{ \"px\": [592,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2305,128] },\n\t\t\t\t\t{ \"px\": [608,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2306,128] },\n\t\t\t\t\t{ \"px\": [624,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2307,128] },\n\t\t\t\t\t{ \"px\": [640,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2308,128] },\n\t\t\t\t\t{ \"px\": [656,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2309,128] },\n\t\t\t\t\t{ \"px\": [1728,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2376,128] },\n\t\t\t\t\t{ \"px\": [1744,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2377,128] },\n\t\t\t\t\t{ \"px\": [1760,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2378,128] },\n\t\t\t\t\t{ \"px\": [1776,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2379,128] },\n\t\t\t\t\t{ \"px\": [1792,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2380,128] },\n\t\t\t\t\t{ \"px\": [1808,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2381,128] },\n\t\t\t\t\t{ \"px\": [1824,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2382,128] },\n\t\t\t\t\t{ \"px\": [1840,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2383,128] },\n\t\t\t\t\t{ \"px\": [1856,288], \"src\": [0,64], \"f\": 0, \"d\": [72,2384,128] },\n\t\t\t\t\t{ \"px\": [592,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2431,128] },\n\t\t\t\t\t{ \"px\": [608,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2432,128] },\n\t\t\t\t\t{ \"px\": [624,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2433,128] },\n\t\t\t\t\t{ \"px\": [640,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2434,128] },\n\t\t\t\t\t{ \"px\": [656,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2435,128] },\n\t\t\t\t\t{ \"px\": [672,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2436,128] },\n\t\t\t\t\t{ \"px\": [688,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2437,128] },\n\t\t\t\t\t{ \"px\": [704,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2438,128] },\n\t\t\t\t\t{ \"px\": [720,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2439,128] },\n\t\t\t\t\t{ \"px\": [736,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2440,128] },\n\t\t\t\t\t{ \"px\": [1728,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2502,128] },\n\t\t\t\t\t{ \"px\": [1744,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2503,128] },\n\t\t\t\t\t{ \"px\": [1760,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2504,128] },\n\t\t\t\t\t{ \"px\": [1776,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2505,128] },\n\t\t\t\t\t{ \"px\": [1792,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2506,128] },\n\t\t\t\t\t{ \"px\": [1808,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2507,128] },\n\t\t\t\t\t{ \"px\": [1824,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2508,128] },\n\t\t\t\t\t{ \"px\": [1840,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2509,128] },\n\t\t\t\t\t{ \"px\": [1856,304], \"src\": [0,64], \"f\": 0, \"d\": [72,2510,128] },\n\t\t\t\t\t{ \"px\": [592,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2557,128] },\n\t\t\t\t\t{ \"px\": [608,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2558,128] },\n\t\t\t\t\t{ \"px\": [624,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2559,128] },\n\t\t\t\t\t{ \"px\": [640,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2560,128] },\n\t\t\t\t\t{ \"px\": [656,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2561,128] },\n\t\t\t\t\t{ \"px\": [672,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2562,128] },\n\t\t\t\t\t{ \"px\": [688,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2563,128] },\n\t\t\t\t\t{ \"px\": [704,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2564,128] },\n\t\t\t\t\t{ \"px\": [720,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2565,128] },\n\t\t\t\t\t{ \"px\": [736,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2566,128] },\n\t\t\t\t\t{ \"px\": [1728,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2628,128] },\n\t\t\t\t\t{ \"px\": [1744,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2629,128] },\n\t\t\t\t\t{ \"px\": [1760,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2630,128] },\n\t\t\t\t\t{ \"px\": [1776,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2631,128] },\n\t\t\t\t\t{ \"px\": [1792,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2632,128] },\n\t\t\t\t\t{ \"px\": [1808,320], \"src\": [0,64], \"f\": 0, \"d\": [72,2633,128] },\n\t\t\t\t\t{ \"px\": [656,336], \"src\": [0,64], \"f\": 0, \"d\": [72,2687,128] },\n\t\t\t\t\t{ \"px\": [672,336], \"src\": [0,64], \"f\": 0, \"d\": [72,2688,128] },\n\t\t\t\t\t{ \"px\": [688,336], \"src\": [0,64], \"f\": 0, \"d\": [72,2689,128] },\n\t\t\t\t\t{ \"px\": [704,336], \"src\": [0,64], \"f\": 0, \"d\": [72,2690,128] },\n\t\t\t\t\t{ \"px\": [720,336], \"src\": [0,64], \"f\": 0, \"d\": [72,2691,128] },\n\t\t\t\t\t{ \"px\": [736,336], \"src\": [0,64], \"f\": 0, \"d\": [72,2692,128] },\n\t\t\t\t\t{ \"px\": [656,352], \"src\": [0,64], \"f\": 0, \"d\": [72,2813,128] },\n\t\t\t\t\t{ \"px\": [672,352], \"src\": [0,64], \"f\": 0, \"d\": [72,2814,128] },\n\t\t\t\t\t{ \"px\": [688,352], \"src\": [0,64], \"f\": 0, \"d\": [72,2815,128] },\n\t\t\t\t\t{ \"px\": [704,352], \"src\": [0,64], \"f\": 0, \"d\": [72,2816,128] },\n\t\t\t\t\t{ \"px\": [720,352], \"src\": [0,64], \"f\": 0, \"d\": [72,2817,128] },\n\t\t\t\t\t{ \"px\": [736,352], \"src\": [0,64], \"f\": 0, \"d\": [72,2818,128] },\n\t\t\t\t\t{ \"px\": [160,112], \"src\": [0,160], \"f\": 1, \"d\": [73,892,320] },\n\t\t\t\t\t{ \"px\": [384,112], \"src\": [0,160], \"f\": 0, \"d\": [73,906,320] },\n\t\t\t\t\t{ \"px\": [400,112], \"src\": [0,160], \"f\": 1, \"d\": [73,907,320] },\n\t\t\t\t\t{ \"px\": [448,112], \"src\": [0,160], \"f\": 0, \"d\": [73,910,320] },\n\t\t\t\t\t{ \"px\": [464,112], \"src\": [0,160], \"f\": 1, \"d\": [73,911,320] },\n\t\t\t\t\t{ \"px\": [512,112], \"src\": [0,160], \"f\": 0, \"d\": [73,914,320] },\n\t\t\t\t\t{ \"px\": [528,112], \"src\": [0,160], \"f\": 1, \"d\": [73,915,320] },\n\t\t\t\t\t{ \"px\": [576,112], \"src\": [0,160], \"f\": 0, \"d\": [73,918,320] },\n\t\t\t\t\t{ \"px\": [608,112], \"src\": [0,160], \"f\": 1, \"d\": [73,920,320] },\n\t\t\t\t\t{ \"px\": [656,112], \"src\": [0,160], \"f\": 0, \"d\": [73,923,320] },\n\t\t\t\t\t{ \"px\": [672,112], \"src\": [0,160], \"f\": 1, \"d\": [73,924,320] },\n\t\t\t\t\t{ \"px\": [720,112], \"src\": [0,160], \"f\": 0, \"d\": [73,927,320] },\n\t\t\t\t\t{ \"px\": [736,112], \"src\": [0,160], \"f\": 1, \"d\": [73,928,320] },\n\t\t\t\t\t{ \"px\": [1568,112], \"src\": [0,160], \"f\": 0, \"d\": [73,980,320] },\n\t\t\t\t\t{ \"px\": [1584,112], \"src\": [0,160], \"f\": 1, \"d\": [73,981,320] },\n\t\t\t\t\t{ \"px\": [1632,112], \"src\": [0,160], \"f\": 0, \"d\": [73,984,320] },\n\t\t\t\t\t{ \"px\": [1648,112], \"src\": [0,160], \"f\": 1, \"d\": [73,985,320] },\n\t\t\t\t\t{ \"px\": [1696,112], \"src\": [0,160], \"f\": 0, \"d\": [73,988,320] },\n\t\t\t\t\t{ \"px\": [1712,112], \"src\": [0,160], \"f\": 1, \"d\": [73,989,320] },\n\t\t\t\t\t{ \"px\": [1760,112], \"src\": [0,160], \"f\": 0, \"d\": [73,992,320] },\n\t\t\t\t\t{ \"px\": [1776,112], \"src\": [0,160], \"f\": 1, \"d\": [73,993,320] },\n\t\t\t\t\t{ \"px\": [160,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1018,320] },\n\t\t\t\t\t{ \"px\": [384,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1032,320] },\n\t\t\t\t\t{ \"px\": [400,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1033,320] },\n\t\t\t\t\t{ \"px\": [448,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1036,320] },\n\t\t\t\t\t{ \"px\": [464,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1037,320] },\n\t\t\t\t\t{ \"px\": [512,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1040,320] },\n\t\t\t\t\t{ \"px\": [528,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1041,320] },\n\t\t\t\t\t{ \"px\": [576,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1044,320] },\n\t\t\t\t\t{ \"px\": [608,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1046,320] },\n\t\t\t\t\t{ \"px\": [656,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1049,320] },\n\t\t\t\t\t{ \"px\": [672,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1050,320] },\n\t\t\t\t\t{ \"px\": [720,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1053,320] },\n\t\t\t\t\t{ \"px\": [736,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1054,320] },\n\t\t\t\t\t{ \"px\": [1568,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1106,320] },\n\t\t\t\t\t{ \"px\": [1584,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1107,320] },\n\t\t\t\t\t{ \"px\": [1632,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1110,320] },\n\t\t\t\t\t{ \"px\": [1648,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1111,320] },\n\t\t\t\t\t{ \"px\": [1696,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1114,320] },\n\t\t\t\t\t{ \"px\": [1712,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1115,320] },\n\t\t\t\t\t{ \"px\": [1760,128], \"src\": [0,160], \"f\": 0, \"d\": [73,1118,320] },\n\t\t\t\t\t{ \"px\": [1776,128], \"src\": [0,160], \"f\": 1, \"d\": [73,1119,320] },\n\t\t\t\t\t{ \"px\": [736,144], \"src\": [0,160], \"f\": 1, \"d\": [73,1180,320] },\n\t\t\t\t\t{ \"px\": [1568,144], \"src\": [0,160], \"f\": 0, \"d\": [73,1232,320] },\n\t\t\t\t\t{ \"px\": [1584,144], \"src\": [0,160], \"f\": 1, \"d\": [73,1233,320] },\n\t\t\t\t\t{ \"px\": [1632,144], \"src\": [0,160], \"f\": 0, \"d\": [73,1236,320] },\n\t\t\t\t\t{ \"px\": [1648,144], \"src\": [0,160], \"f\": 1, \"d\": [73,1237,320] },\n\t\t\t\t\t{ \"px\": [1696,144], \"src\": [0,160], \"f\": 0, \"d\": [73,1240,320] },\n\t\t\t\t\t{ \"px\": [1712,144], \"src\": [0,160], \"f\": 1, \"d\": [73,1241,320] },\n\t\t\t\t\t{ \"px\": [1760,144], \"src\": [0,160], \"f\": 0, \"d\": [73,1244,320] },\n\t\t\t\t\t{ \"px\": [1776,144], \"src\": [0,160], \"f\": 1, \"d\": [73,1245,320] },\n\t\t\t\t\t{ \"px\": [1568,160], \"src\": [0,160], \"f\": 0, \"d\": [73,1358,320] },\n\t\t\t\t\t{ \"px\": [1584,160], \"src\": [0,160], \"f\": 1, \"d\": [73,1359,320] },\n\t\t\t\t\t{ \"px\": [1632,160], \"src\": [0,160], \"f\": 0, \"d\": [73,1362,320] },\n\t\t\t\t\t{ \"px\": [1648,160], \"src\": [0,160], \"f\": 1, \"d\": [73,1363,320] },\n\t\t\t\t\t{ \"px\": [1696,160], \"src\": [0,160], \"f\": 0, \"d\": [73,1366,320] },\n\t\t\t\t\t{ \"px\": [1712,160], \"src\": [0,160], \"f\": 1, \"d\": [73,1367,320] },\n\t\t\t\t\t{ \"px\": [1760,160], \"src\": [0,160], \"f\": 0, \"d\": [73,1370,320] },\n\t\t\t\t\t{ \"px\": [1776,160], \"src\": [0,160], \"f\": 1, \"d\": [73,1371,320] },\n\t\t\t\t\t{ \"px\": [400,192], \"src\": [0,160], \"f\": 0, \"d\": [73,1537,320] },\n\t\t\t\t\t{ \"px\": [400,208], \"src\": [0,160], \"f\": 0, \"d\": [73,1663,320] },\n\t\t\t\t\t{ \"px\": [400,224], \"src\": [0,160], \"f\": 0, \"d\": [73,1789,320] },\n\t\t\t\t\t{ \"px\": [144,240], \"src\": [0,160], \"f\": 1, \"d\": [73,1899,320] },\n\t\t\t\t\t{ \"px\": [400,240], \"src\": [0,160], \"f\": 0, \"d\": [73,1915,320] },\n\t\t\t\t\t{ \"px\": [1712,240], \"src\": [0,160], \"f\": 0, \"d\": [73,1997,320] },\n\t\t\t\t\t{ \"px\": [144,256], \"src\": [0,160], \"f\": 1, \"d\": [73,2025,320] },\n\t\t\t\t\t{ \"px\": [400,256], \"src\": [0,160], \"f\": 0, \"d\": [73,2041,320] },\n\t\t\t\t\t{ \"px\": [1712,256], \"src\": [0,160], \"f\": 0, \"d\": [73,2123,320] },\n\t\t\t\t\t{ \"px\": [144,272], \"src\": [0,160], \"f\": 1, \"d\": [73,2151,320] },\n\t\t\t\t\t{ \"px\": [400,272], \"src\": [0,160], \"f\": 0, \"d\": [73,2167,320] },\n\t\t\t\t\t{ \"px\": [1712,272], \"src\": [0,160], \"f\": 0, \"d\": [73,2249,320] },\n\t\t\t\t\t{ \"px\": [1712,288], \"src\": [0,160], \"f\": 0, \"d\": [73,2375,320] },\n\t\t\t\t\t{ \"px\": [752,304], \"src\": [0,160], \"f\": 1, \"d\": [73,2441,320] },\n\t\t\t\t\t{ \"px\": [1712,304], \"src\": [0,160], \"f\": 0, \"d\": [73,2501,320] },\n\t\t\t\t\t{ \"px\": [752,320], \"src\": [0,160], \"f\": 1, \"d\": [73,2567,320] },\n\t\t\t\t\t{ \"px\": [1712,320], \"src\": [0,160], \"f\": 0, \"d\": [73,2627,320] },\n\t\t\t\t\t{ \"px\": [752,336], \"src\": [0,160], \"f\": 1, \"d\": [73,2693,320] },\n\t\t\t\t\t{ \"px\": [752,352], \"src\": [0,160], \"f\": 1, \"d\": [73,2819,320] },\n\t\t\t\t\t{ \"px\": [1248,352], \"src\": [0,144], \"f\": 0, \"d\": [79,2850,288] },\n\t\t\t\t\t{ \"px\": [1328,352], \"src\": [0,144], \"f\": 1, \"d\": [79,2855,288] },\n\t\t\t\t\t{ \"px\": [1440,352], \"src\": [0,144], \"f\": 0, \"d\": [79,2862,288] },\n\t\t\t\t\t{ \"px\": [176,96], \"src\": [16,144], \"f\": 2, \"d\": [80,767,289] },\n\t\t\t\t\t{ \"px\": [192,96], \"src\": [16,144], \"f\": 2, \"d\": [80,768,289] },\n\t\t\t\t\t{ \"px\": [208,96], \"src\": [16,144], \"f\": 2, \"d\": [80,769,289] },\n\t\t\t\t\t{ \"px\": [224,96], \"src\": [16,144], \"f\": 2, \"d\": [80,770,289] },\n\t\t\t\t\t{ \"px\": [240,96], \"src\": [16,144], \"f\": 2, \"d\": [80,771,289] },\n\t\t\t\t\t{ \"px\": [256,96], \"src\": [16,144], \"f\": 2, \"d\": [80,772,289] },\n\t\t\t\t\t{ \"px\": [272,96], \"src\": [16,144], \"f\": 2, \"d\": [80,773,289] },\n\t\t\t\t\t{ \"px\": [288,96], \"src\": [16,144], \"f\": 2, \"d\": [80,774,289] },\n\t\t\t\t\t{ \"px\": [304,96], \"src\": [16,144], \"f\": 2, \"d\": [80,775,289] },\n\t\t\t\t\t{ \"px\": [320,96], \"src\": [16,144], \"f\": 2, \"d\": [80,776,289] },\n\t\t\t\t\t{ \"px\": [336,96], \"src\": [16,144], \"f\": 2, \"d\": [80,777,289] },\n\t\t\t\t\t{ \"px\": [352,96], \"src\": [16,144], \"f\": 2, \"d\": [80,778,289] },\n\t\t\t\t\t{ \"px\": [368,96], \"src\": [16,144], \"f\": 2, \"d\": [80,779,289] },\n\t\t\t\t\t{ \"px\": [416,96], \"src\": [16,144], \"f\": 2, \"d\": [80,782,289] },\n\t\t\t\t\t{ \"px\": [432,96], \"src\": [16,144], \"f\": 2, \"d\": [80,783,289] },\n\t\t\t\t\t{ \"px\": [480,96], \"src\": [16,144], \"f\": 2, \"d\": [80,786,289] },\n\t\t\t\t\t{ \"px\": [496,96], \"src\": [16,144], \"f\": 2, \"d\": [80,787,289] },\n\t\t\t\t\t{ \"px\": [544,96], \"src\": [16,144], \"f\": 2, \"d\": [80,790,289] },\n\t\t\t\t\t{ \"px\": [560,96], \"src\": [16,144], \"f\": 2, \"d\": [80,791,289] },\n\t\t\t\t\t{ \"px\": [624,96], \"src\": [16,144], \"f\": 2, \"d\": [80,795,289] },\n\t\t\t\t\t{ \"px\": [640,96], \"src\": [16,144], \"f\": 2, \"d\": [80,796,289] },\n\t\t\t\t\t{ \"px\": [688,96], \"src\": [16,144], \"f\": 2, \"d\": [80,799,289] },\n\t\t\t\t\t{ \"px\": [704,96], \"src\": [16,144], \"f\": 2, \"d\": [80,800,289] },\n\t\t\t\t\t{ \"px\": [176,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1145,289] },\n\t\t\t\t\t{ \"px\": [192,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1146,289] },\n\t\t\t\t\t{ \"px\": [208,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1147,289] },\n\t\t\t\t\t{ \"px\": [224,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1148,289] },\n\t\t\t\t\t{ \"px\": [240,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1149,289] },\n\t\t\t\t\t{ \"px\": [256,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1150,289] },\n\t\t\t\t\t{ \"px\": [272,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1151,289] },\n\t\t\t\t\t{ \"px\": [288,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1152,289] },\n\t\t\t\t\t{ \"px\": [304,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1153,289] },\n\t\t\t\t\t{ \"px\": [320,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1154,289] },\n\t\t\t\t\t{ \"px\": [336,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1155,289] },\n\t\t\t\t\t{ \"px\": [352,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1156,289] },\n\t\t\t\t\t{ \"px\": [368,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1157,289] },\n\t\t\t\t\t{ \"px\": [416,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1160,289] },\n\t\t\t\t\t{ \"px\": [432,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1161,289] },\n\t\t\t\t\t{ \"px\": [480,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1164,289] },\n\t\t\t\t\t{ \"px\": [496,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1165,289] },\n\t\t\t\t\t{ \"px\": [544,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1168,289] },\n\t\t\t\t\t{ \"px\": [560,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1169,289] },\n\t\t\t\t\t{ \"px\": [624,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1173,289] },\n\t\t\t\t\t{ \"px\": [640,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1174,289] },\n\t\t\t\t\t{ \"px\": [688,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1177,289] },\n\t\t\t\t\t{ \"px\": [704,144], \"src\": [16,144], \"f\": 0, \"d\": [80,1178,289] },\n\t\t\t\t\t{ \"px\": [1808,208], \"src\": [16,144], \"f\": 0, \"d\": [80,1751,289] },\n\t\t\t\t\t{ \"px\": [1824,208], \"src\": [16,144], \"f\": 0, \"d\": [80,1752,289] },\n\t\t\t\t\t{ \"px\": [1840,208], \"src\": [16,144], \"f\": 0, \"d\": [80,1753,289] },\n\t\t\t\t\t{ \"px\": [1856,208], \"src\": [16,144], \"f\": 0, \"d\": [80,1754,289] },\n\t\t\t\t\t{ \"px\": [1264,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2851,289] },\n\t\t\t\t\t{ \"px\": [1280,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2852,289] },\n\t\t\t\t\t{ \"px\": [1296,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2853,289] },\n\t\t\t\t\t{ \"px\": [1312,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2854,289] },\n\t\t\t\t\t{ \"px\": [1456,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2863,289] },\n\t\t\t\t\t{ \"px\": [1472,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2864,289] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2865,289] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2866,289] },\n\t\t\t\t\t{ \"px\": [1520,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2867,289] },\n\t\t\t\t\t{ \"px\": [1536,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2868,289] },\n\t\t\t\t\t{ \"px\": [1552,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2869,289] },\n\t\t\t\t\t{ \"px\": [1568,352], \"src\": [16,144], \"f\": 0, \"d\": [80,2870,289] }\n\t\t\t\t],\n\t\t\t\t\"seed\": 4742669,\n\t\t\t\t\"gridTiles\": [],\n\t\t\t\t\"entityInstances\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"__identifier\": \"Parallax\",\n\t\t\t\t\"__type\": \"IntGrid\",\n\t\t\t\t\"__cWid\": 126,\n\t\t\t\t\"__cHei\": 30,\n\t\t\t\t\"__gridSize\": 16,\n\t\t\t\t\"__opacity\": 0.66,\n\t\t\t\t\"levelId\": 0,\n\t\t\t\t\"layerDefUid\": 82,\n\t\t\t\t\"pxOffsetX\": 0,\n\t\t\t\t\"pxOffsetY\": 0,\n\t\t\t\t\"intGrid\": [\n\t\t\t\t\t{ \"coordId\": 1024, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1025, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1026, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1027, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1150, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1151, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1152, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1153, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1165, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1166, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1236, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1237, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1238, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1276, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1277, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1278, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1279, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1291, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1292, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1362, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1363, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1364, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1396, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1397, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1398, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1402, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1403, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1404, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1405, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1417, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1418, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1421, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1422, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1423, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1424, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1425, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1485, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1486, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1488, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1489, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1490, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1522, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1523, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1524, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1528, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1529, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1530, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1531, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1536, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1537, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1538, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1539, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1540, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1543, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1544, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1547, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1548, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1549, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1550, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1551, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1588, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1589, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1590, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1591, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1601, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1602, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1611, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1612, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1614, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1615, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1616, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1621, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1622, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1623, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1624, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1648, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1649, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1650, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1654, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1655, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1656, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1657, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1662, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1663, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1664, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1665, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1666, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1669, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1670, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1673, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1674, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1675, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1676, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1677, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1714, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1715, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1716, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1717, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1719, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1720, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1721, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1726, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1727, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1728, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1734, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1735, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1736, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1737, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1738, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1739, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1740, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1741, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1742, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1747, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1748, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1749, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1750, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1774, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1775, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1776, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1780, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1781, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1782, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1783, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1788, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1789, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1790, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1791, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1792, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1795, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1796, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1799, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1800, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1801, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1802, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1803, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1840, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1841, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1842, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1843, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1845, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1846, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1847, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1852, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1853, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1854, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1856, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1857, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1858, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1859, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1860, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1861, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1862, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1863, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1864, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1865, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1866, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1867, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1868, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1873, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1874, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1875, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1876, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1900, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1901, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1902, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1906, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1907, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1908, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1909, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1914, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1915, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1916, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1917, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1918, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1921, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1922, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1925, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1926, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1927, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1928, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1929, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1948, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1949, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1950, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1958, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1959, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1960, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1965, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1966, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1967, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1968, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1969, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1971, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1972, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1973, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1976, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1977, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1978, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1979, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1980, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1982, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1983, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1984, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1985, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1986, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1987, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1988, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1989, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1990, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1991, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1992, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1993, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1994, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 1999, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2000, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2001, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2002, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2026, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2027, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2028, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2032, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2033, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2034, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2035, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2040, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2041, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2042, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2043, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2044, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2047, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2048, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2051, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2052, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2053, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2054, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2055, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2074, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2075, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2076, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2084, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2085, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2086, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2091, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2092, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2093, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2094, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2095, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2097, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2098, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2099, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2102, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2103, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2104, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2105, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2106, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2108, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2109, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2110, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2111, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2112, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2113, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2114, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2115, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2116, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2117, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2118, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2119, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2120, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2125, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2126, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2127, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2128, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2152, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2153, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2154, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2158, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2159, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2160, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2161, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2166, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2167, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2168, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2169, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2170, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2173, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2174, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2177, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2178, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2179, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2180, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2181, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2200, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2201, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2202, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2210, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2211, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2212, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2217, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2218, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2219, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2220, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2221, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2223, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2224, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2225, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2228, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2229, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2230, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2231, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2232, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2234, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2235, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2236, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2237, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2238, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2239, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2240, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2241, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2242, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2243, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2244, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2245, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2246, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2251, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2252, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2253, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2254, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2278, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2279, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2280, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2284, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2285, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2286, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2287, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2292, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2293, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2294, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2295, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2296, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2299, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2300, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2303, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2304, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2305, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2306, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2307, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2326, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2327, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2328, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2336, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2337, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2338, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2343, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2344, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2345, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2346, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2347, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2349, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2350, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2351, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2354, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2355, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2356, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2357, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2358, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2360, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2361, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2362, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2363, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2364, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2365, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2366, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2367, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2368, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2369, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2370, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2371, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2372, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2377, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2378, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2379, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2380, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2404, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2405, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2406, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2410, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2411, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2412, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2413, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2418, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2419, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2420, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2421, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2422, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2425, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2426, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2429, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2430, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2431, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2432, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2433, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2449, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2450, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2452, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2453, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2454, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2462, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2463, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2464, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2469, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2470, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2471, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2472, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2473, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2475, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2476, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2477, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2480, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2481, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2482, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2483, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2484, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2486, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2487, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2488, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2489, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2490, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2491, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2492, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2493, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2494, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2495, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2496, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2497, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2498, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2503, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2504, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2505, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2506, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2530, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2531, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2532, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2536, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2537, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2538, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2539, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2544, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2545, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2546, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2547, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2548, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2551, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2552, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2555, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2556, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2557, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2558, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2559, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2575, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2576, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2578, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2579, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2580, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2588, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2589, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2590, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2595, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2596, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2597, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2598, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2599, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2601, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2602, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2603, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2606, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2607, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2608, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2609, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2610, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2612, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2613, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2614, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2615, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2616, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2617, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2618, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2619, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2620, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2621, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2622, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2623, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2624, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2629, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2630, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2631, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2632, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2656, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2657, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2658, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2662, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2663, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2664, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2665, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2670, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2671, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2672, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2673, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2674, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2677, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2678, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2681, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2682, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2683, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2684, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2685, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2701, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2702, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2704, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2705, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2706, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2714, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2715, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2716, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2721, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2722, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2723, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2724, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2725, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2727, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2728, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2729, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2732, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2733, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2734, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2735, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2736, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2738, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2739, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2740, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2741, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2742, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2743, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2744, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2745, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2746, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2747, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2748, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2749, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2750, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2755, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2756, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2757, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2758, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2782, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2783, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2784, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2788, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2789, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2790, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2791, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2796, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2797, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2798, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2799, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2800, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2803, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2804, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2807, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2808, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2809, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2810, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2811, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2827, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2828, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2830, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2831, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2832, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2833, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2834, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2835, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2836, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2837, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2840, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2841, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2842, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2847, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2848, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2849, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2850, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2851, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2853, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2854, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2855, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2858, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2859, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2860, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2861, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2862, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2864, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2865, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2866, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2867, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2868, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2869, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2870, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2871, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2872, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2873, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2874, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2875, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2876, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2881, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2882, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2883, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2884, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2908, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2909, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2910, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2914, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2915, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2916, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2917, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2922, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2923, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2924, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2925, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2926, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2929, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2930, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2933, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2934, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2935, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2936, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2937, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2953, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2954, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2955, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2956, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2957, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2958, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2959, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2960, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2961, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2962, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2963, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2966, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2967, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2968, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2973, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2974, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2975, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2976, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2977, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2979, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2980, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2981, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2984, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2985, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2986, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2987, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2988, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2990, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2991, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2992, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2993, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2994, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2995, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2996, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2997, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2998, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 2999, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3000, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3001, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3002, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3007, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3008, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3009, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3010, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3048, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3049, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3050, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3051, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3052, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3055, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3056, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3079, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3080, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3081, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3082, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3083, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3084, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3085, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3086, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3087, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3088, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3089, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3092, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3093, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3094, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3099, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3100, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3101, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3102, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3103, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3105, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3106, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3107, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3110, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3111, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3112, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3113, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3114, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3116, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3117, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3118, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3119, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3120, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3121, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3122, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3123, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3124, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3125, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3126, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3127, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3128, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3133, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3134, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3135, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3136, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3174, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3175, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3176, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3177, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3178, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3181, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3182, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3205, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3206, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3207, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3208, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3209, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3210, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3211, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3212, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3213, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3214, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3215, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3218, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3219, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3220, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3225, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3226, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3227, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3228, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3229, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3231, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3232, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3233, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3242, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3243, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3244, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3245, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3246, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3247, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3248, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3249, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3250, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3251, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3252, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3253, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3254, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3259, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3260, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3261, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3262, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3300, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3301, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3302, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3303, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3304, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3307, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3308, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3331, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3332, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3333, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3334, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3335, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3336, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3337, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3338, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3339, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3340, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3341, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3344, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3345, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3346, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3351, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3352, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3353, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3354, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3355, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3357, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3358, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3359, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3385, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3386, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3387, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3388, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3433, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3434, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3457, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3458, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3459, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3460, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3461, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3462, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3463, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3464, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3465, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3466, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3467, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3471, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3472, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3559, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3560, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3583, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3584, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3585, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3586, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3587, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3588, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3589, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3590, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3591, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3592, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3593, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3685, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3686, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3709, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3710, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3711, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3712, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3713, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3714, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3715, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3716, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3717, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3718, \"v\": 0 },\n\t\t\t\t\t{ \"coordId\": 3719, \"v\": 0 }\n\t\t\t\t],\n\t\t\t\t\"autoLayerTiles\": [\n\t\t\t\t\t{ \"px\": [272,144], \"src\": [192,96], \"f\": 0, \"d\": [84,1151,204] },\n\t\t\t\t\t{ \"px\": [288,144], \"src\": [192,96], \"f\": 0, \"d\": [84,1152,204] },\n\t\t\t\t\t{ \"px\": [272,160], \"src\": [192,96], \"f\": 0, \"d\": [84,1277,204] },\n\t\t\t\t\t{ \"px\": [288,160], \"src\": [192,96], \"f\": 0, \"d\": [84,1278,204] },\n\t\t\t\t\t{ \"px\": [1648,160], \"src\": [192,96], \"f\": 0, \"d\": [84,1363,204] },\n\t\t\t\t\t{ \"px\": [272,176], \"src\": [192,96], \"f\": 0, \"d\": [84,1403,204] },\n\t\t\t\t\t{ \"px\": [288,176], \"src\": [192,96], \"f\": 0, \"d\": [84,1404,204] },\n\t\t\t\t\t{ \"px\": [1648,176], \"src\": [192,96], \"f\": 0, \"d\": [84,1489,204] },\n\t\t\t\t\t{ \"px\": [176,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1523,204] },\n\t\t\t\t\t{ \"px\": [272,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1529,204] },\n\t\t\t\t\t{ \"px\": [288,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1530,204] },\n\t\t\t\t\t{ \"px\": [576,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1548,204] },\n\t\t\t\t\t{ \"px\": [592,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1549,204] },\n\t\t\t\t\t{ \"px\": [608,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1550,204] },\n\t\t\t\t\t{ \"px\": [1648,192], \"src\": [192,96], \"f\": 0, \"d\": [84,1615,204] },\n\t\t\t\t\t{ \"px\": [176,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1649,204] },\n\t\t\t\t\t{ \"px\": [272,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1655,204] },\n\t\t\t\t\t{ \"px\": [288,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1656,204] },\n\t\t\t\t\t{ \"px\": [400,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1663,204] },\n\t\t\t\t\t{ \"px\": [416,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1664,204] },\n\t\t\t\t\t{ \"px\": [432,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1665,204] },\n\t\t\t\t\t{ \"px\": [576,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1674,204] },\n\t\t\t\t\t{ \"px\": [592,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1675,204] },\n\t\t\t\t\t{ \"px\": [608,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1676,204] },\n\t\t\t\t\t{ \"px\": [1232,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1715,204] },\n\t\t\t\t\t{ \"px\": [1248,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1716,204] },\n\t\t\t\t\t{ \"px\": [1424,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1727,204] },\n\t\t\t\t\t{ \"px\": [1584,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1737,204] },\n\t\t\t\t\t{ \"px\": [1600,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1738,204] },\n\t\t\t\t\t{ \"px\": [1632,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1740,204] },\n\t\t\t\t\t{ \"px\": [1648,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1741,204] },\n\t\t\t\t\t{ \"px\": [1760,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1748,204] },\n\t\t\t\t\t{ \"px\": [1776,208], \"src\": [192,96], \"f\": 0, \"d\": [84,1749,204] },\n\t\t\t\t\t{ \"px\": [176,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1775,204] },\n\t\t\t\t\t{ \"px\": [272,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1781,204] },\n\t\t\t\t\t{ \"px\": [288,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1782,204] },\n\t\t\t\t\t{ \"px\": [400,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1789,204] },\n\t\t\t\t\t{ \"px\": [416,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1790,204] },\n\t\t\t\t\t{ \"px\": [432,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1791,204] },\n\t\t\t\t\t{ \"px\": [576,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1800,204] },\n\t\t\t\t\t{ \"px\": [592,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1801,204] },\n\t\t\t\t\t{ \"px\": [608,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1802,204] },\n\t\t\t\t\t{ \"px\": [1232,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1841,204] },\n\t\t\t\t\t{ \"px\": [1248,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1842,204] },\n\t\t\t\t\t{ \"px\": [1312,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1846,204] },\n\t\t\t\t\t{ \"px\": [1424,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1853,204] },\n\t\t\t\t\t{ \"px\": [1536,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1860,204] },\n\t\t\t\t\t{ \"px\": [1552,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1861,204] },\n\t\t\t\t\t{ \"px\": [1568,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1862,204] },\n\t\t\t\t\t{ \"px\": [1584,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1863,204] },\n\t\t\t\t\t{ \"px\": [1600,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1864,204] },\n\t\t\t\t\t{ \"px\": [1616,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1865,204] },\n\t\t\t\t\t{ \"px\": [1632,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1866,204] },\n\t\t\t\t\t{ \"px\": [1648,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1867,204] },\n\t\t\t\t\t{ \"px\": [1760,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1874,204] },\n\t\t\t\t\t{ \"px\": [1776,224], \"src\": [192,96], \"f\": 0, \"d\": [84,1875,204] },\n\t\t\t\t\t{ \"px\": [176,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1901,204] },\n\t\t\t\t\t{ \"px\": [272,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1907,204] },\n\t\t\t\t\t{ \"px\": [288,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1908,204] },\n\t\t\t\t\t{ \"px\": [400,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1915,204] },\n\t\t\t\t\t{ \"px\": [416,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1916,204] },\n\t\t\t\t\t{ \"px\": [432,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1917,204] },\n\t\t\t\t\t{ \"px\": [576,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1926,204] },\n\t\t\t\t\t{ \"px\": [592,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1927,204] },\n\t\t\t\t\t{ \"px\": [608,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1928,204] },\n\t\t\t\t\t{ \"px\": [1216,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1966,204] },\n\t\t\t\t\t{ \"px\": [1232,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1967,204] },\n\t\t\t\t\t{ \"px\": [1248,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1968,204] },\n\t\t\t\t\t{ \"px\": [1312,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1972,204] },\n\t\t\t\t\t{ \"px\": [1408,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1978,204] },\n\t\t\t\t\t{ \"px\": [1424,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1979,204] },\n\t\t\t\t\t{ \"px\": [1488,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1983,204] },\n\t\t\t\t\t{ \"px\": [1504,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1984,204] },\n\t\t\t\t\t{ \"px\": [1520,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1985,204] },\n\t\t\t\t\t{ \"px\": [1536,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1986,204] },\n\t\t\t\t\t{ \"px\": [1552,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1987,204] },\n\t\t\t\t\t{ \"px\": [1568,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1988,204] },\n\t\t\t\t\t{ \"px\": [1584,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1989,204] },\n\t\t\t\t\t{ \"px\": [1600,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1990,204] },\n\t\t\t\t\t{ \"px\": [1616,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1991,204] },\n\t\t\t\t\t{ \"px\": [1632,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1992,204] },\n\t\t\t\t\t{ \"px\": [1648,240], \"src\": [192,96], \"f\": 0, \"d\": [84,1993,204] },\n\t\t\t\t\t{ \"px\": [1760,240], \"src\": [192,96], \"f\": 0, \"d\": [84,2000,204] },\n\t\t\t\t\t{ \"px\": [1776,240], \"src\": [192,96], \"f\": 0, \"d\": [84,2001,204] },\n\t\t\t\t\t{ \"px\": [176,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2027,204] },\n\t\t\t\t\t{ \"px\": [272,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2033,204] },\n\t\t\t\t\t{ \"px\": [288,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2034,204] },\n\t\t\t\t\t{ \"px\": [400,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2041,204] },\n\t\t\t\t\t{ \"px\": [416,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2042,204] },\n\t\t\t\t\t{ \"px\": [432,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2043,204] },\n\t\t\t\t\t{ \"px\": [576,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2052,204] },\n\t\t\t\t\t{ \"px\": [592,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2053,204] },\n\t\t\t\t\t{ \"px\": [608,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2054,204] },\n\t\t\t\t\t{ \"px\": [944,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2075,204] },\n\t\t\t\t\t{ \"px\": [1104,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2085,204] },\n\t\t\t\t\t{ \"px\": [1216,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2092,204] },\n\t\t\t\t\t{ \"px\": [1232,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2093,204] },\n\t\t\t\t\t{ \"px\": [1248,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2094,204] },\n\t\t\t\t\t{ \"px\": [1312,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2098,204] },\n\t\t\t\t\t{ \"px\": [1392,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2103,204] },\n\t\t\t\t\t{ \"px\": [1408,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2104,204] },\n\t\t\t\t\t{ \"px\": [1424,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2105,204] },\n\t\t\t\t\t{ \"px\": [1488,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2109,204] },\n\t\t\t\t\t{ \"px\": [1504,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2110,204] },\n\t\t\t\t\t{ \"px\": [1520,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2111,204] },\n\t\t\t\t\t{ \"px\": [1536,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2112,204] },\n\t\t\t\t\t{ \"px\": [1552,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2113,204] },\n\t\t\t\t\t{ \"px\": [1568,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2114,204] },\n\t\t\t\t\t{ \"px\": [1584,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2115,204] },\n\t\t\t\t\t{ \"px\": [1600,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2116,204] },\n\t\t\t\t\t{ \"px\": [1616,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2117,204] },\n\t\t\t\t\t{ \"px\": [1632,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2118,204] },\n\t\t\t\t\t{ \"px\": [1648,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2119,204] },\n\t\t\t\t\t{ \"px\": [1760,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2126,204] },\n\t\t\t\t\t{ \"px\": [1776,256], \"src\": [192,96], \"f\": 0, \"d\": [84,2127,204] },\n\t\t\t\t\t{ \"px\": [176,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2153,204] },\n\t\t\t\t\t{ \"px\": [272,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2159,204] },\n\t\t\t\t\t{ \"px\": [288,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2160,204] },\n\t\t\t\t\t{ \"px\": [400,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2167,204] },\n\t\t\t\t\t{ \"px\": [416,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2168,204] },\n\t\t\t\t\t{ \"px\": [432,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2169,204] },\n\t\t\t\t\t{ \"px\": [576,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2178,204] },\n\t\t\t\t\t{ \"px\": [592,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2179,204] },\n\t\t\t\t\t{ \"px\": [608,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2180,204] },\n\t\t\t\t\t{ \"px\": [944,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2201,204] },\n\t\t\t\t\t{ \"px\": [1104,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2211,204] },\n\t\t\t\t\t{ \"px\": [1216,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2218,204] },\n\t\t\t\t\t{ \"px\": [1232,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2219,204] },\n\t\t\t\t\t{ \"px\": [1248,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2220,204] },\n\t\t\t\t\t{ \"px\": [1312,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2224,204] },\n\t\t\t\t\t{ \"px\": [1392,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2229,204] },\n\t\t\t\t\t{ \"px\": [1408,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2230,204] },\n\t\t\t\t\t{ \"px\": [1424,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2231,204] },\n\t\t\t\t\t{ \"px\": [1488,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2235,204] },\n\t\t\t\t\t{ \"px\": [1504,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2236,204] },\n\t\t\t\t\t{ \"px\": [1520,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2237,204] },\n\t\t\t\t\t{ \"px\": [1536,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2238,204] },\n\t\t\t\t\t{ \"px\": [1552,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2239,204] },\n\t\t\t\t\t{ \"px\": [1568,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2240,204] },\n\t\t\t\t\t{ \"px\": [1584,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2241,204] },\n\t\t\t\t\t{ \"px\": [1600,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2242,204] },\n\t\t\t\t\t{ \"px\": [1616,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2243,204] },\n\t\t\t\t\t{ \"px\": [1632,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2244,204] },\n\t\t\t\t\t{ \"px\": [1648,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2245,204] },\n\t\t\t\t\t{ \"px\": [1760,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2252,204] },\n\t\t\t\t\t{ \"px\": [1776,272], \"src\": [192,96], \"f\": 0, \"d\": [84,2253,204] },\n\t\t\t\t\t{ \"px\": [176,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2279,204] },\n\t\t\t\t\t{ \"px\": [272,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2285,204] },\n\t\t\t\t\t{ \"px\": [288,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2286,204] },\n\t\t\t\t\t{ \"px\": [400,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2293,204] },\n\t\t\t\t\t{ \"px\": [416,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2294,204] },\n\t\t\t\t\t{ \"px\": [432,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2295,204] },\n\t\t\t\t\t{ \"px\": [576,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2304,204] },\n\t\t\t\t\t{ \"px\": [592,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2305,204] },\n\t\t\t\t\t{ \"px\": [608,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2306,204] },\n\t\t\t\t\t{ \"px\": [944,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2327,204] },\n\t\t\t\t\t{ \"px\": [1104,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2337,204] },\n\t\t\t\t\t{ \"px\": [1216,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2344,204] },\n\t\t\t\t\t{ \"px\": [1232,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2345,204] },\n\t\t\t\t\t{ \"px\": [1248,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2346,204] },\n\t\t\t\t\t{ \"px\": [1312,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2350,204] },\n\t\t\t\t\t{ \"px\": [1392,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2355,204] },\n\t\t\t\t\t{ \"px\": [1408,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2356,204] },\n\t\t\t\t\t{ \"px\": [1424,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2357,204] },\n\t\t\t\t\t{ \"px\": [1488,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2361,204] },\n\t\t\t\t\t{ \"px\": [1504,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2362,204] },\n\t\t\t\t\t{ \"px\": [1520,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2363,204] },\n\t\t\t\t\t{ \"px\": [1536,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2364,204] },\n\t\t\t\t\t{ \"px\": [1552,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2365,204] },\n\t\t\t\t\t{ \"px\": [1568,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2366,204] },\n\t\t\t\t\t{ \"px\": [1584,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2367,204] },\n\t\t\t\t\t{ \"px\": [1600,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2368,204] },\n\t\t\t\t\t{ \"px\": [1616,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2369,204] },\n\t\t\t\t\t{ \"px\": [1632,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2370,204] },\n\t\t\t\t\t{ \"px\": [1648,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2371,204] },\n\t\t\t\t\t{ \"px\": [1760,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2378,204] },\n\t\t\t\t\t{ \"px\": [1776,288], \"src\": [192,96], \"f\": 0, \"d\": [84,2379,204] },\n\t\t\t\t\t{ \"px\": [176,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2405,204] },\n\t\t\t\t\t{ \"px\": [272,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2411,204] },\n\t\t\t\t\t{ \"px\": [288,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2412,204] },\n\t\t\t\t\t{ \"px\": [400,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2419,204] },\n\t\t\t\t\t{ \"px\": [416,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2420,204] },\n\t\t\t\t\t{ \"px\": [432,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2421,204] },\n\t\t\t\t\t{ \"px\": [576,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2430,204] },\n\t\t\t\t\t{ \"px\": [592,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2431,204] },\n\t\t\t\t\t{ \"px\": [608,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2432,204] },\n\t\t\t\t\t{ \"px\": [944,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2453,204] },\n\t\t\t\t\t{ \"px\": [1104,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2463,204] },\n\t\t\t\t\t{ \"px\": [1216,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2470,204] },\n\t\t\t\t\t{ \"px\": [1232,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2471,204] },\n\t\t\t\t\t{ \"px\": [1248,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2472,204] },\n\t\t\t\t\t{ \"px\": [1312,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2476,204] },\n\t\t\t\t\t{ \"px\": [1392,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2481,204] },\n\t\t\t\t\t{ \"px\": [1408,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2482,204] },\n\t\t\t\t\t{ \"px\": [1424,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2483,204] },\n\t\t\t\t\t{ \"px\": [1488,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2487,204] },\n\t\t\t\t\t{ \"px\": [1504,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2488,204] },\n\t\t\t\t\t{ \"px\": [1520,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2489,204] },\n\t\t\t\t\t{ \"px\": [1536,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2490,204] },\n\t\t\t\t\t{ \"px\": [1552,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2491,204] },\n\t\t\t\t\t{ \"px\": [1568,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2492,204] },\n\t\t\t\t\t{ \"px\": [1584,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2493,204] },\n\t\t\t\t\t{ \"px\": [1600,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2494,204] },\n\t\t\t\t\t{ \"px\": [1616,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2495,204] },\n\t\t\t\t\t{ \"px\": [1632,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2496,204] },\n\t\t\t\t\t{ \"px\": [1648,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2497,204] },\n\t\t\t\t\t{ \"px\": [1760,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2504,204] },\n\t\t\t\t\t{ \"px\": [1776,304], \"src\": [192,96], \"f\": 0, \"d\": [84,2505,204] },\n\t\t\t\t\t{ \"px\": [176,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2531,204] },\n\t\t\t\t\t{ \"px\": [272,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2537,204] },\n\t\t\t\t\t{ \"px\": [288,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2538,204] },\n\t\t\t\t\t{ \"px\": [400,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2545,204] },\n\t\t\t\t\t{ \"px\": [416,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2546,204] },\n\t\t\t\t\t{ \"px\": [432,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2547,204] },\n\t\t\t\t\t{ \"px\": [576,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2556,204] },\n\t\t\t\t\t{ \"px\": [592,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2557,204] },\n\t\t\t\t\t{ \"px\": [608,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2558,204] },\n\t\t\t\t\t{ \"px\": [944,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2579,204] },\n\t\t\t\t\t{ \"px\": [1104,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2589,204] },\n\t\t\t\t\t{ \"px\": [1216,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2596,204] },\n\t\t\t\t\t{ \"px\": [1232,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2597,204] },\n\t\t\t\t\t{ \"px\": [1248,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2598,204] },\n\t\t\t\t\t{ \"px\": [1312,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2602,204] },\n\t\t\t\t\t{ \"px\": [1392,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2607,204] },\n\t\t\t\t\t{ \"px\": [1408,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2608,204] },\n\t\t\t\t\t{ \"px\": [1424,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2609,204] },\n\t\t\t\t\t{ \"px\": [1488,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2613,204] },\n\t\t\t\t\t{ \"px\": [1504,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2614,204] },\n\t\t\t\t\t{ \"px\": [1520,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2615,204] },\n\t\t\t\t\t{ \"px\": [1536,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2616,204] },\n\t\t\t\t\t{ \"px\": [1552,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2617,204] },\n\t\t\t\t\t{ \"px\": [1568,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2618,204] },\n\t\t\t\t\t{ \"px\": [1584,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2619,204] },\n\t\t\t\t\t{ \"px\": [1600,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2620,204] },\n\t\t\t\t\t{ \"px\": [1616,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2621,204] },\n\t\t\t\t\t{ \"px\": [1632,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2622,204] },\n\t\t\t\t\t{ \"px\": [1648,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2623,204] },\n\t\t\t\t\t{ \"px\": [1760,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2630,204] },\n\t\t\t\t\t{ \"px\": [1776,320], \"src\": [192,96], \"f\": 0, \"d\": [84,2631,204] },\n\t\t\t\t\t{ \"px\": [176,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2657,204] },\n\t\t\t\t\t{ \"px\": [272,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2663,204] },\n\t\t\t\t\t{ \"px\": [288,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2664,204] },\n\t\t\t\t\t{ \"px\": [400,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2671,204] },\n\t\t\t\t\t{ \"px\": [416,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2672,204] },\n\t\t\t\t\t{ \"px\": [432,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2673,204] },\n\t\t\t\t\t{ \"px\": [576,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2682,204] },\n\t\t\t\t\t{ \"px\": [592,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2683,204] },\n\t\t\t\t\t{ \"px\": [608,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2684,204] },\n\t\t\t\t\t{ \"px\": [944,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2705,204] },\n\t\t\t\t\t{ \"px\": [1104,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2715,204] },\n\t\t\t\t\t{ \"px\": [1216,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2722,204] },\n\t\t\t\t\t{ \"px\": [1232,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2723,204] },\n\t\t\t\t\t{ \"px\": [1248,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2724,204] },\n\t\t\t\t\t{ \"px\": [1312,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2728,204] },\n\t\t\t\t\t{ \"px\": [1392,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2733,204] },\n\t\t\t\t\t{ \"px\": [1408,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2734,204] },\n\t\t\t\t\t{ \"px\": [1424,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2735,204] },\n\t\t\t\t\t{ \"px\": [1488,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2739,204] },\n\t\t\t\t\t{ \"px\": [1504,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2740,204] },\n\t\t\t\t\t{ \"px\": [1520,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2741,204] },\n\t\t\t\t\t{ \"px\": [1536,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2742,204] },\n\t\t\t\t\t{ \"px\": [1552,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2743,204] },\n\t\t\t\t\t{ \"px\": [1568,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2744,204] },\n\t\t\t\t\t{ \"px\": [1584,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2745,204] },\n\t\t\t\t\t{ \"px\": [1600,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2746,204] },\n\t\t\t\t\t{ \"px\": [1616,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2747,204] },\n\t\t\t\t\t{ \"px\": [1632,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2748,204] },\n\t\t\t\t\t{ \"px\": [1648,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2749,204] },\n\t\t\t\t\t{ \"px\": [1760,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2756,204] },\n\t\t\t\t\t{ \"px\": [1776,336], \"src\": [192,96], \"f\": 0, \"d\": [84,2757,204] },\n\t\t\t\t\t{ \"px\": [176,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2783,204] },\n\t\t\t\t\t{ \"px\": [272,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2789,204] },\n\t\t\t\t\t{ \"px\": [288,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2790,204] },\n\t\t\t\t\t{ \"px\": [400,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2797,204] },\n\t\t\t\t\t{ \"px\": [416,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2798,204] },\n\t\t\t\t\t{ \"px\": [432,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2799,204] },\n\t\t\t\t\t{ \"px\": [576,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2808,204] },\n\t\t\t\t\t{ \"px\": [592,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2809,204] },\n\t\t\t\t\t{ \"px\": [608,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2810,204] },\n\t\t\t\t\t{ \"px\": [944,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2831,204] },\n\t\t\t\t\t{ \"px\": [960,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2832,204] },\n\t\t\t\t\t{ \"px\": [1104,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2841,204] },\n\t\t\t\t\t{ \"px\": [1216,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2848,204] },\n\t\t\t\t\t{ \"px\": [1232,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2849,204] },\n\t\t\t\t\t{ \"px\": [1248,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2850,204] },\n\t\t\t\t\t{ \"px\": [1312,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2854,204] },\n\t\t\t\t\t{ \"px\": [1392,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2859,204] },\n\t\t\t\t\t{ \"px\": [1408,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2860,204] },\n\t\t\t\t\t{ \"px\": [1424,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2861,204] },\n\t\t\t\t\t{ \"px\": [1488,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2865,204] },\n\t\t\t\t\t{ \"px\": [1504,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2866,204] },\n\t\t\t\t\t{ \"px\": [1520,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2867,204] },\n\t\t\t\t\t{ \"px\": [1536,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2868,204] },\n\t\t\t\t\t{ \"px\": [1552,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2869,204] },\n\t\t\t\t\t{ \"px\": [1568,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2870,204] },\n\t\t\t\t\t{ \"px\": [1584,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2871,204] },\n\t\t\t\t\t{ \"px\": [1600,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2872,204] },\n\t\t\t\t\t{ \"px\": [1616,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2873,204] },\n\t\t\t\t\t{ \"px\": [1632,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2874,204] },\n\t\t\t\t\t{ \"px\": [1648,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2875,204] },\n\t\t\t\t\t{ \"px\": [1760,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2882,204] },\n\t\t\t\t\t{ \"px\": [1776,352], \"src\": [192,96], \"f\": 0, \"d\": [84,2883,204] },\n\t\t\t\t\t{ \"px\": [400,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2923,204] },\n\t\t\t\t\t{ \"px\": [416,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2924,204] },\n\t\t\t\t\t{ \"px\": [432,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2925,204] },\n\t\t\t\t\t{ \"px\": [896,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2954,204] },\n\t\t\t\t\t{ \"px\": [928,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2956,204] },\n\t\t\t\t\t{ \"px\": [944,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2957,204] },\n\t\t\t\t\t{ \"px\": [960,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2958,204] },\n\t\t\t\t\t{ \"px\": [976,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2959,204] },\n\t\t\t\t\t{ \"px\": [992,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2960,204] },\n\t\t\t\t\t{ \"px\": [1008,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2961,204] },\n\t\t\t\t\t{ \"px\": [1024,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2962,204] },\n\t\t\t\t\t{ \"px\": [1104,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2967,204] },\n\t\t\t\t\t{ \"px\": [1216,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2974,204] },\n\t\t\t\t\t{ \"px\": [1232,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2975,204] },\n\t\t\t\t\t{ \"px\": [1248,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2976,204] },\n\t\t\t\t\t{ \"px\": [1312,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2980,204] },\n\t\t\t\t\t{ \"px\": [1392,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2985,204] },\n\t\t\t\t\t{ \"px\": [1408,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2986,204] },\n\t\t\t\t\t{ \"px\": [1424,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2987,204] },\n\t\t\t\t\t{ \"px\": [1488,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2991,204] },\n\t\t\t\t\t{ \"px\": [1504,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2992,204] },\n\t\t\t\t\t{ \"px\": [1520,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2993,204] },\n\t\t\t\t\t{ \"px\": [1536,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2994,204] },\n\t\t\t\t\t{ \"px\": [1552,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2995,204] },\n\t\t\t\t\t{ \"px\": [1568,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2996,204] },\n\t\t\t\t\t{ \"px\": [1584,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2997,204] },\n\t\t\t\t\t{ \"px\": [1600,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2998,204] },\n\t\t\t\t\t{ \"px\": [1616,368], \"src\": [192,96], \"f\": 0, \"d\": [84,2999,204] },\n\t\t\t\t\t{ \"px\": [1632,368], \"src\": [192,96], \"f\": 0, \"d\": [84,3000,204] },\n\t\t\t\t\t{ \"px\": [1648,368], \"src\": [192,96], \"f\": 0, \"d\": [84,3001,204] },\n\t\t\t\t\t{ \"px\": [1760,368], \"src\": [192,96], \"f\": 0, \"d\": [84,3008,204] },\n\t\t\t\t\t{ \"px\": [1776,368], \"src\": [192,96], \"f\": 0, \"d\": [84,3009,204] },\n\t\t\t\t\t{ \"px\": [400,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3049,204] },\n\t\t\t\t\t{ \"px\": [416,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3050,204] },\n\t\t\t\t\t{ \"px\": [432,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3051,204] },\n\t\t\t\t\t{ \"px\": [896,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3080,204] },\n\t\t\t\t\t{ \"px\": [912,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3081,204] },\n\t\t\t\t\t{ \"px\": [928,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3082,204] },\n\t\t\t\t\t{ \"px\": [944,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3083,204] },\n\t\t\t\t\t{ \"px\": [960,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3084,204] },\n\t\t\t\t\t{ \"px\": [976,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3085,204] },\n\t\t\t\t\t{ \"px\": [992,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3086,204] },\n\t\t\t\t\t{ \"px\": [1008,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3087,204] },\n\t\t\t\t\t{ \"px\": [1024,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3088,204] },\n\t\t\t\t\t{ \"px\": [1104,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3093,204] },\n\t\t\t\t\t{ \"px\": [1216,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3100,204] },\n\t\t\t\t\t{ \"px\": [1232,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3101,204] },\n\t\t\t\t\t{ \"px\": [1248,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3102,204] },\n\t\t\t\t\t{ \"px\": [1312,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3106,204] },\n\t\t\t\t\t{ \"px\": [1488,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3117,204] },\n\t\t\t\t\t{ \"px\": [1504,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3118,204] },\n\t\t\t\t\t{ \"px\": [1520,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3119,204] },\n\t\t\t\t\t{ \"px\": [1536,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3120,204] },\n\t\t\t\t\t{ \"px\": [1552,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3121,204] },\n\t\t\t\t\t{ \"px\": [1568,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3122,204] },\n\t\t\t\t\t{ \"px\": [1584,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3123,204] },\n\t\t\t\t\t{ \"px\": [1600,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3124,204] },\n\t\t\t\t\t{ \"px\": [1616,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3125,204] },\n\t\t\t\t\t{ \"px\": [1632,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3126,204] },\n\t\t\t\t\t{ \"px\": [1648,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3127,204] },\n\t\t\t\t\t{ \"px\": [1760,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3134,204] },\n\t\t\t\t\t{ \"px\": [1776,384], \"src\": [192,96], \"f\": 0, \"d\": [84,3135,204] },\n\t\t\t\t\t{ \"px\": [400,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3175,204] },\n\t\t\t\t\t{ \"px\": [416,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3176,204] },\n\t\t\t\t\t{ \"px\": [432,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3177,204] },\n\t\t\t\t\t{ \"px\": [896,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3206,204] },\n\t\t\t\t\t{ \"px\": [912,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3207,204] },\n\t\t\t\t\t{ \"px\": [928,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3208,204] },\n\t\t\t\t\t{ \"px\": [944,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3209,204] },\n\t\t\t\t\t{ \"px\": [960,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3210,204] },\n\t\t\t\t\t{ \"px\": [976,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3211,204] },\n\t\t\t\t\t{ \"px\": [992,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3212,204] },\n\t\t\t\t\t{ \"px\": [1008,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3213,204] },\n\t\t\t\t\t{ \"px\": [1024,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3214,204] },\n\t\t\t\t\t{ \"px\": [1104,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3219,204] },\n\t\t\t\t\t{ \"px\": [1216,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3226,204] },\n\t\t\t\t\t{ \"px\": [1232,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3227,204] },\n\t\t\t\t\t{ \"px\": [1248,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3228,204] },\n\t\t\t\t\t{ \"px\": [1312,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3232,204] },\n\t\t\t\t\t{ \"px\": [1760,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3260,204] },\n\t\t\t\t\t{ \"px\": [1776,400], \"src\": [192,96], \"f\": 0, \"d\": [84,3261,204] },\n\t\t\t\t\t{ \"px\": [896,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3332,204] },\n\t\t\t\t\t{ \"px\": [912,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3333,204] },\n\t\t\t\t\t{ \"px\": [928,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3334,204] },\n\t\t\t\t\t{ \"px\": [944,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3335,204] },\n\t\t\t\t\t{ \"px\": [960,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3336,204] },\n\t\t\t\t\t{ \"px\": [976,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3337,204] },\n\t\t\t\t\t{ \"px\": [992,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3338,204] },\n\t\t\t\t\t{ \"px\": [1008,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3339,204] },\n\t\t\t\t\t{ \"px\": [1024,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3340,204] },\n\t\t\t\t\t{ \"px\": [1104,416], \"src\": [192,96], \"f\": 0, \"d\": [84,3345,204] },\n\t\t\t\t\t{ \"px\": [896,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3458,204] },\n\t\t\t\t\t{ \"px\": [912,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3459,204] },\n\t\t\t\t\t{ \"px\": [928,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3460,204] },\n\t\t\t\t\t{ \"px\": [944,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3461,204] },\n\t\t\t\t\t{ \"px\": [960,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3462,204] },\n\t\t\t\t\t{ \"px\": [976,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3463,204] },\n\t\t\t\t\t{ \"px\": [992,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3464,204] },\n\t\t\t\t\t{ \"px\": [1008,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3465,204] },\n\t\t\t\t\t{ \"px\": [1024,432], \"src\": [192,96], \"f\": 0, \"d\": [84,3466,204] },\n\t\t\t\t\t{ \"px\": [896,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3584,204] },\n\t\t\t\t\t{ \"px\": [912,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3585,204] },\n\t\t\t\t\t{ \"px\": [928,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3586,204] },\n\t\t\t\t\t{ \"px\": [944,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3587,204] },\n\t\t\t\t\t{ \"px\": [960,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3588,204] },\n\t\t\t\t\t{ \"px\": [976,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3589,204] },\n\t\t\t\t\t{ \"px\": [992,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3590,204] },\n\t\t\t\t\t{ \"px\": [1008,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3591,204] },\n\t\t\t\t\t{ \"px\": [1024,448], \"src\": [192,96], \"f\": 0, \"d\": [84,3592,204] },\n\t\t\t\t\t{ \"px\": [256,144], \"src\": [176,96], \"f\": 0, \"d\": [86,1150,203] },\n\t\t\t\t\t{ \"px\": [304,144], \"src\": [176,96], \"f\": 1, \"d\": [86,1153,203] },\n\t\t\t\t\t{ \"px\": [256,160], \"src\": [176,96], \"f\": 0, \"d\": [86,1276,203] },\n\t\t\t\t\t{ \"px\": [304,160], \"src\": [176,96], \"f\": 1, \"d\": [86,1279,203] },\n\t\t\t\t\t{ \"px\": [496,160], \"src\": [176,96], \"f\": 0, \"d\": [86,1291,203] },\n\t\t\t\t\t{ \"px\": [512,160], \"src\": [176,96], \"f\": 1, \"d\": [86,1292,203] },\n\t\t\t\t\t{ \"px\": [1632,160], \"src\": [176,96], \"f\": 0, \"d\": [86,1362,203] },\n\t\t\t\t\t{ \"px\": [1664,160], \"src\": [176,96], \"f\": 1, \"d\": [86,1364,203] },\n\t\t\t\t\t{ \"px\": [256,176], \"src\": [176,96], \"f\": 0, \"d\": [86,1402,203] },\n\t\t\t\t\t{ \"px\": [304,176], \"src\": [176,96], \"f\": 1, \"d\": [86,1405,203] },\n\t\t\t\t\t{ \"px\": [496,176], \"src\": [176,96], \"f\": 0, \"d\": [86,1417,203] },\n\t\t\t\t\t{ \"px\": [512,176], \"src\": [176,96], \"f\": 1, \"d\": [86,1418,203] },\n\t\t\t\t\t{ \"px\": [1632,176], \"src\": [176,96], \"f\": 0, \"d\": [86,1488,203] },\n\t\t\t\t\t{ \"px\": [1664,176], \"src\": [176,96], \"f\": 1, \"d\": [86,1490,203] },\n\t\t\t\t\t{ \"px\": [160,192], \"src\": [176,96], \"f\": 0, \"d\": [86,1522,203] },\n\t\t\t\t\t{ \"px\": [192,192], \"src\": [176,96], \"f\": 1, \"d\": [86,1524,203] },\n\t\t\t\t\t{ \"px\": [256,192], \"src\": [176,96], \"f\": 0, \"d\": [86,1528,203] },\n\t\t\t\t\t{ \"px\": [304,192], \"src\": [176,96], \"f\": 1, \"d\": [86,1531,203] },\n\t\t\t\t\t{ \"px\": [496,192], \"src\": [176,96], \"f\": 0, \"d\": [86,1543,203] },\n\t\t\t\t\t{ \"px\": [512,192], \"src\": [176,96], \"f\": 1, \"d\": [86,1544,203] },\n\t\t\t\t\t{ \"px\": [560,192], \"src\": [176,96], \"f\": 0, \"d\": [86,1547,203] },\n\t\t\t\t\t{ \"px\": [624,192], \"src\": [176,96], \"f\": 1, \"d\": [86,1551,203] },\n\t\t\t\t\t{ \"px\": [1584,192], \"src\": [176,96], \"f\": 0, \"d\": [86,1611,203] },\n\t\t\t\t\t{ \"px\": [1600,192], \"src\": [176,96], \"f\": 1, \"d\": [86,1612,203] },\n\t\t\t\t\t{ \"px\": [1632,192], \"src\": [176,96], \"f\": 0, \"d\": [86,1614,203] },\n\t\t\t\t\t{ \"px\": [1664,192], \"src\": [176,96], \"f\": 1, \"d\": [86,1616,203] },\n\t\t\t\t\t{ \"px\": [160,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1648,203] },\n\t\t\t\t\t{ \"px\": [192,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1650,203] },\n\t\t\t\t\t{ \"px\": [256,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1654,203] },\n\t\t\t\t\t{ \"px\": [304,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1657,203] },\n\t\t\t\t\t{ \"px\": [384,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1662,203] },\n\t\t\t\t\t{ \"px\": [448,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1666,203] },\n\t\t\t\t\t{ \"px\": [496,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1669,203] },\n\t\t\t\t\t{ \"px\": [512,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1670,203] },\n\t\t\t\t\t{ \"px\": [560,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1673,203] },\n\t\t\t\t\t{ \"px\": [624,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1677,203] },\n\t\t\t\t\t{ \"px\": [1216,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1714,203] },\n\t\t\t\t\t{ \"px\": [1264,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1717,203] },\n\t\t\t\t\t{ \"px\": [1440,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1728,203] },\n\t\t\t\t\t{ \"px\": [1664,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1742,203] },\n\t\t\t\t\t{ \"px\": [1744,208], \"src\": [176,96], \"f\": 0, \"d\": [86,1747,203] },\n\t\t\t\t\t{ \"px\": [1792,208], \"src\": [176,96], \"f\": 1, \"d\": [86,1750,203] },\n\t\t\t\t\t{ \"px\": [160,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1774,203] },\n\t\t\t\t\t{ \"px\": [192,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1776,203] },\n\t\t\t\t\t{ \"px\": [256,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1780,203] },\n\t\t\t\t\t{ \"px\": [304,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1783,203] },\n\t\t\t\t\t{ \"px\": [384,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1788,203] },\n\t\t\t\t\t{ \"px\": [448,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1792,203] },\n\t\t\t\t\t{ \"px\": [496,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1795,203] },\n\t\t\t\t\t{ \"px\": [512,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1796,203] },\n\t\t\t\t\t{ \"px\": [560,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1799,203] },\n\t\t\t\t\t{ \"px\": [624,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1803,203] },\n\t\t\t\t\t{ \"px\": [1216,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1840,203] },\n\t\t\t\t\t{ \"px\": [1264,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1843,203] },\n\t\t\t\t\t{ \"px\": [1296,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1845,203] },\n\t\t\t\t\t{ \"px\": [1328,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1847,203] },\n\t\t\t\t\t{ \"px\": [1408,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1852,203] },\n\t\t\t\t\t{ \"px\": [1440,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1854,203] },\n\t\t\t\t\t{ \"px\": [1664,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1868,203] },\n\t\t\t\t\t{ \"px\": [1744,224], \"src\": [176,96], \"f\": 0, \"d\": [86,1873,203] },\n\t\t\t\t\t{ \"px\": [1792,224], \"src\": [176,96], \"f\": 1, \"d\": [86,1876,203] },\n\t\t\t\t\t{ \"px\": [160,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1900,203] },\n\t\t\t\t\t{ \"px\": [192,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1902,203] },\n\t\t\t\t\t{ \"px\": [256,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1906,203] },\n\t\t\t\t\t{ \"px\": [304,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1909,203] },\n\t\t\t\t\t{ \"px\": [384,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1914,203] },\n\t\t\t\t\t{ \"px\": [448,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1918,203] },\n\t\t\t\t\t{ \"px\": [496,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1921,203] },\n\t\t\t\t\t{ \"px\": [512,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1922,203] },\n\t\t\t\t\t{ \"px\": [560,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1925,203] },\n\t\t\t\t\t{ \"px\": [624,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1929,203] },\n\t\t\t\t\t{ \"px\": [1264,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1969,203] },\n\t\t\t\t\t{ \"px\": [1296,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1971,203] },\n\t\t\t\t\t{ \"px\": [1328,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1973,203] },\n\t\t\t\t\t{ \"px\": [1440,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1980,203] },\n\t\t\t\t\t{ \"px\": [1472,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1982,203] },\n\t\t\t\t\t{ \"px\": [1664,240], \"src\": [176,96], \"f\": 1, \"d\": [86,1994,203] },\n\t\t\t\t\t{ \"px\": [1744,240], \"src\": [176,96], \"f\": 0, \"d\": [86,1999,203] },\n\t\t\t\t\t{ \"px\": [1792,240], \"src\": [176,96], \"f\": 1, \"d\": [86,2002,203] },\n\t\t\t\t\t{ \"px\": [160,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2026,203] },\n\t\t\t\t\t{ \"px\": [192,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2028,203] },\n\t\t\t\t\t{ \"px\": [256,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2032,203] },\n\t\t\t\t\t{ \"px\": [304,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2035,203] },\n\t\t\t\t\t{ \"px\": [384,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2040,203] },\n\t\t\t\t\t{ \"px\": [448,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2044,203] },\n\t\t\t\t\t{ \"px\": [496,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2047,203] },\n\t\t\t\t\t{ \"px\": [512,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2048,203] },\n\t\t\t\t\t{ \"px\": [560,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2051,203] },\n\t\t\t\t\t{ \"px\": [624,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2055,203] },\n\t\t\t\t\t{ \"px\": [928,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2074,203] },\n\t\t\t\t\t{ \"px\": [960,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2076,203] },\n\t\t\t\t\t{ \"px\": [1088,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2084,203] },\n\t\t\t\t\t{ \"px\": [1120,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2086,203] },\n\t\t\t\t\t{ \"px\": [1200,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2091,203] },\n\t\t\t\t\t{ \"px\": [1264,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2095,203] },\n\t\t\t\t\t{ \"px\": [1296,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2097,203] },\n\t\t\t\t\t{ \"px\": [1328,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2099,203] },\n\t\t\t\t\t{ \"px\": [1376,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2102,203] },\n\t\t\t\t\t{ \"px\": [1440,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2106,203] },\n\t\t\t\t\t{ \"px\": [1472,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2108,203] },\n\t\t\t\t\t{ \"px\": [1664,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2120,203] },\n\t\t\t\t\t{ \"px\": [1744,256], \"src\": [176,96], \"f\": 0, \"d\": [86,2125,203] },\n\t\t\t\t\t{ \"px\": [1792,256], \"src\": [176,96], \"f\": 1, \"d\": [86,2128,203] },\n\t\t\t\t\t{ \"px\": [160,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2152,203] },\n\t\t\t\t\t{ \"px\": [192,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2154,203] },\n\t\t\t\t\t{ \"px\": [256,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2158,203] },\n\t\t\t\t\t{ \"px\": [304,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2161,203] },\n\t\t\t\t\t{ \"px\": [384,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2166,203] },\n\t\t\t\t\t{ \"px\": [448,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2170,203] },\n\t\t\t\t\t{ \"px\": [496,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2173,203] },\n\t\t\t\t\t{ \"px\": [512,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2174,203] },\n\t\t\t\t\t{ \"px\": [560,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2177,203] },\n\t\t\t\t\t{ \"px\": [624,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2181,203] },\n\t\t\t\t\t{ \"px\": [928,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2200,203] },\n\t\t\t\t\t{ \"px\": [960,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2202,203] },\n\t\t\t\t\t{ \"px\": [1088,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2210,203] },\n\t\t\t\t\t{ \"px\": [1120,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2212,203] },\n\t\t\t\t\t{ \"px\": [1200,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2217,203] },\n\t\t\t\t\t{ \"px\": [1264,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2221,203] },\n\t\t\t\t\t{ \"px\": [1296,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2223,203] },\n\t\t\t\t\t{ \"px\": [1328,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2225,203] },\n\t\t\t\t\t{ \"px\": [1376,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2228,203] },\n\t\t\t\t\t{ \"px\": [1440,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2232,203] },\n\t\t\t\t\t{ \"px\": [1472,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2234,203] },\n\t\t\t\t\t{ \"px\": [1664,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2246,203] },\n\t\t\t\t\t{ \"px\": [1744,272], \"src\": [176,96], \"f\": 0, \"d\": [86,2251,203] },\n\t\t\t\t\t{ \"px\": [1792,272], \"src\": [176,96], \"f\": 1, \"d\": [86,2254,203] },\n\t\t\t\t\t{ \"px\": [160,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2278,203] },\n\t\t\t\t\t{ \"px\": [192,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2280,203] },\n\t\t\t\t\t{ \"px\": [256,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2284,203] },\n\t\t\t\t\t{ \"px\": [304,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2287,203] },\n\t\t\t\t\t{ \"px\": [384,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2292,203] },\n\t\t\t\t\t{ \"px\": [448,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2296,203] },\n\t\t\t\t\t{ \"px\": [496,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2299,203] },\n\t\t\t\t\t{ \"px\": [512,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2300,203] },\n\t\t\t\t\t{ \"px\": [560,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2303,203] },\n\t\t\t\t\t{ \"px\": [624,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2307,203] },\n\t\t\t\t\t{ \"px\": [928,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2326,203] },\n\t\t\t\t\t{ \"px\": [960,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2328,203] },\n\t\t\t\t\t{ \"px\": [1088,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2336,203] },\n\t\t\t\t\t{ \"px\": [1120,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2338,203] },\n\t\t\t\t\t{ \"px\": [1200,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2343,203] },\n\t\t\t\t\t{ \"px\": [1264,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2347,203] },\n\t\t\t\t\t{ \"px\": [1296,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2349,203] },\n\t\t\t\t\t{ \"px\": [1328,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2351,203] },\n\t\t\t\t\t{ \"px\": [1376,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2354,203] },\n\t\t\t\t\t{ \"px\": [1440,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2358,203] },\n\t\t\t\t\t{ \"px\": [1472,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2360,203] },\n\t\t\t\t\t{ \"px\": [1664,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2372,203] },\n\t\t\t\t\t{ \"px\": [1744,288], \"src\": [176,96], \"f\": 0, \"d\": [86,2377,203] },\n\t\t\t\t\t{ \"px\": [1792,288], \"src\": [176,96], \"f\": 1, \"d\": [86,2380,203] },\n\t\t\t\t\t{ \"px\": [160,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2404,203] },\n\t\t\t\t\t{ \"px\": [192,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2406,203] },\n\t\t\t\t\t{ \"px\": [256,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2410,203] },\n\t\t\t\t\t{ \"px\": [304,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2413,203] },\n\t\t\t\t\t{ \"px\": [384,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2418,203] },\n\t\t\t\t\t{ \"px\": [448,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2422,203] },\n\t\t\t\t\t{ \"px\": [496,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2425,203] },\n\t\t\t\t\t{ \"px\": [512,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2426,203] },\n\t\t\t\t\t{ \"px\": [560,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2429,203] },\n\t\t\t\t\t{ \"px\": [624,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2433,203] },\n\t\t\t\t\t{ \"px\": [928,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2452,203] },\n\t\t\t\t\t{ \"px\": [960,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2454,203] },\n\t\t\t\t\t{ \"px\": [1088,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2462,203] },\n\t\t\t\t\t{ \"px\": [1120,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2464,203] },\n\t\t\t\t\t{ \"px\": [1200,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2469,203] },\n\t\t\t\t\t{ \"px\": [1264,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2473,203] },\n\t\t\t\t\t{ \"px\": [1296,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2475,203] },\n\t\t\t\t\t{ \"px\": [1328,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2477,203] },\n\t\t\t\t\t{ \"px\": [1376,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2480,203] },\n\t\t\t\t\t{ \"px\": [1440,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2484,203] },\n\t\t\t\t\t{ \"px\": [1472,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2486,203] },\n\t\t\t\t\t{ \"px\": [1664,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2498,203] },\n\t\t\t\t\t{ \"px\": [1744,304], \"src\": [176,96], \"f\": 0, \"d\": [86,2503,203] },\n\t\t\t\t\t{ \"px\": [1792,304], \"src\": [176,96], \"f\": 1, \"d\": [86,2506,203] },\n\t\t\t\t\t{ \"px\": [160,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2530,203] },\n\t\t\t\t\t{ \"px\": [192,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2532,203] },\n\t\t\t\t\t{ \"px\": [256,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2536,203] },\n\t\t\t\t\t{ \"px\": [304,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2539,203] },\n\t\t\t\t\t{ \"px\": [384,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2544,203] },\n\t\t\t\t\t{ \"px\": [448,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2548,203] },\n\t\t\t\t\t{ \"px\": [496,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2551,203] },\n\t\t\t\t\t{ \"px\": [512,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2552,203] },\n\t\t\t\t\t{ \"px\": [560,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2555,203] },\n\t\t\t\t\t{ \"px\": [624,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2559,203] },\n\t\t\t\t\t{ \"px\": [880,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2575,203] },\n\t\t\t\t\t{ \"px\": [896,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2576,203] },\n\t\t\t\t\t{ \"px\": [928,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2578,203] },\n\t\t\t\t\t{ \"px\": [960,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2580,203] },\n\t\t\t\t\t{ \"px\": [1088,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2588,203] },\n\t\t\t\t\t{ \"px\": [1120,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2590,203] },\n\t\t\t\t\t{ \"px\": [1200,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2595,203] },\n\t\t\t\t\t{ \"px\": [1264,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2599,203] },\n\t\t\t\t\t{ \"px\": [1296,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2601,203] },\n\t\t\t\t\t{ \"px\": [1328,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2603,203] },\n\t\t\t\t\t{ \"px\": [1376,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2606,203] },\n\t\t\t\t\t{ \"px\": [1440,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2610,203] },\n\t\t\t\t\t{ \"px\": [1472,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2612,203] },\n\t\t\t\t\t{ \"px\": [1664,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2624,203] },\n\t\t\t\t\t{ \"px\": [1744,320], \"src\": [176,96], \"f\": 0, \"d\": [86,2629,203] },\n\t\t\t\t\t{ \"px\": [1792,320], \"src\": [176,96], \"f\": 1, \"d\": [86,2632,203] },\n\t\t\t\t\t{ \"px\": [160,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2656,203] },\n\t\t\t\t\t{ \"px\": [192,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2658,203] },\n\t\t\t\t\t{ \"px\": [256,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2662,203] },\n\t\t\t\t\t{ \"px\": [304,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2665,203] },\n\t\t\t\t\t{ \"px\": [384,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2670,203] },\n\t\t\t\t\t{ \"px\": [448,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2674,203] },\n\t\t\t\t\t{ \"px\": [496,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2677,203] },\n\t\t\t\t\t{ \"px\": [512,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2678,203] },\n\t\t\t\t\t{ \"px\": [560,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2681,203] },\n\t\t\t\t\t{ \"px\": [624,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2685,203] },\n\t\t\t\t\t{ \"px\": [880,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2701,203] },\n\t\t\t\t\t{ \"px\": [896,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2702,203] },\n\t\t\t\t\t{ \"px\": [928,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2704,203] },\n\t\t\t\t\t{ \"px\": [960,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2706,203] },\n\t\t\t\t\t{ \"px\": [1088,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2714,203] },\n\t\t\t\t\t{ \"px\": [1120,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2716,203] },\n\t\t\t\t\t{ \"px\": [1200,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2721,203] },\n\t\t\t\t\t{ \"px\": [1264,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2725,203] },\n\t\t\t\t\t{ \"px\": [1296,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2727,203] },\n\t\t\t\t\t{ \"px\": [1328,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2729,203] },\n\t\t\t\t\t{ \"px\": [1376,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2732,203] },\n\t\t\t\t\t{ \"px\": [1440,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2736,203] },\n\t\t\t\t\t{ \"px\": [1472,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2738,203] },\n\t\t\t\t\t{ \"px\": [1664,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2750,203] },\n\t\t\t\t\t{ \"px\": [1744,336], \"src\": [176,96], \"f\": 0, \"d\": [86,2755,203] },\n\t\t\t\t\t{ \"px\": [1792,336], \"src\": [176,96], \"f\": 1, \"d\": [86,2758,203] },\n\t\t\t\t\t{ \"px\": [160,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2782,203] },\n\t\t\t\t\t{ \"px\": [192,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2784,203] },\n\t\t\t\t\t{ \"px\": [256,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2788,203] },\n\t\t\t\t\t{ \"px\": [304,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2791,203] },\n\t\t\t\t\t{ \"px\": [384,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2796,203] },\n\t\t\t\t\t{ \"px\": [448,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2800,203] },\n\t\t\t\t\t{ \"px\": [496,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2803,203] },\n\t\t\t\t\t{ \"px\": [512,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2804,203] },\n\t\t\t\t\t{ \"px\": [560,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2807,203] },\n\t\t\t\t\t{ \"px\": [624,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2811,203] },\n\t\t\t\t\t{ \"px\": [880,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2827,203] },\n\t\t\t\t\t{ \"px\": [896,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2828,203] },\n\t\t\t\t\t{ \"px\": [928,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2830,203] },\n\t\t\t\t\t{ \"px\": [1088,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2840,203] },\n\t\t\t\t\t{ \"px\": [1120,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2842,203] },\n\t\t\t\t\t{ \"px\": [1200,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2847,203] },\n\t\t\t\t\t{ \"px\": [1264,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2851,203] },\n\t\t\t\t\t{ \"px\": [1296,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2853,203] },\n\t\t\t\t\t{ \"px\": [1328,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2855,203] },\n\t\t\t\t\t{ \"px\": [1376,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2858,203] },\n\t\t\t\t\t{ \"px\": [1440,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2862,203] },\n\t\t\t\t\t{ \"px\": [1472,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2864,203] },\n\t\t\t\t\t{ \"px\": [1664,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2876,203] },\n\t\t\t\t\t{ \"px\": [1744,352], \"src\": [176,96], \"f\": 0, \"d\": [86,2881,203] },\n\t\t\t\t\t{ \"px\": [1792,352], \"src\": [176,96], \"f\": 1, \"d\": [86,2884,203] },\n\t\t\t\t\t{ \"px\": [384,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2922,203] },\n\t\t\t\t\t{ \"px\": [448,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2926,203] },\n\t\t\t\t\t{ \"px\": [496,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2929,203] },\n\t\t\t\t\t{ \"px\": [512,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2930,203] },\n\t\t\t\t\t{ \"px\": [880,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2953,203] },\n\t\t\t\t\t{ \"px\": [1040,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2963,203] },\n\t\t\t\t\t{ \"px\": [1088,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2966,203] },\n\t\t\t\t\t{ \"px\": [1120,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2968,203] },\n\t\t\t\t\t{ \"px\": [1200,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2973,203] },\n\t\t\t\t\t{ \"px\": [1264,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2977,203] },\n\t\t\t\t\t{ \"px\": [1296,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2979,203] },\n\t\t\t\t\t{ \"px\": [1328,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2981,203] },\n\t\t\t\t\t{ \"px\": [1376,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2984,203] },\n\t\t\t\t\t{ \"px\": [1440,368], \"src\": [176,96], \"f\": 1, \"d\": [86,2988,203] },\n\t\t\t\t\t{ \"px\": [1472,368], \"src\": [176,96], \"f\": 0, \"d\": [86,2990,203] },\n\t\t\t\t\t{ \"px\": [1664,368], \"src\": [176,96], \"f\": 1, \"d\": [86,3002,203] },\n\t\t\t\t\t{ \"px\": [1744,368], \"src\": [176,96], \"f\": 0, \"d\": [86,3007,203] },\n\t\t\t\t\t{ \"px\": [1792,368], \"src\": [176,96], \"f\": 1, \"d\": [86,3010,203] },\n\t\t\t\t\t{ \"px\": [384,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3048,203] },\n\t\t\t\t\t{ \"px\": [448,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3052,203] },\n\t\t\t\t\t{ \"px\": [496,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3055,203] },\n\t\t\t\t\t{ \"px\": [512,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3056,203] },\n\t\t\t\t\t{ \"px\": [880,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3079,203] },\n\t\t\t\t\t{ \"px\": [1040,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3089,203] },\n\t\t\t\t\t{ \"px\": [1088,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3092,203] },\n\t\t\t\t\t{ \"px\": [1120,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3094,203] },\n\t\t\t\t\t{ \"px\": [1200,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3099,203] },\n\t\t\t\t\t{ \"px\": [1264,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3103,203] },\n\t\t\t\t\t{ \"px\": [1296,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3105,203] },\n\t\t\t\t\t{ \"px\": [1328,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3107,203] },\n\t\t\t\t\t{ \"px\": [1472,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3116,203] },\n\t\t\t\t\t{ \"px\": [1664,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3128,203] },\n\t\t\t\t\t{ \"px\": [1744,384], \"src\": [176,96], \"f\": 0, \"d\": [86,3133,203] },\n\t\t\t\t\t{ \"px\": [1792,384], \"src\": [176,96], \"f\": 1, \"d\": [86,3136,203] },\n\t\t\t\t\t{ \"px\": [384,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3174,203] },\n\t\t\t\t\t{ \"px\": [448,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3178,203] },\n\t\t\t\t\t{ \"px\": [496,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3181,203] },\n\t\t\t\t\t{ \"px\": [512,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3182,203] },\n\t\t\t\t\t{ \"px\": [880,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3205,203] },\n\t\t\t\t\t{ \"px\": [1040,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3215,203] },\n\t\t\t\t\t{ \"px\": [1088,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3218,203] },\n\t\t\t\t\t{ \"px\": [1120,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3220,203] },\n\t\t\t\t\t{ \"px\": [1200,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3225,203] },\n\t\t\t\t\t{ \"px\": [1264,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3229,203] },\n\t\t\t\t\t{ \"px\": [1296,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3231,203] },\n\t\t\t\t\t{ \"px\": [1328,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3233,203] },\n\t\t\t\t\t{ \"px\": [1744,400], \"src\": [176,96], \"f\": 0, \"d\": [86,3259,203] },\n\t\t\t\t\t{ \"px\": [1792,400], \"src\": [176,96], \"f\": 1, \"d\": [86,3262,203] },\n\t\t\t\t\t{ \"px\": [496,416], \"src\": [176,96], \"f\": 0, \"d\": [86,3307,203] },\n\t\t\t\t\t{ \"px\": [512,416], \"src\": [176,96], \"f\": 1, \"d\": [86,3308,203] },\n\t\t\t\t\t{ \"px\": [880,416], \"src\": [176,96], \"f\": 0, \"d\": [86,3331,203] },\n\t\t\t\t\t{ \"px\": [1040,416], \"src\": [176,96], \"f\": 1, \"d\": [86,3341,203] },\n\t\t\t\t\t{ \"px\": [1120,416], \"src\": [176,96], \"f\": 1, \"d\": [86,3346,203] },\n\t\t\t\t\t{ \"px\": [496,432], \"src\": [176,96], \"f\": 0, \"d\": [86,3433,203] },\n\t\t\t\t\t{ \"px\": [512,432], \"src\": [176,96], \"f\": 1, \"d\": [86,3434,203] },\n\t\t\t\t\t{ \"px\": [880,432], \"src\": [176,96], \"f\": 0, \"d\": [86,3457,203] },\n\t\t\t\t\t{ \"px\": [1040,432], \"src\": [176,96], \"f\": 1, \"d\": [86,3467,203] },\n\t\t\t\t\t{ \"px\": [496,448], \"src\": [176,96], \"f\": 0, \"d\": [86,3559,203] },\n\t\t\t\t\t{ \"px\": [512,448], \"src\": [176,96], \"f\": 1, \"d\": [86,3560,203] },\n\t\t\t\t\t{ \"px\": [880,448], \"src\": [176,96], \"f\": 0, \"d\": [86,3583,203] },\n\t\t\t\t\t{ \"px\": [1040,448], \"src\": [176,96], \"f\": 1, \"d\": [86,3593,203] },\n\t\t\t\t\t{ \"px\": [272,128], \"src\": [192,80], \"f\": 0, \"d\": [87,1025,172] },\n\t\t\t\t\t{ \"px\": [288,128], \"src\": [192,80], \"f\": 0, \"d\": [87,1026,172] },\n\t\t\t\t\t{ \"px\": [1648,144], \"src\": [192,80], \"f\": 0, \"d\": [87,1237,172] },\n\t\t\t\t\t{ \"px\": [176,176], \"src\": [192,80], \"f\": 0, \"d\": [87,1397,172] },\n\t\t\t\t\t{ \"px\": [576,176], \"src\": [192,80], \"f\": 0, \"d\": [87,1422,172] },\n\t\t\t\t\t{ \"px\": [592,176], \"src\": [192,80], \"f\": 0, \"d\": [87,1423,172] },\n\t\t\t\t\t{ \"px\": [608,176], \"src\": [192,80], \"f\": 0, \"d\": [87,1424,172] },\n\t\t\t\t\t{ \"px\": [400,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1537,172] },\n\t\t\t\t\t{ \"px\": [416,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1538,172] },\n\t\t\t\t\t{ \"px\": [432,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1539,172] },\n\t\t\t\t\t{ \"px\": [1232,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1589,172] },\n\t\t\t\t\t{ \"px\": [1248,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1590,172] },\n\t\t\t\t\t{ \"px\": [1760,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1622,172] },\n\t\t\t\t\t{ \"px\": [1776,192], \"src\": [192,80], \"f\": 0, \"d\": [87,1623,172] },\n\t\t\t\t\t{ \"px\": [1312,208], \"src\": [192,80], \"f\": 0, \"d\": [87,1720,172] },\n\t\t\t\t\t{ \"px\": [1552,208], \"src\": [192,80], \"f\": 0, \"d\": [87,1735,172] },\n\t\t\t\t\t{ \"px\": [1568,208], \"src\": [192,80], \"f\": 0, \"d\": [87,1736,172] },\n\t\t\t\t\t{ \"px\": [1616,208], \"src\": [192,80], \"f\": 0, \"d\": [87,1739,172] },\n\t\t\t\t\t{ \"px\": [1488,224], \"src\": [192,80], \"f\": 0, \"d\": [87,1857,172] },\n\t\t\t\t\t{ \"px\": [1504,224], \"src\": [192,80], \"f\": 0, \"d\": [87,1858,172] },\n\t\t\t\t\t{ \"px\": [1520,224], \"src\": [192,80], \"f\": 0, \"d\": [87,1859,172] },\n\t\t\t\t\t{ \"px\": [944,240], \"src\": [192,80], \"f\": 0, \"d\": [87,1949,172] },\n\t\t\t\t\t{ \"px\": [1104,240], \"src\": [192,80], \"f\": 0, \"d\": [87,1959,172] },\n\t\t\t\t\t{ \"px\": [1392,240], \"src\": [192,80], \"f\": 0, \"d\": [87,1977,172] },\n\t\t\t\t\t{ \"px\": [976,352], \"src\": [192,80], \"f\": 0, \"d\": [87,2833,172] },\n\t\t\t\t\t{ \"px\": [992,352], \"src\": [192,80], \"f\": 0, \"d\": [87,2834,172] },\n\t\t\t\t\t{ \"px\": [1008,352], \"src\": [192,80], \"f\": 0, \"d\": [87,2835,172] },\n\t\t\t\t\t{ \"px\": [1024,352], \"src\": [192,80], \"f\": 0, \"d\": [87,2836,172] },\n\t\t\t\t\t{ \"px\": [176,368], \"src\": [192,80], \"f\": 2, \"d\": [87,2909,172] },\n\t\t\t\t\t{ \"px\": [272,368], \"src\": [192,80], \"f\": 2, \"d\": [87,2915,172] },\n\t\t\t\t\t{ \"px\": [288,368], \"src\": [192,80], \"f\": 2, \"d\": [87,2916,172] },\n\t\t\t\t\t{ \"px\": [576,368], \"src\": [192,80], \"f\": 2, \"d\": [87,2934,172] },\n\t\t\t\t\t{ \"px\": [592,368], \"src\": [192,80], \"f\": 2, \"d\": [87,2935,172] },\n\t\t\t\t\t{ \"px\": [608,368], \"src\": [192,80], \"f\": 2, \"d\": [87,2936,172] },\n\t\t\t\t\t{ \"px\": [912,368], \"src\": [192,80], \"f\": 0, \"d\": [87,2955,172] },\n\t\t\t\t\t{ \"px\": [1392,384], \"src\": [192,80], \"f\": 2, \"d\": [87,3111,172] },\n\t\t\t\t\t{ \"px\": [1408,384], \"src\": [192,80], \"f\": 2, \"d\": [87,3112,172] },\n\t\t\t\t\t{ \"px\": [1424,384], \"src\": [192,80], \"f\": 2, \"d\": [87,3113,172] },\n\t\t\t\t\t{ \"px\": [1488,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3243,172] },\n\t\t\t\t\t{ \"px\": [1504,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3244,172] },\n\t\t\t\t\t{ \"px\": [1520,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3245,172] },\n\t\t\t\t\t{ \"px\": [1536,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3246,172] },\n\t\t\t\t\t{ \"px\": [1552,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3247,172] },\n\t\t\t\t\t{ \"px\": [1568,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3248,172] },\n\t\t\t\t\t{ \"px\": [1584,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3249,172] },\n\t\t\t\t\t{ \"px\": [1600,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3250,172] },\n\t\t\t\t\t{ \"px\": [1616,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3251,172] },\n\t\t\t\t\t{ \"px\": [1632,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3252,172] },\n\t\t\t\t\t{ \"px\": [1648,400], \"src\": [192,80], \"f\": 2, \"d\": [87,3253,172] },\n\t\t\t\t\t{ \"px\": [400,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3301,172] },\n\t\t\t\t\t{ \"px\": [416,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3302,172] },\n\t\t\t\t\t{ \"px\": [432,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3303,172] },\n\t\t\t\t\t{ \"px\": [1216,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3352,172] },\n\t\t\t\t\t{ \"px\": [1232,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3353,172] },\n\t\t\t\t\t{ \"px\": [1248,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3354,172] },\n\t\t\t\t\t{ \"px\": [1312,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3358,172] },\n\t\t\t\t\t{ \"px\": [1760,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3386,172] },\n\t\t\t\t\t{ \"px\": [1776,416], \"src\": [192,80], \"f\": 2, \"d\": [87,3387,172] },\n\t\t\t\t\t{ \"px\": [256,128], \"src\": [176,80], \"f\": 0, \"d\": [85,1024,171] },\n\t\t\t\t\t{ \"px\": [304,128], \"src\": [176,80], \"f\": 1, \"d\": [85,1027,171] },\n\t\t\t\t\t{ \"px\": [496,144], \"src\": [176,80], \"f\": 0, \"d\": [85,1165,171] },\n\t\t\t\t\t{ \"px\": [512,144], \"src\": [176,80], \"f\": 1, \"d\": [85,1166,171] },\n\t\t\t\t\t{ \"px\": [1632,144], \"src\": [176,80], \"f\": 0, \"d\": [85,1236,171] },\n\t\t\t\t\t{ \"px\": [1664,144], \"src\": [176,80], \"f\": 1, \"d\": [85,1238,171] },\n\t\t\t\t\t{ \"px\": [160,176], \"src\": [176,80], \"f\": 0, \"d\": [85,1396,171] },\n\t\t\t\t\t{ \"px\": [192,176], \"src\": [176,80], \"f\": 1, \"d\": [85,1398,171] },\n\t\t\t\t\t{ \"px\": [560,176], \"src\": [176,80], \"f\": 0, \"d\": [85,1421,171] },\n\t\t\t\t\t{ \"px\": [624,176], \"src\": [176,80], \"f\": 1, \"d\": [85,1425,171] },\n\t\t\t\t\t{ \"px\": [1584,176], \"src\": [176,80], \"f\": 0, \"d\": [85,1485,171] },\n\t\t\t\t\t{ \"px\": [1600,176], \"src\": [176,80], \"f\": 1, \"d\": [85,1486,171] },\n\t\t\t\t\t{ \"px\": [384,192], \"src\": [176,80], \"f\": 0, \"d\": [85,1536,171] },\n\t\t\t\t\t{ \"px\": [448,192], \"src\": [176,80], \"f\": 1, \"d\": [85,1540,171] },\n\t\t\t\t\t{ \"px\": [1216,192], \"src\": [176,80], \"f\": 0, \"d\": [85,1588,171] },\n\t\t\t\t\t{ \"px\": [1264,192], \"src\": [176,80], \"f\": 1, \"d\": [85,1591,171] },\n\t\t\t\t\t{ \"px\": [1424,192], \"src\": [176,80], \"f\": 0, \"d\": [85,1601,171] },\n\t\t\t\t\t{ \"px\": [1440,192], \"src\": [176,80], \"f\": 1, \"d\": [85,1602,171] },\n\t\t\t\t\t{ \"px\": [1744,192], \"src\": [176,80], \"f\": 0, \"d\": [85,1621,171] },\n\t\t\t\t\t{ \"px\": [1792,192], \"src\": [176,80], \"f\": 1, \"d\": [85,1624,171] },\n\t\t\t\t\t{ \"px\": [1296,208], \"src\": [176,80], \"f\": 0, \"d\": [85,1719,171] },\n\t\t\t\t\t{ \"px\": [1328,208], \"src\": [176,80], \"f\": 1, \"d\": [85,1721,171] },\n\t\t\t\t\t{ \"px\": [1408,208], \"src\": [176,80], \"f\": 0, \"d\": [85,1726,171] },\n\t\t\t\t\t{ \"px\": [1536,208], \"src\": [176,80], \"f\": 0, \"d\": [85,1734,171] },\n\t\t\t\t\t{ \"px\": [1472,224], \"src\": [176,80], \"f\": 0, \"d\": [85,1856,171] },\n\t\t\t\t\t{ \"px\": [928,240], \"src\": [176,80], \"f\": 0, \"d\": [85,1948,171] },\n\t\t\t\t\t{ \"px\": [960,240], \"src\": [176,80], \"f\": 1, \"d\": [85,1950,171] },\n\t\t\t\t\t{ \"px\": [1088,240], \"src\": [176,80], \"f\": 0, \"d\": [85,1958,171] },\n\t\t\t\t\t{ \"px\": [1120,240], \"src\": [176,80], \"f\": 1, \"d\": [85,1960,171] },\n\t\t\t\t\t{ \"px\": [1200,240], \"src\": [176,80], \"f\": 0, \"d\": [85,1965,171] },\n\t\t\t\t\t{ \"px\": [1376,240], \"src\": [176,80], \"f\": 0, \"d\": [85,1976,171] },\n\t\t\t\t\t{ \"px\": [880,304], \"src\": [176,80], \"f\": 0, \"d\": [85,2449,171] },\n\t\t\t\t\t{ \"px\": [896,304], \"src\": [176,80], \"f\": 1, \"d\": [85,2450,171] },\n\t\t\t\t\t{ \"px\": [1040,352], \"src\": [176,80], \"f\": 1, \"d\": [85,2837,171] },\n\t\t\t\t\t{ \"px\": [160,368], \"src\": [176,80], \"f\": 2, \"d\": [85,2908,171] },\n\t\t\t\t\t{ \"px\": [192,368], \"src\": [176,80], \"f\": 3, \"d\": [85,2910,171] },\n\t\t\t\t\t{ \"px\": [256,368], \"src\": [176,80], \"f\": 2, \"d\": [85,2914,171] },\n\t\t\t\t\t{ \"px\": [304,368], \"src\": [176,80], \"f\": 3, \"d\": [85,2917,171] },\n\t\t\t\t\t{ \"px\": [560,368], \"src\": [176,80], \"f\": 2, \"d\": [85,2933,171] },\n\t\t\t\t\t{ \"px\": [624,368], \"src\": [176,80], \"f\": 3, \"d\": [85,2937,171] },\n\t\t\t\t\t{ \"px\": [1376,384], \"src\": [176,80], \"f\": 2, \"d\": [85,3110,171] },\n\t\t\t\t\t{ \"px\": [1440,384], \"src\": [176,80], \"f\": 3, \"d\": [85,3114,171] },\n\t\t\t\t\t{ \"px\": [1472,400], \"src\": [176,80], \"f\": 2, \"d\": [85,3242,171] },\n\t\t\t\t\t{ \"px\": [1664,400], \"src\": [176,80], \"f\": 3, \"d\": [85,3254,171] },\n\t\t\t\t\t{ \"px\": [384,416], \"src\": [176,80], \"f\": 2, \"d\": [85,3300,171] },\n\t\t\t\t\t{ \"px\": [448,416], \"src\": [176,80], \"f\": 3, \"d\": [85,3304,171] },\n\t\t\t\t\t{ \"px\": [1088,416], \"src\": [176,80], \"f\": 2, \"d\": [85,3344,171] },\n\t\t\t\t\t{ \"px\": [1200,416], \"src\": [176,80], \"f\": 2, \"d\": [85,3351,171] },\n\t\t\t\t\t{ \"px\": [1264,416], \"src\": [176,80], \"f\": 3, \"d\": [85,3355,171] },\n\t\t\t\t\t{ \"px\": [1296,416], \"src\": [176,80], \"f\": 2, \"d\": [85,3357,171] },\n\t\t\t\t\t{ \"px\": [1328,416], \"src\": [176,80], \"f\": 3, \"d\": [85,3359,171] },\n\t\t\t\t\t{ \"px\": [1744,416], \"src\": [176,80], \"f\": 2, \"d\": [85,3385,171] },\n\t\t\t\t\t{ \"px\": [1792,416], \"src\": [176,80], \"f\": 3, \"d\": [85,3388,171] },\n\t\t\t\t\t{ \"px\": [1104,432], \"src\": [176,80], \"f\": 2, \"d\": [85,3471,171] },\n\t\t\t\t\t{ \"px\": [1120,432], \"src\": [176,80], \"f\": 3, \"d\": [85,3472,171] },\n\t\t\t\t\t{ \"px\": [320,160], \"src\": [160,96], \"f\": 1, \"d\": [91,1280,202] },\n\t\t\t\t\t{ \"px\": [480,160], \"src\": [160,128], \"f\": 0, \"d\": [91,1290,266] },\n\t\t\t\t\t{ \"px\": [1680,160], \"src\": [160,96], \"f\": 1, \"d\": [91,1365,202] },\n\t\t\t\t\t{ \"px\": [320,192], \"src\": [160,96], \"f\": 1, \"d\": [91,1532,202] },\n\t\t\t\t\t{ \"px\": [480,192], \"src\": [160,112], \"f\": 0, \"d\": [91,1542,234] },\n\t\t\t\t\t{ \"px\": [1568,192], \"src\": [160,128], \"f\": 0, \"d\": [91,1610,266] },\n\t\t\t\t\t{ \"px\": [144,224], \"src\": [160,112], \"f\": 0, \"d\": [91,1773,234] },\n\t\t\t\t\t{ \"px\": [240,224], \"src\": [160,128], \"f\": 0, \"d\": [91,1779,266] },\n\t\t\t\t\t{ \"px\": [464,224], \"src\": [160,96], \"f\": 1, \"d\": [91,1793,202] },\n\t\t\t\t\t{ \"px\": [1280,224], \"src\": [160,128], \"f\": 0, \"d\": [91,1844,266] },\n\t\t\t\t\t{ \"px\": [1344,224], \"src\": [160,96], \"f\": 1, \"d\": [91,1848,202] },\n\t\t\t\t\t{ \"px\": [1456,224], \"src\": [160,112], \"f\": 1, \"d\": [91,1855,234] },\n\t\t\t\t\t{ \"px\": [1728,224], \"src\": [160,128], \"f\": 0, \"d\": [91,1872,266] },\n\t\t\t\t\t{ \"px\": [144,256], \"src\": [160,128], \"f\": 0, \"d\": [91,2025,266] },\n\t\t\t\t\t{ \"px\": [320,256], \"src\": [160,112], \"f\": 1, \"d\": [91,2036,234] },\n\t\t\t\t\t{ \"px\": [528,256], \"src\": [160,112], \"f\": 1, \"d\": [91,2049,234] },\n\t\t\t\t\t{ \"px\": [912,256], \"src\": [160,112], \"f\": 0, \"d\": [91,2073,234] },\n\t\t\t\t\t{ \"px\": [976,256], \"src\": [160,112], \"f\": 1, \"d\": [91,2077,234] },\n\t\t\t\t\t{ \"px\": [1184,256], \"src\": [160,96], \"f\": 0, \"d\": [91,2090,202] },\n\t\t\t\t\t{ \"px\": [1344,256], \"src\": [160,112], \"f\": 1, \"d\": [91,2100,234] },\n\t\t\t\t\t{ \"px\": [1360,256], \"src\": [160,112], \"f\": 0, \"d\": [91,2101,234] },\n\t\t\t\t\t{ \"px\": [1680,256], \"src\": [160,128], \"f\": 1, \"d\": [91,2121,266] },\n\t\t\t\t\t{ \"px\": [368,288], \"src\": [160,128], \"f\": 0, \"d\": [91,2291,266] },\n\t\t\t\t\t{ \"px\": [640,288], \"src\": [160,128], \"f\": 1, \"d\": [91,2308,266] },\n\t\t\t\t\t{ \"px\": [912,288], \"src\": [160,128], \"f\": 0, \"d\": [91,2325,266] },\n\t\t\t\t\t{ \"px\": [1072,288], \"src\": [160,112], \"f\": 0, \"d\": [91,2335,234] },\n\t\t\t\t\t{ \"px\": [1360,288], \"src\": [160,128], \"f\": 0, \"d\": [91,2353,266] },\n\t\t\t\t\t{ \"px\": [1456,288], \"src\": [160,96], \"f\": 0, \"d\": [91,2359,202] },\n\t\t\t\t\t{ \"px\": [144,320], \"src\": [160,112], \"f\": 0, \"d\": [91,2529,234] },\n\t\t\t\t\t{ \"px\": [320,320], \"src\": [160,96], \"f\": 1, \"d\": [91,2540,202] },\n\t\t\t\t\t{ \"px\": [368,320], \"src\": [160,128], \"f\": 0, \"d\": [91,2543,266] },\n\t\t\t\t\t{ \"px\": [480,320], \"src\": [160,112], \"f\": 0, \"d\": [91,2550,234] },\n\t\t\t\t\t{ \"px\": [640,320], \"src\": [160,128], \"f\": 1, \"d\": [91,2560,266] },\n\t\t\t\t\t{ \"px\": [1344,320], \"src\": [160,128], \"f\": 1, \"d\": [91,2604,266] },\n\t\t\t\t\t{ \"px\": [1680,320], \"src\": [160,128], \"f\": 1, \"d\": [91,2625,266] },\n\t\t\t\t\t{ \"px\": [208,352], \"src\": [160,96], \"f\": 1, \"d\": [91,2785,202] },\n\t\t\t\t\t{ \"px\": [240,352], \"src\": [160,128], \"f\": 0, \"d\": [91,2787,266] },\n\t\t\t\t\t{ \"px\": [464,352], \"src\": [160,112], \"f\": 1, \"d\": [91,2801,234] },\n\t\t\t\t\t{ \"px\": [1072,352], \"src\": [160,96], \"f\": 0, \"d\": [91,2839,202] },\n\t\t\t\t\t{ \"px\": [1280,352], \"src\": [160,128], \"f\": 0, \"d\": [91,2852,266] },\n\t\t\t\t\t{ \"px\": [1728,352], \"src\": [160,96], \"f\": 0, \"d\": [91,2880,202] },\n\t\t\t\t\t{ \"px\": [464,384], \"src\": [160,112], \"f\": 1, \"d\": [91,3053,234] },\n\t\t\t\t\t{ \"px\": [1456,384], \"src\": [160,112], \"f\": 0, \"d\": [91,3115,234] },\n\t\t\t\t\t{ \"px\": [528,416], \"src\": [160,128], \"f\": 1, \"d\": [91,3309,266] },\n\t\t\t\t\t{ \"px\": [864,416], \"src\": [160,128], \"f\": 0, \"d\": [91,3330,266] },\n\t\t\t\t\t{ \"px\": [1056,416], \"src\": [160,112], \"f\": 1, \"d\": [91,3342,234] },\n\t\t\t\t\t{ \"px\": [1136,416], \"src\": [160,96], \"f\": 1, \"d\": [91,3347,202] },\n\t\t\t\t\t{ \"px\": [528,448], \"src\": [160,128], \"f\": 1, \"d\": [91,3561,266] },\n\t\t\t\t\t{ \"px\": [864,448], \"src\": [160,112], \"f\": 0, \"d\": [91,3582,234] },\n\t\t\t\t\t{ \"px\": [1056,448], \"src\": [160,128], \"f\": 1, \"d\": [91,3594,266] }\n\t\t\t\t],\n\t\t\t\t\"seed\": 8982040,\n\t\t\t\t\"gridTiles\": [],\n\t\t\t\t\"entityInstances\": []\n\t\t\t}\n\t\t]\n\t}]\n}");
};
$hxClasses["World"] = World;
World.__name__ = "World";
World.__super__ = led_Project;
World.prototype = $extend(led_Project.prototype,{
	parseJson: function(json) {
		led_Project.prototype.parseJson.call(this,json);
		this.levels = this._untypedLevels.slice();
		var _g = 0;
		var _g1 = this._untypedLevels;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			this.all_levels[l.identifier] = l;
		}
	}
	,_instanciateLevel: function(json) {
		return new World_$Level(json);
	}
	,resolveLevel: function(id) {
		var _g = 0;
		var _g1 = this._untypedLevels;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.identifier == id) {
				return l;
			}
		}
		return null;
	}
	,__class__: World
});
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return haxe_ds_StringMap.keysIterator(this.attributeMap.h);
	}
	,iterator: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return new haxe_iterators_ArrayIterator(this.children);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var cdb_ColumnType = $hxEnums["cdb.ColumnType"] = { __ename__ : true, __constructs__ : ["TId","TString","TBool","TInt","TFloat","TEnum","TRef","TImage","TList","TCustom","TFlags","TColor","TLayer","TFile","TTilePos","TTileLayer","TDynamic","TProperties"]
	,TId: {_hx_index:0,__enum__:"cdb.ColumnType",toString:$estr}
	,TString: {_hx_index:1,__enum__:"cdb.ColumnType",toString:$estr}
	,TBool: {_hx_index:2,__enum__:"cdb.ColumnType",toString:$estr}
	,TInt: {_hx_index:3,__enum__:"cdb.ColumnType",toString:$estr}
	,TFloat: {_hx_index:4,__enum__:"cdb.ColumnType",toString:$estr}
	,TEnum: ($_=function(values) { return {_hx_index:5,values:values,__enum__:"cdb.ColumnType",toString:$estr}; },$_.__params__ = ["values"],$_)
	,TRef: ($_=function(sheet) { return {_hx_index:6,sheet:sheet,__enum__:"cdb.ColumnType",toString:$estr}; },$_.__params__ = ["sheet"],$_)
	,TImage: {_hx_index:7,__enum__:"cdb.ColumnType",toString:$estr}
	,TList: {_hx_index:8,__enum__:"cdb.ColumnType",toString:$estr}
	,TCustom: ($_=function(name) { return {_hx_index:9,name:name,__enum__:"cdb.ColumnType",toString:$estr}; },$_.__params__ = ["name"],$_)
	,TFlags: ($_=function(values) { return {_hx_index:10,values:values,__enum__:"cdb.ColumnType",toString:$estr}; },$_.__params__ = ["values"],$_)
	,TColor: {_hx_index:11,__enum__:"cdb.ColumnType",toString:$estr}
	,TLayer: ($_=function(type) { return {_hx_index:12,type:type,__enum__:"cdb.ColumnType",toString:$estr}; },$_.__params__ = ["type"],$_)
	,TFile: {_hx_index:13,__enum__:"cdb.ColumnType",toString:$estr}
	,TTilePos: {_hx_index:14,__enum__:"cdb.ColumnType",toString:$estr}
	,TTileLayer: {_hx_index:15,__enum__:"cdb.ColumnType",toString:$estr}
	,TDynamic: {_hx_index:16,__enum__:"cdb.ColumnType",toString:$estr}
	,TProperties: {_hx_index:17,__enum__:"cdb.ColumnType",toString:$estr}
};
cdb_ColumnType.__empty_constructs__ = [cdb_ColumnType.TId,cdb_ColumnType.TString,cdb_ColumnType.TBool,cdb_ColumnType.TInt,cdb_ColumnType.TFloat,cdb_ColumnType.TImage,cdb_ColumnType.TList,cdb_ColumnType.TColor,cdb_ColumnType.TFile,cdb_ColumnType.TTilePos,cdb_ColumnType.TTileLayer,cdb_ColumnType.TDynamic,cdb_ColumnType.TProperties];
var cdb_Parser = function() { };
$hxClasses["cdb.Parser"] = cdb_Parser;
cdb_Parser.__name__ = "cdb.Parser";
cdb_Parser.getType = function(str) {
	var _g = Std.parseInt(str);
	if(_g == null) {
		throw haxe_Exception.thrown("Unknown type " + str);
	} else {
		switch(_g) {
		case 0:
			return cdb_ColumnType.TId;
		case 1:
			return cdb_ColumnType.TString;
		case 2:
			return cdb_ColumnType.TBool;
		case 3:
			return cdb_ColumnType.TInt;
		case 4:
			return cdb_ColumnType.TFloat;
		case 5:
			return cdb_ColumnType.TEnum(HxOverrides.substr(str,str.indexOf(":") + 1,null).split(","));
		case 6:
			return cdb_ColumnType.TRef(HxOverrides.substr(str,str.indexOf(":") + 1,null));
		case 7:
			return cdb_ColumnType.TImage;
		case 8:
			return cdb_ColumnType.TList;
		case 9:
			return cdb_ColumnType.TCustom(HxOverrides.substr(str,str.indexOf(":") + 1,null));
		case 10:
			return cdb_ColumnType.TFlags(HxOverrides.substr(str,str.indexOf(":") + 1,null).split(","));
		case 11:
			return cdb_ColumnType.TColor;
		case 12:
			return cdb_ColumnType.TLayer(HxOverrides.substr(str,str.indexOf(":") + 1,null));
		case 13:
			return cdb_ColumnType.TFile;
		case 14:
			return cdb_ColumnType.TTilePos;
		case 15:
			return cdb_ColumnType.TTileLayer;
		case 16:
			return cdb_ColumnType.TDynamic;
		case 17:
			return cdb_ColumnType.TProperties;
		default:
			throw haxe_Exception.thrown("Unknown type " + str);
		}
	}
};
cdb_Parser.parse = function(content,editMode) {
	if(content == null) {
		throw haxe_Exception.thrown("CDB content is null");
	}
	var data = JSON.parse(content);
	var _g = 0;
	var _g1 = data.sheets;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = s.columns;
		while(_g2 < _g3.length) {
			var c = _g3[_g2];
			++_g2;
			c.type = cdb_Parser.getType(c.typeStr);
			c.typeStr = null;
		}
	}
	var _g = 0;
	var _g1 = data.customTypes;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		var _g2 = 0;
		var _g3 = t.cases;
		while(_g2 < _g3.length) {
			var c = _g3[_g2];
			++_g2;
			var _g4 = 0;
			var _g5 = c.args;
			while(_g4 < _g5.length) {
				var a = _g5[_g4];
				++_g4;
				a.type = cdb_Parser.getType(a.typeStr);
				a.typeStr = null;
			}
		}
	}
	if(editMode) {
		var _g = 0;
		var _g1 = data.sheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.separators == null) {
				var idField = null;
				var _g2 = 0;
				var _g3 = s.columns;
				while(_g2 < _g3.length) {
					var c = _g3[_g2];
					++_g2;
					if(c.type == cdb_ColumnType.TId) {
						idField = c.name;
						break;
					}
				}
				var indexMap_h = Object.create(null);
				var _g4 = 0;
				var _g5 = s.lines.length;
				while(_g4 < _g5) {
					var i = _g4++;
					var l = s.lines[i];
					var id = Reflect.field(l,idField);
					if(id != null) {
						indexMap_h[id] = i;
					}
				}
				var ids = Reflect.field(s,"separatorIds");
				var _g6 = [];
				var _g7 = 0;
				while(_g7 < ids.length) {
					var i1 = ids[_g7];
					++_g7;
					if(typeof(i1) == "number" && ((i1 | 0) === i1)) {
						_g6.push(i1);
					} else {
						_g6.push(indexMap_h[i1]);
					}
				}
				s.separators = _g6;
				Reflect.deleteField(s,"separatorIds");
			}
		}
	}
	return data;
};
var dn_Bresenham = function() { };
$hxClasses["dn.Bresenham"] = dn_Bresenham;
dn_Bresenham.__name__ = "dn.Bresenham";
dn_Bresenham.getDisc = function(x0,y0,radius) {
	var pts = [];
	dn_Bresenham.iterateDisc(x0,y0,radius,function(x,y) {
		pts.push({ x : x, y : y});
	});
	return pts;
};
dn_Bresenham.iterateDisc = function(x0,y0,radius,cb) {
	var x = radius;
	var y = 0;
	var radiusError = 1 - x;
	while(x >= y) {
		var fy = y + y0;
		var _g = -x + x0;
		var _g1 = x + x0 + 1;
		while(_g < _g1) {
			var x1 = _g++;
			cb(x1,fy);
		}
		if((radius <= 1 || x != y && y != 0) && radiusError >= 0) {
			var fy1 = x + y0;
			var _g2 = -y + x0;
			var _g3 = y + x0 + 1;
			while(_g2 < _g3) {
				var x2 = _g2++;
				cb(x2,fy1);
			}
		}
		if(y != 0) {
			var fy2 = -y + y0;
			var _g4 = -x + x0;
			var _g5 = x + x0 + 1;
			while(_g4 < _g5) {
				var x3 = _g4++;
				cb(x3,fy2);
			}
		}
		if((radius <= 1 || x != y && y != 0) && radiusError >= 0) {
			var fy3 = -x + y0;
			var _g6 = -y + x0;
			var _g7 = y + x0 + 1;
			while(_g6 < _g7) {
				var x4 = _g6++;
				cb(x4,fy3);
			}
		}
		++y;
		if(radiusError < 0) {
			radiusError += 2 * y + 1;
		} else {
			--x;
			radiusError += 2 * (y - x + 1);
		}
	}
};
var dn__$Cooldown_CdInst = function(k,f) {
	this.k = k;
	this.frames = f;
	this.initial = f;
};
$hxClasses["dn._Cooldown.CdInst"] = dn__$Cooldown_CdInst;
dn__$Cooldown_CdInst.__name__ = "dn._Cooldown.CdInst";
dn__$Cooldown_CdInst.prototype = {
	__class__: dn__$Cooldown_CdInst
};
var dn_Cooldown = function(fps) {
	if(dn_Cooldown.INDEXES == null) {
		if(haxe_rtti_Meta.getType(dn_Cooldown).indexes != null) {
			var _g = [];
			var _g1 = 0;
			var _g2 = haxe_rtti_Meta.getType(dn_Cooldown).indexes;
			while(_g1 < _g2.length) {
				var str = _g2[_g1];
				++_g1;
				_g.push(Std.string(str));
			}
			dn_Cooldown.INDEXES = _g;
		}
	}
	this.cdList = [];
	this.fastCheck = new haxe_ds_IntMap();
	this.baseFps = fps;
};
$hxClasses["dn.Cooldown"] = dn_Cooldown;
dn_Cooldown.__name__ = "dn.Cooldown";
dn_Cooldown.prototype = {
	destroy: function() {
		this.cdList = null;
		this.fastCheck = null;
	}
	,_getRatio: function(k) {
		var cd = this._getCdObject(k);
		var max = cd == null ? 0 : cd.initial;
		if(max <= 0) {
			return 0;
		} else {
			var cd = this._getCdObject(k);
			return (cd == null ? 0 : cd.frames) / max;
		}
	}
	,_getCdObject: function(k) {
		var _g = 0;
		var _g1 = this.cdList;
		while(_g < _g1.length) {
			var cd = _g1[_g];
			++_g;
			if(cd.k == k) {
				return cd;
			}
		}
		return null;
	}
	,update: function(dt) {
		var i = 0;
		while(i < this.cdList.length) {
			var cd = this.cdList[i];
			cd.frames = Math.floor((cd.frames - dt) * 1000) / 1000;
			if(cd.frames <= 0) {
				var cb = cd.cb;
				HxOverrides.remove(this.cdList,cd);
				cd.frames = 0;
				cd.cb = null;
				this.fastCheck.remove(cd.k);
				if(cb != null) {
					cb();
				}
			} else {
				++i;
			}
		}
	}
	,__class__: dn_Cooldown
};
var dn__$DecisionHelper_DecisionElement = function(v) {
	this.out = false;
	this.score = 0.;
	this.v = v;
};
$hxClasses["dn._DecisionHelper.DecisionElement"] = dn__$DecisionHelper_DecisionElement;
dn__$DecisionHelper_DecisionElement.__name__ = "dn._DecisionHelper.DecisionElement";
dn__$DecisionHelper_DecisionElement.prototype = {
	__class__: dn__$DecisionHelper_DecisionElement
};
var dn_DecisionHelper = function(a) {
	var this1 = new Array(a.length);
	this.all = this1;
	var i = 0;
	var _g = 0;
	while(_g < a.length) {
		var v = a[_g];
		++_g;
		this.all[i] = new dn__$DecisionHelper_DecisionElement(v);
		++i;
	}
};
$hxClasses["dn.DecisionHelper"] = dn_DecisionHelper;
dn_DecisionHelper.__name__ = "dn.DecisionHelper";
dn_DecisionHelper.prototype = {
	getBest: function() {
		var best = null;
		var _g = 0;
		var _g1 = this.all;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.out && (best == null || e.score > best.score)) {
				best = e;
			}
		}
		if(best == null) {
			return null;
		} else {
			return best.v;
		}
	}
	,__class__: dn_DecisionHelper
};
var dn__$Delayer_Task = function(id,t,cb) {
	this.t = t;
	this.cb = cb;
	this.id = id;
};
$hxClasses["dn._Delayer.Task"] = dn__$Delayer_Task;
dn__$Delayer_Task.__name__ = "dn._Delayer.Task";
dn__$Delayer_Task.prototype = {
	__class__: dn__$Delayer_Task
};
var dn_Delayer = function(fps) {
	this.fps = fps;
	this.delays = [];
};
$hxClasses["dn.Delayer"] = dn_Delayer;
dn_Delayer.__name__ = "dn.Delayer";
dn_Delayer.prototype = {
	destroy: function() {
		this.delays = null;
	}
	,cmp: function(a,b) {
		if(a.t < b.t) {
			return -1;
		} else if(a.t > b.t) {
			return 1;
		} else {
			return 0;
		}
	}
	,addS: function(id,cb,sec) {
		this.delays.push(new dn__$Delayer_Task(id,sec * this.fps,cb));
		haxe_ds_ArraySort.sort(this.delays,$bind(this,this.cmp));
	}
	,addF: function(id,cb,frames) {
		this.delays.push(new dn__$Delayer_Task(id,frames,cb));
		haxe_ds_ArraySort.sort(this.delays,$bind(this,this.cmp));
	}
	,update: function(dt) {
		var i = 0;
		while(i < this.delays.length) {
			this.delays[i].t -= dt;
			if(this.delays[i].t <= 0) {
				this.delays[i].cb();
				this.delays[i].cb = null;
				this.delays.shift();
			} else {
				++i;
			}
		}
	}
	,__class__: dn_Delayer
};
var dn_Lib = function() { };
$hxClasses["dn.Lib"] = dn_Lib;
dn_Lib.__name__ = "dn.Lib";
dn_Lib.redirectTracesToH2dConsole = function(c) {
	haxe_Log.trace = function(m,pos) {
		if(pos != null && pos.customParams == null) {
			pos.customParams = ["debug"];
		}
		c.log(pos.fileName + "(" + pos.lineNumber + ") : " + Std.string(m));
	};
};
var dn_TType = $hxEnums["dn.TType"] = { __ename__ : true, __constructs__ : ["TLinear","TLoop","TLoopEaseIn","TLoopEaseOut","TEase","TEaseIn","TEaseOut","TBurn","TBurnIn","TBurnOut","TZigZag","TRand","TShake","TShakeBoth","TJump","TElasticEnd","TBackOut"]
	,TLinear: {_hx_index:0,__enum__:"dn.TType",toString:$estr}
	,TLoop: {_hx_index:1,__enum__:"dn.TType",toString:$estr}
	,TLoopEaseIn: {_hx_index:2,__enum__:"dn.TType",toString:$estr}
	,TLoopEaseOut: {_hx_index:3,__enum__:"dn.TType",toString:$estr}
	,TEase: {_hx_index:4,__enum__:"dn.TType",toString:$estr}
	,TEaseIn: {_hx_index:5,__enum__:"dn.TType",toString:$estr}
	,TEaseOut: {_hx_index:6,__enum__:"dn.TType",toString:$estr}
	,TBurn: {_hx_index:7,__enum__:"dn.TType",toString:$estr}
	,TBurnIn: {_hx_index:8,__enum__:"dn.TType",toString:$estr}
	,TBurnOut: {_hx_index:9,__enum__:"dn.TType",toString:$estr}
	,TZigZag: {_hx_index:10,__enum__:"dn.TType",toString:$estr}
	,TRand: {_hx_index:11,__enum__:"dn.TType",toString:$estr}
	,TShake: {_hx_index:12,__enum__:"dn.TType",toString:$estr}
	,TShakeBoth: {_hx_index:13,__enum__:"dn.TType",toString:$estr}
	,TJump: {_hx_index:14,__enum__:"dn.TType",toString:$estr}
	,TElasticEnd: {_hx_index:15,__enum__:"dn.TType",toString:$estr}
	,TBackOut: {_hx_index:16,__enum__:"dn.TType",toString:$estr}
};
dn_TType.__empty_constructs__ = [dn_TType.TLinear,dn_TType.TLoop,dn_TType.TLoopEaseIn,dn_TType.TLoopEaseOut,dn_TType.TEase,dn_TType.TEaseIn,dn_TType.TEaseOut,dn_TType.TBurn,dn_TType.TBurnIn,dn_TType.TBurnOut,dn_TType.TZigZag,dn_TType.TRand,dn_TType.TShake,dn_TType.TShakeBoth,dn_TType.TJump,dn_TType.TElasticEnd,dn_TType.TBackOut];
var dn_Tween = function(tw) {
	this.tw = tw;
	this.paused = false;
	this.done = false;
	this.n = this.ln = 0;
	this.delay = 0;
	this.speed = 1;
	this.set_type(dn_TType.TEase);
	this.plays = 1;
	this.pixelSnap = false;
};
$hxClasses["dn.Tween"] = dn_Tween;
dn_Tween.__name__ = "dn.Tween";
dn_Tween.prototype = {
	set_type: function(t) {
		var _gthis = this;
		this.type = t;
		var tmp;
		switch(this.type._hx_index) {
		case 0:
			tmp = function(step) {
				return step;
			};
			break;
		case 1:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 1.33 + 3 * (step * step) * (1 - step) * 1.33 + step * step * step * 0;
			};
			break;
		case 2:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 0 + 3 * (step * step) * (1 - step) * 2.25 + step * step * step * 0;
			};
			break;
		case 3:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 2.25 + 3 * (step * step) * (1 - step) * 0 + step * step * step * 0;
			};
			break;
		case 4:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 0 + 3 * (step * step) * (1 - step) + step * step * step;
			};
			break;
		case 5:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 0 + 3 * (step * step) * (1 - step) * 0.5 + step * step * step;
			};
			break;
		case 6:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 0.5 + 3 * (step * step) * (1 - step) + step * step * step;
			};
			break;
		case 7:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) + 3 * (step * step) * (1 - step) * 0 + step * step * step;
			};
			break;
		case 8:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) + 3 * (step * step) * (1 - step) + step * step * step;
			};
			break;
		case 9:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 0 + 3 * (step * step) * (1 - step) * 0 + step * step * step;
			};
			break;
		case 10:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 2.5 + 3 * (step * step) * (1 - step) * -1.5 + step * step * step;
			};
			break;
		case 11:
			tmp = function(step) {
				return step;
			};
			break;
		case 12:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0.5 + 3 * step * (n1 * n1) * 1.22 + 3 * (step * step) * (1 - step) * 1.25 + step * step * step * 0;
			};
			break;
		case 13:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0.5 + 3 * step * (n1 * n1) * 1.22 + 3 * (step * step) * (1 - step) * 1.25 + step * step * step * 0;
			};
			break;
		case 14:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 2 + 3 * (step * step) * (1 - step) * 2.79 + step * step * step;
			};
			break;
		case 15:
			tmp = function(step) {
				var n = 1 - step;
				var n1 = 1 - step;
				return n * n * n * 0 + 3 * step * (n1 * n1) * 0.7 + 3 * (step * step) * (1 - step) * 1.5 + step * step * step;
			};
			break;
		case 16:
			tmp = function(step) {
				var s = 1.70158;
				step = step / 1 - 1;
				return step * step * ((s + 1) * step + s) + 1;
			};
			break;
		}
		this.interpolate = tmp;
		return this.type;
	}
	,onUpdate: function() {
	}
	,onUpdateT: function(t) {
	}
	,onEnd: function() {
	}
	,onStart: function() {
	}
	,chainedEvent: function() {
	}
	,interpolate: function(v) {
		return v;
	}
	,complete: function(fl_allowLoop) {
		if(fl_allowLoop == null) {
			fl_allowLoop = false;
		}
		var v = this.from + (this.to - this.from) * this.interpolate(1);
		if(this.pixelSnap) {
			v = (v > 0 ? v + .5 : v < 0 ? v - .5 : 0) | 0;
		}
		this.setter(v);
		this.onUpdate();
		this.onUpdateT(1);
		this.onEnd();
		this.chainedEvent();
		if(fl_allowLoop && (this.plays == -1 || this.plays > 1)) {
			if(this.plays != -1) {
				this.plays--;
			}
			this.n = this.ln = 0;
		} else {
			this.done = true;
		}
	}
	,internalUpdate: function(dt) {
		if(this.done) {
			return true;
		}
		if(this.paused) {
			return false;
		}
		if(this.delay > 0) {
			this.delay--;
			return false;
		}
		if(this.onStart != null) {
			var cb = $bind(this,this.onStart);
			this.onStart = null;
			cb();
		}
		var dist = this.to - this.from;
		if(this.type == dn_TType.TRand) {
			this.ln += Std.random(100) < 33 ? this.speed * dt : 0;
		} else {
			this.ln += this.speed * dt;
		}
		this.n = this.interpolate(this.ln);
		if(this.ln < 1) {
			var val;
			if(this.type != dn_TType.TShake && this.type != dn_TType.TShakeBoth) {
				val = this.from + this.n * dist;
			} else if(this.type == dn_TType.TShake) {
				var val1 = this.from;
				var val2 = Math.random();
				var x = this.n * dist;
				val = val1 + val2 * (x < 0 ? -x : x) * (dist > 0 ? 1 : -1);
			} else {
				val = this.from + Math.random() * this.n * dist * (Std.random(2) * 2 - 1);
			}
			if(this.pixelSnap) {
				val = (val > 0 ? val + .5 : val < 0 ? val - .5 : 0) | 0;
			}
			this.setter(val);
			this.onUpdate();
			this.onUpdateT(this.ln);
		} else {
			this.complete(true);
		}
		return this.done;
	}
	,__class__: dn_Tween
};
var dn_Tweenie = function(fps) {
	this.baseFps = fps;
	this.tlist = [];
};
$hxClasses["dn.Tweenie"] = dn_Tweenie;
dn_Tweenie.__name__ = "dn.Tweenie";
dn_Tweenie.prototype = {
	destroy: function() {
		this.tlist = null;
	}
	,update: function(dt) {
		if(dt == null) {
			dt = 1.0;
		}
		var _g = 0;
		var _g1 = this.tlist;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.internalUpdate(dt)) {
				HxOverrides.remove(this.tlist,t);
			}
		}
	}
	,__class__: dn_Tweenie
};
var dn_data_GetText = function() {
};
$hxClasses["dn.data.GetText"] = dn_data_GetText;
dn_data_GetText.__name__ = "dn.data.GetText";
dn_data_GetText.prototype = {
	readMo: function(data) {
		var r = new dn_data_MoReader(data);
		this.texts = r.parse();
	}
	,__class__: dn_data_GetText
};
var dn_data_MoReader = function(data) {
	this.data = new haxe_io_BytesInput(data);
};
$hxClasses["dn.data.MoReader"] = dn_data_MoReader;
dn_data_MoReader.__name__ = "dn.data.MoReader";
dn_data_MoReader.prototype = {
	parse: function() {
		var d = this.data;
		var header = d.readInt32();
		if(header != dn_data_MoReader.MAGIC && header != dn_data_MoReader.MAGIC2) {
			throw haxe_Exception.thrown("Bad MO file header : " + (header == null ? "null" : Std.string(UInt.toFloat(header))));
		}
		var revision = d.readInt32();
		if(UInt.gt(revision,1)) {
			throw haxe_Exception.thrown("Bad MO file format revision : " + (revision == null ? "null" : Std.string(UInt.toFloat(revision))));
		}
		var num_strings = d.readInt32();
		this.original_table_offset = d.readInt32();
		this.translated_table_offset = d.readInt32();
		this.hash_num_entries = d.readInt32();
		this.hash_offset = d.readInt32();
		var texts = new haxe_ds_StringMap();
		var eot = "\x04";
		var _g = 0;
		var _g1 = num_strings;
		while(_g < _g1) {
			var i = _g++;
			var ori = this.getOriginalString(i);
			if(ori.indexOf(eot) >= 0) {
				var split = ori.split(eot);
				ori = split[1] + dn_data_GetText.CONTEXT + split[0];
			}
			if(ori == null || ori == "") {
				continue;
			}
			var trs = this.getTranslatedString(i);
			if(trs == null || trs == "") {
				continue;
			}
			texts.h[ori] = trs;
		}
		return texts;
	}
	,getTranslatedString: function(index) {
		return this.getString(this.translated_table_offset + 8 * index);
	}
	,getOriginalString: function(index) {
		return this.getString(this.original_table_offset + 8 * index);
	}
	,getString: function(offset) {
		this.data.set_position(offset);
		var length = this.data.readInt32();
		var pos = this.data.readInt32();
		this.data.set_position(pos);
		return new String(this.data.readString(length));
	}
	,__class__: dn_data_MoReader
};
var dn_heaps_Mode = $hxEnums["dn.heaps.Mode"] = { __ename__ : true, __constructs__ : ["Keyboard","Pad"]
	,Keyboard: {_hx_index:0,__enum__:"dn.heaps.Mode",toString:$estr}
	,Pad: {_hx_index:1,__enum__:"dn.heaps.Mode",toString:$estr}
};
dn_heaps_Mode.__empty_constructs__ = [dn_heaps_Mode.Keyboard,dn_heaps_Mode.Pad];
var dn_heaps_Controller = function(s2d) {
	this.hasAnyPress = false;
	this.longPressLock = new haxe_ds_IntMap();
	this.framePresses = new Array(28);
	this.pressTimers = new Array(28);
	this.fourth = new haxe_ds_IntMap();
	this.third = new haxe_ds_IntMap();
	this.secondary = new haxe_ds_IntMap();
	this.primary = new haxe_ds_IntMap();
	this.allowAutoSwitch = true;
	this.locked = false;
	this.suspendTimer = 0.;
	this.exclusiveId = null;
	this.mode = dn_heaps_Mode.Keyboard;
	var _gthis = this;
	dn_heaps_Controller.ALL.push(this);
	this.gc = new dn_heaps_GamePad(0.4);
	s2d.addEventListener(function(e) {
		if(_gthis.allowAutoSwitch && (e.kind == hxd_EventKind.EMove || e.kind == hxd_EventKind.EKeyDown) && _gthis.mode != dn_heaps_Mode.Keyboard) {
			_gthis.mode = dn_heaps_Mode.Keyboard;
		}
	});
	var _g = 0;
	var _g1 = this.pressTimers.length;
	while(_g < _g1) {
		var idx = _g++;
		this.pressTimers[idx] = -1;
	}
	var _g = 0;
	var _g1 = this.framePresses.length;
	while(_g < _g1) {
		var idx = _g++;
		this.framePresses[idx] = -1;
	}
};
$hxClasses["dn.heaps.Controller"] = dn_heaps_Controller;
dn_heaps_Controller.__name__ = "dn.heaps.Controller";
dn_heaps_Controller.beforeUpdate = function() {
	dn_heaps_GamePad.update();
	var _g = 0;
	var _g1 = dn_heaps_Controller.ALL;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		if(c.gc != null) {
			var tmp;
			if(c.allowAutoSwitch && c.mode != dn_heaps_Mode.Pad) {
				var tmp1;
				var tmp2;
				var tmp3;
				var tmp4;
				var tmp5;
				var tmp6;
				var _this = c.gc;
				if(!(_this.device != null && _this.toggles[0] > 0)) {
					var _this1 = c.gc;
					tmp6 = _this1.device != null && _this1.toggles[1] > 0;
				} else {
					tmp6 = true;
				}
				if(!tmp6) {
					var _this2 = c.gc;
					tmp5 = _this2.device != null && _this2.toggles[2] > 0;
				} else {
					tmp5 = true;
				}
				if(!tmp5) {
					var _this3 = c.gc;
					tmp4 = _this3.device != null && _this3.toggles[3] > 0;
				} else {
					tmp4 = true;
				}
				if(!tmp4) {
					var _this4 = c.gc;
					var x;
					if(_this4.device != null) {
						var idx = dn_heaps_GamePad.MAPPING[18];
						var overrideDeadZone = -1.;
						if(overrideDeadZone == null) {
							overrideDeadZone = -1.;
						}
						var v = idx > -1 && idx < _this4.device.values.length ? _this4.device.values[idx] : 0;
						var dz = overrideDeadZone < 0. ? _this4.deadZone : overrideDeadZone;
						x = v > -dz && v < dz ? 0. : v;
					} else {
						x = 0.;
					}
					tmp3 = (x < 0 ? -x : x) >= 0.75;
				} else {
					tmp3 = true;
				}
				if(!tmp3) {
					var _this5 = c.gc;
					var x1;
					if(_this5.device != null) {
						var idx1 = dn_heaps_GamePad.MAPPING[21];
						var overrideDeadZone1 = -1.;
						if(overrideDeadZone1 == null) {
							overrideDeadZone1 = -1.;
						}
						var v1 = idx1 > -1 && idx1 < _this5.device.values.length ? _this5.device.values[idx1] : 0;
						var dz1 = overrideDeadZone1 < 0. ? _this5.deadZone : overrideDeadZone1;
						x1 = v1 > -dz1 && v1 < dz1 ? 0. : v1;
					} else {
						x1 = 0.;
					}
					tmp2 = (x1 < 0 ? -x1 : x1) >= 0.75;
				} else {
					tmp2 = true;
				}
				if(!tmp2) {
					var _this6 = c.gc;
					var x2;
					if(_this6.device != null) {
						var idx2 = dn_heaps_GamePad.MAPPING[24];
						var overrideDeadZone2 = -1.;
						if(overrideDeadZone2 == null) {
							overrideDeadZone2 = -1.;
						}
						var v2 = idx2 > -1 && idx2 < _this6.device.values.length ? _this6.device.values[idx2] : 0;
						var dz2 = overrideDeadZone2 < 0. ? _this6.deadZone : overrideDeadZone2;
						x2 = v2 > -dz2 && v2 < dz2 ? 0. : v2;
					} else {
						x2 = 0.;
					}
					tmp1 = (x2 < 0 ? -x2 : x2) >= 0.75;
				} else {
					tmp1 = true;
				}
				if(!tmp1) {
					var _this7 = c.gc;
					var x3;
					if(_this7.device != null) {
						var idx3 = dn_heaps_GamePad.MAPPING[27];
						var overrideDeadZone3 = -1.;
						if(overrideDeadZone3 == null) {
							overrideDeadZone3 = -1.;
						}
						var v3 = idx3 > -1 && idx3 < _this7.device.values.length ? _this7.device.values[idx3] : 0;
						var dz3 = overrideDeadZone3 < 0. ? _this7.deadZone : overrideDeadZone3;
						x3 = v3 > -dz3 && v3 < dz3 ? 0. : v3;
					} else {
						x3 = 0.;
					}
					tmp = (x3 < 0 ? -x3 : x3) >= 0.75;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				c.mode = dn_heaps_Mode.Pad;
			}
			if(c.hasAnyPress) {
				c.hasAnyPress = false;
				var _g2 = 0;
				var _g3 = c.framePresses.length;
				while(_g2 < _g3) {
					var idx4 = _g2++;
					c.framePresses[idx4] = -1;
				}
			}
			c.updateLongPress(0);
			c.updateLongPress(1);
			c.updateLongPress(2);
			c.updateLongPress(3);
			c.updateLongPress(5);
			c.updateLongPress(13);
		}
	}
};
dn_heaps_Controller.prototype = {
	bind: function(k,keyboardKey,alternate1,alternate2,alternate3) {
		this.primary.h[k] = keyboardKey;
		if(alternate1 != null) {
			this.secondary.h[k] = alternate1;
		}
		if(alternate2 != null) {
			this.third.h[k] = alternate2;
		}
		if(alternate3 != null) {
			this.fourth.h[k] = alternate3;
		}
	}
	,isLocked: function() {
		return this.locked;
	}
	,createAccess: function(id,exclusive) {
		if(exclusive == null) {
			exclusive = false;
		}
		return new dn_heaps_ControllerAccess(this,id,exclusive);
	}
	,updateLongPress: function(k) {
		var idx = k;
		var _this = this.gc;
		if(_this.device != null && _this.toggles[k] > 0 || hxd_Key.isDown(this.primary.h[k]) || hxd_Key.isDown(this.secondary.h[k]) || hxd_Key.isDown(this.third.h[k]) || hxd_Key.isDown(this.fourth.h[k])) {
			if(this.pressTimers[idx] == -1) {
				this.pressTimers[idx] = HxOverrides.now() / 1000;
			}
			if(HxOverrides.now() / 1000 - this.pressTimers[idx] >= dn_heaps_Controller.LONG_PRESS) {
				if(!this.longPressLock.h.hasOwnProperty(idx)) {
					this.framePresses[idx] = 2;
					this.hasAnyPress = true;
					this.longPressLock.h[idx] = true;
				}
			}
		} else {
			if(this.longPressLock.h.hasOwnProperty(idx)) {
				this.longPressLock.remove(idx);
			}
			if(this.pressTimers[idx] != -1) {
				if(this.framePresses[idx] < 0) {
					if(HxOverrides.now() / 1000 - this.pressTimers[idx] <= dn_heaps_Controller.SHORT_PRESS) {
						this.hasAnyPress = true;
						this.framePresses[idx] = 1;
					}
				}
				this.pressTimers[idx] = -1;
			}
		}
	}
	,__class__: dn_heaps_Controller
};
var dn_heaps_ControllerAccess = function(parent,id,exclusive) {
	if(exclusive == null) {
		exclusive = false;
	}
	this.manualLock = false;
	this.parent = parent;
	this.id = id + dn_heaps_Controller.UNIQ_ID++;
	var sec = 0.1;
	if(sec == null) {
		sec = 0.07;
	}
	parent.suspendTimer = HxOverrides.now() / 1000 + sec;
	if(exclusive) {
		this.parent.exclusiveId = this.id;
	}
};
$hxClasses["dn.heaps.ControllerAccess"] = dn_heaps_ControllerAccess;
dn_heaps_ControllerAccess.__name__ = "dn.heaps.ControllerAccess";
dn_heaps_ControllerAccess.prototype = {
	dispose: function() {
		if(this.parent.exclusiveId == this.id) {
			this.parent.exclusiveId = null;
			this.parent.suspendTimer = HxOverrides.now() / 1000 + 0.07;
		}
		this.parent.suspendTimer = HxOverrides.now() / 1000 + 0.07;
	}
	,__class__: dn_heaps_ControllerAccess
};
var dn_heaps_GameFocusHelper = function(s,font) {
	this.showIntro = false;
	this.suspended = false;
	dn_Process.call(this);
	this.font = font;
	this.scene = s;
	this.createRoot(this.scene);
	this.root.set_visible(false);
	this.showIntro = true;
	this.suspendGame();
};
$hxClasses["dn.heaps.GameFocusHelper"] = dn_heaps_GameFocusHelper;
dn_heaps_GameFocusHelper.__name__ = "dn.heaps.GameFocusHelper";
dn_heaps_GameFocusHelper.__super__ = dn_Process;
dn_heaps_GameFocusHelper.prototype = $extend(dn_Process.prototype,{
	suspendGame: function() {
		var _gthis = this;
		if(this.suspended) {
			return;
		}
		this.suspended = true;
		dn_heaps_slib_SpriteLib.DISABLE_ANIM_UPDATES = true;
		var _g = 0;
		var _g1 = dn_Process.ROOTS;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(p != this) {
				p.pause();
			}
		}
		this.root.set_visible(true);
		this.root.removeChildren();
		var bg = new h2d_Bitmap(h2d_Tile.fromColor(this.showIntro ? 2436675 : 0,1,1,this.showIntro ? 1 : 0.6),this.root);
		var i = new h2d_Interactive(1,1,this.root);
		var tf = new h2d_Text(this.font,this.root);
		if(this.showIntro) {
			tf.set_text("Click anywhere to start");
		} else {
			tf.set_text("PAUSED - click anywhere to resume");
		}
		this.createChildProcess(function(c) {
			var y = Math.floor((dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) * 0.35 / tf.get_textWidth());
			var v = 1 > y ? 1 : y;
			tf.posChanged = true;
			tf.scaleX = v;
			tf.posChanged = true;
			tf.scaleY = v;
			var v = (dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) * 0.5 - tf.get_textWidth() * tf.scaleX * 0.5 | 0;
			tf.posChanged = true;
			tf.x = v;
			var v = (dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height()) * 0.5 - tf.get_textHeight() * tf.scaleY * 0.5 | 0;
			tf.posChanged = true;
			tf.y = v;
			var tmp = dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width();
			i.width = tmp + 1;
			var tmp = dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height();
			i.height = tmp + 1;
			var v = dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width();
			bg.posChanged = true;
			bg.scaleX = v + 1;
			var v = dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height();
			bg.posChanged = true;
			bg.scaleY = v + 1;
			if(!_gthis.suspended) {
				c.destroyed = true;
			}
		},null,true);
		var loadingMsg = this.showIntro;
		i.onPush = function(_) {
			if(loadingMsg) {
				tf.set_text("Loading, please wait...");
				var v = (dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) * 0.5 - tf.get_textWidth() * tf.scaleX * 0.5 | 0;
				tf.posChanged = true;
				tf.x = v;
				var v = (dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height()) * 0.5 - tf.get_textHeight() * tf.scaleY * 0.5 | 0;
				tf.posChanged = true;
				tf.y = v;
				_gthis.delayer.addS(null,$bind(_gthis,_gthis.resumeGame),1);
			} else {
				_gthis.resumeGame();
			}
			if(i != null && i.parent != null) {
				i.parent.removeChild(i);
			}
		};
		this.showIntro = false;
	}
	,resumeGame: function() {
		var _gthis = this;
		if(!this.suspended) {
			return;
		}
		dn_heaps_slib_SpriteLib.DISABLE_ANIM_UPDATES = false;
		this.delayer.addF(null,function() {
			_gthis.root.set_visible(false);
			_gthis.root.removeChildren();
		},1);
		this.suspended = false;
		var _g = 0;
		var _g1 = dn_Process.ROOTS;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(p != this) {
				p.resume();
			}
		}
	}
	,update: function() {
		dn_Process.prototype.update.call(this);
		if(this.suspended) {
			this.scene.over(this.root);
		}
		var _this = this.cd;
		var frames = 0.2 * this.cd.baseFps;
		var tmp;
		if(_this.fastCheck.h.hasOwnProperty(109051904)) {
			tmp = true;
		} else {
			var frames1 = frames;
			var onComplete = null;
			frames1 = Math.floor(frames1 * 1000) / 1000;
			var cur = _this._getCdObject(109051904);
			if(!(cur != null && frames1 < cur.frames && false)) {
				if(frames1 <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[109051904] = true;
					if(cur != null) {
						cur.frames = frames1;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(109051904,frames1));
					}
				}
				if(onComplete != null) {
					if(frames1 <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(109051904);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 109051904 + "): cooldown " + 109051904 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
			tmp = false;
		}
		if(!tmp) {
			var w = hxd_Window.getInstance();
			if(!w.get_isFocused() && !this.suspended) {
				this.suspendGame();
			}
		}
	}
	,__class__: dn_heaps_GameFocusHelper
});
var hxd_Pad = function() {
	this.rawYAxis = 0.;
	this.rawXAxis = 0.;
	this.prevButtons = [];
	this.values = [];
	this.buttons = [];
	this.config = hxd_Pad.DEFAULT_CONFIG;
	this.index = -1;
	this.connected = true;
};
$hxClasses["hxd.Pad"] = hxd_Pad;
hxd_Pad.__name__ = "hxd.Pad";
hxd_Pad.pickConfig = function(name) {
	switch(name) {
	case "054c-05c4-Wireless Controller":case "054c-09cc-Wireless Controller":
		return hxd_Pad.CONFIG_JS_DS4_FF;
	case "Wireless Controller (STANDARD GAMEPAD Vendor: 054c Product: 05c4)":case "Wireless Controller (STANDARD GAMEPAD Vendor: 054c Product: 09cc)":
		return hxd_Pad.CONFIG_JS_DS4;
	default:
		return hxd_Pad.CONFIG_JS_STD;
	}
};
hxd_Pad.wait = function(onPad) {
	hxd_Pad.waitPad = onPad;
	if(!hxd_Pad.initDone) {
		hxd_Pad.initDone = true;
		window.addEventListener("gamepadconnected",function(p) {
			var pad = new hxd_Pad();
			pad.d = p.gamepad;
			pad.config = hxd_Pad.pickConfig(pad.d.id);
			pad.index = pad.d.index;
			hxd_Pad.pads.h[pad.d.index] = pad;
			hxd_Pad.waitPad(pad);
		});
		window.addEventListener("gamepaddisconnected",function(p) {
			var pad = hxd_Pad.pads.h[p.gamepad.index];
			if(pad == null) {
				return;
			}
			hxd_Pad.pads.remove(p.gamepad.index);
			pad.connected = false;
			pad.onDisconnect();
		});
		haxe_MainLoop.add(hxd_Pad.syncPads);
	}
};
hxd_Pad.syncPads = function() {
	var freshPads = [];
	try {
		freshPads = $global.navigator.getGamepads();
	} catch( _g ) {
	}
	if(freshPads.length > 0) {
		var _g = 0;
		var _g1 = freshPads.length;
		while(_g < _g1) {
			var i = _g++;
			if(hxd_Pad.pads.h[i] != null) {
				hxd_Pad.pads.h[i].d = freshPads[i];
			}
		}
	}
	var p = hxd_Pad.pads.iterator();
	while(p.hasNext()) {
		var p1 = p.next();
		var _g = 0;
		var _g1 = p1.d.buttons.length;
		while(_g < _g1) {
			var i = _g++;
			p1.prevButtons[i] = p1.buttons[i];
			p1.buttons[i] = p1.d.buttons[i].pressed;
			p1.values[i] = p1.d.buttons[i].value;
		}
		var _g2 = 0;
		var _g3 = p1.d.axes.length >> 1;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var x = p1.d.axes[i1 << 1];
			var y = p1.d.axes[(i1 << 1) + 1];
			p1.values[(i1 << 1) + p1.d.buttons.length] = x;
			p1.values[(i1 << 1) + p1.d.buttons.length + 1] = -y;
			if(i1 == 0) {
				p1.rawXAxis = x;
				p1.rawYAxis = y;
			}
		}
	}
};
hxd_Pad.prototype = {
	onDisconnect: function() {
	}
	,__class__: hxd_Pad
};
var dn_heaps_GamePad = function(deadZone,onEnable) {
	this.axisAsButtonDeadZone = 0.70;
	this.deadZone = 0.18;
	dn_heaps_GamePad.ALL.push(this);
	this.toggles = [];
	if(deadZone != null) {
		this.deadZone = deadZone;
	}
	if(onEnable != null) {
		this.onEnable = onEnable;
	}
	if(dn_heaps_GamePad.AVAILABLE_DEVICES == null) {
		dn_heaps_GamePad.AVAILABLE_DEVICES = [];
		hxd_Pad.wait(dn_heaps_GamePad.onDevice);
	} else if(dn_heaps_GamePad.AVAILABLE_DEVICES.length > 0) {
		this.enableDevice(dn_heaps_GamePad.AVAILABLE_DEVICES[0]);
	}
	this.lastActivity = HxOverrides.now() / 1000;
};
$hxClasses["dn.heaps.GamePad"] = dn_heaps_GamePad;
dn_heaps_GamePad.__name__ = "dn.heaps.GamePad";
dn_heaps_GamePad.onDevice = function(p) {
	var _g = 0;
	var _g1 = dn_heaps_GamePad.ALL;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		if(i.device == null) {
			i.enableDevice(p);
			return;
		}
	}
	dn_heaps_GamePad.AVAILABLE_DEVICES.push(p);
	p.onDisconnect = function() {
		HxOverrides.remove(dn_heaps_GamePad.AVAILABLE_DEVICES,p);
	};
};
dn_heaps_GamePad.update = function() {
	var _g = 0;
	var _g1 = dn_heaps_GamePad.ALL;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		var hasToggle = false;
		if(e.device != null) {
			var _g2 = 0;
			while(_g2 < 28) {
				var i = _g2++;
				var this1 = i;
				var k = this1;
				var tmp;
				switch(k) {
				case 18:case 21:case 24:case 27:
					var simplified = true;
					var overrideDeadZone = e.axisAsButtonDeadZone;
					if(overrideDeadZone == null) {
						overrideDeadZone = -1.;
					}
					if(simplified == null) {
						simplified = false;
					}
					var tmp1;
					if(e.device != null) {
						var idx = dn_heaps_GamePad.MAPPING[k];
						var overrideDeadZone1 = overrideDeadZone;
						if(overrideDeadZone1 == null) {
							overrideDeadZone1 = -1.;
						}
						var v = idx > -1 && idx < e.device.values.length ? e.device.values[idx] : 0;
						var dz = overrideDeadZone1 < 0. ? e.deadZone : overrideDeadZone1;
						tmp1 = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
					} else {
						tmp1 = 0.;
					}
					tmp = tmp1 > 0;
					break;
				case 17:case 20:case 23:case 26:
					var simplified1 = true;
					var overrideDeadZone2 = e.axisAsButtonDeadZone;
					if(overrideDeadZone2 == null) {
						overrideDeadZone2 = -1.;
					}
					if(simplified1 == null) {
						simplified1 = false;
					}
					var tmp2;
					if(e.device != null) {
						var idx1 = dn_heaps_GamePad.MAPPING[k];
						var overrideDeadZone3 = overrideDeadZone2;
						if(overrideDeadZone3 == null) {
							overrideDeadZone3 = -1.;
						}
						var v1 = idx1 > -1 && idx1 < e.device.values.length ? e.device.values[idx1] : 0;
						var dz1 = overrideDeadZone3 < 0. ? e.deadZone : overrideDeadZone3;
						tmp2 = simplified1 ? v1 < -dz1 ? -1. : v1 > dz1 ? 1. : 0. : v1 > -dz1 && v1 < dz1 ? 0. : v1;
					} else {
						tmp2 = 0.;
					}
					tmp = tmp2 < 0;
					break;
				default:
					var simplified2 = true;
					if(simplified2 == null) {
						simplified2 = false;
					}
					var tmp3;
					if(e.device != null) {
						var idx2 = dn_heaps_GamePad.MAPPING[k];
						var overrideDeadZone4 = -1.;
						if(overrideDeadZone4 == null) {
							overrideDeadZone4 = -1.;
						}
						var v2 = idx2 > -1 && idx2 < e.device.values.length ? e.device.values[idx2] : 0;
						var dz2 = overrideDeadZone4 < 0. ? e.deadZone : overrideDeadZone4;
						tmp3 = simplified2 ? v2 < -dz2 ? -1. : v2 > dz2 ? 1. : 0. : v2 > -dz2 && v2 < dz2 ? 0. : v2;
					} else {
						tmp3 = 0.;
					}
					tmp = tmp3 != 0;
				}
				if(tmp) {
					hasToggle = true;
					if(e.toggles[i] >= 1) {
						e.toggles[i] = 2;
					} else {
						e.toggles[i] = 1;
					}
				} else {
					e.toggles[i] = 0;
				}
			}
		}
		if(hasToggle) {
			e.lastActivity = HxOverrides.now() / 1000;
		}
	}
};
dn_heaps_GamePad.prototype = {
	onEnable: function(pad) {
	}
	,onDisable: function(pad) {
	}
	,enableDevice: function(p) {
		var _gthis = this;
		if(this.device == null) {
			HxOverrides.remove(dn_heaps_GamePad.AVAILABLE_DEVICES,p);
			p.onDisconnect = function() {
				_gthis.disable();
			};
			this.device = p;
			this.onEnable(this);
		}
	}
	,disable: function() {
		if(this.device != null) {
			this.device = null;
			this.onDisable(this);
		}
	}
	,isPressed: function(k) {
		if(this.device != null) {
			return this.toggles[k] == 1;
		} else {
			return false;
		}
	}
	,__class__: dn_heaps_GamePad
};
var dn_heaps_ParticlePool = function(tile,count,fps) {
	var this1 = new Array(count);
	this.all = this1;
	this.nalloc = 0;
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		var p = new dn_heaps_HParticle(this,tile.clone(),fps);
		this.all[i] = p;
		p.kill();
	}
};
$hxClasses["dn.heaps.ParticlePool"] = dn_heaps_ParticlePool;
dn_heaps_ParticlePool.__name__ = "dn.heaps.ParticlePool";
dn_heaps_ParticlePool.prototype = {
	free: function(kp) {
		if(this.all == null) {
			return;
		}
		if(this.nalloc > 1) {
			var idx = kp.poolIdx;
			var tmp = this.all[idx];
			this.all[idx] = this.all[this.nalloc - 1];
			this.all[idx].poolIdx = idx;
			this.all[this.nalloc - 1] = tmp;
			this.nalloc--;
		} else {
			this.nalloc = 0;
		}
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.all;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.dispose();
		}
		this.all = null;
	}
	,update: function(tmod,updateCb) {
		var i = 0;
		while(i < this.nalloc) {
			var p = this.all[i];
			var tmod1 = tmod;
			if(p.customTmod != null) {
				tmod1 = p.customTmod();
			}
			var _g = p;
			var d = _g.delayF - tmod1;
			if(0 > d) {
				d = 0;
			}
			_g.visible = !_g.killed && d <= 0;
			_g.delayF = d;
			if(p.delayF <= 0 && !p.killed) {
				if(p.onStart != null) {
					var cb = p.onStart;
					p.onStart = null;
					cb();
				}
				if(p.animId != null) {
					var _this = p.animLib;
					var k = p.animId;
					var f = (k == null ? _this.currentGroup : _this.groups.h[k]).anim[p.animCursor | 0];
					var _this1 = p.animLib;
					var k1 = p.animId;
					var frame = f;
					if(frame == null) {
						frame = 0;
					}
					var g = k1 == null ? _this1.currentGroup : _this1.groups.h[k1];
					var fd = g == null ? null : g.frames[frame];
					var tile = p.animLib.getTile(p.animId,f);
					p.t.setPosition(tile.x,tile.y);
					p.t.setSize(tile.width,tile.height);
					p.t.dx = -(fd.realWid * p.animXr + fd.realX | 0);
					p.t.dy = -(fd.realHei * p.animYr + fd.realY | 0);
					p.animCursor += p.animSpd * tmod1;
					var _this2 = p.animLib;
					var k2 = p.animId;
					if(p.animCursor >= (k2 == null ? _this2.currentGroup : _this2.groups.h[k2]).anim.length) {
						if(p.animLoop) {
							var _this3 = p.animLib;
							var k3 = p.animId;
							p.animCursor -= (k3 == null ? _this3.currentGroup : _this3.groups.h[k3]).anim.length;
						} else if(p.animStop) {
							p.animId = null;
							p.animLib = null;
						} else {
							p.animId = null;
							p.animLib = null;
							p.animCursor = 0;
							p.kill();
						}
					}
				}
				if(!p.killed) {
					p.dx += p.gx * tmod1;
					p.dy += p.gy * tmod1;
					p.x += p.dx * tmod1;
					p.y += p.dy * tmod1;
					if(p.frictX == p.frictY) {
						var v = p.frictX;
						var frictTmod = tmod1 == 1 || v == 0 || v == 1 ? v : Math.pow(v,tmod1);
						p.dx *= frictTmod;
						p.dy *= frictTmod;
					} else {
						var v1 = p.frictX;
						p.dx *= tmod1 == 1 || v1 == 0 || v1 == 1 ? v1 : Math.pow(v1,tmod1);
						var v2 = p.frictY;
						p.dy *= tmod1 == 1 || v2 == 0 || v2 == 1 ? v2 : Math.pow(v2,tmod1);
					}
					if(p.groundY != null && p.dy > 0 && p.y >= p.groundY) {
						p.dy = -p.dy * p.bounceMul;
						p.y = p.groundY - 1;
						if(p.onBounce != null) {
							p.onBounce();
						}
						if(p.onTouchGround != null) {
							p.onTouchGround(p);
						}
					}
					if(!p.killed) {
						p.rotation += p.dr * tmod1;
						var v3 = p.drFrict;
						p.dr *= tmod1 == 1 || v3 == 0 || v3 == 1 ? v3 : Math.pow(v3,tmod1);
						p.scaleX += (p.ds + p.dsX) * tmod1;
						p.scaleY += (p.ds + p.dsY) * tmod1;
						var v4 = p.scaleMul;
						var scaleMulTmod = tmod1 == 1 || v4 == 0 || v4 == 1 ? v4 : Math.pow(v4,tmod1);
						p.scaleX *= scaleMulTmod;
						var v5 = p.scaleXMul;
						p.scaleX *= tmod1 == 1 || v5 == 0 || v5 == 1 ? v5 : Math.pow(v5,tmod1);
						p.scaleY *= scaleMulTmod;
						var v6 = p.scaleYMul;
						p.scaleY *= tmod1 == 1 || v6 == 0 || v6 == 1 ? v6 : Math.pow(v6,tmod1);
						var v7 = p.dsFrict;
						p.ds *= tmod1 == 1 || v7 == 0 || v7 == 1 ? v7 : Math.pow(v7,tmod1);
						var v8 = p.dsFrict;
						p.dsX *= tmod1 == 1 || v8 == 0 || v8 == 1 ? v8 : Math.pow(v8,tmod1);
						var v9 = p.dsFrict;
						p.dsY *= tmod1 == 1 || v9 == 0 || v9 == 1 ? v9 : Math.pow(v9,tmod1);
						var f1 = p.rColor;
						if(!isNaN(f1)) {
							var x = p.rColor + p.dColor * tmod1;
							p.rColor = x < 0 ? 0 : x > 1 ? 1 : x;
							var from = p.fromColor;
							var to = p.toColor;
							var ratio = p.rColor;
							var a = UInt.toFloat(from >>> 16);
							var x1 = a + (UInt.toFloat(to >>> 16) - a) * ratio;
							var a1 = UInt.toFloat(from >>> 8 & 255);
							var x2 = a1 + (UInt.toFloat(to >>> 8 & 255) - a1) * ratio;
							var a2 = UInt.toFloat(from & 255);
							var x3 = a2 + (UInt.toFloat(to & 255) - a2) * ratio;
							var c = ((x1 > 0 ? x1 + .5 : x1 < 0 ? x1 - .5 : 0) | 0) << 16 | ((x2 > 0 ? x2 + .5 : x2 < 0 ? x2 - .5 : 0) | 0) << 8 | ((x3 > 0 ? x3 + .5 : x3 < 0 ? x3 - .5 : 0) | 0);
							var ratio1 = 1.0;
							if(ratio1 == null) {
								ratio1 = 1.0;
							}
							var a3 = UInt.toFloat(255);
							var x4 = a3 + (UInt.toFloat(c >>> 16) - a3) * ratio1;
							p.r = ((x4 > 0 ? x4 + .5 : x4 < 0 ? x4 - .5 : 0) | 0) / 255;
							var a4 = UInt.toFloat(65535 & 255);
							var x5 = a4 + (UInt.toFloat(c >>> 8 & 255) - a4) * ratio1;
							p.g = ((x5 > 0 ? x5 + .5 : x5 < 0 ? x5 - .5 : 0) | 0) / 255;
							var a5 = UInt.toFloat(255);
							var x6 = a5 + (UInt.toFloat(c & 255) - a5) * ratio1;
							p.b = ((x6 > 0 ? x6 + .5 : x6 < 0 ? x6 - .5 : 0) | 0) / 255;
						}
						if(p.rLifeF > 0 && p.da != 0) {
							p.a += p.da * tmod1;
							if(p.a > p.maxAlpha) {
								p.da = 0;
								p.a = p.maxAlpha;
							}
						}
						if(p.onFadeOutStart != null && p.rLifeF > 0 && p.rLifeF - tmod1 <= 0) {
							p.onFadeOutStart(p);
						}
						p.rLifeF -= tmod1;
						if(p.rLifeF <= 0) {
							p.a -= p.fadeOutSpeed * tmod1;
						} else if(p.alphaFlicker > 0) {
							var max = p.alphaFlicker;
							var sign = true;
							if(sign == null) {
								sign = false;
							}
							var x7 = p.a + (sign ? Math.random() * max * (Std.random(2) * 2 - 1) : Math.random() * max);
							var max1 = p.maxAlpha;
							p.a = x7 < 0 ? 0 : x7 > max1 ? max1 : x7;
						}
						if(p.rLifeF <= 0 && (p.a <= 0 || p.killOnLifeOut) || p.bounds != null && !(p.x >= p.bounds.xMin && p.x < p.bounds.xMax && p.y >= p.bounds.yMin && p.y < p.bounds.yMax)) {
							p.kill();
						} else if(p.onUpdate != null) {
							p.onUpdate(p);
						}
					}
				}
			}
			if(!p.killed) {
				if(updateCb != null) {
					updateCb(p);
				}
				++i;
			}
		}
	}
	,__class__: dn_heaps_ParticlePool
};
var h2d_BatchElement = function(t) {
	this.x = 0;
	this.y = 0;
	this.r = 1;
	this.g = 1;
	this.b = 1;
	this.a = 1;
	this.rotation = 0;
	this.scaleX = this.scaleY = 1;
	this.visible = true;
	this.t = t;
};
$hxClasses["h2d.BatchElement"] = h2d_BatchElement;
h2d_BatchElement.__name__ = "h2d.BatchElement";
h2d_BatchElement.prototype = {
	update: function(et) {
		return true;
	}
	,remove: function() {
		if(this.batch != null) {
			this.batch.delete(this);
		}
	}
	,__class__: h2d_BatchElement
};
var dn_heaps_HParticle = function(p,tile,fps,x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	h2d_BatchElement.call(this,tile);
	this.fps = fps;
	this.pool = p;
	this.poolIdx = -1;
	this.reset(null,null,x,y);
};
$hxClasses["dn.heaps.HParticle"] = dn_heaps_HParticle;
dn_heaps_HParticle.__name__ = "dn.heaps.HParticle";
dn_heaps_HParticle.__super__ = h2d_BatchElement;
dn_heaps_HParticle.prototype = $extend(h2d_BatchElement.prototype,{
	setTile: function(tile) {
		this.t.setPosition(tile.x,tile.y);
		this.t.setSize(tile.width,tile.height);
		this.t.dx = tile.dx;
		this.t.dy = tile.dy;
		this.t.setTexture(tile.innerTex);
	}
	,reset: function(sb,tile,x,y) {
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		if(tile != null) {
			this.setTile(tile);
		}
		if(this.batch != sb) {
			if(this.batch != null) {
				this.remove();
			}
			if(sb != null) {
				sb.add(this);
			}
		}
		this.x = x;
		this.y = y;
		this.scaleX = 1;
		this.scaleY = 1;
		this.rotation = 0;
		this.r = this.g = this.b = this.a = 1;
		this.a = 1;
		this.visible = true;
		this.data0 = this.data1 = this.data2 = this.data3 = this.data4 = this.data5 = this.data6 = this.data7 = NaN;
		this.customTmod = null;
		this.animId = null;
		this.animLib = null;
		this.scaleMul = 1;
		this.scaleXMul = this.scaleYMul = 1;
		this.dsFrict = 1;
		this.alphaFlicker = 0;
		this.fromColor = 0;
		this.dColor = this.rColor = NaN;
		this.stamp = HxOverrides.now() / 1000;
		var _this = this.t;
		var px = 0.5;
		var py = 0.5;
		if(py == null) {
			py = 0.5;
		}
		if(px == null) {
			px = 0.5;
		}
		_this.dx = -(px * _this.width);
		_this.dy = -(py * _this.height);
		this.animXr = 0.5;
		this.animYr = 0.5;
		this.killed = false;
		if(this.a > 1) {
			this.a = 1;
		}
		this.maxAlpha = 1;
		this.dx = this.dy = this.da = this.dr = this.ds = this.dsX = this.dsY = 0;
		this.gx = this.gy = 0;
		this.frictX = this.frictY = 1;
		this.drFrict = 1;
		this.fadeOutSpeed = 0.1;
		this.bounceMul = 0.85;
		var d = 0 * this.fps;
		if(0 > d) {
			d = 0;
		}
		this.visible = !this.killed && d <= 0;
		this.delayF = d;
		this.set_lifeS(1);
		this.bounds = dn_heaps_HParticle.DEFAULT_BOUNDS;
		this.killOnLifeOut = false;
		this.groundY = null;
		this.groupId = null;
		this.onStart = null;
		this.onKill = null;
		this.onBounce = null;
		this.onUpdate = null;
		this.onFadeOutStart = null;
		this.onTouchGround = null;
	}
	,setFadeS: function(targetAlpha,fadeInDurationS,fadeOutDurationS) {
		this.a = 0;
		if(this.a > targetAlpha) {
			this.a = targetAlpha;
		}
		this.maxAlpha = targetAlpha;
		if(fadeInDurationS <= 0) {
			this.a = this.maxAlpha;
		} else {
			this.da = targetAlpha / (fadeInDurationS * this.fps);
		}
		if(fadeOutDurationS <= 0) {
			this.fadeOutSpeed = 99;
		} else {
			this.fadeOutSpeed = targetAlpha / (fadeOutDurationS * this.fps);
		}
	}
	,set_lifeS: function(v) {
		var x = this.fps * v;
		this.rLifeF = this.maxLifeF = x > 0 ? x : 0;
		return v;
	}
	,kill: function() {
		if(this.killed) {
			return;
		}
		if(this.onKill != null) {
			var cb = this.onKill;
			this.onKill = null;
			cb();
		}
		this.a = 0;
		this.set_lifeS(0);
		var d = 0 * this.fps;
		if(0 > d) {
			d = 0;
		}
		this.visible = !this.killed && d <= 0;
		this.delayF = d;
		this.killed = true;
		this.visible = false;
		this.pool.free(this);
	}
	,dispose: function() {
		this.remove();
		this.bounds = null;
	}
	,__class__: dn_heaps_HParticle
});
var dn_heaps_assets_Atlas = function() { };
$hxClasses["dn.heaps.assets.Atlas"] = dn_heaps_assets_Atlas;
dn_heaps_assets_Atlas.__name__ = "dn.heaps.assets.Atlas";
dn_heaps_assets_Atlas.ltick = function() {
	if(dn_heaps_assets_Atlas.LOADING_TICK_FUN != null) {
		dn_heaps_assets_Atlas.LOADING_TICK_FUN();
	}
};
dn_heaps_assets_Atlas.load = function(atlasPath,onReload,notZeroBaseds,properties) {
	var notZeroMap = new haxe_ds_StringMap();
	if(notZeroBaseds != null) {
		var _g = 0;
		while(_g < notZeroBaseds.length) {
			var id = notZeroBaseds[_g];
			++_g;
			notZeroMap.h[id] = true;
		}
	}
	var propertiesMap = new haxe_ds_StringMap();
	if(properties != null) {
		var _g = 0;
		var _g1 = properties.length;
		while(_g < _g1) {
			var i = _g++;
			propertiesMap.h[properties[i]] = properties.length - 1 - i;
		}
	}
	var res = hxd_Res.load(atlasPath);
	var basePath = atlasPath.indexOf("/") < 0 ? "" : HxOverrides.substr(atlasPath,0,atlasPath.lastIndexOf("/") + 1);
	var atlas = res.to(hxd_res_Atlas);
	var lib = dn_heaps_assets_Atlas.convertToSlib(atlas,notZeroMap,propertiesMap,atlasPath);
	res.watch(function() {
		dn_heaps_assets_Atlas.convertToSlib(atlas,notZeroMap,propertiesMap,atlasPath);
		if(onReload != null) {
			onReload();
		}
	});
	return lib;
};
dn_heaps_assets_Atlas.convertToSlib = function(atlas,notZeroBaseds,properties,atlasName) {
	dn_heaps_assets_Atlas.ltick();
	var contents = atlas.getContents();
	dn_heaps_assets_Atlas.ltick();
	var bestVariants_h = Object.create(null);
	var propertiesReg = new EReg("(.*)((\\.[a-z_\\-]+)+)$","gi");
	var rawName = haxe_ds_StringMap.keysIterator(contents.h);
	while(rawName.hasNext()) {
		var rawName1 = rawName.next();
		var groupName = rawName1;
		var groupProps = [];
		if(propertiesReg.match(rawName1)) {
			var str = HxOverrides.substr(propertiesReg.matched(2),1,null);
			groupProps = str.split(".");
			groupName = propertiesReg.matched(1);
		}
		var score = 0;
		if(groupProps.length > 0) {
			var _g = 0;
			var _g1 = groupProps.length;
			while(_g < _g1) {
				var i = _g++;
				var prio = properties.h[groupProps[i]];
				if(prio != null) {
					score |= 1 << prio;
				}
			}
			if(score == 0) {
				continue;
			}
		}
		var e = bestVariants_h[groupName];
		if(e == null) {
			bestVariants_h[groupName] = { rawName : rawName1, score : score};
		} else if(score > e.score) {
			e.rawName = rawName1;
			e.score = score;
		}
	}
	var pageMap = new haxe_ds_ObjectMap();
	var pages = [];
	var group = haxe_ds_StringMap.valueIterator(contents.h);
	while(group.hasNext()) {
		var group1 = group.next();
		var _g = 0;
		while(_g < group1.length) {
			var frame = group1[_g];
			++_g;
			var tex = frame.t.innerTex;
			var page = pageMap.h[tex.__id__];
			if(page == null) {
				pageMap.set(tex,pages.length);
				dn_heaps_assets_Atlas.ltick();
				pages.push(h2d_Tile.fromTexture(tex));
				dn_heaps_assets_Atlas.ltick();
			}
		}
	}
	var nrmPages = [];
	var _g = 0;
	var _g1 = pages.length;
	while(_g < _g1) {
		var i = _g++;
		var name = pages[i].innerTex.name;
		var nrmName = HxOverrides.substr(name,0,name.length - 4) + "_n.png";
		dn_heaps_assets_Atlas.ltick();
		nrmPages[i] = hxd_res_Loader.currentInstance.exists(nrmName) ? h2d_Tile.fromTexture(hxd_Res.load(nrmName).toTexture()) : null;
		dn_heaps_assets_Atlas.ltick();
	}
	var lib = new dn_heaps_slib_SpriteLib(pages,nrmPages);
	var frameReg = new EReg("(.*?)(_?)([0-9]+)$","gi");
	var numReg = new EReg("^[0-9]+$","");
	var groupName = haxe_ds_StringMap.keysIterator(bestVariants_h);
	while(groupName.hasNext()) {
		var groupName1 = groupName.next();
		var rawName = bestVariants_h[groupName1].rawName;
		var content = contents.h[rawName];
		if(content.length == 1) {
			var e = content[0];
			var page = pageMap.h[e.t.innerTex.__id__];
			var k = groupName1;
			var f = 0;
			var regBoth = false;
			if(frameReg.match(k)) {
				k = frameReg.matched(1);
				f = Std.parseInt(frameReg.matched(3));
				if(Object.prototype.hasOwnProperty.call(notZeroBaseds.h,k)) {
					--f;
				}
				if(frameReg.matched(2).length == 0) {
					regBoth = true;
				}
			}
			var _this = e.t;
			var _this1 = e.t;
			var fd = lib.sliceCustom(k,page,f,Math.floor(e.t.x),Math.floor(e.t.y),Math.ceil(_this.width + _this.x) - Math.floor(_this.x),Math.ceil(_this1.height + _this1.y) - Math.floor(_this1.y),Math.floor(-e.t.dx),Math.floor(-e.t.dy),e.width,e.height);
			if(regBoth) {
				lib.resliceCustom(groupName1,0,fd);
			}
			lib.resliceCustom(rawName,0,fd);
		} else {
			var k1 = groupName1;
			if(k1.indexOf("/") >= 0) {
				k1 = HxOverrides.substr(k1,k1.lastIndexOf("/") + 1,null);
			}
			var _g = 0;
			var _g1 = content.length;
			while(_g < _g1) {
				var i = _g++;
				var e1 = content[i];
				var page1 = pageMap.h[e1.t.innerTex.__id__];
				var _this2 = e1.t;
				var _this3 = e1.t;
				lib.sliceCustom(k1,page1,i,Math.floor(e1.t.x),Math.floor(e1.t.y),Math.ceil(_this2.width + _this2.x) - Math.floor(_this2.x),Math.ceil(_this3.height + _this3.y) - Math.floor(_this3.y),Math.floor(-e1.t.dx),Math.floor(-e1.t.dy),e1.width,e1.height);
			}
		}
	}
	dn_heaps_assets_Atlas.ltick();
	var id = haxe_ds_StringMap.keysIterator(lib.groups.h);
	while(id.hasNext()) {
		var id1 = id.next();
		if(!(id1 != null && Object.prototype.hasOwnProperty.call(lib.groups.h,id1) && lib.groups.h[id1].frames.length > 0)) {
			throw haxe_Exception.thrown("Unknown group " + id1);
		}
		var nframes = (id1 == null ? lib.currentGroup : lib.groups.h[id1]).frames.length;
		var a = dn_heaps_assets_Atlas.CACHE_ANIMS[nframes];
		if(a == null) {
			var _g = [];
			var _g1 = 0;
			var _g2 = nframes;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(i);
			}
			a = _g;
			if(nframes < 256) {
				dn_heaps_assets_Atlas.CACHE_ANIMS[nframes] = a;
			}
		}
		lib.__defineAnim(id1,a);
		var p = id1.lastIndexOf("/");
		if(p >= 0) {
			var id2 = HxOverrides.substr(id1,p + 1,null);
			if(id2 != null && id2.length > 0 && !numReg.match(id2)) {
				if(Object.prototype.hasOwnProperty.call(lib.groups.h,id2)) {
					haxe_Log.trace("Warning, duplicate short name: " + id2 + " in " + atlasName + ":" + id1,{ fileName : "dn/heaps/assets/Atlas.hx", lineNumber : 189, className : "dn.heaps.assets.Atlas", methodName : "convertToSlib"});
				}
				lib.groups.h[id2] = lib.groups.h[id1];
			}
		}
	}
	dn_heaps_assets_Atlas.ltick();
	return lib;
};
var h2d_filter_Filter = function() {
	this.enable = true;
	this.smooth = false;
	this.boundsExtend = 0.;
	this.autoBounds = true;
};
$hxClasses["h2d.filter.Filter"] = h2d_filter_Filter;
h2d_filter_Filter.__name__ = "h2d.filter.Filter";
h2d_filter_Filter.prototype = {
	get_enable: function() {
		return this.enable;
	}
	,sync: function(ctx,s) {
	}
	,bind: function(s) {
	}
	,unbind: function(s) {
	}
	,getBounds: function(s,bounds) {
		s.getBounds(s,bounds);
		bounds.xMin -= this.boundsExtend;
		bounds.yMin -= this.boundsExtend;
		bounds.xMax += this.boundsExtend;
		bounds.yMax += this.boundsExtend;
	}
	,draw: function(ctx,input) {
		return input;
	}
	,__class__: h2d_filter_Filter
};
var dn_heaps_filter_PixelOutline = function(color,knockOut) {
	if(knockOut == null) {
		knockOut = false;
	}
	if(color == null) {
		color = 0;
	}
	h2d_filter_Filter.call(this);
	this.pass = new dn_heaps_filter__$PixelOutline_PixelOutlinePass(color);
	this.color = color;
	this.pass.set_color(this.color);
	this.smooth = false;
	this.knockOut = knockOut;
	this.pass.set_knockOut(this.knockOut);
};
$hxClasses["dn.heaps.filter.PixelOutline"] = dn_heaps_filter_PixelOutline;
dn_heaps_filter_PixelOutline.__name__ = "dn.heaps.filter.PixelOutline";
dn_heaps_filter_PixelOutline.__super__ = h2d_filter_Filter;
dn_heaps_filter_PixelOutline.prototype = $extend(h2d_filter_Filter.prototype,{
	sync: function(ctx,s) {
		this.boundsExtend = 1;
	}
	,draw: function(ctx,t) {
		var out = ctx.textures.allocTileTarget("colorMatrixOut",t);
		this.pass.apply(t.innerTex,out);
		return h2d_Tile.fromTexture(out);
	}
	,__class__: dn_heaps_filter_PixelOutline
});
var h3d_pass_ScreenFx = function(shader,output) {
	this.shader = shader;
	this.shaders = new hxsl_ShaderList(shader);
	this.manager = new h3d_pass_ShaderManager(output);
	this.pass = new h3d_mat_Pass("screenfx",new hxsl_ShaderList(shader));
	this.pass.set_culling(h3d_mat_Face.None);
	this.pass.depth(false,h3d_mat_Compare.Always);
};
$hxClasses["h3d.pass.ScreenFx"] = h3d_pass_ScreenFx;
h3d_pass_ScreenFx.__name__ = "h3d.pass.ScreenFx";
h3d_pass_ScreenFx.prototype = {
	get_engine: function() {
		if(this._engine == null) {
			this._engine = h3d_Engine.CURRENT;
		}
		return this._engine;
	}
	,render: function() {
		if(this.primitive == null) {
			this.primitive = h3d_prim_Plane2D.get();
		}
		this.shader.flipY__ = this.get_engine().driver.hasFeature(h3d_impl_Feature.BottomLeftCoords) && this.get_engine().getCurrentTarget() != null ? -1 : 1;
		var rts = this.manager.compileShaders(this.shaders);
		this.get_engine().selectMaterial(this.pass);
		this.get_engine().selectShader(rts);
		if(this.buffers == null) {
			this.buffers = new h3d_shader_Buffers(rts);
		} else {
			var _this = this.buffers;
			_this.vertex.grow(rts.vertex);
			_this.fragment.grow(rts.fragment);
		}
		this.manager.fillGlobals(this.buffers,rts);
		this.manager.fillParams(this.buffers,rts,this.shaders);
		this.get_engine().uploadShaderBuffers(this.buffers,0);
		this.get_engine().uploadShaderBuffers(this.buffers,1);
		this.get_engine().uploadShaderBuffers(this.buffers,2);
		this.primitive.render(this.get_engine());
	}
	,dispose: function() {
	}
	,__class__: h3d_pass_ScreenFx
};
var dn_heaps_filter__$PixelOutline_PixelOutlinePass = function(color) {
	if(color == null) {
		color = 0;
	}
	h3d_pass_ScreenFx.call(this,new dn_heaps_filter__$PixelOutline_PixelOutlineShader());
	this.set_color(color);
	this.set_knockOut(false);
};
$hxClasses["dn.heaps.filter._PixelOutline.PixelOutlinePass"] = dn_heaps_filter__$PixelOutline_PixelOutlinePass;
dn_heaps_filter__$PixelOutline_PixelOutlinePass.__name__ = "dn.heaps.filter._PixelOutline.PixelOutlinePass";
dn_heaps_filter__$PixelOutline_PixelOutlinePass.__super__ = h3d_pass_ScreenFx;
dn_heaps_filter__$PixelOutline_PixelOutlinePass.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	set_color: function(c) {
		if(this.color == c) {
			return c;
		}
		return this.color = c;
	}
	,set_knockOut: function(v) {
		if(this.knockOut == v) {
			return v;
		}
		return this.knockOut = v;
	}
	,apply: function(src,out) {
		this.get_engine().pushTarget(out);
		this.shader.texture__ = src;
		var _this = this.shader.outlineColor__;
		var c = this.color;
		_this.x = (c >> 16 & 255) / 255;
		_this.y = (c >> 8 & 255) / 255;
		_this.z = (c & 255) / 255;
		_this.w = (c >>> 24) / 255;
		var _this = this.shader.pixelSize__;
		var x = 1 / src.width;
		var y = 1 / src.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		this.shader.knockOutMul__ = this.knockOut ? 0 : 1;
		this.render();
		this.get_engine().popTarget();
	}
	,__class__: dn_heaps_filter__$PixelOutline_PixelOutlinePass
});
var hxsl_Shader = function() {
	this.priority = 0;
	this.initialize();
};
$hxClasses["hxsl.Shader"] = hxsl_Shader;
hxsl_Shader.__name__ = "hxsl.Shader";
hxsl_Shader.prototype = {
	initialize: function() {
		this.constModified = true;
		if(this.shader != null) {
			return;
		}
		var cl = js_Boot.getClass(this);
		this.shader = cl._SHADER;
		if(this.shader == null) {
			var curClass = cl;
			while(curClass != null && curClass.SRC == null) curClass = curClass.__super__;
			if(curClass == null) {
				throw haxe_Exception.thrown(cl.__name__ + " has no shader source");
			}
			this.shader = curClass._SHADER;
			if(this.shader == null) {
				this.shader = new hxsl_SharedShader(curClass.SRC);
				curClass._SHADER = this.shader;
			}
		}
	}
	,setPriority: function(v) {
		this.priority = v;
	}
	,getParamValue: function(index) {
		throw haxe_Exception.thrown("assert");
	}
	,getParamFloatValue: function(index) {
		throw haxe_Exception.thrown("assert");
	}
	,updateConstants: function(globals) {
		throw haxe_Exception.thrown("assert");
	}
	,updateConstantsFinal: function(globals) {
		var c = this.shader.consts;
		while(c != null) {
			if(c.globalId == 0) {
				c = c.next;
				continue;
			}
			var v = globals.map.h[c.globalId];
			var _g = c.v.type;
			switch(_g._hx_index) {
			case 1:
				var v1 = v;
				if(v1 >>> c.bits != 0) {
					throw haxe_Exception.thrown("Constant " + c.v.name + " is outside range (" + v1 + " > " + ((1 << c.bits) - 1) + ")");
				}
				this.constBits |= v1 << c.pos;
				break;
			case 2:
				var v2 = v;
				if(v2) {
					this.constBits |= 1 << c.pos;
				}
				break;
			case 17:
				var count = _g.size;
				if(v == null) {
					c = c.next;
					continue;
				}
				var v3 = v;
				var sel = v3.channel;
				if(v3.texture == null) {
					sel = hxsl_Channel.Unknown;
				} else if(sel == null || sel == hxsl_Channel.Unknown) {
					switch(count) {
					case 1:
						if(v3.texture.format == h3d_mat_Texture.nativeFormat) {
							sel = hxsl_Channel.PackedFloat;
						} else {
							throw haxe_Exception.thrown("Constant " + c.v.name + " does not define channel select value");
						}
						break;
					case 3:
						if(v3.texture.format == h3d_mat_Texture.nativeFormat) {
							sel = hxsl_Channel.PackedNormal;
						} else {
							throw haxe_Exception.thrown("Constant " + c.v.name + " does not define channel select value");
						}
						break;
					default:
						throw haxe_Exception.thrown("Constant " + c.v.name + " does not define channel select value");
					}
				}
				this.constBits |= (globals.allocChannelID(v3.texture) << 3 | sel._hx_index) << c.pos;
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			c = c.next;
		}
		var _this = this.shader;
		var constBits = this.constBits;
		var i = _this.instanceCache.h[constBits];
		this.instance = i == null ? _this.makeInstance(constBits) : i;
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__;
	}
	,__class__: hxsl_Shader
};
var h3d_shader_ScreenShader = function() {
	this.flipY__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.ScreenShader"] = h3d_shader_ScreenShader;
h3d_shader_ScreenShader.__name__ = "h3d.shader.ScreenShader";
h3d_shader_ScreenShader.__super__ = hxsl_Shader;
h3d_shader_ScreenShader.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_ScreenShader
});
var dn_heaps_filter__$PixelOutline_PixelOutlineShader = function() {
	this.knockOutMul__ = 0;
	this.outlineColor__ = new h3d_Vector();
	this.pixelSize__ = new h3d_Vector();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["dn.heaps.filter._PixelOutline.PixelOutlineShader"] = dn_heaps_filter__$PixelOutline_PixelOutlineShader;
dn_heaps_filter__$PixelOutline_PixelOutlineShader.__name__ = "dn.heaps.filter._PixelOutline.PixelOutlineShader";
dn_heaps_filter__$PixelOutline_PixelOutlineShader.__super__ = h3d_shader_ScreenShader;
dn_heaps_filter__$PixelOutline_PixelOutlineShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		case 2:
			return this.pixelSize__;
		case 3:
			return this.outlineColor__;
		case 4:
			return this.knockOutMul__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: dn_heaps_filter__$PixelOutline_PixelOutlineShader
});
var dn_heaps_slib__$AnimManager_AnimInstance = function(s,g) {
	this.reverse = false;
	this.speed = 1.0;
	this.stopOnLastFrame = false;
	this.killAfterPlay = false;
	this.isStateAnim = false;
	this.paused = false;
	this.playDuration = -1.;
	this.plays = 1;
	this.curFrameCpt = 0.0;
	this.animCursor = 0;
	this.frames = [];
	this.spr = s;
	this.group = g;
	var _this = this.spr.lib;
	var k = this.group;
	if(!(k != null && Object.prototype.hasOwnProperty.call(_this.groups.h,k) && _this.groups.h[k].frames.length > 0)) {
		throw haxe_Exception.thrown("unknown group " + this.group);
	}
	var _this = this.spr.lib;
	var k = this.group;
	this.frames = (k == null ? _this.currentGroup : _this.groups.h[k]).anim;
};
$hxClasses["dn.heaps.slib._AnimManager.AnimInstance"] = dn_heaps_slib__$AnimManager_AnimInstance;
dn_heaps_slib__$AnimManager_AnimInstance.__name__ = "dn.heaps.slib._AnimManager.AnimInstance";
dn_heaps_slib__$AnimManager_AnimInstance.prototype = {
	onEnd: function() {
	}
	,onEachLoop: function() {
	}
	,__class__: dn_heaps_slib__$AnimManager_AnimInstance
};
var dn_heaps_slib__$AnimManager_StateAnim = function(g,cb) {
	this.group = g;
	this.priority = 0;
	this.cond = cb;
	this.spd = 1.0;
};
$hxClasses["dn.heaps.slib._AnimManager.StateAnim"] = dn_heaps_slib__$AnimManager_StateAnim;
dn_heaps_slib__$AnimManager_StateAnim.__name__ = "dn.heaps.slib._AnimManager.StateAnim";
dn_heaps_slib__$AnimManager_StateAnim.prototype = {
	__class__: dn_heaps_slib__$AnimManager_StateAnim
};
var dn_heaps_slib__$AnimManager_Transition = function(f,t,a,cb) {
	this.from = f;
	this.to = t;
	this.anim = a;
	this.cond = cb;
	this.spd = 1.0;
	this.reverse = false;
};
$hxClasses["dn.heaps.slib._AnimManager.Transition"] = dn_heaps_slib__$AnimManager_Transition;
dn_heaps_slib__$AnimManager_Transition.__name__ = "dn.heaps.slib._AnimManager.Transition";
dn_heaps_slib__$AnimManager_Transition.prototype = {
	__class__: dn_heaps_slib__$AnimManager_Transition
};
var dn_heaps_slib_AnimManager = function(spr) {
	this.S_STAR = "*";
	this.suspendF = 0.;
	this.destroyed = false;
	this.needUpdates = false;
	this.genSpeed = 1.0;
	this.stateAnimsActive = true;
	this.transitions = [];
	this.stateAnims = [];
	this.stack = [];
	this.spr = spr;
};
$hxClasses["dn.heaps.slib.AnimManager"] = dn_heaps_slib_AnimManager;
dn_heaps_slib_AnimManager.__name__ = "dn.heaps.slib.AnimManager";
dn_heaps_slib_AnimManager.prototype = {
	destroy: function() {
		this.destroyed = true;
		this.stopWithoutStateAnims();
		this.needUpdates = false;
		this.stateAnims = null;
		this.stack = null;
		this.spr = null;
	}
	,play: function(group,plays,queueAnim) {
		if(queueAnim == null) {
			queueAnim = false;
		}
		if(plays == null) {
			plays = 1;
		}
		var _this = this.spr.lib;
		var g = group == null ? _this.currentGroup : _this.groups.h[group];
		if(g == null) {
			return this;
		}
		if(g.anim == null || g.anim.length == 0) {
			return this;
		}
		if(!queueAnim && (!this.destroyed && this.stack.length > 0)) {
			this.stack = [];
		}
		var a = new dn_heaps_slib__$AnimManager_AnimInstance(this.spr,group);
		this.stack.push(a);
		a.plays = plays;
		this.needUpdates = true;
		if(!queueAnim) {
			var t = this.getTransition(this.spr.groupName,this.stack[0].group);
			if(t != null && t.anim != this.spr.groupName) {
				var _this = this.spr.lib;
				var k = t.anim;
				if(k != null && Object.prototype.hasOwnProperty.call(_this.groups.h,k) && _this.groups.h[k].frames.length > 0) {
					var a = new dn_heaps_slib__$AnimManager_AnimInstance(this.spr,t.anim);
					this.stack.splice(0,0,a);
					a.speed = t.spd;
					a.reverse = t.reverse;
				}
			}
			var _this = this.stack[0];
			var f = _this.frames[_this.reverse ? _this.frames.length - 1 - _this.animCursor : _this.animCursor];
			if(_this.spr.get_anim().onEnterFrame != null && _this.lastFrame != f) {
				_this.spr.get_anim().onEnterFrame(f);
			}
			if(_this.spr.groupName != _this.group) {
				_this.spr.set(null,_this.group,f);
			} else if(_this.spr.frame != f) {
				_this.spr.setFrame(f);
			}
			_this.lastFrame = f;
		}
		return this;
	}
	,loop: function() {
		if(!this.destroyed && this.stack.length > 0) {
			this.stack[this.stack.length - 1].plays = 999999;
		}
		return this;
	}
	,stopWithStateAnims: function() {
		this.stateAnimsActive = true;
		this.stack = [];
		this.applyStateAnims();
	}
	,stopWithoutStateAnims: function(k,frame) {
		this.stateAnimsActive = false;
		this.stack = [];
		if(k != null) {
			this.spr.set(null,k,frame != null ? frame : 0);
		} else if(frame != null) {
			this.spr.setFrame(frame);
		}
	}
	,unsuspend: function() {
		this.suspendF = 0;
	}
	,getTransition: function(from,to) {
		var _g = 0;
		var _g1 = this.transitions;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if((t.from == this.S_STAR || t.from == from) && (t.to == this.S_STAR || t.to == to) && t.cond()) {
				return t;
			}
		}
		return null;
	}
	,applyStateAnims: function() {
		if(!this.stateAnimsActive) {
			return;
		}
		if(!this.destroyed && this.stack.length > 0 && !this.stack[0].isStateAnim) {
			return;
		}
		var _g = 0;
		var _g1 = this.stateAnims;
		while(_g < _g1.length) {
			var sa = _g1[_g];
			++_g;
			if(sa.cond()) {
				if(!this.destroyed && this.stack.length > 0 && this.stack[0].group == sa.group) {
					break;
				}
				var _this = this.play(sa.group).loop();
				if(!_this.destroyed && _this.stack.length > 0) {
					_this.stack[_this.stack.length - 1].speed = sa.spd;
				}
				if(!this.destroyed && this.stack.length > 0) {
					this.stack[this.stack.length - 1].isStateAnim = true;
				}
				break;
			}
		}
	}
	,_update: function(dt) {
		if(dn_heaps_slib_SpriteLib.DISABLE_ANIM_UPDATES) {
			return;
		}
		if(this.suspendF > 0) {
			this.suspendF -= dt;
			if(this.suspendF <= 0) {
				this.unsuspend();
			}
			return;
		}
		this.applyStateAnims();
		var a = this.stack[0];
		if(a != null && !a.paused) {
			a.curFrameCpt += dt * this.genSpeed * a.speed;
			if(a.playDuration > 0) {
				a.playDuration -= dt;
				if(a.playDuration <= 0) {
					a.plays = 0;
					a.animCursor = a.frames.length;
					a.curFrameCpt = 1;
				}
			}
			while(a.curFrameCpt > 1) {
				a.curFrameCpt--;
				a.animCursor++;
				if(a.animCursor < a.frames.length) {
					var f = a.frames[a.reverse ? a.frames.length - 1 - a.animCursor : a.animCursor];
					if(a.spr.get_anim().onEnterFrame != null && a.lastFrame != f) {
						a.spr.get_anim().onEnterFrame(f);
					}
					if(a.spr.groupName != a.group) {
						a.spr.set(null,a.group,f);
					} else if(a.spr.frame != f) {
						a.spr.setFrame(f);
					}
					a.lastFrame = f;
					continue;
				}
				a.animCursor = 0;
				a.plays--;
				if(a.plays > 0 || a.playDuration > 0) {
					a.onEachLoop();
					a = this.stack[0];
					var f1 = a.frames[a.reverse ? a.frames.length - 1 - a.animCursor : a.animCursor];
					if(a.spr.get_anim().onEnterFrame != null && a.lastFrame != f1) {
						a.spr.get_anim().onEnterFrame(f1);
					}
					if(a.spr.groupName != a.group) {
						a.spr.set(null,a.group,f1);
					} else if(a.spr.frame != f1) {
						a.spr.setFrame(f1);
					}
					a.lastFrame = f1;
					continue;
				}
				if(a.stopOnLastFrame) {
					this.stopWithoutStateAnims();
				}
				a.onEnd();
				if(a.killAfterPlay) {
					this.spr.remove();
					break;
				}
				if(!this.destroyed && this.stack.length > 0) {
					this.stack.shift();
					if(this.stack.length == 0) {
						this.stopWithStateAnims();
					} else {
						var t = this.getTransition(this.spr.groupName,this.stack[0].group);
						if(t != null && t.anim != this.spr.groupName) {
							var _this = this.spr.lib;
							var k = t.anim;
							if(k != null && Object.prototype.hasOwnProperty.call(_this.groups.h,k) && _this.groups.h[k].frames.length > 0) {
								var a1 = new dn_heaps_slib__$AnimManager_AnimInstance(this.spr,t.anim);
								this.stack.splice(0,0,a1);
								a1.speed = t.spd;
								a1.reverse = t.reverse;
							}
						}
						var _this1 = this.stack[0];
						var f2 = _this1.frames[_this1.reverse ? _this1.frames.length - 1 - _this1.animCursor : _this1.animCursor];
						if(_this1.spr.get_anim().onEnterFrame != null && _this1.lastFrame != f2) {
							_this1.spr.get_anim().onEnterFrame(f2);
						}
						if(_this1.spr.groupName != _this1.group) {
							_this1.spr.set(null,_this1.group,f2);
						} else if(_this1.spr.frame != f2) {
							_this1.spr.setFrame(f2);
						}
						_this1.lastFrame = f2;
					}
					a = this.stack[0];
				}
				if(!(!this.destroyed && this.stack.length > 0)) {
					break;
				}
			}
		}
		if(this.overlap != null && !this.spr.destroyed) {
			this.overlap.curFrameCpt += dt * this.genSpeed * this.overlap.speed;
			while(this.overlap.curFrameCpt > 1) {
				this.overlap.curFrameCpt--;
				this.overlap.animCursor++;
				var _this = this.overlap;
				if(_this.animCursor >= _this.frames.length) {
					this.overlap = null;
					if(this.stack[0] != null) {
						var _this1 = this.stack[0];
						var f = _this1.frames[_this1.reverse ? _this1.frames.length - 1 - _this1.animCursor : _this1.animCursor];
						if(_this1.spr.get_anim().onEnterFrame != null && _this1.lastFrame != f) {
							_this1.spr.get_anim().onEnterFrame(f);
						}
						if(_this1.spr.groupName != _this1.group) {
							_this1.spr.set(null,_this1.group,f);
						} else if(_this1.spr.frame != f) {
							_this1.spr.setFrame(f);
						}
						_this1.lastFrame = f;
					}
					break;
				}
			}
			if(this.overlap != null) {
				var _this = this.overlap;
				var f = _this.frames[_this.reverse ? _this.frames.length - 1 - _this.animCursor : _this.animCursor];
				if(_this.spr.get_anim().onEnterFrame != null && _this.lastFrame != f) {
					_this.spr.get_anim().onEnterFrame(f);
				}
				if(_this.spr.groupName != _this.group) {
					_this.spr.set(null,_this.group,f);
				} else if(_this.spr.frame != f) {
					_this.spr.setFrame(f);
				}
				_this.lastFrame = f;
			}
		}
		if(!this.destroyed && !(!this.destroyed && this.stack.length > 0) && this.overlap == null) {
			this.needUpdates = false;
		}
	}
	,__class__: dn_heaps_slib_AnimManager
};
var h2d_Object = function(parent) {
	this.alpha = 1.;
	this.matA = 1;
	this.matB = 0;
	this.matC = 0;
	this.matD = 1;
	this.absX = 0;
	this.absY = 0;
	this.posChanged = true;
	this.x = 0;
	this.posChanged = true;
	this.y = 0;
	this.posChanged = true;
	this.scaleX = 1;
	this.posChanged = true;
	this.scaleY = 1;
	this.posChanged = true;
	this.rotation = 0;
	this.blendMode = h2d_BlendMode.Alpha;
	this.posChanged = parent != null;
	this.set_visible(true);
	this.children = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["h2d.Object"] = h2d_Object;
h2d_Object.__name__ = "h2d.Object";
h2d_Object.prototype = {
	getBounds: function(relativeTo,out) {
		if(out == null) {
			out = new h2d_col_Bounds();
		} else {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
		}
		if(relativeTo != null) {
			relativeTo.syncPos();
		}
		if(relativeTo != this) {
			this.syncPos();
		}
		this.getBoundsRec(relativeTo,out,false);
		if(out.xMax <= out.xMin || out.yMax <= out.yMin) {
			this.addBounds(relativeTo,out,-1,-1,2,2);
			out.xMax = out.xMin = (out.xMax + out.xMin) * 0.5;
			out.yMax = out.yMin = (out.yMax + out.yMin) * 0.5;
		}
		return out;
	}
	,getSize: function(out) {
		if(out == null) {
			out = new h2d_col_Bounds();
		} else {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
		}
		this.syncPos();
		this.getBoundsRec(this.parent,out,true);
		if(out.xMax <= out.xMin || out.yMax <= out.yMin) {
			this.addBounds(this.parent,out,-1,-1,2,2);
			out.xMax = out.xMin = (out.xMax + out.xMin) * 0.5;
			out.yMax = out.yMin = (out.yMax + out.yMin) * 0.5;
		}
		var dx = -this.x;
		var dy = -this.y;
		out.xMin += dx;
		out.xMax += dx;
		out.yMin += dy;
		out.yMax += dy;
		return out;
	}
	,set_filter: function(f) {
		if(this.filter != null && this.allocated) {
			this.filter.unbind(this);
		}
		this.filter = f;
		if(f != null && this.allocated) {
			f.bind(this);
		}
		return f;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		var n = this.children.length;
		if(n == 0) {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
			return;
		}
		if(n == 1) {
			var c = this.children[0];
			if(c.visible) {
				c.getBoundsRec(relativeTo,out,forSize);
			} else {
				out.xMin = 1e20;
				out.yMin = 1e20;
				out.xMax = -1e20;
				out.yMax = -1e20;
			}
			return;
		}
		var xmin = Infinity;
		var ymin = Infinity;
		var xmax = -Infinity;
		var ymax = -Infinity;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(!c.visible) {
				continue;
			}
			c.getBoundsRec(relativeTo,out,forSize);
			if(out.xMin < xmin) {
				xmin = out.xMin;
			}
			if(out.yMin < ymin) {
				ymin = out.yMin;
			}
			if(out.xMax > xmax) {
				xmax = out.xMax;
			}
			if(out.yMax > ymax) {
				ymax = out.yMax;
			}
		}
		out.xMin = xmin;
		out.yMin = ymin;
		out.xMax = xmax;
		out.yMax = ymax;
	}
	,addBounds: function(relativeTo,out,dx,dy,width,height) {
		if(width <= 0 || height <= 0) {
			return;
		}
		if(relativeTo == null) {
			var x;
			var y;
			var x = dx * this.matA + dy * this.matC + this.absX;
			var y = dx * this.matB + dy * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x = (dx + width) * this.matA + dy * this.matC + this.absX;
			var y = (dx + width) * this.matB + dy * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x = dx * this.matA + (dy + height) * this.matC + this.absX;
			var y = dx * this.matB + (dy + height) * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x = (dx + width) * this.matA + (dy + height) * this.matC + this.absX;
			var y = (dx + width) * this.matB + (dy + height) * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			return;
		}
		if(relativeTo == this) {
			if(out.xMin > dx) {
				out.xMin = dx;
			}
			if(out.yMin > dy) {
				out.yMin = dy;
			}
			if(out.xMax < dx + width) {
				out.xMax = dx + width;
			}
			if(out.yMax < dy + height) {
				out.yMax = dy + height;
			}
			return;
		}
		var r = relativeTo.matA * relativeTo.matD - relativeTo.matB * relativeTo.matC;
		if(r == 0) {
			return;
		}
		var det = 1 / r;
		var rA = relativeTo.matD * det;
		var rB = -relativeTo.matB * det;
		var rC = -relativeTo.matC * det;
		var rD = relativeTo.matA * det;
		var rX = this.absX - relativeTo.absX;
		var rY = this.absY - relativeTo.absY;
		var x = dx * this.matA + dy * this.matC + rX;
		var y = dx * this.matB + dy * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
		x = (dx + width) * this.matA + dy * this.matC + rX;
		y = (dx + width) * this.matB + dy * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
		x = dx * this.matA + (dy + height) * this.matC + rX;
		y = dx * this.matB + (dy + height) * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
		x = (dx + width) * this.matA + (dy + height) * this.matC + rX;
		y = (dx + width) * this.matB + (dy + height) * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
	}
	,localToGlobal: function(pt) {
		this.syncPos();
		if(pt == null) {
			pt = new h2d_col_Point();
		}
		var px = pt.x * this.matA + pt.y * this.matC + this.absX;
		var py = pt.x * this.matB + pt.y * this.matD + this.absY;
		pt.x = px;
		pt.y = py;
		return pt;
	}
	,globalToLocal: function(pt) {
		this.syncPos();
		pt.x -= this.absX;
		pt.y -= this.absY;
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var px = (pt.x * this.matD - pt.y * this.matC) * invDet;
		var py = (-pt.x * this.matB + pt.y * this.matA) * invDet;
		pt.x = px;
		pt.y = py;
		return pt;
	}
	,getScene: function() {
		var p = this;
		while(p.parent != null) p = p.parent;
		if(((p) instanceof h2d_Scene)) {
			return p;
		} else {
			return null;
		}
	}
	,set_visible: function(b) {
		if(this.visible == b) {
			return b;
		}
		this.visible = b;
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
		return b;
	}
	,addChild: function(s) {
		this.addChildAt(s,this.children.length);
	}
	,addChildAt: function(s,pos) {
		if(pos < 0) {
			pos = 0;
		}
		if(pos > this.children.length) {
			pos = this.children.length;
		}
		var p = this;
		while(p != null) {
			if(p == s) {
				throw haxe_Exception.thrown("Recursive addChild");
			}
			p = p.parent;
		}
		if(s.parent != null) {
			var old = s.allocated;
			s.allocated = false;
			s.parent.removeChild(s);
			s.allocated = old;
		}
		this.children.splice(pos,0,s);
		if(!this.allocated && s.allocated) {
			s.onRemove();
		}
		s.parent = this;
		s.parentContainer = this.parentContainer;
		s.posChanged = true;
		if(this.allocated) {
			if(!s.allocated) {
				s.onAdd();
			} else {
				s.onHierarchyMoved(true);
			}
		}
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
	}
	,onHierarchyMoved: function(parentChanged) {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onHierarchyMoved(parentChanged);
		}
	}
	,onAdd: function() {
		this.allocated = true;
		if(this.filter != null) {
			this.filter.bind(this);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onAdd();
		}
	}
	,onRemove: function() {
		this.allocated = false;
		if(this.filter != null) {
			this.filter.unbind(this);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onRemove();
		}
	}
	,removeChild: function(s) {
		if(HxOverrides.remove(this.children,s)) {
			if(s.allocated) {
				s.onRemove();
			}
			s.parent = null;
			if(s.parentContainer != null) {
				s.setParentContainer(null);
			}
			s.posChanged = true;
			if(this.parentContainer != null) {
				this.parentContainer.contentChanged(this);
			}
		}
	}
	,setParentContainer: function(c) {
		this.parentContainer = c;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.setParentContainer(c);
		}
	}
	,removeChildren: function() {
		while(this.children.length > 0) this.removeChild(this.children[0]);
	}
	,remove: function() {
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
	}
	,draw: function(ctx) {
	}
	,sync: function(ctx) {
		var changed = this.posChanged;
		if(changed) {
			this.calcAbsPos();
			this.posChanged = false;
		}
		this.lastFrame = ctx.frame;
		var p = 0;
		var len = this.children.length;
		while(p < len) {
			var c = this.children[p];
			if(c == null) {
				break;
			}
			if(c.lastFrame != ctx.frame) {
				if(changed) {
					c.posChanged = true;
				}
				c.sync(ctx);
			}
			if(this.children[p] != c) {
				p = 0;
				len = this.children.length;
			} else {
				++p;
			}
		}
	}
	,syncPos: function() {
		if(this.parent != null) {
			this.parent.syncPos();
		}
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
	}
	,calcAbsPos: function() {
		if(this.parent == null) {
			var cr;
			var sr;
			if(this.rotation == 0) {
				cr = 1.;
				sr = 0.;
				this.matA = this.scaleX;
				this.matB = 0;
				this.matC = 0;
				this.matD = this.scaleY;
			} else {
				cr = Math.cos(this.rotation);
				sr = Math.sin(this.rotation);
				this.matA = this.scaleX * cr;
				this.matB = this.scaleX * sr;
				this.matC = this.scaleY * -sr;
				this.matD = this.scaleY * cr;
			}
			this.absX = this.x;
			this.absY = this.y;
		} else {
			if(this.rotation == 0) {
				this.matA = this.scaleX * this.parent.matA;
				this.matB = this.scaleX * this.parent.matB;
				this.matC = this.scaleY * this.parent.matC;
				this.matD = this.scaleY * this.parent.matD;
			} else {
				var cr = Math.cos(this.rotation);
				var sr = Math.sin(this.rotation);
				var tmpA = this.scaleX * cr;
				var tmpB = this.scaleX * sr;
				var tmpC = this.scaleY * -sr;
				var tmpD = this.scaleY * cr;
				this.matA = tmpA * this.parent.matA + tmpB * this.parent.matC;
				this.matB = tmpA * this.parent.matB + tmpB * this.parent.matD;
				this.matC = tmpC * this.parent.matA + tmpD * this.parent.matC;
				this.matD = tmpC * this.parent.matB + tmpD * this.parent.matD;
			}
			this.absX = this.x * this.parent.matA + this.y * this.parent.matC + this.parent.absX;
			this.absY = this.x * this.parent.matB + this.y * this.parent.matD + this.parent.absY;
		}
	}
	,emitTile: function(ctx,tile) {
		if(h2d_Object.nullDrawable == null) {
			h2d_Object.nullDrawable = new h2d_Drawable(null);
		}
		h2d_Object.nullDrawable.absX = this.absX;
		h2d_Object.nullDrawable.absY = this.absY;
		h2d_Object.nullDrawable.matA = this.matA;
		h2d_Object.nullDrawable.matB = this.matB;
		h2d_Object.nullDrawable.matC = this.matC;
		h2d_Object.nullDrawable.matD = this.matD;
		ctx.drawTile(h2d_Object.nullDrawable,tile);
	}
	,clipBounds: function(ctx,bounds) {
		var view = ctx.tmpBounds;
		var matA;
		var matB;
		var matC;
		var matD;
		var absX;
		var absY;
		if(ctx.inFilter != null) {
			var f1 = ctx.baseShader.filterMatrixA__;
			var f2 = ctx.baseShader.filterMatrixB__;
			var tmpA = this.matA * f1.x + this.matB * f1.y;
			var tmpB = this.matA * f2.x + this.matB * f2.y;
			var tmpC = this.matC * f1.x + this.matD * f1.y;
			var tmpD = this.matC * f2.x + this.matD * f2.y;
			var tmpX = this.absX * f1.x + this.absY * f1.y + f1.z;
			var tmpY = this.absX * f2.x + this.absY * f2.y + f2.z;
			matA = tmpA * ctx.viewA + tmpB * ctx.viewC;
			matB = tmpA * ctx.viewB + tmpB * ctx.viewD;
			matC = tmpC * ctx.viewA + tmpD * ctx.viewC;
			matD = tmpC * ctx.viewB + tmpD * ctx.viewD;
			absX = tmpX * ctx.viewA + tmpY * ctx.viewC + ctx.viewX;
			absY = tmpX * ctx.viewB + tmpY * ctx.viewD + ctx.viewY;
		} else {
			matA = this.matA * ctx.viewA + this.matB * ctx.viewC;
			matB = this.matA * ctx.viewB + this.matB * ctx.viewD;
			matC = this.matC * ctx.viewA + this.matD * ctx.viewC;
			matD = this.matC * ctx.viewB + this.matD * ctx.viewD;
			absX = this.absX * ctx.viewA + this.absY * ctx.viewC + ctx.viewX;
			absY = this.absX * ctx.viewB + this.absY * ctx.viewD + ctx.viewY;
		}
		view.xMin = 1e20;
		view.yMin = 1e20;
		view.xMax = -1e20;
		view.yMax = -1e20;
		var x = bounds.xMin;
		var y = bounds.yMin;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = bounds.xMax;
		var y = bounds.yMin;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = bounds.xMin;
		var y = bounds.yMax;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = bounds.xMax;
		var y = bounds.yMax;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		if(view.xMin < -1) {
			view.xMin = -1;
		}
		if(view.yMin < -1) {
			view.yMin = -1;
		}
		if(view.xMax > 1) {
			view.xMax = 1;
		}
		if(view.yMax > 1) {
			view.yMax = 1;
		}
		var invDet = 1 / (matA * matD - matB * matC);
		var sxMin = view.xMin;
		var syMin = view.yMin;
		var sxMax = view.xMax;
		var syMax = view.yMax;
		view.xMin = 1e20;
		view.yMin = 1e20;
		view.xMax = -1e20;
		view.yMax = -1e20;
		var x = sxMin;
		var y = syMin;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = sxMax;
		var y = syMin;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = sxMin;
		var y = syMax;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = sxMax;
		var y = syMax;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var a = bounds.xMin;
		var b = view.xMin;
		bounds.xMin = a < b ? b : a;
		var a = bounds.yMin;
		var b = view.yMin;
		bounds.yMin = a < b ? b : a;
		var a = bounds.xMax;
		var b = view.xMax;
		bounds.xMax = a > b ? b : a;
		var a = bounds.yMax;
		var b = view.yMax;
		bounds.yMax = a > b ? b : a;
	}
	,drawFilters: function(ctx) {
		if(!ctx.pushFilter(this)) {
			return;
		}
		var bounds = ctx.tmpBounds;
		var total = new h2d_col_Bounds();
		var maxExtent = -1.;
		this.filter.sync(ctx,this);
		if(this.filter.autoBounds) {
			maxExtent = this.filter.boundsExtend;
		} else {
			this.filter.getBounds(this,bounds);
			if(bounds.xMin < total.xMin) {
				total.xMin = bounds.xMin;
			}
			if(bounds.xMax > total.xMax) {
				total.xMax = bounds.xMax;
			}
			if(bounds.yMin < total.yMin) {
				total.yMin = bounds.yMin;
			}
			if(bounds.yMax > total.yMax) {
				total.yMax = bounds.yMax;
			}
		}
		if(maxExtent >= 0) {
			this.getBounds(this,bounds);
			bounds.xMin -= maxExtent;
			bounds.yMin -= maxExtent;
			bounds.xMax += maxExtent;
			bounds.yMax += maxExtent;
			if(bounds.xMin < total.xMin) {
				total.xMin = bounds.xMin;
			}
			if(bounds.xMax > total.xMax) {
				total.xMax = bounds.xMax;
			}
			if(bounds.yMin < total.yMin) {
				total.yMin = bounds.yMin;
			}
			if(bounds.yMax > total.yMax) {
				total.yMax = bounds.yMax;
			}
		}
		this.clipBounds(ctx,total);
		var xMin = Math.floor(total.xMin + 1e-10);
		var yMin = Math.floor(total.yMin + 1e-10);
		var width = Math.ceil(total.xMax - xMin - 1e-10);
		var height = Math.ceil(total.yMax - yMin - 1e-10);
		if(width <= 0 || height <= 0 || total.xMax < total.xMin) {
			ctx.popFilter();
			return;
		}
		var t = ctx.textures.allocTarget("filterTemp",width,height,false);
		ctx.pushTarget(t,xMin,yMin,width,height);
		ctx.engine.clear(0);
		var oldAlpha = ctx.globalAlpha;
		var shader = ctx.baseShader;
		var _this = shader.filterMatrixA__;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var w = _this.w;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var oldA_x = x;
		var oldA_y = y;
		var oldA_z = z;
		var oldA_w = w;
		var _this = shader.filterMatrixB__;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var w = _this.w;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var oldB_x = x;
		var oldB_y = y;
		var oldB_z = z;
		var oldB_w = w;
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var invA = this.matD * invDet;
		var invB = -this.matB * invDet;
		var invC = -this.matC * invDet;
		var invD = this.matA * invDet;
		var invX = -(this.absX * invA + this.absY * invC);
		var invY = -(this.absX * invB + this.absY * invD);
		var _this = shader.filterMatrixA__;
		var x = invA;
		var y = invC;
		var z = invX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = shader.filterMatrixB__;
		var x = invB;
		var y = invD;
		var z = invY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		ctx.globalAlpha = 1;
		this.drawContent(ctx);
		var finalTile = h2d_Tile.fromTexture(t);
		finalTile.dx = xMin;
		finalTile.dy = yMin;
		var prev = finalTile;
		finalTile = this.filter.draw(ctx,finalTile);
		if(finalTile != prev && finalTile != null) {
			finalTile.dx += xMin;
			finalTile.dy += yMin;
		}
		var _this = shader.filterMatrixA__;
		_this.x = oldA_x;
		_this.y = oldA_y;
		_this.z = oldA_z;
		_this.w = oldA_w;
		var _this = shader.filterMatrixB__;
		_this.x = oldB_x;
		_this.y = oldB_y;
		_this.z = oldB_z;
		_this.w = oldB_w;
		ctx.popTarget();
		ctx.popFilter();
		ctx.globalAlpha = oldAlpha;
		if(finalTile == null) {
			return;
		}
		this.drawFiltered(ctx,finalTile);
	}
	,drawFiltered: function(ctx,tile) {
		var oldAlpha = ctx.globalAlpha;
		ctx.currentBlend = null;
		ctx.inFilterBlend = this.blendMode;
		ctx.globalAlpha *= this.alpha;
		this.emitTile(ctx,tile);
		ctx.globalAlpha = oldAlpha;
		ctx.inFilterBlend = null;
		ctx.currentBlend = null;
	}
	,drawRec: function(ctx) {
		if(!this.visible) {
			return;
		}
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		if(this.filter != null && this.filter.get_enable()) {
			this.drawFilters(ctx);
		} else {
			var old = ctx.globalAlpha;
			ctx.globalAlpha *= this.alpha;
			this.drawContent(ctx);
			ctx.globalAlpha = old;
		}
	}
	,drawContent: function(ctx) {
		if(ctx.front2back) {
			var i = this.children.length;
			while(i-- > 0) this.children[i].drawRec(ctx);
			this.draw(ctx);
		} else {
			this.draw(ctx);
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.drawRec(ctx);
			}
		}
	}
	,getChildIndex: function(o) {
		var _g = 0;
		var _g1 = this.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.children[i] == o) {
				return i;
			}
		}
		return -1;
	}
	,contentChanged: function(s) {
	}
	,constraintSize: function(maxWidth,maxHeight) {
	}
	,__class__: h2d_Object
};
var h2d_Drawable = function(parent) {
	h2d_Object.call(this,parent);
	this.color = new h3d_Vector(1,1,1,1);
};
$hxClasses["h2d.Drawable"] = h2d_Drawable;
h2d_Drawable.__name__ = "h2d.Drawable";
h2d_Drawable.__super__ = h2d_Object;
h2d_Drawable.prototype = $extend(h2d_Object.prototype,{
	get_colorAdd: function() {
		var s = this.getShader(h3d_shader_ColorAdd);
		if(s == null) {
			return null;
		} else {
			return s.color__;
		}
	}
	,set_colorAdd: function(c) {
		var s = this.getShader(h3d_shader_ColorAdd);
		if(s == null) {
			if(c != null) {
				s = this.addShader(new h3d_shader_ColorAdd());
				s.color__ = c;
			}
		} else if(c == null) {
			this.removeShader(s);
		} else {
			s.color__ = c;
		}
		return c;
	}
	,drawFiltered: function(ctx,tile) {
		var old = this.shaders;
		this.shaders = null;
		h2d_Object.prototype.drawFiltered.call(this,ctx,tile);
		this.shaders = old;
	}
	,set_colorMatrix: function(m) {
		var s = this.getShader(h3d_shader_ColorMatrix);
		if(s == null) {
			if(m != null) {
				s = this.addShader(new h3d_shader_ColorMatrix());
				s.matrix__ = m;
			}
		} else if(m == null) {
			this.removeShader(s);
		} else {
			s.matrix__ = m;
		}
		return m;
	}
	,getShader: function(stype) {
		if(this.shaders != null) {
			var _g_l = this.shaders;
			var _g_last = null;
			while(_g_l != _g_last) {
				var s = _g_l.s;
				_g_l = _g_l.next;
				var s1 = s;
				var s2 = js_Boot.__downcastCheck(s1,stype) ? s1 : null;
				if(s2 != null) {
					return s2;
				}
			}
		}
		return null;
	}
	,addShader: function(s) {
		if(s == null) {
			throw haxe_Exception.thrown("Can't add null shader");
		}
		this.shaders = hxsl_ShaderList.addSort(s,this.shaders);
		return s;
	}
	,removeShader: function(s) {
		var prev = null;
		var cur = this.shaders;
		while(cur != null) {
			if(cur.s == s) {
				if(prev == null) {
					this.shaders = cur.next;
				} else {
					prev.next = cur.next;
				}
				return true;
			}
			prev = cur;
			cur = cur.next;
		}
		return false;
	}
	,emitTile: function(ctx,tile) {
		if(tile == null) {
			tile = new h2d_Tile(null,0,0,5,5);
		}
		if(!ctx.drawTile(this,tile)) {
			return;
		}
	}
	,__class__: h2d_Drawable
});
var dn_heaps_slib_SpriteInterface = function() { };
$hxClasses["dn.heaps.slib.SpriteInterface"] = dn_heaps_slib_SpriteInterface;
dn_heaps_slib_SpriteInterface.__name__ = "dn.heaps.slib.SpriteInterface";
dn_heaps_slib_SpriteInterface.__isInterface__ = true;
dn_heaps_slib_SpriteInterface.prototype = {
	__class__: dn_heaps_slib_SpriteInterface
};
var dn_heaps_slib_HSprite = function(l,g,f,parent) {
	if(f == null) {
		f = 0;
	}
	h2d_Drawable.call(this,parent);
	this.destroyed = false;
	this.pivot = new dn_heaps_slib_SpritePivot();
	this.lastPage = -1;
	if(l != null) {
		var frame = f;
		if(frame == null) {
			frame = 0;
		}
		if(l != null) {
			if(l.pages == null || l.pages.length == 0) {
				throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
			}
			if(g == null) {
				this.groupName = null;
				this.group = null;
				this.frameData = null;
			}
			if(this.allocated && this.lib != null) {
				this.lib.removeChild(this);
			}
			this.lib = l;
			if(this.allocated) {
				this.lib.addChild(this);
			}
			if(this.pivot.isUndefined) {
				var xRatio = this.lib.defaultCenterX;
				var yRatio = this.lib.defaultCenterY;
				if(yRatio == null) {
					yRatio = 0.5;
				}
				if(xRatio == null) {
					xRatio = 0.5;
				}
				var _this = this.pivot;
				_this.centerFactorX = xRatio;
				_this.centerFactorY = yRatio;
				_this.usingFactor = true;
				_this.isUndefined = false;
			}
		}
		if(g != null && g != this.groupName) {
			this.groupName = g;
		}
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var _this = this.lib;
			var k = this.groupName;
			this.group = k == null ? _this.currentGroup : _this.groups.h[k];
			var _this = this.lib;
			var k = this.groupName;
			var frame1 = frame;
			if(frame1 == null) {
				frame1 = 0;
			}
			var g = k == null ? _this.currentGroup : _this.groups.h[k];
			this.frameData = g == null ? null : g.frames[frame1];
			if(this.frameData == null) {
				throw haxe_Exception.thrown("Unknown frame: " + this.groupName + "(" + frame + ")");
			}
			if(this.rawTile == null) {
				this.rawTile = this.lib.pages[this.frameData.page].clone();
			} else {
				this.rawTile.setTexture(this.lib.pages[this.frameData.page].innerTex);
			}
			this.lastPage = this.frameData.page;
			this.setFrame(frame);
		} else {
			this.setEmptyTexture();
		}
	} else {
		this.setEmptyTexture();
	}
};
$hxClasses["dn.heaps.slib.HSprite"] = dn_heaps_slib_HSprite;
dn_heaps_slib_HSprite.__name__ = "dn.heaps.slib.HSprite";
dn_heaps_slib_HSprite.__interfaces__ = [dn_heaps_slib_SpriteInterface];
dn_heaps_slib_HSprite.__super__ = h2d_Drawable;
dn_heaps_slib_HSprite.prototype = $extend(h2d_Drawable.prototype,{
	toString: function() {
		return "HSprite_" + this.groupName + "[" + this.frame + "]";
	}
	,get_anim: function() {
		if(this._animManager == null) {
			this._animManager = new dn_heaps_slib_AnimManager(this);
			if(this.onAnimManAlloc != null) {
				this.onAnimManAlloc(this._animManager);
			}
		}
		return this._animManager;
	}
	,setEmptyTexture: function() {
		this.rawTile = h2d_Tile.fromColor(8453888,4,4);
	}
	,set: function(l,g,frame,stopAllAnims) {
		if(stopAllAnims == null) {
			stopAllAnims = false;
		}
		if(frame == null) {
			frame = 0;
		}
		if(l != null) {
			if(l.pages == null || l.pages.length == 0) {
				throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
			}
			if(g == null) {
				this.groupName = null;
				this.group = null;
				this.frameData = null;
			}
			if(this.allocated && this.lib != null) {
				this.lib.removeChild(this);
			}
			this.lib = l;
			if(this.allocated) {
				this.lib.addChild(this);
			}
			if(this.pivot.isUndefined) {
				var xRatio = this.lib.defaultCenterX;
				var yRatio = this.lib.defaultCenterY;
				if(yRatio == null) {
					yRatio = 0.5;
				}
				if(xRatio == null) {
					xRatio = 0.5;
				}
				var _this = this.pivot;
				_this.centerFactorX = xRatio;
				_this.centerFactorY = yRatio;
				_this.usingFactor = true;
				_this.isUndefined = false;
			}
		}
		if(g != null && g != this.groupName) {
			this.groupName = g;
		}
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			if(stopAllAnims && this._animManager != null) {
				if(this._animManager == null) {
					this._animManager = new dn_heaps_slib_AnimManager(this);
					if(this.onAnimManAlloc != null) {
						this.onAnimManAlloc(this._animManager);
					}
				}
				this._animManager.stopWithoutStateAnims();
			}
			var _this = this.lib;
			var k = this.groupName;
			this.group = k == null ? _this.currentGroup : _this.groups.h[k];
			var _this = this.lib;
			var k = this.groupName;
			var frame1 = frame;
			if(frame1 == null) {
				frame1 = 0;
			}
			var g = k == null ? _this.currentGroup : _this.groups.h[k];
			this.frameData = g == null ? null : g.frames[frame1];
			if(this.frameData == null) {
				throw haxe_Exception.thrown("Unknown frame: " + this.groupName + "(" + frame + ")");
			}
			if(this.rawTile == null) {
				this.rawTile = this.lib.pages[this.frameData.page].clone();
			} else {
				this.rawTile.setTexture(this.lib.pages[this.frameData.page].innerTex);
			}
			this.lastPage = this.frameData.page;
			this.setFrame(frame);
		} else {
			this.setEmptyTexture();
		}
	}
	,setFrame: function(f) {
		var old = this.frame;
		this.frame = f;
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var prev = this.frameData;
			var _this = this.lib;
			var k = this.groupName;
			var frame = this.frame;
			if(frame == null) {
				frame = 0;
			}
			var g = k == null ? _this.currentGroup : _this.groups.h[k];
			this.frameData = g == null ? null : g.frames[frame];
			if(this.frameData == null) {
				throw haxe_Exception.thrown("Unknown frame: " + this.groupName + "(" + this.frame + ")");
			}
			if(this.lastFrame != this.frameData.page) {
				this.rawTile.setTexture(this.lib.pages[this.frameData.page].innerTex);
				this.lastPage = this.frameData.page;
			}
			if(this.onFrameChange != null) {
				this.onFrameChange();
			}
		}
	}
	,onAdd: function() {
		h2d_Drawable.prototype.onAdd.call(this);
		this.destroyed = false;
		if(this.lib != null) {
			this.lib.addChild(this);
		}
	}
	,onRemove: function() {
		h2d_Drawable.prototype.onRemove.call(this);
		this.destroyed = true;
		if(this.lib != null) {
			this.lib.removeChild(this);
		}
		if(this._animManager != null) {
			this._animManager.destroy();
			this._animManager = null;
		}
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var fd = this.frameData;
			this.rawTile.setPosition(fd.x,fd.y);
			this.rawTile.setSize(fd.wid,fd.hei);
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX + fd.realX | 0);
				this.rawTile.dy = -(this.pivot.coordY + fd.realY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(fd.realWid * this.pivot.centerFactorX + fd.realX | 0);
					this.rawTile.dy = -(fd.realHei * this.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX | 0);
				this.rawTile.dy = -(this.pivot.coordY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(this.rawTile.width * this.pivot.centerFactorX | 0);
					this.rawTile.dy = -(this.rawTile.height * this.pivot.centerFactorY | 0);
				}
			}
		}
		var tmp = this.rawTile.dx;
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var fd = this.frameData;
			this.rawTile.setPosition(fd.x,fd.y);
			this.rawTile.setSize(fd.wid,fd.hei);
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX + fd.realX | 0);
				this.rawTile.dy = -(this.pivot.coordY + fd.realY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(fd.realWid * this.pivot.centerFactorX + fd.realX | 0);
					this.rawTile.dy = -(fd.realHei * this.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX | 0);
				this.rawTile.dy = -(this.pivot.coordY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(this.rawTile.width * this.pivot.centerFactorX | 0);
					this.rawTile.dy = -(this.rawTile.height * this.pivot.centerFactorY | 0);
				}
			}
		}
		var tmp1 = this.rawTile.dy;
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var fd = this.frameData;
			this.rawTile.setPosition(fd.x,fd.y);
			this.rawTile.setSize(fd.wid,fd.hei);
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX + fd.realX | 0);
				this.rawTile.dy = -(this.pivot.coordY + fd.realY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(fd.realWid * this.pivot.centerFactorX + fd.realX | 0);
					this.rawTile.dy = -(fd.realHei * this.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX | 0);
				this.rawTile.dy = -(this.pivot.coordY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(this.rawTile.width * this.pivot.centerFactorX | 0);
					this.rawTile.dy = -(this.rawTile.height * this.pivot.centerFactorY | 0);
				}
			}
		}
		var tmp2 = this.rawTile.width;
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var fd = this.frameData;
			this.rawTile.setPosition(fd.x,fd.y);
			this.rawTile.setSize(fd.wid,fd.hei);
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX + fd.realX | 0);
				this.rawTile.dy = -(this.pivot.coordY + fd.realY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(fd.realWid * this.pivot.centerFactorX + fd.realX | 0);
					this.rawTile.dy = -(fd.realHei * this.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX | 0);
				this.rawTile.dy = -(this.pivot.coordY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(this.rawTile.width * this.pivot.centerFactorX | 0);
					this.rawTile.dy = -(this.rawTile.height * this.pivot.centerFactorY | 0);
				}
			}
		}
		this.addBounds(relativeTo,out,tmp,tmp1,tmp2,this.rawTile.height);
	}
	,draw: function(ctx) {
		if(!this.destroyed && this.lib != null && this.groupName != null) {
			var fd = this.frameData;
			this.rawTile.setPosition(fd.x,fd.y);
			this.rawTile.setSize(fd.wid,fd.hei);
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX + fd.realX | 0);
				this.rawTile.dy = -(this.pivot.coordY + fd.realY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(fd.realWid * this.pivot.centerFactorX + fd.realX | 0);
					this.rawTile.dy = -(fd.realHei * this.pivot.centerFactorY + fd.realY | 0);
				}
			}
		} else {
			var _this = this.pivot;
			if(!_this.isUndefined && !_this.usingFactor) {
				this.rawTile.dx = -(this.pivot.coordX | 0);
				this.rawTile.dy = -(this.pivot.coordY | 0);
			} else {
				var _this = this.pivot;
				if(!_this.isUndefined && _this.usingFactor) {
					this.rawTile.dx = -(this.rawTile.width * this.pivot.centerFactorX | 0);
					this.rawTile.dy = -(this.rawTile.height * this.pivot.centerFactorY | 0);
				}
			}
		}
		this.emitTile(ctx,this.rawTile);
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		if(this._animManager != null) {
			if(this._animManager == null) {
				this._animManager = new dn_heaps_slib_AnimManager(this);
				if(this.onAnimManAlloc != null) {
					this.onAnimManAlloc(this._animManager);
				}
			}
			var _this = this._animManager;
			if(_this.needUpdates) {
				_this._update(this.lib != null ? this.lib.tmod : 1);
			}
		}
	}
	,__class__: dn_heaps_slib_HSprite
});
var h2d_SpriteBatch = function(t,parent) {
	h2d_Drawable.call(this,parent);
	this.tile = t;
	this.state = new h2d_impl_BatchDrawState();
};
$hxClasses["h2d.SpriteBatch"] = h2d_SpriteBatch;
h2d_SpriteBatch.__name__ = "h2d.SpriteBatch";
h2d_SpriteBatch.__super__ = h2d_Drawable;
h2d_SpriteBatch.prototype = $extend(h2d_Drawable.prototype,{
	add: function(e,before) {
		if(before == null) {
			before = false;
		}
		e.batch = this;
		if(this.first == null) {
			this.first = this.last = e;
			e.prev = e.next = null;
		} else if(before) {
			e.prev = null;
			e.next = this.first;
			this.first.prev = e;
			this.first = e;
		} else {
			this.last.next = e;
			e.prev = this.last;
			e.next = null;
			this.last = e;
		}
		return e;
	}
	,'delete': function(e) {
		if(e.prev == null) {
			if(this.first == e) {
				this.first = e.next;
			}
		} else {
			e.prev.next = e.next;
		}
		if(e.next == null) {
			if(this.last == e) {
				this.last = e.prev;
			}
		} else {
			e.next.prev = e.prev;
		}
		e.batch = null;
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		if(this.hasUpdate) {
			var e = this.first;
			while(e != null) {
				if(!e.update(ctx.elapsedTime)) {
					e.remove();
				}
				e = e.next;
			}
		}
		this.flush();
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		var e = this.first;
		while(e != null) {
			var t = e.t;
			if(this.hasRotationScale) {
				var ca = Math.cos(e.rotation);
				var sa = Math.sin(e.rotation);
				var hx = t.width;
				var hy = t.height;
				var px = t.dx * e.scaleX;
				var py = t.dy * e.scaleY;
				var x = px * ca - py * sa + e.x;
				var y = py * ca + px * sa + e.y;
				this.addBounds(relativeTo,out,x,y,1e-10,1e-10);
				var px1 = (t.dx + hx) * e.scaleX;
				var py1 = t.dy * e.scaleY;
				x = px1 * ca - py1 * sa + e.x;
				y = py1 * ca + px1 * sa + e.y;
				this.addBounds(relativeTo,out,x,y,1e-10,1e-10);
				var px2 = t.dx * e.scaleX;
				var py2 = (t.dy + hy) * e.scaleY;
				x = px2 * ca - py2 * sa + e.x;
				y = py2 * ca + px2 * sa + e.y;
				this.addBounds(relativeTo,out,x,y,1e-10,1e-10);
				var px3 = (t.dx + hx) * e.scaleX;
				var py3 = (t.dy + hy) * e.scaleY;
				x = px3 * ca - py3 * sa + e.x;
				y = py3 * ca + px3 * sa + e.y;
				this.addBounds(relativeTo,out,x,y,1e-10,1e-10);
			} else {
				this.addBounds(relativeTo,out,e.x + t.dx,e.y + t.dy,t.width,t.height);
			}
			e = e.next;
		}
	}
	,flush: function() {
		if(this.first == null) {
			return;
		}
		if(this.tmpBuf == null) {
			var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
			this.tmpBuf = this1;
		}
		var pos = 0;
		var e = this.first;
		var tmp = this.tmpBuf;
		var bufferVertices = 0;
		this.state.clear();
		while(e != null) {
			if(!e.visible) {
				e = e.next;
				continue;
			}
			var t = e.t;
			if(t != null) {
				this.state.setTexture(t.innerTex);
			}
			var _this = this.state;
			_this.tail.count += 4;
			_this.totalCount += 4;
			var _g = tmp.pos;
			var _g1 = pos + 32;
			while(_g < _g1) {
				var i = _g++;
				if(tmp.pos == tmp.array.length) {
					var newSize = tmp.array.length << 1;
					if(newSize < 128) {
						newSize = 128;
					}
					var newArray = new Float32Array(newSize);
					newArray.set(tmp.array);
					tmp.array = newArray;
				}
				tmp.array[tmp.pos++] = 0.;
			}
			if(this.hasRotationScale) {
				var ca = Math.cos(e.rotation);
				var sa = Math.sin(e.rotation);
				var hx = t.width;
				var hy = t.height;
				var px = t.dx * e.scaleX;
				var py = t.dy * e.scaleY;
				tmp.array[pos++] = px * ca - py * sa + e.x;
				tmp.array[pos++] = py * ca + px * sa + e.y;
				tmp.array[pos++] = t.u;
				tmp.array[pos++] = t.v;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
				var px1 = (t.dx + hx) * e.scaleX;
				var py1 = t.dy * e.scaleY;
				tmp.array[pos++] = px1 * ca - py1 * sa + e.x;
				tmp.array[pos++] = py1 * ca + px1 * sa + e.y;
				tmp.array[pos++] = t.u2;
				tmp.array[pos++] = t.v;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
				var px2 = t.dx * e.scaleX;
				var py2 = (t.dy + hy) * e.scaleY;
				tmp.array[pos++] = px2 * ca - py2 * sa + e.x;
				tmp.array[pos++] = py2 * ca + px2 * sa + e.y;
				tmp.array[pos++] = t.u;
				tmp.array[pos++] = t.v2;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
				var px3 = (t.dx + hx) * e.scaleX;
				var py3 = (t.dy + hy) * e.scaleY;
				tmp.array[pos++] = px3 * ca - py3 * sa + e.x;
				tmp.array[pos++] = py3 * ca + px3 * sa + e.y;
				tmp.array[pos++] = t.u2;
				tmp.array[pos++] = t.v2;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
			} else {
				var sx = e.x + t.dx;
				var sy = e.y + t.dy;
				tmp.array[pos++] = sx;
				tmp.array[pos++] = sy;
				tmp.array[pos++] = t.u;
				tmp.array[pos++] = t.v;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
				tmp.array[pos++] = sx + t.width + 0.1;
				tmp.array[pos++] = sy;
				tmp.array[pos++] = t.u2;
				tmp.array[pos++] = t.v;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
				tmp.array[pos++] = sx;
				tmp.array[pos++] = sy + t.height + 0.1;
				tmp.array[pos++] = t.u;
				tmp.array[pos++] = t.v2;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
				tmp.array[pos++] = sx + t.width + 0.1;
				tmp.array[pos++] = sy + t.height + 0.1;
				tmp.array[pos++] = t.u2;
				tmp.array[pos++] = t.v2;
				tmp.array[pos++] = e.r;
				tmp.array[pos++] = e.g;
				tmp.array[pos++] = e.b;
				tmp.array[pos++] = e.a;
			}
			e = e.next;
		}
		bufferVertices = pos >> 3;
		if(this.buffer != null && !this.buffer.isDisposed()) {
			if(this.buffer.vertices >= bufferVertices) {
				this.buffer.uploadVector(this.tmpBuf,0,bufferVertices);
				return;
			}
			this.buffer.dispose();
			this.buffer = null;
		}
		this.empty = bufferVertices == 0;
		if(bufferVertices > 0) {
			this.buffer = h3d_Buffer.ofSubFloats(this.tmpBuf,8,bufferVertices,[h3d_BufferFlag.Dynamic,h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat]);
		}
	}
	,draw: function(ctx) {
		this.drawWith(ctx,this);
	}
	,drawWith: function(ctx,obj) {
		if(this.first == null || this.buffer == null || this.buffer.isDisposed() || this.empty) {
			return;
		}
		if(!ctx.beginDrawBatchState(obj)) {
			return;
		}
		var engine = ctx.engine;
		this.state.drawQuads(ctx,this.buffer);
	}
	,onRemove: function() {
		h2d_Drawable.prototype.onRemove.call(this);
		if(this.buffer != null) {
			this.buffer.dispose();
			this.buffer = null;
		}
		this.state.clear();
	}
	,__class__: h2d_SpriteBatch
});
var dn_heaps_slib_FrameData = function(page,x,y,wid,hei,realX,realY,realWid,realHei,tile) {
	this.page = page;
	this.x = x;
	this.y = y;
	this.wid = wid;
	this.hei = hei;
	this.realX = realX;
	this.realY = realY;
	this.realWid = realWid;
	this.realHei = realHei;
	this.tile = tile;
};
$hxClasses["dn.heaps.slib.FrameData"] = dn_heaps_slib_FrameData;
dn_heaps_slib_FrameData.__name__ = "dn.heaps.slib.FrameData";
dn_heaps_slib_FrameData.prototype = {
	__class__: dn_heaps_slib_FrameData
};
var dn_heaps_slib_LibGroup = function(id,maxWid,maxHei,frames,anim) {
	this.id = id;
	this.maxWid = maxWid;
	this.maxHei = maxHei;
	this.frames = frames;
	this.anim = anim;
};
$hxClasses["dn.heaps.slib.LibGroup"] = dn_heaps_slib_LibGroup;
dn_heaps_slib_LibGroup.__name__ = "dn.heaps.slib.LibGroup";
dn_heaps_slib_LibGroup.prototype = {
	__class__: dn_heaps_slib_LibGroup
};
var dn_heaps_slib_SLBError = $hxEnums["dn.heaps.slib.SLBError"] = { __ename__ : true, __constructs__ : ["NoGroupSelected","GroupAlreadyExists","InvalidFrameDuration","EndFrameLower","InvalidFrames","NoCurrentGroup","AnimFrameExceeds","AssetImportFailed","NotSameSLBFromBatch"]
	,NoGroupSelected: {_hx_index:0,__enum__:"dn.heaps.slib.SLBError",toString:$estr}
	,GroupAlreadyExists: ($_=function(g) { return {_hx_index:1,g:g,__enum__:"dn.heaps.slib.SLBError",toString:$estr}; },$_.__params__ = ["g"],$_)
	,InvalidFrameDuration: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"dn.heaps.slib.SLBError",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EndFrameLower: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"dn.heaps.slib.SLBError",toString:$estr}; },$_.__params__ = ["s"],$_)
	,InvalidFrames: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"dn.heaps.slib.SLBError",toString:$estr}; },$_.__params__ = ["s"],$_)
	,NoCurrentGroup: {_hx_index:5,__enum__:"dn.heaps.slib.SLBError",toString:$estr}
	,AnimFrameExceeds: ($_=function(id,anim,frame) { return {_hx_index:6,id:id,anim:anim,frame:frame,__enum__:"dn.heaps.slib.SLBError",toString:$estr}; },$_.__params__ = ["id","anim","frame"],$_)
	,AssetImportFailed: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"dn.heaps.slib.SLBError",toString:$estr}; },$_.__params__ = ["e"],$_)
	,NotSameSLBFromBatch: {_hx_index:8,__enum__:"dn.heaps.slib.SLBError",toString:$estr}
};
dn_heaps_slib_SLBError.__empty_constructs__ = [dn_heaps_slib_SLBError.NoGroupSelected,dn_heaps_slib_SLBError.NoCurrentGroup,dn_heaps_slib_SLBError.NotSameSLBFromBatch];
var dn_heaps_slib_SpriteLib = function(pages,normalPages) {
	this.tmod = 1.0;
	this.groups = new haxe_ds_StringMap();
	this.defaultCenterX = 0;
	this.defaultCenterY = 0;
	this.gridX = this.gridY = 16;
	this.children = [];
	this.pages = pages;
	this.normalPages = normalPages;
};
$hxClasses["dn.heaps.slib.SpriteLib"] = dn_heaps_slib_SpriteLib;
dn_heaps_slib_SpriteLib.__name__ = "dn.heaps.slib.SpriteLib";
dn_heaps_slib_SpriteLib.prototype = {
	createGroup: function(k) {
		if(Object.prototype.hasOwnProperty.call(this.groups.h,k)) {
			throw haxe_Exception.thrown(dn_heaps_slib_SLBError.GroupAlreadyExists(k));
		}
		var this1 = this.groups;
		var value = new dn_heaps_slib_LibGroup(k,0,0,[],[]);
		this1.h[k] = value;
		this.currentGroup = k == null ? this.currentGroup : this.groups.h[k];
		var k = null;
		if(k == null) {
			return this.currentGroup;
		} else {
			return this.groups.h[k];
		}
	}
	,sliceCustom: function(groupName,page,frame,x,y,wid,hei,realX,realY,realWid,realHei) {
		var g = groupName != null && Object.prototype.hasOwnProperty.call(this.groups.h,groupName) && this.groups.h[groupName].frames.length > 0 ? groupName == null ? this.currentGroup : this.groups.h[groupName] : this.createGroup(groupName);
		var x1 = g.maxWid;
		g.maxWid = x1 > wid ? x1 : wid;
		var x1 = g.maxHei;
		g.maxHei = x1 > hei ? x1 : hei;
		var fd = new dn_heaps_slib_FrameData(page,x,y,wid,hei,realX,realY,realWid,realHei,null);
		g.frames[frame] = fd;
		return fd;
	}
	,resliceCustom: function(groupName,frame,fd) {
		var g = groupName != null && Object.prototype.hasOwnProperty.call(this.groups.h,groupName) && this.groups.h[groupName].frames.length > 0 ? groupName == null ? this.currentGroup : this.groups.h[groupName] : this.createGroup(groupName);
		var x = g.maxWid;
		var y = fd.wid;
		g.maxWid = x > y ? x : y;
		var x = g.maxHei;
		var y = fd.hei;
		g.maxHei = x > y ? x : y;
		g.frames[frame] = fd;
		return fd;
	}
	,toString: function() {
		var l = [];
		var k = haxe_ds_StringMap.keysIterator(this.groups.h);
		while(k.hasNext()) {
			var k1 = k.next();
			var g = k1 == null ? this.currentGroup : this.groups.h[k1];
			l.push(k1 + " (" + g.maxWid + "x" + g.maxHei + ")" + (g.frames.length > 1 ? " " + g.frames.length + "f" : "") + (g.anim.length > 1 ? " animated(" + g.anim.length + "f)" : ""));
		}
		l.sort(function(a,b) {
			return Reflect.compare(a,b);
		});
		return "| " + l.join("\n| ");
	}
	,addChild: function(s) {
		this.children.push(s);
	}
	,removeChild: function(s) {
		HxOverrides.remove(this.children,s);
	}
	,getTile: function(g,frame,px,py) {
		if(py == null) {
			py = 0.0;
		}
		if(px == null) {
			px = 0.0;
		}
		if(frame == null) {
			frame = 0;
		}
		var frame1 = frame;
		if(frame1 == null) {
			frame1 = 0;
		}
		var g1 = g == null ? this.currentGroup : this.groups.h[g];
		var fd = g1 == null ? null : g1.frames[frame1];
		if(fd == null) {
			throw haxe_Exception.thrown("Unknown group " + g + "#" + frame + "!");
		}
		var t = this.pages[fd.page].clone();
		return this.updTile(t,g,frame,px,py);
	}
	,updTile: function(t,g,frame,px,py) {
		if(py == null) {
			py = 0.0;
		}
		if(px == null) {
			px = 0.0;
		}
		if(frame == null) {
			frame = 0;
		}
		var frame1 = frame;
		if(frame1 == null) {
			frame1 = 0;
		}
		var g1 = g == null ? this.currentGroup : this.groups.h[g];
		var fd = g1 == null ? null : g1.frames[frame1];
		if(fd == null) {
			throw haxe_Exception.thrown("Unknown group " + g + "#" + frame + "!");
		}
		t.setPosition(fd.x,fd.y);
		t.setSize(fd.wid,fd.hei);
		t.dx = -(fd.realWid * px + fd.realX | 0);
		t.dy = -(fd.realHei * py + fd.realY | 0);
		return t;
	}
	,getTileRandom: function(g,px,py,rndFunc) {
		if(py == null) {
			py = 0.0;
		}
		if(px == null) {
			px = 0.0;
		}
		if(!(g != null && Object.prototype.hasOwnProperty.call(this.groups.h,g) && this.groups.h[g].frames.length > 0)) {
			throw haxe_Exception.thrown("Unknown group " + g);
		}
		return this.getTile(g,(rndFunc == null ? Std.random : rndFunc)((g == null ? this.currentGroup : this.groups.h[g]).frames.length),px,py);
	}
	,__defineAnim: function(group,anim) {
		if(this.currentGroup == null && group == null) {
			throw haxe_Exception.thrown(dn_heaps_slib_SLBError.NoCurrentGroup);
		}
		if(group != null) {
			this.currentGroup = group == null ? this.currentGroup : this.groups.h[group];
			var k = null;
			var tmp = k == null;
		}
		var _g = 0;
		while(_g < anim.length) {
			var f = anim[_g];
			++_g;
			if(f >= this.currentGroup.frames.length) {
				throw haxe_Exception.thrown(dn_heaps_slib_SLBError.AnimFrameExceeds(this.currentGroup.id,"[" + anim.join(",") + "] " + this.currentGroup.frames.length,f));
			}
		}
		this.currentGroup.anim = anim;
	}
	,__class__: dn_heaps_slib_SpriteLib
};
var dn_heaps_slib_SpritePivot = function() {
	this.isUndefined = true;
};
$hxClasses["dn.heaps.slib.SpritePivot"] = dn_heaps_slib_SpritePivot;
dn_heaps_slib_SpritePivot.__name__ = "dn.heaps.slib.SpritePivot";
dn_heaps_slib_SpritePivot.prototype = {
	__class__: dn_heaps_slib_SpritePivot
};
var en_Bumper = function(e) {
	this.data = e;
	Entity.call(this,e.cx,e.cy);
	en_Bumper.ALL.push(this);
	var _this = this.spr;
	var l = null;
	if(l != null) {
		if(l.pages == null || l.pages.length == 0) {
			throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
		}
		if(_this.allocated && _this.lib != null) {
			_this.lib.removeChild(_this);
		}
		_this.lib = l;
		if(_this.allocated) {
			_this.lib.addChild(_this);
		}
		if(_this.pivot.isUndefined) {
			var xRatio = _this.lib.defaultCenterX;
			var yRatio = _this.lib.defaultCenterY;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this1 = _this.pivot;
			_this1.centerFactorX = xRatio;
			_this1.centerFactorY = yRatio;
			_this1.usingFactor = true;
			_this1.isUndefined = false;
		}
	}
	if("bumperOff" != _this.groupName) {
		_this.groupName = "bumperOff";
	}
	if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
		var _this1 = _this.lib;
		var k = _this.groupName;
		_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
		var _this1 = _this.lib;
		var k = _this.groupName;
		var frame = 0;
		if(frame == null) {
			frame = 0;
		}
		var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
		_this.frameData = g == null ? null : g.frames[frame];
		if(_this.frameData == null) {
			throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
		}
		if(_this.rawTile == null) {
			_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
		} else {
			_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
		}
		_this.lastPage = _this.frameData.page;
		_this.setFrame(0);
	} else {
		_this.setEmptyTexture();
	}
};
$hxClasses["en.Bumper"] = en_Bumper;
en_Bumper.__name__ = "en.Bumper";
en_Bumper.__super__ = Entity;
en_Bumper.prototype = $extend(Entity.prototype,{
	dispose: function() {
		Entity.prototype.dispose.call(this);
		HxOverrides.remove(en_Bumper.ALL,this);
	}
	,onUse: function() {
		Game.ME.addSlowMo("bumper",0.6,0.66);
		var _this = this.cd;
		var frames = 0.5 * this.cd.baseFps;
		var allowLower = true;
		var onComplete = null;
		if(allowLower == null) {
			allowLower = true;
		}
		frames = Math.floor(frames * 1000) / 1000;
		var cur = _this._getCdObject(54525952);
		if(!(cur != null && frames < cur.frames && !allowLower)) {
			if(frames <= 0) {
				if(cur != null) {
					HxOverrides.remove(_this.cdList,cur);
					cur.frames = 0;
					cur.cb = null;
					_this.fastCheck.remove(cur.k);
				}
			} else {
				_this.fastCheck.h[54525952] = true;
				if(cur != null) {
					cur.frames = frames;
				} else {
					_this.cdList.push(new dn__$Cooldown_CdInst(54525952,frames));
				}
			}
			if(onComplete != null) {
				if(frames <= 0) {
					onComplete();
				} else {
					var cd = _this._getCdObject(54525952);
					if(cd == null) {
						throw haxe_Exception.thrown("cannot bind onComplete(" + 54525952 + "): cooldown " + 54525952 + " isn't running");
					}
					cd.cb = onComplete;
				}
			}
		}
		var _this = this.spr;
		var l = null;
		if(l != null) {
			if(l.pages == null || l.pages.length == 0) {
				throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
			}
			if(_this.allocated && _this.lib != null) {
				_this.lib.removeChild(_this);
			}
			_this.lib = l;
			if(_this.allocated) {
				_this.lib.addChild(_this);
			}
			if(_this.pivot.isUndefined) {
				var xRatio = _this.lib.defaultCenterX;
				var yRatio = _this.lib.defaultCenterY;
				if(yRatio == null) {
					yRatio = 0.5;
				}
				if(xRatio == null) {
					xRatio = 0.5;
				}
				var _this1 = _this.pivot;
				_this1.centerFactorX = xRatio;
				_this1.centerFactorY = yRatio;
				_this1.usingFactor = true;
				_this1.isUndefined = false;
			}
		}
		if("bumperOut" != _this.groupName) {
			_this.groupName = "bumperOut";
		}
		if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
			var _this1 = _this.lib;
			var k = _this.groupName;
			_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
			var _this1 = _this.lib;
			var k = _this.groupName;
			var frame = 0;
			if(frame == null) {
				frame = 0;
			}
			var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
			_this.frameData = g == null ? null : g.frames[frame];
			if(_this.frameData == null) {
				throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
			}
			if(_this.rawTile == null) {
				_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
			} else {
				_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
			}
			_this.lastPage = _this.frameData.page;
			_this.setFrame(0);
		} else {
			_this.setEmptyTexture();
		}
		this.setSquashX(0.5);
		Game.ME.fx.bumper((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID);
	}
	,update: function() {
		Entity.prototype.update.call(this);
		if(!this.cd.fastCheck.h.hasOwnProperty(54525952) && this.spr.groupName == "bumperOut") {
			var _this = this.spr;
			var l = null;
			if(l != null) {
				if(l.pages == null || l.pages.length == 0) {
					throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
				}
				if(_this.allocated && _this.lib != null) {
					_this.lib.removeChild(_this);
				}
				_this.lib = l;
				if(_this.allocated) {
					_this.lib.addChild(_this);
				}
				if(_this.pivot.isUndefined) {
					var xRatio = _this.lib.defaultCenterX;
					var yRatio = _this.lib.defaultCenterY;
					if(yRatio == null) {
						yRatio = 0.5;
					}
					if(xRatio == null) {
						xRatio = 0.5;
					}
					var _this1 = _this.pivot;
					_this1.centerFactorX = xRatio;
					_this1.centerFactorY = yRatio;
					_this1.usingFactor = true;
					_this1.isUndefined = false;
				}
			}
			if("bumperOff" != _this.groupName) {
				_this.groupName = "bumperOff";
			}
			if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
				var _this1 = _this.lib;
				var k = _this.groupName;
				_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
				var _this1 = _this.lib;
				var k = _this.groupName;
				var frame = 0;
				if(frame == null) {
					frame = 0;
				}
				var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
				_this.frameData = g == null ? null : g.frames[frame];
				if(_this.frameData == null) {
					throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
				}
				if(_this.rawTile == null) {
					_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
				} else {
					_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
				}
				_this.lastPage = _this.frameData.page;
				_this.setFrame(0);
			} else {
				_this.setEmptyTexture();
			}
			this.setSquashY(0.5);
		}
	}
	,__class__: en_Bumper
});
var en_Cart = function() {
	Entity.call(this,Game.ME.hero.cx,Game.ME.hero.cy);
	this.frictX = this.frictY = 0.95;
	this.gravityMul = 0.33;
	this.hasCartoonDistorsion = false;
	this.link = new h2d_Graphics();
	Game.ME.scroller.addChildAt(this.link,Const.DP_UI);
	var frame = 0;
	var xr = 0.5;
	var yr = 0.5;
	var smooth = null;
	var p = null;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"wheelSmall",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.smallWheel = s;
	Game.ME.scroller.addChildAt(this.smallWheel,Const.DP_MAIN);
	var _this = this.spr;
	var l = null;
	if(l != null) {
		if(l.pages == null || l.pages.length == 0) {
			throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
		}
		if(_this.allocated && _this.lib != null) {
			_this.lib.removeChild(_this);
		}
		_this.lib = l;
		if(_this.allocated) {
			_this.lib.addChild(_this);
		}
		if(_this.pivot.isUndefined) {
			var xRatio = _this.lib.defaultCenterX;
			var yRatio = _this.lib.defaultCenterY;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this1 = _this.pivot;
			_this1.centerFactorX = xRatio;
			_this1.centerFactorY = yRatio;
			_this1.usingFactor = true;
			_this1.isUndefined = false;
		}
	}
	if("cart" != _this.groupName) {
		_this.groupName = "cart";
	}
	if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
		var _this1 = _this.lib;
		var k = _this.groupName;
		_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
		var _this1 = _this.lib;
		var k = _this.groupName;
		var frame = 0;
		if(frame == null) {
			frame = 0;
		}
		var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
		_this.frameData = g == null ? null : g.frames[frame];
		if(_this.frameData == null) {
			throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
		}
		if(_this.rawTile == null) {
			_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
		} else {
			_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
		}
		_this.lastPage = _this.frameData.page;
		_this.setFrame(0);
	} else {
		_this.setEmptyTexture();
	}
	var xRatio = 0.5;
	var yRatio = 0.5;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = this.spr.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	this.addToLayer(Const.DP_MAIN);
};
$hxClasses["en.Cart"] = en_Cart;
en_Cart.__name__ = "en.Cart";
en_Cart.__super__ = Entity;
en_Cart.prototype = $extend(Entity.prototype,{
	dispose: function() {
		Entity.prototype.dispose.call(this);
		var _this = this.smallWheel;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.link;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
	}
	,postUpdate: function() {
		Entity.prototype.postUpdate.call(this);
		var _g = this.spr;
		_g.posChanged = true;
		_g.y -= 5;
		var _this = this.smallWheel;
		_this.posChanged = true;
		_this.x = (this.cx + this.xr) * Const.GRID | 0;
		var _this = this.smallWheel;
		_this.posChanged = true;
		_this.y = (this.cy + this.yr) * Const.GRID - 4 | 0;
		var tmp;
		var tmp1;
		var _this = Game.ME.hero;
		var x = _this.dx + _this.bdx;
		if((x < 0 ? -x : x) >= 0.03 && this.yr >= 0.7) {
			var _this = Game.ME.level;
			var cx = this.cx;
			var cy = this.cy + 1;
			if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
				tmp1 = true;
			} else {
				var tmp2;
				var _this1 = _this.data.l_Collisions;
				if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
					var _this1 = _this.data.l_Collisions;
					tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
				} else {
					tmp2 = true;
				}
				if(!tmp2) {
					var _this1 = _this.data.l_Collisions;
					tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
				} else {
					tmp1 = true;
				}
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			var _this = this.cd;
			var frames = 0.3 * this.cd.baseFps;
			var tmp1;
			if(_this.fastCheck.h.hasOwnProperty(96468992)) {
				tmp1 = true;
			} else {
				var frames1 = frames;
				var onComplete = null;
				frames1 = Math.floor(frames1 * 1000) / 1000;
				var cur = _this._getCdObject(96468992);
				if(!(cur != null && frames1 < cur.frames && false)) {
					if(frames1 <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[96468992] = true;
						if(cur != null) {
							cur.frames = frames1;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(96468992,frames1));
						}
					}
					if(onComplete != null) {
						if(frames1 <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(96468992);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 96468992 + "): cooldown " + 96468992 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp) {
			var _this = this.cd;
			var _this1 = this.cd;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var frames = (sign ? (0.1 + Math.random() * 0.1) * (Std.random(2) * 2 - 1) : 0.1 + Math.random() * 0.1) * _this1.baseFps;
			var allowLower = true;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(100663296);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[100663296] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(100663296,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(100663296);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 100663296 + "): cooldown " + 100663296 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
		}
		if(this.cd.fastCheck.h.hasOwnProperty(100663296)) {
			var _g = this.spr;
			var v = _g.y - Math.sin((1 - this.cd._getRatio(100663296)) * 3.141592653589793) * 3.5;
			_g.posChanged = true;
			_g.y = v;
		}
		var x = this.dx + this.bdx;
		if((x < 0 ? -x : x) >= 0.03) {
			var _g = this.smallWheel;
			var _g1 = _g.y;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var v = sign ? Math.random() * (Std.random(2) * 2 - 1) : Math.random();
			_g.posChanged = true;
			_g.y = _g1 - v;
		}
		this.link.clear();
		this.link.lineStyle(2,6901817);
		var _this = Game.ME.hero;
		var fx = (_this.cx + _this.xr) * Const.GRID - Game.ME.hero.dir * 10;
		var _this = Game.ME.hero;
		var fy = (_this.cy + _this.yr) * Const.GRID - 7;
		var _this = this.link;
		_this.flush();
		_this.addVertex(fx,fy,_this.curR,_this.curG,_this.curB,_this.curA,fx * _this.ma + fy * _this.mc + _this.mx,fx * _this.mb + fy * _this.md + _this.my);
		var e = Game.ME.hero;
		var tx = (this.cx + this.xr) * Const.GRID + Math.cos(this.sprRotation) * 9 * ((e.cx + e.xr) * Const.GRID < (this.cx + this.xr) * Const.GRID ? -1 : 1);
		var ty = (this.cy + this.yr) * Const.GRID - 6;
		var e = Game.ME.hero;
		var ax = (this.cx + this.xr) * Const.GRID;
		var ay = (this.cy + this.yr) * Const.GRID;
		var bx = (e.cx + e.xr) * Const.GRID;
		var by = (e.cy + e.yr) * Const.GRID;
		var d = Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by));
		var e = Game.ME.hero;
		var ax = (this.cx + this.xr) * Const.GRID;
		var ay = (this.cy + this.yr) * Const.GRID;
		var bx = (e.cx + e.xr) * Const.GRID;
		var by = (e.cy + e.yr) * Const.GRID;
		var x = (Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) - 20) / 18;
		var tension = x < 0 ? 0 : x > 1 ? 1 : x;
		this.link.curveTo((fx + tx) * 0.5,(fy + ty) * 0.5 + 10 * (1 - tension),tx,ty);
	}
	,onHeroJump: function() {
		var _this = this.cd;
		var frames = 0.7 * this.cd.baseFps;
		var allowLower = true;
		var onComplete = null;
		if(allowLower == null) {
			allowLower = true;
		}
		frames = Math.floor(frames * 1000) / 1000;
		var cur = _this._getCdObject(62914560);
		if(!(cur != null && frames < cur.frames && !allowLower)) {
			if(frames <= 0) {
				if(cur != null) {
					HxOverrides.remove(_this.cdList,cur);
					cur.frames = 0;
					cur.cb = null;
					_this.fastCheck.remove(cur.k);
				}
			} else {
				_this.fastCheck.h[62914560] = true;
				if(cur != null) {
					cur.frames = frames;
				} else {
					_this.cdList.push(new dn__$Cooldown_CdInst(62914560,frames));
				}
			}
			if(onComplete != null) {
				if(frames <= 0) {
					onComplete();
				} else {
					var cd = _this._getCdObject(62914560);
					if(cd == null) {
						throw haxe_Exception.thrown("cannot bind onComplete(" + 62914560 + "): cooldown " + 62914560 + " isn't running");
					}
					cd.cb = onComplete;
				}
			}
		}
	}
	,update: function() {
		var _gthis = this;
		var _this = Game.ME.level;
		var cx = this.cx;
		var cy = this.cy;
		var cartDist;
		if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
			cartDist = true;
		} else {
			var cartDist1;
			var _this1 = _this.data.l_Collisions;
			if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
				var _this1 = _this.data.l_Collisions;
				cartDist1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
			} else {
				cartDist1 = true;
			}
			if(!cartDist1) {
				var _this1 = _this.data.l_Collisions;
				cartDist = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
			} else {
				cartDist = true;
			}
		}
		var cartDist1 = 20 * (cartDist ? 0.33 : 1);
		var _this = Game.ME.hero;
		var tx = (_this.cx + _this.xr) * Const.GRID - Game.ME.hero.dir * cartDist1;
		var _this = Game.ME.hero;
		var ty = (_this.cy + _this.yr) * Const.GRID - 3;
		var tmp;
		var _this = Game.ME.level;
		var cx = this.cx;
		var cy = this.cy;
		var tmp1;
		if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
			tmp1 = true;
		} else {
			var tmp2;
			var _this1 = _this.data.l_Collisions;
			if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
				var _this1 = _this.data.l_Collisions;
				tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				var _this1 = _this.data.l_Collisions;
				tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
			} else {
				tmp1 = true;
			}
		}
		if(tmp1) {
			var _this = Game.ME.level;
			var cx = this.cx;
			var cy = this.cy - 1;
			var tmp1;
			if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
				tmp1 = true;
			} else {
				var tmp2;
				var _this1 = _this.data.l_Collisions;
				if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
					var _this1 = _this.data.l_Collisions;
					tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
				} else {
					tmp2 = true;
				}
				if(!tmp2) {
					var _this1 = _this.data.l_Collisions;
					tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
				} else {
					tmp1 = true;
				}
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp) {
			ty = this.cy * Const.GRID;
		}
		var a = Math.atan2(ty - (this.cy + this.yr) * Const.GRID,tx - (this.cx + this.xr) * Const.GRID);
		var ax = (this.cx + this.xr) * Const.GRID;
		var ay = (this.cy + this.yr) * Const.GRID;
		var d = Math.sqrt((ax - tx) * (ax - tx) + (ay - ty) * (ay - ty));
		var needRecal;
		if(!(d > Const.GRID * 1.2)) {
			var _this = Game.ME.level;
			var cx = this.cx;
			var cy = this.cy;
			if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
				needRecal = true;
			} else {
				var needRecal1;
				var _this1 = _this.data.l_Collisions;
				if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
					var _this1 = _this.data.l_Collisions;
					needRecal1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
				} else {
					needRecal1 = true;
				}
				if(!needRecal1) {
					var _this1 = _this.data.l_Collisions;
					needRecal = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
				} else {
					needRecal = true;
				}
			}
		} else {
			needRecal = true;
		}
		var spd = needRecal ? 0.024 : 0.013;
		var tmp;
		if(this.cd.fastCheck.h.hasOwnProperty(62914560)) {
			tmp = 0.4;
		} else if(needRecal) {
			var tmp1;
			if(!(d >= Const.GRID * 3)) {
				var e = Game.ME.hero;
				var x0 = this.cx;
				var y0 = this.cy;
				var x1 = e.cx;
				var y1 = e.cy;
				var rayCanPass = $bind(this,this.canSeeThrough);
				var tmp2;
				if(!rayCanPass(x0,y0) || !rayCanPass(x1,y1)) {
					tmp2 = false;
				} else {
					var x = y1 - y0;
					var x2 = x1 - x0;
					var swapXY = (x < 0 ? -x : x) > (x2 < 0 ? -x2 : x2);
					var tmp3;
					if(swapXY) {
						tmp3 = x0;
						x0 = y0;
						y0 = tmp3;
						tmp3 = x1;
						x1 = y1;
						y1 = tmp3;
					}
					if(x0 > x1) {
						tmp3 = x0;
						x0 = x1;
						x1 = tmp3;
						tmp3 = y0;
						y0 = y1;
						y1 = tmp3;
					}
					var deltax = x1 - x0;
					var x = y1 - y0;
					var deltay = Math.floor(x < 0 ? -x : x);
					var error = Math.floor(deltax / 2);
					var y = y0;
					var ystep = y0 < y1 ? 1 : -1;
					var valid = true;
					var _g = x0;
					var _g1 = x1 + 1;
					while(_g < _g1) {
						var x = _g++;
						if(swapXY && !rayCanPass(y,x) || !swapXY && !rayCanPass(x,y)) {
							valid = false;
							break;
						}
						error -= deltay;
						if(error < 0) {
							y += ystep;
							error += deltax;
						}
					}
					tmp2 = valid;
				}
				tmp1 = !tmp2;
			} else {
				tmp1 = true;
			}
			tmp = tmp1 ? 0 : 0.3;
		} else {
			tmp = 1;
		}
		this.gravityMul = tmp;
		var _this = Game.ME;
		this.dx += Math.cos(a) * spd * (_this.utmod * _this.getComputedTimeMultiplier());
		var _this = Game.ME;
		this.dy += Math.sin(a) * spd * (_this.utmod * _this.getComputedTimeMultiplier());
		if(!needRecal) {
			var _this = Game.ME;
			this.dx *= Math.pow(0.89,_this.utmod * _this.getComputedTimeMultiplier());
			var _this = Game.ME;
			this.dy *= Math.pow(0.94,_this.utmod * _this.getComputedTimeMultiplier());
		}
		Entity.prototype.update.call(this);
		var _this = Game.ME.level;
		var cx = this.cx;
		var cy = this.cy;
		var tmp;
		if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
			tmp = true;
		} else {
			var tmp1;
			var _this1 = _this.data.l_Collisions;
			if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
				var _this1 = _this.data.l_Collisions;
				tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				var _this1 = _this.data.l_Collisions;
				tmp = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
			} else {
				tmp = true;
			}
		}
		if(tmp) {
			var dh = new dn_DecisionHelper(dn_Bresenham.getDisc(this.cx,this.cy,2));
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					var _this = Game.ME.level;
					var cx = pt.x;
					var cy = pt.y;
					var tmp1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp1 = true;
					} else {
						var tmp2;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this2 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
						} else {
							tmp2 = true;
						}
						if(!tmp2) {
							var _this3 = _this.data.l_Collisions;
							tmp1 = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
						} else {
							tmp1 = true;
						}
					}
					tmp = tmp1;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					var _this = Game.ME.hero;
					var x0 = _this.cx;
					var y0 = _this.cy;
					var x1 = pt.x;
					var y1 = pt.y;
					var rayCanPass = $bind(_this,_this.canSeeThrough);
					var tmp1;
					if(!rayCanPass(x0,y0) || !rayCanPass(x1,y1)) {
						tmp1 = false;
					} else {
						var x = y1 - y0;
						var x2 = x1 - x0;
						var swapXY = (x < 0 ? -x : x) > (x2 < 0 ? -x2 : x2);
						var tmp2;
						if(swapXY) {
							tmp2 = x0;
							x0 = y0;
							y0 = tmp2;
							tmp2 = x1;
							x1 = y1;
							y1 = tmp2;
						}
						if(x0 > x1) {
							tmp2 = x0;
							x0 = x1;
							x1 = tmp2;
							tmp2 = y0;
							y0 = y1;
							y1 = tmp2;
						}
						var deltax = x1 - x0;
						var x3 = y1 - y0;
						var deltay = Math.floor(x3 < 0 ? -x3 : x3);
						var error = Math.floor(deltax / 2);
						var y = y0;
						var ystep = y0 < y1 ? 1 : -1;
						var valid = true;
						var _g2 = x0;
						var _g3 = x1 + 1;
						while(_g2 < _g3) {
							var x4 = _g2++;
							if(swapXY && !rayCanPass(y,x4) || !swapXY && !rayCanPass(x4,y)) {
								valid = false;
								break;
							}
							error -= deltay;
							if(error < 0) {
								y += ystep;
								error += deltax;
							}
						}
						tmp1 = valid;
					}
					tmp = !tmp1;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				if(!e.out) {
					var e1 = e;
					var e2 = e1.score;
					var pt = e.v;
					var _this = Game.ME.level;
					var cx = pt.x;
					var cy = pt.y + 1;
					var tmp;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp = true;
					} else {
						var tmp1;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this2 = _this.data.l_Collisions;
							tmp1 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
						} else {
							tmp1 = true;
						}
						if(!tmp1) {
							var _this3 = _this.data.l_Collisions;
							tmp = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
						} else {
							tmp = true;
						}
					}
					e1.score = e2 + (tmp ? 0.5 : 0);
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				if(!e.out) {
					var pt = e.v;
					var ax = _gthis.cx + _gthis.xr;
					var ay = _gthis.cy + _gthis.yr;
					var bx = pt.x + 0.5;
					var by = pt.y + 0.5;
					e.score += -Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) * 0.3;
				}
			}
			var e = dh.getBest();
			if(e != null) {
				var tx = (e.x + 0.5) * Const.GRID;
				var ty = (e.y + 0.5) * Const.GRID;
				var a = Math.atan2((_gthis.cy + _gthis.yr) * Const.GRID - ty,(_gthis.cx + _gthis.xr) * Const.GRID - tx);
				_gthis.setPosPixel(tx + Math.cos(a) * Const.GRID * 0.5,ty + Math.sin(a) * Const.GRID * 0.5);
			}
		}
	}
	,fixedUpdate: function() {
		Entity.prototype.fixedUpdate.call(this);
		var ra;
		var _this = Game.ME.hero;
		if((_this.cx + _this.xr) * Const.GRID > (this.cx + this.xr) * Const.GRID) {
			var e = Game.ME.hero;
			ra = Math.atan2((e.cy + e.yr) * Const.GRID - (this.cy + this.yr) * Const.GRID,(e.cx + e.xr) * Const.GRID - (this.cx + this.xr) * Const.GRID);
		} else {
			var _this = Game.ME.hero;
			ra = Math.atan2((this.cy + this.yr) * Const.GRID - (_this.cy + _this.yr) * Const.GRID,(this.cx + this.xr) * Const.GRID - (_this.cx + _this.xr) * Const.GRID);
		}
		var ra1 = 0.95 * ra;
		this.sprRotation += (ra1 - this.sprRotation) * 0.35;
	}
	,__class__: en_Cart
});
var en_Hero = function(e) {
	this.cliffInsistF = 0.;
	this.turnOverAnim = 0.;
	Entity.call(this,e.cx,e.cy);
	this.ca = Main.ME.controller.createAccess("hero");
	var _this = this.spr;
	var l = null;
	if(l != null) {
		if(l.pages == null || l.pages.length == 0) {
			throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
		}
		if(_this.allocated && _this.lib != null) {
			_this.lib.removeChild(_this);
		}
		_this.lib = l;
		if(_this.allocated) {
			_this.lib.addChild(_this);
		}
		if(_this.pivot.isUndefined) {
			var xRatio = _this.lib.defaultCenterX;
			var yRatio = _this.lib.defaultCenterY;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this1 = _this.pivot;
			_this1.centerFactorX = xRatio;
			_this1.centerFactorY = yRatio;
			_this1.usingFactor = true;
			_this1.isUndefined = false;
		}
	}
	if("tractorBase" != _this.groupName) {
		_this.groupName = "tractorBase";
	}
	if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
		var _this1 = _this.lib;
		var k = _this.groupName;
		_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
		var _this1 = _this.lib;
		var k = _this.groupName;
		var frame = 0;
		if(frame == null) {
			frame = 0;
		}
		var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
		_this.frameData = g == null ? null : g.frames[frame];
		if(_this.frameData == null) {
			throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
		}
		if(_this.rawTile == null) {
			_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
		} else {
			_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
		}
		_this.lastPage = _this.frameData.page;
		_this.setFrame(0);
	} else {
		_this.setEmptyTexture();
	}
	this.addToLayer(Const.DP_HERO);
	var frame = 0;
	var xr = 0.5;
	var yr = 1;
	var smooth = null;
	var p = null;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"tractorBack",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.back = s;
	Game.ME.scroller.addChildAt(this.back,Const.DP_HERO_BACK);
	var frame = 0;
	var xr = 0.5;
	var yr = 0.5;
	var smooth = null;
	var p = null;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"wheelLarge",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.largeWheel = s;
	Game.ME.scroller.addChildAt(this.largeWheel,Const.DP_HERO_BACK);
	var frame = 0;
	var xr = 0.5;
	var yr = 0.5;
	var smooth = null;
	var p = null;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"wheelSmall",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.smallWheel = s;
	Game.ME.scroller.addChildAt(this.smallWheel,Const.DP_HERO_BACK);
	var frame = 0;
	var xr = 0.5;
	var yr = 0.5;
	var smooth = null;
	var p = null;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"halo",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.halo = s;
	Game.ME.scroller.addChildAt(this.halo,Const.DP_BG);
	var _this = this.halo.color;
	var a = 1.0;
	if(a == null) {
		a = 1.0;
	}
	var c = (a * 255 | 0) << 24 | 16763904;
	_this.x = (c >> 16 & 255) / 255;
	_this.y = (c >> 8 & 255) / 255;
	_this.z = (c & 255) / 255;
	_this.w = (c >>> 24) / 255;
	this.halo.blendMode = h2d_BlendMode.Add;
	this.halo.alpha = 0.2;
	var _this = this.halo;
	_this.posChanged = true;
	_this.scaleX = 2;
	_this.posChanged = true;
	_this.scaleY = 2;
	var _this = this.halo;
	_this.posChanged = true;
	_this.x = (this.cx + this.xr) * Const.GRID;
	_this.posChanged = true;
	_this.y = (this.cy + this.yr) * Const.GRID;
	var frame = 0;
	var xr = 0.5;
	var yr = 1;
	var smooth = null;
	var p = this.spr;
	if(yr == null) {
		yr = 0.;
	}
	if(xr == null) {
		xr = 0.;
	}
	if(frame == null) {
		frame = 0;
	}
	var s = new dn_heaps_slib_HSprite(Assets.tiles,"tractorGyro",frame);
	if(p != null) {
		p.addChild(s);
	}
	var xRatio = xr;
	var yRatio = yr;
	if(yRatio == null) {
		yRatio = 0.5;
	}
	if(xRatio == null) {
		xRatio = 0.5;
	}
	var _this = s.pivot;
	_this.centerFactorX = xRatio;
	_this.centerFactorY = yRatio;
	_this.usingFactor = true;
	_this.isUndefined = false;
	if(smooth != null) {
		s.smooth = smooth;
	}
	this.gyro = s;
	this.hasCartoonDistorsion = false;
	this.carriageWidth *= 0.25;
};
$hxClasses["en.Hero"] = en_Hero;
en_Hero.__name__ = "en.Hero";
en_Hero.__super__ = Entity;
en_Hero.prototype = $extend(Entity.prototype,{
	getCarriageX: function(offset) {
		var _this = Game.ME.cart;
		return (_this.cx + _this.xr) * Const.GRID + Math.cos(this.sprRotation) * this.carriageWidth * offset;
	}
	,getCarriageY: function(offset) {
		var _this = Game.ME.cart;
		return (_this.cy + _this.yr) * Const.GRID - 4 + Math.sin(this.sprRotation) * this.carriageWidth * offset;
	}
	,dispose: function() {
		Entity.prototype.dispose.call(this);
		var _this = this.back;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.largeWheel;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		var _this = this.smallWheel;
		if(_this != null && _this.parent != null) {
			_this.parent.removeChild(_this);
		}
		this.ca.dispose();
		this.ca = null;
	}
	,autoWalkS: function(dir,t) {
		var v = dir > 0 ? 1 : -1;
		this.dir = v > 0 ? 1 : v < 0 ? -1 : this.dir;
		var _this = this.cd;
		var frames = t * this.cd.baseFps;
		var allowLower = true;
		var onComplete = null;
		if(allowLower == null) {
			allowLower = true;
		}
		frames = Math.floor(frames * 1000) / 1000;
		var cur = _this._getCdObject(58720256);
		if(!(cur != null && frames < cur.frames && !allowLower)) {
			if(frames <= 0) {
				if(cur != null) {
					HxOverrides.remove(_this.cdList,cur);
					cur.frames = 0;
					cur.cb = null;
					_this.fastCheck.remove(cur.k);
				}
			} else {
				_this.fastCheck.h[58720256] = true;
				if(cur != null) {
					cur.frames = frames;
				} else {
					_this.cdList.push(new dn__$Cooldown_CdInst(58720256,frames));
				}
			}
			if(onComplete != null) {
				if(frames <= 0) {
					onComplete();
				} else {
					var cd = _this._getCdObject(58720256);
					if(cd == null) {
						throw haxe_Exception.thrown("cannot bind onComplete(" + 58720256 + "): cooldown " + 58720256 + " isn't running");
					}
					cd.cb = onComplete;
				}
			}
		}
	}
	,jump: function(bumper) {
		this.setSquashX(0.6);
		var _this = this.cd;
		var _g = 0;
		var _g1 = _this.cdList;
		while(_g < _g1.length) {
			var cd = _g1[_g];
			++_g;
			if(cd.k == 0) {
				HxOverrides.remove(_this.cdList,cd);
				cd.frames = 0;
				cd.cb = null;
				_this.fastCheck.remove(cd.k);
				break;
			}
		}
		Game.ME.cart.onHeroJump();
		if(bumper != null) {
			this.cancelVelocities();
			this.dy = -0.8;
			var _this = this.cd;
			var frames = 0.2 * this.cd.baseFps;
			var allowLower = true;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(67108864);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[67108864] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(67108864,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(67108864);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 67108864 + "): cooldown " + 67108864 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
			var _this = this.cd;
			var frames = 0.3 * this.cd.baseFps;
			var allowLower = true;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(71303168);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[71303168] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(71303168,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(71303168);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 71303168 + "): cooldown " + 71303168 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
			bumper.onUse();
		} else {
			this.bdy = 0;
			this.dy = -0.25;
			var _this = this.cd;
			var frames = 0.15 * this.cd.baseFps;
			var allowLower = true;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(75497472);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[75497472] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(75497472,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(75497472);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 75497472 + "): cooldown " + 75497472 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
		}
	}
	,onLand: function() {
		Entity.prototype.onLand.call(this);
		this.setSquashY(0.6);
	}
	,postUpdate: function() {
		Entity.prototype.postUpdate.call(this);
		var _this = this.spr;
		var x = (this.dy + this.bdy) * this.dir;
		_this.posChanged = true;
		_this.rotation = x < -0.1 ? -0.1 : x > 0.1 ? 0.1 : x;
		var _g = this.halo;
		_g.posChanged = true;
		_g.x += ((this.cx + this.xr) * Const.GRID - this.halo.x) * 0.1;
		var _g = this.halo;
		_g.posChanged = true;
		_g.y += ((this.cy + this.yr) * Const.GRID - this.halo.y - 40) * 0.1;
		var _this = this.halo;
		var _this1 = Game.ME;
		var v = 0.002 * (_this1.utmod * _this1.getComputedTimeMultiplier());
		var _g = _this;
		_g.posChanged = true;
		_g.rotation += v;
		var _this = this.ca;
		var moving;
		if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
			var k = 17;
			var moving1;
			if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
				var moving2;
				var moving3;
				var moving4;
				var k1 = _this.parent.primary.h[k];
				if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
					var k1 = _this.parent.secondary.h[k];
					moving4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					moving4 = true;
				}
				if(!moving4) {
					var k1 = _this.parent.third.h[k];
					moving3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					moving3 = true;
				}
				if(!moving3) {
					var k1 = _this.parent.fourth.h[k];
					moving2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					moving2 = true;
				}
				if(!moving2) {
					var _this1 = _this.parent.gc;
					moving1 = _this1.device != null && _this1.toggles[k] > 0;
				} else {
					moving1 = true;
				}
			} else {
				moving1 = false;
			}
			if(moving1) {
				moving = -1;
			} else {
				var k = 18;
				var moving1;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var moving2;
					var moving3;
					var moving4;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						moving4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						moving4 = true;
					}
					if(!moving4) {
						var k1 = _this.parent.third.h[k];
						moving3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						moving3 = true;
					}
					if(!moving3) {
						var k1 = _this.parent.fourth.h[k];
						moving2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						moving2 = true;
					}
					if(!moving2) {
						var _this1 = _this.parent.gc;
						moving1 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						moving1 = true;
					}
				} else {
					moving1 = false;
				}
				moving = moving1 ? 1 : 0;
			}
		} else {
			var _this1 = _this.parent.gc;
			var simplified = false;
			var overrideDeadZone = _this.leftDeadZone;
			if(overrideDeadZone == null) {
				overrideDeadZone = -1.;
			}
			if(simplified == null) {
				simplified = false;
			}
			if(_this1.device != null) {
				var idx = dn_heaps_GamePad.MAPPING[18];
				var overrideDeadZone1 = overrideDeadZone;
				if(overrideDeadZone1 == null) {
					overrideDeadZone1 = -1.;
				}
				var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
				var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
				moving = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
			} else {
				moving = 0.;
			}
		}
		var moving1 = moving != 0;
		var movingOnGround;
		if(this.destroyed) {
			movingOnGround = true;
		} else {
			var movingOnGround1;
			if(this.yr == 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					movingOnGround1 = true;
				} else {
					var movingOnGround2;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this1 = _this.data.l_Collisions;
						movingOnGround2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
					} else {
						movingOnGround2 = true;
					}
					if(!movingOnGround2) {
						var _this1 = _this.data.l_Collisions;
						movingOnGround1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
					} else {
						movingOnGround1 = true;
					}
				}
			} else {
				movingOnGround1 = false;
			}
			movingOnGround = movingOnGround1 && this.dy + this.bdy == 0;
		}
		var movingOnGround1 = movingOnGround && moving1;
		var _g = this.spr;
		_g.posChanged = true;
		_g.scaleX *= 1 - this.turnOverAnim * 0.7;
		var _this = Game.ME;
		this.turnOverAnim *= Math.pow(0.8,_this.utmod * _this.getComputedTimeMultiplier());
		var t = Game.ME.ftime * 0.1 + this.uid;
		var _g = this.spr;
		var v = _g.scaleX * (0.95 + Math.cos(t) * 0.05);
		_g.posChanged = true;
		_g.scaleX = v;
		var _g = this.spr;
		var v = _g.scaleY * (0.95 + Math.sin(t) * 0.05);
		_g.posChanged = true;
		_g.scaleY = v;
		if(!movingOnGround1) {
			var _g = this.spr;
			var v = _g.y + (-1 + Math.sin(t) * 2);
			_g.posChanged = true;
			_g.y = v;
		}
		var x = Math.cos(Game.ME.ftime * 0.1);
		this.gyro.alpha = x < 0 ? -x : x;
		var _this = this.smallWheel;
		_this.posChanged = true;
		_this.x = (this.cx + this.xr) * Const.GRID + this.dir * 9 * (1 - this.turnOverAnim) | 0;
		var _this = this.smallWheel;
		var v = (this.cy + this.yr) * Const.GRID - 4;
		var v1;
		var v2;
		if(this.destroyed) {
			v2 = true;
		} else {
			var v3;
			if(this.yr == 1) {
				var _this1 = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this1.data.l_Collisions.cWid && cy >= 0 && cy < _this1.data.l_Collisions.cHei)) {
					v3 = true;
				} else {
					var v4;
					var _this2 = _this1.data.l_Collisions;
					if((!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) != 0) {
						var _this2 = _this1.data.l_Collisions;
						v4 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
					} else {
						v4 = true;
					}
					if(!v4) {
						var _this2 = _this1.data.l_Collisions;
						v3 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 4;
					} else {
						v3 = true;
					}
				}
			} else {
				v3 = false;
			}
			v2 = v3 && this.dy + this.bdy == 0;
		}
		if(v2) {
			v1 = 0;
		} else {
			var _this1 = Game.ME;
			v1 = this.dy + this.bdy >= 0.05 * (_this1.utmod * _this1.getComputedTimeMultiplier()) ? 2 : -1;
		}
		_this.posChanged = true;
		_this.y = v + v1;
		var _this = this.largeWheel;
		_this.posChanged = true;
		_this.x = (this.cx + this.xr) * Const.GRID - this.dir * 6 * (1 - this.turnOverAnim) | 0;
		var _this = this.largeWheel;
		var v = (this.cy + this.yr) * Const.GRID - 6;
		var v1;
		var v2;
		if(this.destroyed) {
			v2 = true;
		} else {
			var v3;
			if(this.yr == 1) {
				var _this1 = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this1.data.l_Collisions.cWid && cy >= 0 && cy < _this1.data.l_Collisions.cHei)) {
					v3 = true;
				} else {
					var v4;
					var _this2 = _this1.data.l_Collisions;
					if((!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) != 0) {
						var _this2 = _this1.data.l_Collisions;
						v4 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
					} else {
						v4 = true;
					}
					if(!v4) {
						var _this2 = _this1.data.l_Collisions;
						v3 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 4;
					} else {
						v3 = true;
					}
				}
			} else {
				v3 = false;
			}
			v2 = v3 && this.dy + this.bdy == 0;
		}
		if(v2) {
			v1 = 0;
		} else {
			var _this1 = Game.ME;
			v1 = this.dy + this.bdy >= 0.05 * (_this1.utmod * _this1.getComputedTimeMultiplier()) ? 2 : -1;
		}
		_this.posChanged = true;
		_this.y = v + v1;
		if(movingOnGround1) {
			var _g = this.largeWheel;
			var _g1 = _g.y;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var v = sign ? Math.random() * (Std.random(2) * 2 - 1) : Math.random();
			_g.posChanged = true;
			_g.y = _g1 - v;
			var _g = this.smallWheel;
			var _g1 = _g.y;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var v = sign ? Math.random() * (Std.random(2) * 2 - 1) : Math.random();
			_g.posChanged = true;
			_g.y = _g1 - v;
			var _g = this.spr;
			var v = _g.scaleY * (1 + 0.05 * Math.cos(Game.ME.ftime * 0.4 + this.uid));
			_g.posChanged = true;
			_g.scaleY = v;
			var _g = this.spr;
			var x = Math.sin(Game.ME.ftime * 0.5 + this.uid);
			_g.posChanged = true;
			_g.y += -(x < 0 ? -x : x);
		}
		var tmp;
		if(movingOnGround1) {
			var _this = this.cd;
			var frames = 0.06 * this.cd.baseFps;
			var tmp1;
			if(_this.fastCheck.h.hasOwnProperty(79691776)) {
				tmp1 = true;
			} else {
				var frames1 = frames;
				var onComplete = null;
				frames1 = Math.floor(frames1 * 1000) / 1000;
				var cur = _this._getCdObject(79691776);
				if(!(cur != null && frames1 < cur.frames && false)) {
					if(frames1 <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[79691776] = true;
						if(cur != null) {
							cur.frames = frames1;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(79691776,frames1));
						}
					}
					if(onComplete != null) {
						if(frames1 <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(79691776);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 79691776 + "): cooldown " + 79691776 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp) {
			Game.ME.fx.grass((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID,-this.dir);
		}
		var _this = this.cd;
		var frames = (moving1 ? 0.18 : 0.5) * this.cd.baseFps;
		var tmp;
		if(_this.fastCheck.h.hasOwnProperty(83886080)) {
			tmp = true;
		} else {
			var frames1 = frames;
			var onComplete = null;
			frames1 = Math.floor(frames1 * 1000) / 1000;
			var cur = _this._getCdObject(83886080);
			if(!(cur != null && frames1 < cur.frames && false)) {
				if(frames1 <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[83886080] = true;
					if(cur != null) {
						cur.frames = frames1;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(83886080,frames1));
					}
				}
				if(onComplete != null) {
					if(frames1 <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(83886080);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 83886080 + "): cooldown " + 83886080 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
			tmp = false;
		}
		if(!tmp) {
			Game.ME.fx.tractorSmoke((this.cx + this.xr) * Const.GRID - this.dir * 6,(this.cy + this.yr) * Const.GRID - 8,-this.dir);
		}
		var _this = this.back;
		_this.posChanged = true;
		_this.x = this.spr.x + 1;
		var _this = this.back;
		_this.posChanged = true;
		_this.y = this.spr.y;
		var _this = this.back;
		_this.posChanged = true;
		_this.scaleX = this.spr.scaleX;
		var _this = this.back;
		_this.posChanged = true;
		_this.scaleY = this.spr.scaleY;
		var _this = this.back;
		_this.posChanged = true;
		_this.rotation = this.spr.rotation;
	}
	,update: function() {
		var _gthis = this;
		Entity.prototype.update.call(this);
		var spd = 0.016;
		var tmp;
		var tmp1;
		var tmp2;
		var tmp3;
		if(this.destroyed) {
			tmp3 = true;
		} else {
			var tmp4;
			if(this.yr == 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp4 = true;
				} else {
					var tmp5;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this1 = _this.data.l_Collisions;
						tmp5 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
					} else {
						tmp5 = true;
					}
					if(!tmp5) {
						var _this1 = _this.data.l_Collisions;
						tmp4 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
					} else {
						tmp4 = true;
					}
				}
			} else {
				tmp4 = false;
			}
			tmp3 = tmp4 && this.dy + this.bdy == 0;
		}
		if(!tmp3) {
			var tmp3;
			if(this.destroyed) {
				tmp3 = true;
			} else {
				var tmp4;
				if(this.yr == 1) {
					var _this = Game.ME.level;
					var cx = this.cx;
					var cy = this.cy + 1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp4 = true;
					} else {
						var tmp5;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this1 = _this.data.l_Collisions;
							tmp5 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
						} else {
							tmp5 = true;
						}
						if(!tmp5) {
							var _this1 = _this.data.l_Collisions;
							tmp4 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
						} else {
							tmp4 = true;
						}
					}
				} else {
					tmp4 = false;
				}
				tmp3 = tmp4 && this.dy + this.bdy == 0;
			}
			tmp2 = tmp3 || !this.destroyed && this.cd.fastCheck.h.hasOwnProperty(0);
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			var _this = this.ca;
			var tmp2;
			if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
				var k = 17;
				var tmp3;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var tmp4;
					var tmp5;
					var tmp6;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						tmp6 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp6 = true;
					}
					if(!tmp6) {
						var k1 = _this.parent.third.h[k];
						tmp5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp5 = true;
					}
					if(!tmp5) {
						var k1 = _this.parent.fourth.h[k];
						tmp4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp4 = true;
					}
					if(!tmp4) {
						var _this1 = _this.parent.gc;
						tmp3 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						tmp3 = true;
					}
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					tmp2 = -1;
				} else {
					var k = 18;
					var tmp3;
					if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
						var tmp4;
						var tmp5;
						var tmp6;
						var k1 = _this.parent.primary.h[k];
						if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
							var k1 = _this.parent.secondary.h[k];
							tmp6 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp6 = true;
						}
						if(!tmp6) {
							var k1 = _this.parent.third.h[k];
							tmp5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp5 = true;
						}
						if(!tmp5) {
							var k1 = _this.parent.fourth.h[k];
							tmp4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp4 = true;
						}
						if(!tmp4) {
							var _this1 = _this.parent.gc;
							tmp3 = _this1.device != null && _this1.toggles[k] > 0;
						} else {
							tmp3 = true;
						}
					} else {
						tmp3 = false;
					}
					tmp2 = tmp3 ? 1 : 0;
				}
			} else {
				var _this1 = _this.parent.gc;
				var simplified = false;
				var overrideDeadZone = _this.leftDeadZone;
				if(overrideDeadZone == null) {
					overrideDeadZone = -1.;
				}
				if(simplified == null) {
					simplified = false;
				}
				if(_this1.device != null) {
					var idx = dn_heaps_GamePad.MAPPING[18];
					var overrideDeadZone1 = overrideDeadZone;
					if(overrideDeadZone1 == null) {
						overrideDeadZone1 = -1.;
					}
					var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
					var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
					tmp2 = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
				} else {
					tmp2 = 0.;
				}
			}
			tmp1 = tmp2 != 0;
		} else {
			tmp1 = false;
		}
		if(tmp1 && this.dy + this.bdy > 0) {
			var _this = this.cd;
			var frames = 0.5 * this.cd.baseFps;
			var tmp1;
			if(_this.fastCheck.h.hasOwnProperty(88080384)) {
				tmp1 = true;
			} else {
				var frames1 = frames;
				var onComplete = null;
				frames1 = Math.floor(frames1 * 1000) / 1000;
				var cur = _this._getCdObject(88080384);
				if(!(cur != null && frames1 < cur.frames && false)) {
					if(frames1 <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[88080384] = true;
						if(cur != null) {
							cur.frames = frames1;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(88080384,frames1));
						}
					}
					if(onComplete != null) {
						if(frames1 <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(88080384);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 88080384 + "): cooldown " + 88080384 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.dy = -0.11;
		}
		var _this = this.ca;
		var x;
		if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
			var k = 17;
			var x1;
			if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
				var x2;
				var x3;
				var x4;
				var k1 = _this.parent.primary.h[k];
				if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
					var k1 = _this.parent.secondary.h[k];
					x4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					x4 = true;
				}
				if(!x4) {
					var k1 = _this.parent.third.h[k];
					x3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					x3 = true;
				}
				if(!x3) {
					var k1 = _this.parent.fourth.h[k];
					x2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					x2 = true;
				}
				if(!x2) {
					var _this1 = _this.parent.gc;
					x1 = _this1.device != null && _this1.toggles[k] > 0;
				} else {
					x1 = true;
				}
			} else {
				x1 = false;
			}
			if(x1) {
				x = -1;
			} else {
				var k = 18;
				var x1;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var x2;
					var x3;
					var x4;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						x4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						x4 = true;
					}
					if(!x4) {
						var k1 = _this.parent.third.h[k];
						x3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						x3 = true;
					}
					if(!x3) {
						var k1 = _this.parent.fourth.h[k];
						x2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						x2 = true;
					}
					if(!x2) {
						var _this1 = _this.parent.gc;
						x1 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						x1 = true;
					}
				} else {
					x1 = false;
				}
				x = x1 ? 1 : 0;
			}
		} else {
			var _this1 = _this.parent.gc;
			var simplified = false;
			var overrideDeadZone = _this.leftDeadZone;
			if(overrideDeadZone == null) {
				overrideDeadZone = -1.;
			}
			if(simplified == null) {
				simplified = false;
			}
			if(_this1.device != null) {
				var idx = dn_heaps_GamePad.MAPPING[18];
				var overrideDeadZone1 = overrideDeadZone;
				if(overrideDeadZone1 == null) {
					overrideDeadZone1 = -1.;
				}
				var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
				var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
				x = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
			} else {
				x = 0.;
			}
		}
		var x1 = x < 0 ? -x : x;
		var x;
		if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
			var k = 21;
			var x2;
			if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
				var x3;
				var x4;
				var x5;
				var k1 = _this.parent.primary.h[k];
				if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
					var k1 = _this.parent.secondary.h[k];
					x5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					x5 = true;
				}
				if(!x5) {
					var k1 = _this.parent.third.h[k];
					x4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					x4 = true;
				}
				if(!x4) {
					var k1 = _this.parent.fourth.h[k];
					x3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
				} else {
					x3 = true;
				}
				if(!x3) {
					var _this1 = _this.parent.gc;
					x2 = _this1.device != null && _this1.toggles[k] > 0;
				} else {
					x2 = true;
				}
			} else {
				x2 = false;
			}
			if(x2) {
				x = -1;
			} else {
				var k = 20;
				var x2;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var x3;
					var x4;
					var x5;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						x5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						x5 = true;
					}
					if(!x5) {
						var k1 = _this.parent.third.h[k];
						x4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						x4 = true;
					}
					if(!x4) {
						var k1 = _this.parent.fourth.h[k];
						x3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						x3 = true;
					}
					if(!x3) {
						var _this1 = _this.parent.gc;
						x2 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						x2 = true;
					}
				} else {
					x2 = false;
				}
				x = x2 ? 1 : 0;
			}
		} else {
			var _this1 = _this.parent.gc;
			var simplified = false;
			var overrideDeadZone = _this.leftDeadZone;
			if(overrideDeadZone == null) {
				overrideDeadZone = -1.;
			}
			if(simplified == null) {
				simplified = false;
			}
			if(_this1.device != null) {
				var idx = dn_heaps_GamePad.MAPPING[21];
				var overrideDeadZone1 = overrideDeadZone;
				if(overrideDeadZone1 == null) {
					overrideDeadZone1 = -1.;
				}
				var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
				var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
				x = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
			} else {
				x = 0.;
			}
		}
		var y = x < 0 ? -x : x;
		if((x1 > y ? x1 : y) > 0 && !this.cd.fastCheck.h.hasOwnProperty(58720256) && !this.cd.fastCheck.h.hasOwnProperty(71303168)) {
			var tmp = this;
			var tmp1 = tmp.dx;
			var _this = this.ca;
			var tmp2;
			if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
				var k = 21;
				var tmp3;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var tmp4;
					var tmp5;
					var tmp6;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						tmp6 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp6 = true;
					}
					if(!tmp6) {
						var k1 = _this.parent.third.h[k];
						tmp5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp5 = true;
					}
					if(!tmp5) {
						var k1 = _this.parent.fourth.h[k];
						tmp4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp4 = true;
					}
					if(!tmp4) {
						var _this1 = _this.parent.gc;
						tmp3 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						tmp3 = true;
					}
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					tmp2 = -1;
				} else {
					var k = 20;
					var tmp3;
					if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
						var tmp4;
						var tmp5;
						var tmp6;
						var k1 = _this.parent.primary.h[k];
						if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
							var k1 = _this.parent.secondary.h[k];
							tmp6 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp6 = true;
						}
						if(!tmp6) {
							var k1 = _this.parent.third.h[k];
							tmp5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp5 = true;
						}
						if(!tmp5) {
							var k1 = _this.parent.fourth.h[k];
							tmp4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp4 = true;
						}
						if(!tmp4) {
							var _this1 = _this.parent.gc;
							tmp3 = _this1.device != null && _this1.toggles[k] > 0;
						} else {
							tmp3 = true;
						}
					} else {
						tmp3 = false;
					}
					tmp2 = tmp3 ? 1 : 0;
				}
			} else {
				var _this1 = _this.parent.gc;
				var simplified = false;
				var overrideDeadZone = _this.leftDeadZone;
				if(overrideDeadZone == null) {
					overrideDeadZone = -1.;
				}
				if(simplified == null) {
					simplified = false;
				}
				if(_this1.device != null) {
					var idx = dn_heaps_GamePad.MAPPING[21];
					var overrideDeadZone1 = overrideDeadZone;
					if(overrideDeadZone1 == null) {
						overrideDeadZone1 = -1.;
					}
					var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
					var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
					tmp2 = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
				} else {
					tmp2 = 0.;
				}
			}
			var tmp3;
			if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
				var k = 17;
				var tmp4;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var tmp5;
					var tmp6;
					var tmp7;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						tmp7 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp7 = true;
					}
					if(!tmp7) {
						var k1 = _this.parent.third.h[k];
						tmp6 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp6 = true;
					}
					if(!tmp6) {
						var k1 = _this.parent.fourth.h[k];
						tmp5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						tmp5 = true;
					}
					if(!tmp5) {
						var _this1 = _this.parent.gc;
						tmp4 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						tmp4 = true;
					}
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					tmp3 = -1;
				} else {
					var k = 18;
					var tmp4;
					if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
						var tmp5;
						var tmp6;
						var tmp7;
						var k1 = _this.parent.primary.h[k];
						if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
							var k1 = _this.parent.secondary.h[k];
							tmp7 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp7 = true;
						}
						if(!tmp7) {
							var k1 = _this.parent.third.h[k];
							tmp6 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp6 = true;
						}
						if(!tmp6) {
							var k1 = _this.parent.fourth.h[k];
							tmp5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							tmp5 = true;
						}
						if(!tmp5) {
							var _this1 = _this.parent.gc;
							tmp4 = _this1.device != null && _this1.toggles[k] > 0;
						} else {
							tmp4 = true;
						}
					} else {
						tmp4 = false;
					}
					tmp3 = tmp4 ? 1 : 0;
				}
			} else {
				var _this1 = _this.parent.gc;
				var simplified = false;
				var overrideDeadZone = _this.leftDeadZone;
				if(overrideDeadZone == null) {
					overrideDeadZone = -1.;
				}
				if(simplified == null) {
					simplified = false;
				}
				if(_this1.device != null) {
					var idx = dn_heaps_GamePad.MAPPING[18];
					var overrideDeadZone1 = overrideDeadZone;
					if(overrideDeadZone1 == null) {
						overrideDeadZone1 = -1.;
					}
					var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
					var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
					tmp3 = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
				} else {
					tmp3 = 0.;
				}
			}
			var tmp4 = Math.cos(Math.atan2(-tmp2,tmp3)) * spd * (1 - 0.5 * this.cd._getRatio(92274688));
			var _this = Game.ME;
			tmp.dx = tmp1 + tmp4 * (_this.utmod * _this.getComputedTimeMultiplier());
			var oldDir = this.dir;
			var _this = this.ca;
			var a;
			if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
				var k = 21;
				var a1;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var a2;
					var a3;
					var a4;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						a4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						a4 = true;
					}
					if(!a4) {
						var k1 = _this.parent.third.h[k];
						a3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						a3 = true;
					}
					if(!a3) {
						var k1 = _this.parent.fourth.h[k];
						a2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						a2 = true;
					}
					if(!a2) {
						var _this1 = _this.parent.gc;
						a1 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						a1 = true;
					}
				} else {
					a1 = false;
				}
				if(a1) {
					a = -1;
				} else {
					var k = 20;
					var a1;
					if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
						var a2;
						var a3;
						var a4;
						var k1 = _this.parent.primary.h[k];
						if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
							var k1 = _this.parent.secondary.h[k];
							a4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							a4 = true;
						}
						if(!a4) {
							var k1 = _this.parent.third.h[k];
							a3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							a3 = true;
						}
						if(!a3) {
							var k1 = _this.parent.fourth.h[k];
							a2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							a2 = true;
						}
						if(!a2) {
							var _this1 = _this.parent.gc;
							a1 = _this1.device != null && _this1.toggles[k] > 0;
						} else {
							a1 = true;
						}
					} else {
						a1 = false;
					}
					a = a1 ? 1 : 0;
				}
			} else {
				var _this1 = _this.parent.gc;
				var simplified = false;
				var overrideDeadZone = _this.leftDeadZone;
				if(overrideDeadZone == null) {
					overrideDeadZone = -1.;
				}
				if(simplified == null) {
					simplified = false;
				}
				if(_this1.device != null) {
					var idx = dn_heaps_GamePad.MAPPING[21];
					var overrideDeadZone1 = overrideDeadZone;
					if(overrideDeadZone1 == null) {
						overrideDeadZone1 = -1.;
					}
					var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
					var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
					a = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
				} else {
					a = 0.;
				}
			}
			var a1;
			if(_this.parent.mode == dn_heaps_Mode.Keyboard) {
				var k = 17;
				var a2;
				if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
					var a3;
					var a4;
					var a5;
					var k1 = _this.parent.primary.h[k];
					if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
						var k1 = _this.parent.secondary.h[k];
						a5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						a5 = true;
					}
					if(!a5) {
						var k1 = _this.parent.third.h[k];
						a4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						a4 = true;
					}
					if(!a4) {
						var k1 = _this.parent.fourth.h[k];
						a3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
					} else {
						a3 = true;
					}
					if(!a3) {
						var _this1 = _this.parent.gc;
						a2 = _this1.device != null && _this1.toggles[k] > 0;
					} else {
						a2 = true;
					}
				} else {
					a2 = false;
				}
				if(a2) {
					a1 = -1;
				} else {
					var k = 18;
					var a2;
					if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
						var a3;
						var a4;
						var a5;
						var k1 = _this.parent.primary.h[k];
						if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1))) {
							var k1 = _this.parent.secondary.h[k];
							a5 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							a5 = true;
						}
						if(!a5) {
							var k1 = _this.parent.third.h[k];
							a4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							a4 = true;
						}
						if(!a4) {
							var k1 = _this.parent.fourth.h[k];
							a3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isDown(k1);
						} else {
							a3 = true;
						}
						if(!a3) {
							var _this1 = _this.parent.gc;
							a2 = _this1.device != null && _this1.toggles[k] > 0;
						} else {
							a2 = true;
						}
					} else {
						a2 = false;
					}
					a1 = a2 ? 1 : 0;
				}
			} else {
				var _this1 = _this.parent.gc;
				var simplified = false;
				var overrideDeadZone = _this.leftDeadZone;
				if(overrideDeadZone == null) {
					overrideDeadZone = -1.;
				}
				if(simplified == null) {
					simplified = false;
				}
				if(_this1.device != null) {
					var idx = dn_heaps_GamePad.MAPPING[18];
					var overrideDeadZone1 = overrideDeadZone;
					if(overrideDeadZone1 == null) {
						overrideDeadZone1 = -1.;
					}
					var v = idx > -1 && idx < _this1.device.values.length ? _this1.device.values[idx] : 0;
					var dz = overrideDeadZone1 < 0. ? _this1.deadZone : overrideDeadZone1;
					a1 = simplified ? v < -dz ? -1. : v > dz ? 1. : 0. : v > -dz && v < dz ? 0. : v;
				} else {
					a1 = 0.;
				}
			}
			var a2 = Math.atan2(-a,a1);
			var b = 0;
			var a = a2;
			while(a < -3.1415926535897931) a += 6.283185307179586;
			while(a > 3.141592653589793) a -= 6.283185307179586;
			a2 = a;
			var a = b;
			while(a < -3.1415926535897931) a += 6.283185307179586;
			while(a > 3.141592653589793) a -= 6.283185307179586;
			b = a;
			var a = a2 - b;
			while(a < -3.1415926535897931) a += 6.283185307179586;
			while(a > 3.141592653589793) a -= 6.283185307179586;
			var x = a;
			var v = (x < 0 ? -x : x) <= 1.5707963267948966 ? 1 : -1;
			this.dir = v > 0 ? 1 : v < 0 ? -1 : this.dir;
			if(oldDir != this.dir) {
				this.turnOverAnim = 1;
			}
			var tmp;
			var tmp1;
			if(this.destroyed) {
				tmp1 = true;
			} else {
				var tmp2;
				if(this.yr == 1) {
					var _this = Game.ME.level;
					var cx = this.cx;
					var cy = this.cy + 1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp2 = true;
					} else {
						var tmp3;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this1 = _this.data.l_Collisions;
							tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
						} else {
							tmp3 = true;
						}
						if(!tmp3) {
							var _this1 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
						} else {
							tmp2 = true;
						}
					}
				} else {
					tmp2 = false;
				}
				tmp1 = tmp2 && this.dy + this.bdy == 0;
			}
			if(tmp1) {
				var _this = Game.ME.level;
				var mark = LevelMark.CliffHigh;
				var cx = this.cx;
				var cy = this.cy;
				var dir = this.dir;
				tmp = !(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1);
			} else {
				tmp = false;
			}
			if(tmp) {
				var _this = Game.ME;
				this.cliffInsistF += _this.utmod * _this.getComputedTimeMultiplier();
			}
			var tmp;
			if(this.destroyed) {
				tmp = true;
			} else {
				var tmp1;
				if(this.yr == 1) {
					var _this = Game.ME.level;
					var cx = this.cx;
					var cy = this.cy + 1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp1 = true;
					} else {
						var tmp2;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this1 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
						} else {
							tmp2 = true;
						}
						if(!tmp2) {
							var _this1 = _this.data.l_Collisions;
							tmp1 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
						} else {
							tmp1 = true;
						}
					}
				} else {
					tmp1 = false;
				}
				tmp = tmp1 && this.dy + this.bdy == 0;
			}
			if(tmp) {
				var tmp;
				var _this = Game.ME.level;
				var mark = LevelMark.StepSmall;
				var cx = this.cx;
				var cy = this.cy;
				var dir = this.dir;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) {
					var x0 = this.cx;
					var y0 = this.cy;
					var x1 = this.cx;
					var y1 = this.cy;
					var rayCanPass = $bind(this,this.canSeeThrough);
					if(!rayCanPass(x0,y0) || !rayCanPass(x1,y1)) {
						tmp = false;
					} else {
						var x = y1 - y0;
						var x2 = x1 - x0;
						var swapXY = (x < 0 ? -x : x) > (x2 < 0 ? -x2 : x2);
						var tmp1;
						if(swapXY) {
							tmp1 = x0;
							x0 = y0;
							y0 = tmp1;
							tmp1 = x1;
							x1 = y1;
							y1 = tmp1;
						}
						if(x0 > x1) {
							tmp1 = x0;
							x0 = x1;
							x1 = tmp1;
							tmp1 = y0;
							y0 = y1;
							y1 = tmp1;
						}
						var deltax = x1 - x0;
						var x = y1 - y0;
						var deltay = Math.floor(x < 0 ? -x : x);
						var error = Math.floor(deltax / 2);
						var y = y0;
						var ystep = y0 < y1 ? 1 : -1;
						var valid = true;
						var _g = x0;
						var _g1 = x1 + 1;
						while(_g < _g1) {
							var x = _g++;
							if(swapXY && !rayCanPass(y,x) || !swapXY && !rayCanPass(x,y)) {
								valid = false;
								break;
							}
							error -= deltay;
							if(error < 0) {
								y += ystep;
								error += deltax;
							}
						}
						tmp = valid;
					}
				} else {
					tmp = false;
				}
				if(tmp) {
					this.jump();
					var _this = Game.ME.level;
					var mark = LevelMark.StepSmall;
					var cx = this.cx;
					var cy = this.cy;
					var dir = null;
					this.autoWalkS((!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) ? _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] : 0,0.3);
					this.xr = 0.5;
					this.dy *= 0.45;
				}
				var tmp;
				var _this = Game.ME.level;
				var mark = LevelMark.StepHight;
				var cx = this.cx;
				var cy = this.cy;
				var dir = this.dir;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) {
					var x0 = this.cx;
					var y0 = this.cy;
					var x1 = this.cx;
					var y1 = this.cy;
					var rayCanPass = $bind(this,this.canSeeThrough);
					if(!rayCanPass(x0,y0) || !rayCanPass(x1,y1)) {
						tmp = false;
					} else {
						var x = y1 - y0;
						var x2 = x1 - x0;
						var swapXY = (x < 0 ? -x : x) > (x2 < 0 ? -x2 : x2);
						var tmp1;
						if(swapXY) {
							tmp1 = x0;
							x0 = y0;
							y0 = tmp1;
							tmp1 = x1;
							x1 = y1;
							y1 = tmp1;
						}
						if(x0 > x1) {
							tmp1 = x0;
							x0 = x1;
							x1 = tmp1;
							tmp1 = y0;
							y0 = y1;
							y1 = tmp1;
						}
						var deltax = x1 - x0;
						var x = y1 - y0;
						var deltay = Math.floor(x < 0 ? -x : x);
						var error = Math.floor(deltax / 2);
						var y = y0;
						var ystep = y0 < y1 ? 1 : -1;
						var valid = true;
						var _g = x0;
						var _g1 = x1 + 1;
						while(_g < _g1) {
							var x = _g++;
							if(swapXY && !rayCanPass(y,x) || !swapXY && !rayCanPass(x,y)) {
								valid = false;
								break;
							}
							error -= deltay;
							if(error < 0) {
								y += ystep;
								error += deltax;
							}
						}
						tmp = valid;
					}
				} else {
					tmp = false;
				}
				if(tmp) {
					this.jump();
					var _this = Game.ME.level;
					var mark = LevelMark.StepHight;
					var cx = this.cx;
					var cy = this.cy;
					var dir = null;
					this.autoWalkS((!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) ? _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] : 0,0.3);
					this.xr = 0.5;
				}
			}
		} else {
			this.cliffInsistF = 0;
		}
		if(this.cd.fastCheck.h.hasOwnProperty(58720256)) {
			var _this = Game.ME;
			this.dx += this.dir * spd * (_this.utmod * _this.getComputedTimeMultiplier());
		}
		var tmp;
		var tmp1;
		if(this.destroyed) {
			tmp1 = true;
		} else {
			var tmp2;
			if(this.yr == 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp2 = true;
				} else {
					var tmp3;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this1 = _this.data.l_Collisions;
						tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
					} else {
						tmp3 = true;
					}
					if(!tmp3) {
						var _this1 = _this.data.l_Collisions;
						tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
					} else {
						tmp2 = true;
					}
				}
			} else {
				tmp2 = false;
			}
			tmp1 = tmp2 && this.dy + this.bdy == 0;
		}
		if(tmp1) {
			var _this = Game.ME.level;
			var mark = LevelMark.CliffHigh;
			var cx = this.cx;
			var cy = this.cy;
			var x = this.dx + this.bdx;
			var dir = x > 0 ? 1 : x < 0 ? -1 : 0;
			tmp = !(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1);
		} else {
			tmp = false;
		}
		if(tmp && this.cliffInsistF <= 0.8 * Const.FPS) {
			var x = this.dx + this.bdx;
			var cliffXr = 0.5 + 0.4 * (x > 0 ? 1 : x < 0 ? -1 : 0);
			var x = cliffXr - this.xr;
			var ratio = 1 - (x < 0 ? -x : x);
			var _this = Game.ME;
			this.dx *= Math.pow(0.95 - 0.85 * ratio,_this.utmod * _this.getComputedTimeMultiplier());
		}
		var _this = Game.ME.level;
		var mark = LevelMark.CliffHigh;
		var cx = this.cx;
		var cy = this.cy;
		var dir = null;
		var cliffDir = (!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) ? _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] : 0;
		var tmp;
		var tmp1;
		if(this.destroyed) {
			tmp1 = true;
		} else {
			var tmp2;
			if(this.yr == 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp2 = true;
				} else {
					var tmp3;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this1 = _this.data.l_Collisions;
						tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
					} else {
						tmp3 = true;
					}
					if(!tmp3) {
						var _this1 = _this.data.l_Collisions;
						tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
					} else {
						tmp2 = true;
					}
				}
			} else {
				tmp2 = false;
			}
			tmp1 = tmp2 && this.dy + this.bdy == 0;
		}
		if(tmp1) {
			var _this = Game.ME.level;
			var mark = LevelMark.CliffHigh;
			var cx = this.cx;
			var cy = this.cy;
			var dir = null;
			tmp = !(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1);
		} else {
			tmp = false;
		}
		if(tmp && this.cliffInsistF <= 0 && (cliffDir == 1 && this.xr >= 0.6 || cliffDir == -1 && this.xr <= 0.4)) {
			this.bump(-cliffDir * 0.03,-0.1);
		}
		var tmp;
		var _this = Game.ME.level;
		var mark = LevelMark.EdgeGrab;
		var cx = this.cx;
		var cy = this.cy;
		var dir = null;
		if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) {
			var tmp1;
			if(this.destroyed) {
				tmp1 = true;
			} else {
				var tmp2;
				if(this.yr == 1) {
					var _this = Game.ME.level;
					var cx = this.cx;
					var cy = this.cy + 1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp2 = true;
					} else {
						var tmp3;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this1 = _this.data.l_Collisions;
							tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
						} else {
							tmp3 = true;
						}
						if(!tmp3) {
							var _this1 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
						} else {
							tmp2 = true;
						}
					}
				} else {
					tmp2 = false;
				}
				tmp1 = tmp2 && this.dy + this.bdy == 0;
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp && this.dy + this.bdy > 0) {
			var _this = Game.ME.level;
			var mark = LevelMark.EdgeGrab;
			var cx = this.cx;
			var cy = this.cy;
			var dir = null;
			var edgeDir = (!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei) || !_this.marks.exists(mark) ? false : dir == null ? _this.marks.get(mark).h.hasOwnProperty(cx + cy * _this.data.l_Collisions.cWid) : _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] == (dir == 0 ? 0 : dir > 0 ? 1 : -1)) ? _this.marks.get(mark).h[cx + cy * _this.data.l_Collisions.cWid] : 0;
			if(this.dir == edgeDir && (edgeDir == 1 && this.xr >= 0.3 || edgeDir == -1 && this.xr <= 0.7)) {
				this.dx = edgeDir * 0.05;
				this.autoWalkS(edgeDir,0.1);
				this.dy = -0.3;
				this.xr = 0.5;
				var x = this.yr;
				this.yr = x < 0.4 ? x : 0.4;
				this.bdy = 0;
			}
		}
		var tmp;
		var _this = this.ca;
		var k = 0;
		var tmp1;
		if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
			var tmp2;
			var tmp3;
			var tmp4;
			var k1 = _this.parent.primary.h[k];
			if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1))) {
				var k1 = _this.parent.secondary.h[k];
				tmp4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
			} else {
				tmp4 = true;
			}
			if(!tmp4) {
				var k1 = _this.parent.third.h[k];
				tmp3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
			} else {
				tmp3 = true;
			}
			if(!tmp3) {
				var k1 = _this.parent.fourth.h[k];
				tmp2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
			} else {
				tmp2 = true;
			}
			tmp1 = tmp2 || _this.parent.gc.isPressed(k);
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			var tmp1;
			if(this.destroyed) {
				tmp1 = true;
			} else {
				var tmp2;
				if(this.yr == 1) {
					var _this = Game.ME.level;
					var cx = this.cx;
					var cy = this.cy + 1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp2 = true;
					} else {
						var tmp3;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this1 = _this.data.l_Collisions;
							tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
						} else {
							tmp3 = true;
						}
						if(!tmp3) {
							var _this1 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
						} else {
							tmp2 = true;
						}
					}
				} else {
					tmp2 = false;
				}
				tmp1 = tmp2 && this.dy + this.bdy == 0;
			}
			if(!tmp1) {
				var tmp1;
				if(this.destroyed) {
					tmp1 = true;
				} else {
					var tmp2;
					if(this.yr == 1) {
						var _this = Game.ME.level;
						var cx = this.cx;
						var cy = this.cy + 1;
						if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
							tmp2 = true;
						} else {
							var tmp3;
							var _this1 = _this.data.l_Collisions;
							if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
								var _this1 = _this.data.l_Collisions;
								tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
							} else {
								tmp3 = true;
							}
							if(!tmp3) {
								var _this1 = _this.data.l_Collisions;
								tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
							} else {
								tmp2 = true;
							}
						}
					} else {
						tmp2 = false;
					}
					tmp1 = tmp2 && this.dy + this.bdy == 0;
				}
				tmp = tmp1 || !this.destroyed && this.cd.fastCheck.h.hasOwnProperty(0);
			} else {
				tmp = true;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			var dh = new dn_DecisionHelper(en_Bumper.ALL);
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var e1 = e.v;
					var ax = _gthis.cx + _gthis.xr;
					var ay = _gthis.cy + _gthis.yr;
					var bx = e1.cx + e1.xr;
					var by = e1.cy + e1.yr;
					tmp = !(Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) <= 2.5);
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				if(!e.out) {
					var e1 = e.v;
					var ax = _gthis.cx + _gthis.xr;
					var ay = _gthis.cy + _gthis.yr;
					var bx = e1.cx + e1.xr;
					var by = e1.cy + e1.yr;
					e.score += -Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by));
				}
			}
			this.jump(dh.getBest());
		} else if(this.cd.fastCheck.h.hasOwnProperty(67108864)) {
			var _this = Game.ME;
			this.dy += -0.10 * (_this.utmod * _this.getComputedTimeMultiplier());
		} else if(this.cd.fastCheck.h.hasOwnProperty(75497472)) {
			var _this = Game.ME;
			this.dy += -0.04 * (_this.utmod * _this.getComputedTimeMultiplier());
		}
		var _g = 0;
		var _g1 = en_Item.ALL;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.destroyed && !e.isCarried() && !e.cd.fastCheck.h.hasOwnProperty(20971520)) {
				var tmp;
				var tmp1;
				var tmp2;
				if(e.gravityMul == 0) {
					var tmp3;
					if(this.destroyed) {
						tmp3 = true;
					} else {
						var tmp4;
						if(this.yr == 1) {
							var _this = Game.ME.level;
							var cx = this.cx;
							var cy = this.cy + 1;
							if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
								tmp4 = true;
							} else {
								var tmp5;
								var _this1 = _this.data.l_Collisions;
								if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
									var _this2 = _this.data.l_Collisions;
									tmp5 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
								} else {
									tmp5 = true;
								}
								if(!tmp5) {
									var _this3 = _this.data.l_Collisions;
									tmp4 = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
								} else {
									tmp4 = true;
								}
							}
						} else {
							tmp4 = false;
						}
						tmp3 = tmp4 && this.dy + this.bdy == 0;
					}
					tmp2 = !tmp3;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					var ax = this.cx + this.xr;
					var ay = this.cy + this.yr;
					var bx = e.cx + e.xr;
					var by = e.cy + e.yr;
					tmp1 = Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) <= 4;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					var x = this.cx - e.cx;
					tmp = (x < 0 ? -x : x) <= 2;
				} else {
					tmp = false;
				}
				if(tmp) {
					this.startCarrying(e);
				} else {
					var ax1 = this.cx + this.xr;
					var ay1 = this.cy + this.yr;
					var bx1 = e.cx + e.xr;
					var by1 = e.cy + e.yr;
					if(Math.sqrt((ax1 - bx1) * (ax1 - bx1) + (ay1 - by1) * (ay1 - by1)) <= 2.5) {
						this.startCarrying(e);
					}
				}
			}
		}
	}
	,__class__: en_Hero
});
var en_Home = function(e) {
	this.data = e;
	Entity.call(this,e.cx,e.cy);
	en_Home.ALL.push(this);
	this.storageAng = Math.atan2(this.data.f_storage[1].cy - this.data.f_storage[0].cy,this.data.f_storage[1].cx - this.data.f_storage[0].cx);
	var ax = this.data.f_storage[0].cx;
	var ay = this.data.f_storage[0].cy;
	var bx = this.data.f_storage[1].cx;
	var by = this.data.f_storage[1].cy;
	this.storageSize = Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) - 1;
	var _this = this.spr;
	var l = null;
	if(l != null) {
		if(l.pages == null || l.pages.length == 0) {
			throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
		}
		if(_this.allocated && _this.lib != null) {
			_this.lib.removeChild(_this);
		}
		_this.lib = l;
		if(_this.allocated) {
			_this.lib.addChild(_this);
		}
		if(_this.pivot.isUndefined) {
			var xRatio = _this.lib.defaultCenterX;
			var yRatio = _this.lib.defaultCenterY;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this1 = _this.pivot;
			_this1.centerFactorX = xRatio;
			_this1.centerFactorY = yRatio;
			_this1.usingFactor = true;
			_this1.isUndefined = false;
		}
	}
	if("empty" != _this.groupName) {
		_this.groupName = "empty";
	}
	if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
		var _this1 = _this.lib;
		var k = _this.groupName;
		_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
		var _this1 = _this.lib;
		var k = _this.groupName;
		var frame = 0;
		if(frame == null) {
			frame = 0;
		}
		var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
		_this.frameData = g == null ? null : g.frames[frame];
		if(_this.frameData == null) {
			throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
		}
		if(_this.rawTile == null) {
			_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
		} else {
			_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
		}
		_this.lastPage = _this.frameData.page;
		_this.setFrame(0);
	} else {
		_this.setEmptyTexture();
	}
};
$hxClasses["en.Home"] = en_Home;
en_Home.__name__ = "en.Home";
en_Home.__super__ = Entity;
en_Home.prototype = $extend(Entity.prototype,{
	getCarriageX: function(offset) {
		return (this.data.f_storage[0].cx + 0.5 + Math.cos(this.storageAng) * this.storageSize * (0.5 + offset * 0.5)) * Const.GRID;
	}
	,getCarriageY: function(offset) {
		return (this.data.f_storage[0].cy + 1 + Math.sin(this.storageAng) * this.storageSize * (0.5 + offset * 0.5)) * Const.GRID;
	}
	,dispose: function() {
		Entity.prototype.dispose.call(this);
		HxOverrides.remove(en_Home.ALL,this);
	}
	,startCarrying: function(e) {
		Entity.prototype.startCarrying.call(this,e);
	}
	,update: function() {
		var _gthis = this;
		Entity.prototype.update.call(this);
		var _g = 0;
		var _g1 = en_Item.ALL;
		while(_g < _g1.length) {
			var e = [_g1[_g]];
			++_g;
			var tmp;
			if(!e[0].destroyed && !this.isCarrying(e[0])) {
				var ax = this.cx + this.xr;
				var ay = this.cy + this.yr;
				var bx = e[0].cx + e[0].xr;
				var by = e[0].cy + e[0].yr;
				tmp = Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) <= this.data.f_grabRadius;
			} else {
				tmp = false;
			}
			if(tmp && Game.ME.hero.isCarrying(e[0])) {
				Game.ME.hero.stopCarrying(e[0]);
				var _this = e[0].cd;
				var frames = Const.INFINITE * e[0].cd.baseFps;
				var allowLower = true;
				var onComplete = null;
				if(allowLower == null) {
					allowLower = true;
				}
				frames = Math.floor(frames * 1000) / 1000;
				var cur = _this._getCdObject(16777216);
				if(!(cur != null && frames < cur.frames && !allowLower)) {
					if(frames <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[16777216] = true;
						if(cur != null) {
							cur.frames = frames;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(16777216,frames));
						}
					}
					if(onComplete != null) {
						if(frames <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(16777216);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 16777216 + "): cooldown " + 16777216 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
				e[0].hasWallCollisions = false;
				e[0].cancelVelocities();
				var _this1 = Game.ME.cart;
				var _this2 = Game.ME.cart;
				e[0].setPosPixel((_this1.cx + _this1.xr) * Const.GRID,(_this2.cy + _this2.yr) * Const.GRID - 7);
				var sign = null;
				if(sign == null) {
					sign = false;
				}
				e[0].bump(0,-(sign ? (0.2 + Math.random() * 0.099999999999999978) * (Std.random(2) * 2 - 1) : 0.2 + Math.random() * 0.099999999999999978));
				var _this3 = e[0].cd;
				var frames1 = 2 * e[0].cd.baseFps;
				var allowLower1 = true;
				var onComplete1 = null;
				if(allowLower1 == null) {
					allowLower1 = true;
				}
				frames1 = Math.floor(frames1 * 1000) / 1000;
				var cur1 = _this3._getCdObject(20971520);
				if(!(cur1 != null && frames1 < cur1.frames && !allowLower1)) {
					if(frames1 <= 0) {
						if(cur1 != null) {
							HxOverrides.remove(_this3.cdList,cur1);
							cur1.frames = 0;
							cur1.cb = null;
							_this3.fastCheck.remove(cur1.k);
						}
					} else {
						_this3.fastCheck.h[20971520] = true;
						if(cur1 != null) {
							cur1.frames = frames1;
						} else {
							_this3.cdList.push(new dn__$Cooldown_CdInst(20971520,frames1));
						}
					}
					if(onComplete1 != null) {
						if(frames1 <= 0) {
							onComplete1();
						} else {
							var cd1 = _this3._getCdObject(20971520);
							if(cd1 == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 20971520 + "): cooldown " + 20971520 + " isn't running");
							}
							cd1.cb = onComplete1;
						}
					}
				}
				var _this4 = e[0].cd;
				var _this5 = e[0].cd;
				var sign1 = null;
				if(sign1 == null) {
					sign1 = false;
				}
				var frames2 = (sign1 ? (0.1 + Math.random() * 0.19999999999999998) * (Std.random(2) * 2 - 1) : 0.1 + Math.random() * 0.19999999999999998) * _this5.baseFps;
				var allowLower2 = true;
				var onComplete2 = null;
				if(allowLower2 == null) {
					allowLower2 = true;
				}
				frames2 = Math.floor(frames2 * 1000) / 1000;
				var cur2 = _this4._getCdObject(25165824);
				if(!(cur2 != null && frames2 < cur2.frames && !allowLower2)) {
					if(frames2 <= 0) {
						if(cur2 != null) {
							HxOverrides.remove(_this4.cdList,cur2);
							cur2.frames = 0;
							cur2.cb = null;
							_this4.fastCheck.remove(cur2.k);
						}
					} else {
						_this4.fastCheck.h[25165824] = true;
						if(cur2 != null) {
							cur2.frames = frames2;
						} else {
							_this4.cdList.push(new dn__$Cooldown_CdInst(25165824,frames2));
						}
					}
					if(onComplete2 != null) {
						if(frames2 <= 0) {
							onComplete2();
						} else {
							var cd2 = _this4._getCdObject(25165824);
							if(cd2 == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 25165824 + "): cooldown " + 25165824 + " isn't running");
							}
							cd2.cb = onComplete2;
						}
					}
				}
			}
			if(!e[0].cd.fastCheck.h.hasOwnProperty(25165824) && e[0].cd.fastCheck.h.hasOwnProperty(16777216)) {
				var _this6 = e[0].cd;
				var _g2 = 0;
				var _g3 = _this6.cdList;
				while(_g2 < _g3.length) {
					var cd3 = _g3[_g2];
					++_g2;
					if(cd3.k == 16777216) {
						HxOverrides.remove(_this6.cdList,cd3);
						cd3.frames = 0;
						cd3.cb = null;
						_this6.fastCheck.remove(cd3.k);
						break;
					}
				}
				this.startCarrying(e[0]);
				Game.ME.delayer.addS(null,(function(e) {
					return function() {
						if(!e[0].destroyed && e[0].spr != null && !Game.ME.fx.destroyed) {
							Game.ME.fx.homeDrop(e[0].spr.x,e[0].spr.y - 4);
						}
					};
				})(e),0.3);
			}
		}
		if(this.carriedEnts.length > 25) {
			var e1 = this.carriedEnts[0];
			this.stopCarrying(e1);
			if(!e1.destroyed) {
				e1.destroyed = true;
				Entity.GC.push(e1);
			}
		}
		var _g = 0;
		var _g1 = this.carriedEnts;
		while(_g < _g1.length) {
			var e1 = _g1[_g];
			++_g;
			e1.carriedShaking = 1;
		}
	}
	,__class__: en_Home
});
var en_Item = function(t,x,y) {
	this.neverPicked = true;
	this.type = t;
	Entity.call(this,x,y);
	var sign = null;
	if(sign == null) {
		sign = false;
	}
	this.xr = sign ? (0.1 + Math.random() * 0.8) * (Std.random(2) * 2 - 1) : 0.1 + Math.random() * 0.8;
	var sign = null;
	if(sign == null) {
		sign = false;
	}
	this.yr = sign ? (0.1 + Math.random() * 0.8) * (Std.random(2) * 2 - 1) : 0.1 + Math.random() * 0.8;
	en_Item.ALL.push(this);
	var _this = this.spr.lib;
	var e = this.type;
	var k = "item" + $hxEnums[e.__enum__].__constructs__[e._hx_index];
	if(k != null && Object.prototype.hasOwnProperty.call(_this.groups.h,k) && _this.groups.h[k].frames.length > 0) {
		var _this = this.spr;
		var l = null;
		var e = this.type;
		var g = "item" + $hxEnums[e.__enum__].__constructs__[e._hx_index];
		if(l != null) {
			if(l.pages == null || l.pages.length == 0) {
				throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
			}
			if(g == null) {
				_this.groupName = null;
				_this.group = null;
				_this.frameData = null;
			}
			if(_this.allocated && _this.lib != null) {
				_this.lib.removeChild(_this);
			}
			_this.lib = l;
			if(_this.allocated) {
				_this.lib.addChild(_this);
			}
			if(_this.pivot.isUndefined) {
				var xRatio = _this.lib.defaultCenterX;
				var yRatio = _this.lib.defaultCenterY;
				if(yRatio == null) {
					yRatio = 0.5;
				}
				if(xRatio == null) {
					xRatio = 0.5;
				}
				var _this1 = _this.pivot;
				_this1.centerFactorX = xRatio;
				_this1.centerFactorY = yRatio;
				_this1.usingFactor = true;
				_this1.isUndefined = false;
			}
		}
		if(g != null && g != _this.groupName) {
			_this.groupName = g;
		}
		if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
			var _this1 = _this.lib;
			var k = _this.groupName;
			_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
			var _this1 = _this.lib;
			var k = _this.groupName;
			var frame = 0;
			if(frame == null) {
				frame = 0;
			}
			var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
			_this.frameData = g == null ? null : g.frames[frame];
			if(_this.frameData == null) {
				throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
			}
			if(_this.rawTile == null) {
				_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
			} else {
				_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
			}
			_this.lastPage = _this.frameData.page;
			_this.setFrame(0);
		} else {
			_this.setEmptyTexture();
		}
	} else {
		var _this = this.spr;
		var l = null;
		if(l != null) {
			if(l.pages == null || l.pages.length == 0) {
				throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
			}
			if(_this.allocated && _this.lib != null) {
				_this.lib.removeChild(_this);
			}
			_this.lib = l;
			if(_this.allocated) {
				_this.lib.addChild(_this);
			}
			if(_this.pivot.isUndefined) {
				var xRatio = _this.lib.defaultCenterX;
				var yRatio = _this.lib.defaultCenterY;
				if(yRatio == null) {
					yRatio = 0.5;
				}
				if(xRatio == null) {
					xRatio = 0.5;
				}
				var _this1 = _this.pivot;
				_this1.centerFactorX = xRatio;
				_this1.centerFactorY = yRatio;
				_this1.usingFactor = true;
				_this1.isUndefined = false;
			}
		}
		if("itemApple" != _this.groupName) {
			_this.groupName = "itemApple";
		}
		if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
			var _this1 = _this.lib;
			var k = _this.groupName;
			_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
			var _this1 = _this.lib;
			var k = _this.groupName;
			var frame = 0;
			if(frame == null) {
				frame = 0;
			}
			var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
			_this.frameData = g == null ? null : g.frames[frame];
			if(_this.frameData == null) {
				throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
			}
			if(_this.rawTile == null) {
				_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
			} else {
				_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
			}
			_this.lastPage = _this.frameData.page;
			_this.setFrame(0);
		} else {
			_this.setEmptyTexture();
		}
	}
	switch(this.type._hx_index) {
	case 0:
		this.spr.set_filter(new dn_heaps_filter_PixelOutline());
		break;
	case 1:
		this.hasCartoonDistorsion = false;
		break;
	case 2:
		this.spr.set_filter(new dn_heaps_filter_PixelOutline(16777215));
		break;
	}
};
$hxClasses["en.Item"] = en_Item;
en_Item.__name__ = "en.Item";
en_Item.__super__ = Entity;
en_Item.prototype = $extend(Entity.prototype,{
	dispose: function() {
		Entity.prototype.dispose.call(this);
		HxOverrides.remove(en_Item.ALL,this);
	}
	,onStopBeingCarried: function(by) {
		Entity.prototype.onStopBeingCarried.call(this,by);
		var _this = this.cd;
		var frames = 0.5 * this.cd.baseFps;
		var allowLower = true;
		var onComplete = null;
		if(allowLower == null) {
			allowLower = true;
		}
		frames = Math.floor(frames * 1000) / 1000;
		var cur = _this._getCdObject(20971520);
		if(!(cur != null && frames < cur.frames && !allowLower)) {
			if(frames <= 0) {
				if(cur != null) {
					HxOverrides.remove(_this.cdList,cur);
					cur.frames = 0;
					cur.cb = null;
					_this.fastCheck.remove(cur.k);
				}
			} else {
				_this.fastCheck.h[20971520] = true;
				if(cur != null) {
					cur.frames = frames;
				} else {
					_this.cdList.push(new dn__$Cooldown_CdInst(20971520,frames));
				}
			}
			if(onComplete != null) {
				if(frames <= 0) {
					onComplete();
				} else {
					var cd = _this._getCdObject(20971520);
					if(cd == null) {
						throw haxe_Exception.thrown("cannot bind onComplete(" + 20971520 + "): cooldown " + 20971520 + " isn't running");
					}
					cd.cb = onComplete;
				}
			}
		}
	}
	,onBeingCarried: function(by) {
		Entity.prototype.onBeingCarried.call(this,by);
		if(by.is(en_Home)) {
			var col = Const.BG_COLOR;
			var ratioNewColor = 0.4;
			var ratioOldColor = null;
			if(ratioNewColor == null) {
				ratioNewColor = 1.0;
			}
			if(ratioOldColor == null) {
				ratioOldColor = 1 - ratioNewColor;
			}
			var rgb_r = col >> 16 & 255;
			var rgb_g = col >> 8 & 255;
			var rgb_b = col & 255;
			var r = ratioNewColor * rgb_r / 255;
			var g = ratioNewColor * rgb_g / 255;
			var b = ratioNewColor * rgb_b / 255;
			var m = [ratioOldColor + r,g,b,0,r,ratioOldColor + g,b,0,r,g,ratioOldColor + b,0,0,0,0,1];
			this.colorMatrix.load(h3d_Matrix.L(m));
			this.spr.alpha = 0.5;
		}
		if(this.neverPicked) {
			switch(this.type._hx_index) {
			case 0:
				Game.ME.fx.pick((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID - 8);
				Game.ME.fx.grass((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID,-((by.cx + by.xr) * Const.GRID < (this.cx + this.xr) * Const.GRID ? -1 : 1));
				break;
			case 1:
				Game.ME.fx.pick((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID + 4);
				Game.ME.fx.leaves((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID + 4);
				break;
			case 2:
				Game.ME.fx.pick((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID - 8);
				break;
			}
		}
		this.neverPicked = false;
	}
	,postUpdate: function() {
		Entity.prototype.postUpdate.call(this);
		if(this.gravityMul == 0 && !this.isCarried()) {
			var xRatio = 0.5;
			var yRatio = 0.2;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this = this.spr.pivot;
			_this.centerFactorX = xRatio;
			_this.centerFactorY = yRatio;
			_this.usingFactor = true;
			_this.isUndefined = false;
			var _this = this.spr;
			var v = Math.cos(Game.ME.ftime * 0.1 + this.randVal * 6.283185307179586) * (0.2 + 0.1 * this.randVal);
			_this.posChanged = true;
			_this.rotation = v;
		} else {
			var xRatio = 0.5;
			var yRatio = 1;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this = this.spr.pivot;
			_this.centerFactorX = xRatio;
			_this.centerFactorY = yRatio;
			_this.usingFactor = true;
			_this.isUndefined = false;
		}
		if(this.isCarried()) {
			this.addToLayer(Const.DP_BG);
		} else {
			this.addToLayer(Const.DP_MAIN);
		}
		var tmp;
		if(this.type == Enum_$Item.Diamond && !this.isCarried()) {
			var _this = this.cd;
			var frames = 0.1 * this.cd.baseFps;
			var tmp1;
			if(_this.fastCheck.h.hasOwnProperty(33554432)) {
				tmp1 = true;
			} else {
				var frames1 = frames;
				var onComplete = null;
				frames1 = Math.floor(frames1 * 1000) / 1000;
				var cur = _this._getCdObject(33554432);
				if(!(cur != null && frames1 < cur.frames && false)) {
					if(frames1 <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[33554432] = true;
						if(cur != null) {
							cur.frames = frames1;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(33554432,frames1));
						}
					}
					if(onComplete != null) {
						if(frames1 <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(33554432);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 33554432 + "): cooldown " + 33554432 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp) {
			Game.ME.fx.shine((this.cx + this.xr) * Const.GRID,(this.cy + this.yr) * Const.GRID - this.hei * 0.5,2797055);
		}
	}
	,update: function() {
		Entity.prototype.update.call(this);
		var tmp;
		var tmp1;
		if(this.destroyed) {
			tmp1 = true;
		} else {
			var tmp2;
			if(this.yr == 1) {
				var _this = Game.ME.level;
				var cx = this.cx;
				var cy = this.cy + 1;
				if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
					tmp2 = true;
				} else {
					var tmp3;
					var _this1 = _this.data.l_Collisions;
					if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
						var _this1 = _this.data.l_Collisions;
						tmp3 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 2;
					} else {
						tmp3 = true;
					}
					if(!tmp3) {
						var _this1 = _this.data.l_Collisions;
						tmp2 = (!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) == 4;
					} else {
						tmp2 = true;
					}
				}
			} else {
				tmp2 = false;
			}
			tmp1 = tmp2 && this.dy + this.bdy == 0;
		}
		if(tmp1 && !this.isCarried()) {
			var _this = this.cd;
			var frames = 0.4 * this.cd.baseFps;
			var tmp1;
			if(_this.fastCheck.h.hasOwnProperty(37748736)) {
				tmp1 = true;
			} else {
				var frames1 = frames;
				var onComplete = null;
				frames1 = Math.floor(frames1 * 1000) / 1000;
				var cur = _this._getCdObject(37748736);
				if(!(cur != null && frames1 < cur.frames && false)) {
					if(frames1 <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[37748736] = true;
						if(cur != null) {
							cur.frames = frames1;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(37748736,frames1));
						}
					}
					if(onComplete != null) {
						if(frames1 <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(37748736);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 37748736 + "): cooldown " + 37748736 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.dy = -0.2;
		}
	}
	,__class__: en_Item
});
var en_ItemGen = function(e) {
	this.children = [];
	this.data = e;
	Entity.call(this,e.cx,e.cy);
	en_ItemGen.ALL.push(this);
	this.xr = 0.5;
	this.yr = 0.5;
	this.gravityMul = 0;
	this.hasWallCollisions = false;
	var _this = this.spr;
	var l = null;
	if(l != null) {
		if(l.pages == null || l.pages.length == 0) {
			throw haxe_Exception.thrown("sprite sheet has no backing texture, please generate one");
		}
		if(_this.allocated && _this.lib != null) {
			_this.lib.removeChild(_this);
		}
		_this.lib = l;
		if(_this.allocated) {
			_this.lib.addChild(_this);
		}
		if(_this.pivot.isUndefined) {
			var xRatio = _this.lib.defaultCenterX;
			var yRatio = _this.lib.defaultCenterY;
			if(yRatio == null) {
				yRatio = 0.5;
			}
			if(xRatio == null) {
				xRatio = 0.5;
			}
			var _this1 = _this.pivot;
			_this1.centerFactorX = xRatio;
			_this1.centerFactorY = yRatio;
			_this1.usingFactor = true;
			_this1.isUndefined = false;
		}
	}
	if("empty" != _this.groupName) {
		_this.groupName = "empty";
	}
	if(!_this.destroyed && _this.lib != null && _this.groupName != null) {
		var _this1 = _this.lib;
		var k = _this.groupName;
		_this.group = k == null ? _this1.currentGroup : _this1.groups.h[k];
		var _this1 = _this.lib;
		var k = _this.groupName;
		var frame = 0;
		if(frame == null) {
			frame = 0;
		}
		var g = k == null ? _this1.currentGroup : _this1.groups.h[k];
		_this.frameData = g == null ? null : g.frames[frame];
		if(_this.frameData == null) {
			throw haxe_Exception.thrown("Unknown frame: " + _this.groupName + "(" + 0 + ")");
		}
		if(_this.rawTile == null) {
			_this.rawTile = _this.lib.pages[_this.frameData.page].clone();
		} else {
			_this.rawTile.setTexture(_this.lib.pages[_this.frameData.page].innerTex);
		}
		_this.lastPage = _this.frameData.page;
		_this.setFrame(0);
	} else {
		_this.setEmptyTexture();
	}
	var _g = 0;
	var _g1 = this.data.f_maxChildren;
	while(_g < _g1) {
		var i = _g++;
		this.spawn();
	}
};
$hxClasses["en.ItemGen"] = en_ItemGen;
en_ItemGen.__name__ = "en.ItemGen";
en_ItemGen.__super__ = Entity;
en_ItemGen.prototype = $extend(Entity.prototype,{
	spawn: function() {
		var _gthis = this;
		var i = new en_Item(this.data.f_type,this.cx,this.cy);
		var dh = new dn_DecisionHelper(dn_Bresenham.getDisc(this.cx,this.cy,this.data.f_radius));
		switch(this.data.f_spawnMode._hx_index) {
		case 0:
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					var _this = Game.ME.level;
					var cx = pt.x;
					var cy = pt.y;
					var tmp1;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp1 = true;
					} else {
						var tmp2;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this2 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
						} else {
							tmp2 = true;
						}
						if(!tmp2) {
							var _this3 = _this.data.l_Collisions;
							tmp1 = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
						} else {
							tmp1 = true;
						}
					}
					tmp = tmp1;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					var x0 = _gthis.cx;
					var y0 = _gthis.cy;
					var x1 = pt.x;
					var y1 = pt.y;
					var rayCanPass = $bind(_gthis,_gthis.canSeeThrough);
					var tmp1;
					if(!rayCanPass(x0,y0) || !rayCanPass(x1,y1)) {
						tmp1 = false;
					} else {
						var x = y1 - y0;
						var x2 = x1 - x0;
						var swapXY = (x < 0 ? -x : x) > (x2 < 0 ? -x2 : x2);
						var tmp2;
						if(swapXY) {
							tmp2 = x0;
							x0 = y0;
							y0 = tmp2;
							tmp2 = x1;
							x1 = y1;
							y1 = tmp2;
						}
						if(x0 > x1) {
							tmp2 = x0;
							x0 = x1;
							x1 = tmp2;
							tmp2 = y0;
							y0 = y1;
							y1 = tmp2;
						}
						var deltax = x1 - x0;
						var x3 = y1 - y0;
						var deltay = Math.floor(x3 < 0 ? -x3 : x3);
						var error = Math.floor(deltax / 2);
						var y = y0;
						var ystep = y0 < y1 ? 1 : -1;
						var valid = true;
						var _g2 = x0;
						var _g3 = x1 + 1;
						while(_g2 < _g3) {
							var x4 = _g2++;
							if(swapXY && !rayCanPass(y,x4) || !swapXY && !rayCanPass(x4,y)) {
								valid = false;
								break;
							}
							error -= deltay;
							if(error < 0) {
								y += ystep;
								error += deltax;
							}
						}
						tmp1 = valid;
					}
					tmp = !tmp1;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					tmp = Game.ME.level.getGroundDist(pt.x,pt.y) > 5;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					tmp = Game.ME.level.getGroundDist(pt.x,pt.y) < _gthis.data.f_minGroundDist;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			break;
		case 1:
			var _g = 0;
			var _g1 = dh.all;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				var tmp;
				if(!e.out) {
					var pt = e.v;
					var tmp1;
					var _this = Game.ME.level;
					var cx = pt.x;
					var cy = pt.y;
					var tmp2;
					if(!(cx >= 0 && cx < _this.data.l_Collisions.cWid && cy >= 0 && cy < _this.data.l_Collisions.cHei)) {
						tmp2 = true;
					} else {
						var tmp3;
						var _this1 = _this.data.l_Collisions;
						if((!(cx >= 0 && cx < _this1.cWid && cy >= 0 && cy < _this1.cHei) || !_this1.intGrid.h.hasOwnProperty(cx + cy * _this1.cWid) ? -1 : _this1.intGrid.h[cx + cy * _this1.cWid]) != 0) {
							var _this2 = _this.data.l_Collisions;
							tmp3 = (!(cx >= 0 && cx < _this2.cWid && cy >= 0 && cy < _this2.cHei) || !_this2.intGrid.h.hasOwnProperty(cx + cy * _this2.cWid) ? -1 : _this2.intGrid.h[cx + cy * _this2.cWid]) == 2;
						} else {
							tmp3 = true;
						}
						if(!tmp3) {
							var _this3 = _this.data.l_Collisions;
							tmp2 = (!(cx >= 0 && cx < _this3.cWid && cy >= 0 && cy < _this3.cHei) || !_this3.intGrid.h.hasOwnProperty(cx + cy * _this3.cWid) ? -1 : _this3.intGrid.h[cx + cy * _this3.cWid]) == 4;
						} else {
							tmp2 = true;
						}
					}
					if(!tmp2) {
						var _this4 = Game.ME.level;
						var cx1 = pt.x;
						var cy1 = pt.y + 1;
						if(!(cx1 >= 0 && cx1 < _this4.data.l_Collisions.cWid && cy1 >= 0 && cy1 < _this4.data.l_Collisions.cHei)) {
							tmp1 = true;
						} else {
							var tmp4;
							var _this5 = _this4.data.l_Collisions;
							if((!(cx1 >= 0 && cx1 < _this5.cWid && cy1 >= 0 && cy1 < _this5.cHei) || !_this5.intGrid.h.hasOwnProperty(cx1 + cy1 * _this5.cWid) ? -1 : _this5.intGrid.h[cx1 + cy1 * _this5.cWid]) != 0) {
								var _this6 = _this4.data.l_Collisions;
								tmp4 = (!(cx1 >= 0 && cx1 < _this6.cWid && cy1 >= 0 && cy1 < _this6.cHei) || !_this6.intGrid.h.hasOwnProperty(cx1 + cy1 * _this6.cWid) ? -1 : _this6.intGrid.h[cx1 + cy1 * _this6.cWid]) == 2;
							} else {
								tmp4 = true;
							}
							if(!tmp4) {
								var _this7 = _this4.data.l_Collisions;
								tmp1 = (!(cx1 >= 0 && cx1 < _this7.cWid && cy1 >= 0 && cy1 < _this7.cHei) || !_this7.intGrid.h.hasOwnProperty(cx1 + cy1 * _this7.cWid) ? -1 : _this7.intGrid.h[cx1 + cy1 * _this7.cWid]) == 4;
							} else {
								tmp1 = true;
							}
						}
					} else {
						tmp1 = false;
					}
					tmp = !tmp1;
				} else {
					tmp = false;
				}
				if(tmp) {
					e.out = true;
				}
			}
			break;
		}
		var _g = 0;
		var _g1 = dh.all;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.out) {
				e.score += (function(pt) {
					var _g = 0;
					var _g1 = _gthis.children;
					while(_g < _g1.length) {
						var e = _g1[_g];
						++_g;
						if(e.cx == pt.x && e.cy == pt.y) {
							return -10;
						} else {
							var ax = e.cx + e.xr;
							var ay = e.cy + e.yr;
							var bx = pt.x + 0.5;
							var by = pt.y + 0.5;
							if(Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by)) <= 1) {
								return -1;
							}
						}
					}
					return 0;
				})(e.v);
			}
		}
		var _g = 0;
		var _g1 = dh.all;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(!e.out) {
				var pt = e.v;
				var sign = null;
				if(sign == null) {
					sign = false;
				}
				e.score += sign ? Math.random() * 0.5 * (Std.random(2) * 2 - 1) : Math.random() * 0.5;
			}
		}
		var e = dh.getBest();
		if(e != null) {
			i.setPosCase(e.x,e.y);
		}
		switch(this.data.f_spawnMode._hx_index) {
		case 0:
			i.gravityMul = 0;
			break;
		case 1:
			var sign = true;
			if(sign == null) {
				sign = false;
			}
			i.dx = sign ? Math.random() * 0.1 * (Std.random(2) * 2 - 1) : Math.random() * 0.1;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			i.dy = -(sign ? (0.2 + Math.random() * 0.2) * (Std.random(2) * 2 - 1) : 0.2 + Math.random() * 0.2);
			break;
		}
		this.children.push(i);
	}
	,dispose: function() {
		Entity.prototype.dispose.call(this);
		HxOverrides.remove(en_ItemGen.ALL,this);
	}
	,update: function() {
		Entity.prototype.update.call(this);
		var i = 0;
		while(i < this.children.length) {
			var e = this.children[i];
			if(e.destroyed || e.isCarried()) {
				e.gravityMul = 1;
				this.children.splice(i,1);
				var _this = this.cd;
				var _this1 = this.cd;
				var sign = null;
				if(sign == null) {
					sign = false;
				}
				var frames = (sign ? (4 + Math.random()) * (Std.random(2) * 2 - 1) : 4 + Math.random()) * _this1.baseFps;
				var allowLower = false;
				var onComplete = null;
				if(allowLower == null) {
					allowLower = true;
				}
				frames = Math.floor(frames * 1000) / 1000;
				var cur = _this._getCdObject(4194304);
				if(!(cur != null && frames < cur.frames && !allowLower)) {
					if(frames <= 0) {
						if(cur != null) {
							HxOverrides.remove(_this.cdList,cur);
							cur.frames = 0;
							cur.cb = null;
							_this.fastCheck.remove(cur.k);
						}
					} else {
						_this.fastCheck.h[4194304] = true;
						if(cur != null) {
							cur.frames = frames;
						} else {
							_this.cdList.push(new dn__$Cooldown_CdInst(4194304,frames));
						}
					}
					if(onComplete != null) {
						if(frames <= 0) {
							onComplete();
						} else {
							var cd = _this._getCdObject(4194304);
							if(cd == null) {
								throw haxe_Exception.thrown("cannot bind onComplete(" + 4194304 + "): cooldown " + 4194304 + " isn't running");
							}
							cd.cb = onComplete;
						}
					}
				}
			} else {
				++i;
			}
		}
		if(this.children.length == this.data.f_maxChildren) {
			var _this = this.cd;
			var _this1 = this.cd;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var frames = (sign ? (15 + Math.random() * 5) * (Std.random(2) * 2 - 1) : 15 + Math.random() * 5) * _this1.baseFps;
			var allowLower = false;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(4194304);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[4194304] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(4194304,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(4194304);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 4194304 + "): cooldown " + 4194304 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
		} else if(!this.cd.fastCheck.h.hasOwnProperty(4194304) && !this.cd.fastCheck.h.hasOwnProperty(8388608)) {
			var _this = this.cd;
			var _this1 = this.cd;
			var sign = null;
			if(sign == null) {
				sign = false;
			}
			var frames = (sign ? (2 + Math.random() * 3) * (Std.random(2) * 2 - 1) : 2 + Math.random() * 3) * _this1.baseFps;
			var allowLower = true;
			var onComplete = null;
			if(allowLower == null) {
				allowLower = true;
			}
			frames = Math.floor(frames * 1000) / 1000;
			var cur = _this._getCdObject(8388608);
			if(!(cur != null && frames < cur.frames && !allowLower)) {
				if(frames <= 0) {
					if(cur != null) {
						HxOverrides.remove(_this.cdList,cur);
						cur.frames = 0;
						cur.cb = null;
						_this.fastCheck.remove(cur.k);
					}
				} else {
					_this.fastCheck.h[8388608] = true;
					if(cur != null) {
						cur.frames = frames;
					} else {
						_this.cdList.push(new dn__$Cooldown_CdInst(8388608,frames));
					}
				}
				if(onComplete != null) {
					if(frames <= 0) {
						onComplete();
					} else {
						var cd = _this._getCdObject(8388608);
						if(cd == null) {
							throw haxe_Exception.thrown("cannot bind onComplete(" + 8388608 + "): cooldown " + 8388608 + " isn't running");
						}
						cd.cb = onComplete;
					}
				}
			}
			this.spawn();
		}
	}
	,__class__: en_ItemGen
});
var format_gif_Block = $hxEnums["format.gif.Block"] = { __ename__ : true, __constructs__ : ["BFrame","BExtension","BEOF"]
	,BFrame: ($_=function(frame) { return {_hx_index:0,frame:frame,__enum__:"format.gif.Block",toString:$estr}; },$_.__params__ = ["frame"],$_)
	,BExtension: ($_=function(extension) { return {_hx_index:1,extension:extension,__enum__:"format.gif.Block",toString:$estr}; },$_.__params__ = ["extension"],$_)
	,BEOF: {_hx_index:2,__enum__:"format.gif.Block",toString:$estr}
};
format_gif_Block.__empty_constructs__ = [format_gif_Block.BEOF];
var format_gif_Extension = $hxEnums["format.gif.Extension"] = { __ename__ : true, __constructs__ : ["EGraphicControl","EComment","EText","EApplicationExtension","EUnknown"]
	,EGraphicControl: ($_=function(gce) { return {_hx_index:0,gce:gce,__enum__:"format.gif.Extension",toString:$estr}; },$_.__params__ = ["gce"],$_)
	,EComment: ($_=function(text) { return {_hx_index:1,text:text,__enum__:"format.gif.Extension",toString:$estr}; },$_.__params__ = ["text"],$_)
	,EText: ($_=function(pte) { return {_hx_index:2,pte:pte,__enum__:"format.gif.Extension",toString:$estr}; },$_.__params__ = ["pte"],$_)
	,EApplicationExtension: ($_=function(ext) { return {_hx_index:3,ext:ext,__enum__:"format.gif.Extension",toString:$estr}; },$_.__params__ = ["ext"],$_)
	,EUnknown: ($_=function(id,data) { return {_hx_index:4,id:id,data:data,__enum__:"format.gif.Extension",toString:$estr}; },$_.__params__ = ["id","data"],$_)
};
format_gif_Extension.__empty_constructs__ = [];
var format_gif_ApplicationExtension = $hxEnums["format.gif.ApplicationExtension"] = { __ename__ : true, __constructs__ : ["AENetscapeLooping","AEUnknown"]
	,AENetscapeLooping: ($_=function(loops) { return {_hx_index:0,loops:loops,__enum__:"format.gif.ApplicationExtension",toString:$estr}; },$_.__params__ = ["loops"],$_)
	,AEUnknown: ($_=function(name,version,data) { return {_hx_index:1,name:name,version:version,data:data,__enum__:"format.gif.ApplicationExtension",toString:$estr}; },$_.__params__ = ["name","version","data"],$_)
};
format_gif_ApplicationExtension.__empty_constructs__ = [];
var format_gif_Version = $hxEnums["format.gif.Version"] = { __ename__ : true, __constructs__ : ["GIF87a","GIF89a","Unknown"]
	,GIF87a: {_hx_index:0,__enum__:"format.gif.Version",toString:$estr}
	,GIF89a: {_hx_index:1,__enum__:"format.gif.Version",toString:$estr}
	,Unknown: ($_=function(version) { return {_hx_index:2,version:version,__enum__:"format.gif.Version",toString:$estr}; },$_.__params__ = ["version"],$_)
};
format_gif_Version.__empty_constructs__ = [format_gif_Version.GIF87a,format_gif_Version.GIF89a];
var format_gif_DisposalMethod = $hxEnums["format.gif.DisposalMethod"] = { __ename__ : true, __constructs__ : ["UNSPECIFIED","NO_ACTION","FILL_BACKGROUND","RENDER_PREVIOUS","UNDEFINED"]
	,UNSPECIFIED: {_hx_index:0,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,NO_ACTION: {_hx_index:1,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,FILL_BACKGROUND: {_hx_index:2,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,RENDER_PREVIOUS: {_hx_index:3,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,UNDEFINED: ($_=function(index) { return {_hx_index:4,index:index,__enum__:"format.gif.DisposalMethod",toString:$estr}; },$_.__params__ = ["index"],$_)
};
format_gif_DisposalMethod.__empty_constructs__ = [format_gif_DisposalMethod.UNSPECIFIED,format_gif_DisposalMethod.NO_ACTION,format_gif_DisposalMethod.FILL_BACKGROUND,format_gif_DisposalMethod.RENDER_PREVIOUS];
var format_gif_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(false);
};
$hxClasses["format.gif.Reader"] = format_gif_Reader;
format_gif_Reader.__name__ = "format.gif.Reader";
format_gif_Reader.prototype = {
	read: function() {
		var b = 71;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 73;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 70;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var gifVer = this.i.readString(3);
		var version = format_gif_Version.GIF89a;
		switch(gifVer) {
		case "87a":
			version = format_gif_Version.GIF87a;
			break;
		case "89a":
			version = format_gif_Version.GIF89a;
			break;
		default:
			version = format_gif_Version.Unknown(gifVer);
		}
		var width = this.i.readUInt16();
		var height = this.i.readUInt16();
		var packedField = this.i.readByte();
		var bgIndex = this.i.readByte();
		var pixelAspectRatio = this.i.readByte();
		if(pixelAspectRatio != 0) {
			pixelAspectRatio = (pixelAspectRatio + 15) / 64;
		} else {
			pixelAspectRatio = 1;
		}
		var lsd = { width : width, height : height, hasGlobalColorTable : (packedField & 128) == 128, colorResolution : (packedField & 112) >>> 4, sorted : (packedField & 8) == 8, globalColorTableSize : 2 << (packedField & 7), backgroundColorIndex : bgIndex, pixelAspectRatio : pixelAspectRatio};
		var gct = null;
		if(lsd.hasGlobalColorTable) {
			gct = this.readColorTable(lsd.globalColorTableSize);
		}
		var blocks = new haxe_ds_List();
		while(true) {
			var b = this.readBlock();
			blocks.add(b);
			if(b == format_gif_Block.BEOF) {
				break;
			}
		}
		return { version : version, logicalScreenDescriptor : lsd, globalColorTable : gct, blocks : blocks};
	}
	,readBlock: function() {
		var blockID = this.i.readByte();
		switch(blockID) {
		case 33:
			return this.readExtension();
		case 44:
			return this.readImage();
		case 59:
			return format_gif_Block.BEOF;
		}
		return format_gif_Block.BEOF;
	}
	,readImage: function() {
		var x = this.i.readUInt16();
		var y = this.i.readUInt16();
		var width = this.i.readUInt16();
		var height = this.i.readUInt16();
		var packed = this.i.readByte();
		var localColorTable = (packed & 128) == 128;
		var interlaced = (packed & 64) == 64;
		var sorted = (packed & 32) == 32;
		var localColorTableSize = 2 << (packed & 7);
		var lct = null;
		if(localColorTable) {
			lct = this.readColorTable(localColorTableSize);
		}
		return format_gif_Block.BFrame({ x : x, y : y, width : width, height : height, localColorTable : localColorTable, interlaced : interlaced, sorted : sorted, localColorTableSize : localColorTableSize, pixels : this.readPixels(width,height,interlaced), colorTable : lct});
	}
	,readPixels: function(width,height,interlaced) {
		var input = this.i;
		var pixelsCount = width * height;
		var pixels = new haxe_io_Bytes(new ArrayBuffer(pixelsCount));
		var minCodeSize = input.readByte();
		var blockSize = input.readByte() - 1;
		var bits = input.readByte();
		var bitsCount = 8;
		var clearCode = 1 << minCodeSize;
		var eoiCode = clearCode + 1;
		var codeSize = minCodeSize + 1;
		var codeSizeLimit = 1 << codeSize;
		var codeMask = codeSizeLimit - 1;
		var baseDict = [];
		var _g = 0;
		var _g1 = clearCode;
		while(_g < _g1) {
			var i = _g++;
			baseDict[i] = [i];
		}
		var dict = [];
		var dictLen = clearCode + 2;
		var newRecord;
		var i = 0;
		var code = 0;
		var last;
		while(i < pixelsCount) {
			last = code;
			while(bitsCount < codeSize) {
				if(blockSize == 0) {
					break;
				}
				bits |= input.readByte() << bitsCount;
				bitsCount += 8;
				--blockSize;
				if(blockSize == 0) {
					blockSize = input.readByte();
				}
			}
			code = bits & codeMask;
			bits >>= codeSize;
			bitsCount -= codeSize;
			if(code == clearCode) {
				dict = baseDict.slice();
				dictLen = clearCode + 2;
				codeSize = minCodeSize + 1;
				codeSizeLimit = 1 << codeSize;
				codeMask = codeSizeLimit - 1;
				continue;
			}
			if(code == eoiCode) {
				break;
			}
			if(code < dictLen) {
				if(last != clearCode) {
					newRecord = dict[last].slice();
					newRecord.push(dict[code][0]);
					dict[dictLen++] = newRecord;
				}
			} else {
				if(code != dictLen) {
					throw haxe_Exception.thrown("Invalid LZW code. Excepted: " + dictLen + ", got: " + code);
				}
				newRecord = dict[last].slice();
				newRecord.push(newRecord[0]);
				dict[dictLen++] = newRecord;
			}
			newRecord = dict[code];
			var _g = 0;
			while(_g < newRecord.length) {
				var item = newRecord[_g];
				++_g;
				pixels.b[i++] = item;
			}
			if(dictLen == codeSizeLimit && codeSize < 12) {
				++codeSize;
				codeSizeLimit = 1 << codeSize;
				codeMask = codeSizeLimit - 1;
			}
		}
		while(blockSize > 0) {
			input.readByte();
			--blockSize;
			if(blockSize == 0) {
				blockSize = input.readByte();
			}
		}
		while(i < pixelsCount) pixels.b[i++] = 0;
		if(interlaced) {
			var buffer = new haxe_io_Bytes(new ArrayBuffer(pixelsCount));
			var offset = this.deinterlace(pixels,buffer,8,0,0,width,height);
			offset = this.deinterlace(pixels,buffer,8,4,offset,width,height);
			offset = this.deinterlace(pixels,buffer,4,2,offset,width,height);
			this.deinterlace(pixels,buffer,2,1,offset,width,height);
			pixels = buffer;
		}
		return pixels;
	}
	,deinterlace: function(input,output,step,y,offset,width,height) {
		while(y < height) {
			output.blit(y * width,input,offset,width);
			offset += width;
			y += step;
		}
		return offset;
	}
	,readExtension: function() {
		var subId = this.i.readByte();
		switch(subId) {
		case 1:
			if(this.i.readByte() != 12) {
				throw haxe_Exception.thrown("Incorrect size of Plain Text Extension introducer block.");
			}
			var tmp = this.i.readUInt16();
			var tmp1 = this.i.readUInt16();
			var tmp2 = this.i.readUInt16();
			var tmp3 = this.i.readUInt16();
			var tmp4 = this.i.readByte();
			var tmp5 = this.i.readByte();
			var tmp6 = this.i.readByte();
			var tmp7 = this.i.readByte();
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EText({ textGridX : tmp, textGridY : tmp1, textGridWidth : tmp2, textGridHeight : tmp3, charCellWidth : tmp4, charCellHeight : tmp5, textForegroundColorIndex : tmp6, textBackgroundColorIndex : tmp7, text : bytes.toString()}));
		case 249:
			if(this.i.readByte() != 4) {
				throw haxe_Exception.thrown("Incorrect Graphic Control Extension block size!");
			}
			var packed = this.i.readByte();
			var disposalMethod;
			switch((packed & 28) >> 2) {
			case 0:
				disposalMethod = format_gif_DisposalMethod.UNSPECIFIED;
				break;
			case 1:
				disposalMethod = format_gif_DisposalMethod.NO_ACTION;
				break;
			case 2:
				disposalMethod = format_gif_DisposalMethod.FILL_BACKGROUND;
				break;
			case 3:
				disposalMethod = format_gif_DisposalMethod.RENDER_PREVIOUS;
				break;
			default:
				disposalMethod = format_gif_DisposalMethod.UNDEFINED((packed & 28) >> 2);
			}
			var b = format_gif_Block.BExtension(format_gif_Extension.EGraphicControl({ disposalMethod : disposalMethod, userInput : (packed & 2) == 2, hasTransparentColor : (packed & 1) == 1, delay : this.i.readUInt16(), transparentIndex : this.i.readByte()}));
			this.i.readByte();
			return b;
		case 254:
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EComment(bytes.toString()));
		case 255:
			return this.readApplicationExtension();
		default:
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EUnknown(subId,bytes));
		}
	}
	,readApplicationExtension: function() {
		if(this.i.readByte() != 11) {
			throw haxe_Exception.thrown("Incorrect size of Application Extension introducer block.");
		}
		var name = this.i.readString(8);
		var version = this.i.readString(3);
		var buffer = new haxe_io_BytesOutput();
		var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
		var len = this.i.readByte();
		while(len != 0) {
			this.i.readBytes(bytes,0,len);
			buffer.writeBytes(bytes,0,len);
			len = this.i.readByte();
		}
		buffer.flush();
		bytes = buffer.getBytes();
		buffer.close();
		var data = bytes;
		if(name == "NETSCAPE" && version == "2.0" && data.b[0] == 1) {
			return format_gif_Block.BExtension(format_gif_Extension.EApplicationExtension(format_gif_ApplicationExtension.AENetscapeLooping(data.b[1] | data.b[2] << 8)));
		}
		return format_gif_Block.BExtension(format_gif_Extension.EApplicationExtension(format_gif_ApplicationExtension.AEUnknown(name,version,data)));
	}
	,readColorTable: function(size) {
		size *= 3;
		var output = new haxe_io_Bytes(new ArrayBuffer(size));
		var c = 0;
		while(c < size) {
			var v = this.i.readByte();
			output.b[c] = v;
			var v1 = this.i.readByte();
			output.b[c + 1] = v1;
			var v2 = this.i.readByte();
			output.b[c + 2] = v2;
			c += 3;
		}
		return output;
	}
	,__class__: format_gif_Reader
};
var format_gif_Tools = function() { };
$hxClasses["format.gif.Tools"] = format_gif_Tools;
format_gif_Tools.__name__ = "format.gif.Tools";
format_gif_Tools.extractFullBGRA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var bytes = new haxe_io_Bytes(new ArrayBuffer(data.logicalScreenDescriptor.width * data.logicalScreenDescriptor.height * 4));
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var block = val;
		switch(block._hx_index) {
		case 0:
			var frame = block.frame;
			var ct = frame.localColorTable ? frame.colorTable : data.globalColorTable;
			if(ct == null) {
				throw haxe_Exception.thrown("Frame does not have a color table!");
			}
			var transparentIndex = gce != null && gce.hasTransparentColor ? gce.transparentIndex * 3 : -1;
			var pixels = frame.pixels;
			var x = 0;
			var writeCaret = (frame.y * data.logicalScreenDescriptor.width + frame.x) * 4;
			var lineSkip = (data.logicalScreenDescriptor.width - frame.width) * 4 + 4;
			var disposalMethod = frameCaret != frameIndex && gce != null ? gce.disposalMethod : format_gif_DisposalMethod.NO_ACTION;
			switch(disposalMethod._hx_index) {
			case 2:
				var _g = 0;
				var _g1 = pixels.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[writeCaret] = 0;
					bytes.b[writeCaret + 1] = 0;
					bytes.b[writeCaret + 2] = 0;
					bytes.b[writeCaret + 3] = 0;
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
				break;
			case 3:
				break;
			default:
				var _g2 = 0;
				var _g3 = pixels.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					var index = pixels.b[i1] * 3;
					if(transparentIndex != index) {
						bytes.b[writeCaret] = ct.b[index + 2];
						bytes.b[writeCaret + 1] = ct.b[index + 1];
						bytes.b[writeCaret + 2] = ct.b[index];
						bytes.b[writeCaret + 3] = 255;
					}
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
			}
			if(frameCaret == frameIndex) {
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = block.extension;
			if(ext._hx_index == 0) {
				var g = ext.gce;
				gce = g;
			}
			break;
		default:
		}
	}
	return bytes;
};
var format_png_Color = $hxEnums["format.png.Color"] = { __ename__ : true, __constructs__ : ["ColGrey","ColTrue","ColIndexed"]
	,ColGrey: ($_=function(alpha) { return {_hx_index:0,alpha:alpha,__enum__:"format.png.Color",toString:$estr}; },$_.__params__ = ["alpha"],$_)
	,ColTrue: ($_=function(alpha) { return {_hx_index:1,alpha:alpha,__enum__:"format.png.Color",toString:$estr}; },$_.__params__ = ["alpha"],$_)
	,ColIndexed: {_hx_index:2,__enum__:"format.png.Color",toString:$estr}
};
format_png_Color.__empty_constructs__ = [format_png_Color.ColIndexed];
var format_png_Chunk = $hxEnums["format.png.Chunk"] = { __ename__ : true, __constructs__ : ["CEnd","CHeader","CData","CPalette","CUnknown"]
	,CEnd: {_hx_index:0,__enum__:"format.png.Chunk",toString:$estr}
	,CHeader: ($_=function(h) { return {_hx_index:1,h:h,__enum__:"format.png.Chunk",toString:$estr}; },$_.__params__ = ["h"],$_)
	,CData: ($_=function(b) { return {_hx_index:2,b:b,__enum__:"format.png.Chunk",toString:$estr}; },$_.__params__ = ["b"],$_)
	,CPalette: ($_=function(b) { return {_hx_index:3,b:b,__enum__:"format.png.Chunk",toString:$estr}; },$_.__params__ = ["b"],$_)
	,CUnknown: ($_=function(id,data) { return {_hx_index:4,id:id,data:data,__enum__:"format.png.Chunk",toString:$estr}; },$_.__params__ = ["id","data"],$_)
};
format_png_Chunk.__empty_constructs__ = [format_png_Chunk.CEnd];
var format_png_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(true);
	this.checkCRC = true;
};
$hxClasses["format.png.Reader"] = format_png_Reader;
format_png_Reader.__name__ = "format.png.Reader";
format_png_Reader.prototype = {
	read: function() {
		var b = 137;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 80;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 78;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 71;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 13;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 10;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 26;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 10;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var l = new haxe_ds_List();
		while(true) {
			var c = this.readChunk();
			l.add(c);
			if(c == format_png_Chunk.CEnd) {
				break;
			}
		}
		return l;
	}
	,readHeader: function(i) {
		i.set_bigEndian(true);
		var width = i.readInt32();
		var height = i.readInt32();
		var colbits = i.readByte();
		var color = i.readByte();
		var color1;
		switch(color) {
		case 0:
			color1 = format_png_Color.ColGrey(false);
			break;
		case 2:
			color1 = format_png_Color.ColTrue(false);
			break;
		case 3:
			color1 = format_png_Color.ColIndexed;
			break;
		case 4:
			color1 = format_png_Color.ColGrey(true);
			break;
		case 6:
			color1 = format_png_Color.ColTrue(true);
			break;
		default:
			throw haxe_Exception.thrown("Unknown color model " + color + ":" + colbits);
		}
		var compress = i.readByte();
		var filter = i.readByte();
		if(compress != 0 || filter != 0) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var interlace = i.readByte();
		if(interlace != 0 && interlace != 1) {
			throw haxe_Exception.thrown("Invalid header");
		}
		return { width : width, height : height, colbits : colbits, color : color1, interlaced : interlace == 1};
	}
	,readChunk: function() {
		var dataLen = this.i.readInt32();
		var id = this.i.readString(4);
		var data = this.i.read(dataLen);
		var crc = this.i.readInt32();
		if(this.checkCRC) {
			var c_crc = -1;
			var tmp = (c_crc ^ HxOverrides.cca(id,0)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var tmp = (c_crc ^ HxOverrides.cca(id,1)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var tmp = (c_crc ^ HxOverrides.cca(id,2)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var tmp = (c_crc ^ HxOverrides.cca(id,3)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var b = data.b.bufferValue;
			var _g = 0;
			var _g1 = data.length;
			while(_g < _g1) {
				var i = _g++;
				var tmp = (c_crc ^ b.bytes[i]) & 255;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				c_crc = c_crc >>> 8 ^ tmp;
			}
			if((c_crc ^ -1) != crc) {
				throw haxe_Exception.thrown("CRC check failure");
			}
		}
		switch(id) {
		case "IDAT":
			return format_png_Chunk.CData(data);
		case "IEND":
			return format_png_Chunk.CEnd;
		case "IHDR":
			return format_png_Chunk.CHeader(this.readHeader(new haxe_io_BytesInput(data)));
		case "PLTE":
			return format_png_Chunk.CPalette(data);
		default:
			return format_png_Chunk.CUnknown(id,data);
		}
	}
	,__class__: format_png_Reader
};
var format_png_Tools = function() { };
$hxClasses["format.png.Tools"] = format_png_Tools;
format_png_Tools.__name__ = "format.png.Tools";
format_png_Tools.getHeader = function(d) {
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var c = val;
		if(c._hx_index == 1) {
			var h = c.h;
			return h;
		}
	}
	throw haxe_Exception.thrown("Header not found");
};
format_png_Tools.getPalette = function(d) {
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var c = val;
		if(c._hx_index == 3) {
			var b = c.b;
			return b;
		}
	}
	return null;
};
format_png_Tools.extract32 = function(d,bytes,flipY) {
	var h = format_png_Tools.getHeader(d);
	var bgra = bytes == null ? new haxe_io_Bytes(new ArrayBuffer(h.width * h.height * 4)) : bytes;
	var data = null;
	var fullData = null;
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var c = val;
		if(c._hx_index == 2) {
			var b = c.b;
			if(fullData != null) {
				fullData.add(b);
			} else if(data == null) {
				data = b;
			} else {
				fullData = new haxe_io_BytesBuffer();
				fullData.add(data);
				fullData.add(b);
				data = null;
			}
		}
	}
	if(fullData != null) {
		data = fullData.getBytes();
	}
	if(data == null) {
		throw haxe_Exception.thrown("Data not found");
	}
	data = format_tools_Inflate.run(data);
	var r = 0;
	var w = 0;
	var lineDelta = 0;
	if(flipY) {
		lineDelta = -h.width * 8;
		w = (h.height - 1) * (h.width * 4);
	}
	var flipY1 = flipY ? -1 : 1;
	var _g = h.color;
	switch(_g._hx_index) {
	case 0:
		var alpha = _g.alpha;
		if(h.colbits != 8) {
			throw haxe_Exception.thrown("Unsupported color mode");
		}
		var width = h.width;
		var stride = (alpha ? 2 : 1) * width + 1;
		if(data.length < h.height * stride) {
			throw haxe_Exception.thrown("Not enough data");
		}
		var alphvaIdx = -1;
		if(!alpha) {
			var _g1_head = d.h;
			while(_g1_head != null) {
				var val = _g1_head.item;
				_g1_head = _g1_head.next;
				var t = val;
				if(t._hx_index == 4) {
					if(t.id == "tRNS") {
						var data1 = t.data;
						if(data1.length >= 2) {
							alphvaIdx = data1.b[1];
						}
						break;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = h.height;
		while(_g1 < _g2) {
			var y = _g1++;
			var f = data.b[r++];
			switch(f) {
			case 0:
				if(alpha) {
					var _g3 = 0;
					var _g4 = width;
					while(_g3 < _g4) {
						var x = _g3++;
						var v = data.b[r++];
						bgra.b[w++] = v;
						bgra.b[w++] = v;
						bgra.b[w++] = v;
						bgra.b[w++] = data.b[r++];
					}
				} else {
					var _g5 = 0;
					var _g6 = width;
					while(_g5 < _g6) {
						var x1 = _g5++;
						var v1 = data.b[r++];
						bgra.b[w++] = v1;
						bgra.b[w++] = v1;
						bgra.b[w++] = v1;
						bgra.b[w++] = v1 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 1:
				var cv = 0;
				var ca = 0;
				if(alpha) {
					var _g7 = 0;
					var _g8 = width;
					while(_g7 < _g8) {
						var x2 = _g7++;
						cv += data.b[r++];
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						ca += data.b[r++];
						bgra.b[w++] = ca;
					}
				} else {
					var _g9 = 0;
					var _g10 = width;
					while(_g9 < _g10) {
						var x3 = _g9++;
						cv += data.b[r++];
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						bgra.b[w++] = cv == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 2:
				var stride = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g11 = 0;
					var _g12 = width;
					while(_g11 < _g12) {
						var x4 = _g11++;
						var v2 = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = v2;
						bgra.b[w++] = v2;
						bgra.b[w++] = v2;
						bgra.b[w++] = data.b[r++] + bgra.b[w - stride];
					}
				} else {
					var _g13 = 0;
					var _g14 = width;
					while(_g13 < _g14) {
						var x5 = _g13++;
						var v3 = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = v3;
						bgra.b[w++] = v3;
						bgra.b[w++] = v3;
						bgra.b[w++] = v3 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 3:
				var cv1 = 0;
				var ca1 = 0;
				var stride1 = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g15 = 0;
					var _g16 = width;
					while(_g15 < _g16) {
						var x6 = _g15++;
						cv1 = data.b[r++] + (cv1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						ca1 = data.b[r++] + (ca1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = ca1;
					}
				} else {
					var _g17 = 0;
					var _g18 = width;
					while(_g17 < _g18) {
						var x7 = _g17++;
						cv1 = data.b[r++] + (cv1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 4:
				var stride2 = width * 4 * flipY1;
				var cv2 = 0;
				var ca2 = 0;
				if(alpha) {
					var _g19 = 0;
					var _g20 = width;
					while(_g19 < _g20) {
						var x8 = _g19++;
						var b = y == 0 ? 0 : bgra.b[w - stride2];
						var c = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k = cv2 + b - c;
						var pa = k - cv2;
						if(pa < 0) {
							pa = -pa;
						}
						var pb = k - b;
						if(pb < 0) {
							pb = -pb;
						}
						var pc = k - c;
						if(pc < 0) {
							pc = -pc;
						}
						var pos = r++;
						cv2 = (pa <= pb && pa <= pc ? cv2 : pb <= pc ? b : c) + data.b[pos] & 255;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						var b1 = y == 0 ? 0 : bgra.b[w - stride2];
						var c1 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k1 = ca2 + b1 - c1;
						var pa1 = k1 - ca2;
						if(pa1 < 0) {
							pa1 = -pa1;
						}
						var pb1 = k1 - b1;
						if(pb1 < 0) {
							pb1 = -pb1;
						}
						var pc1 = k1 - c1;
						if(pc1 < 0) {
							pc1 = -pc1;
						}
						var pos1 = r++;
						ca2 = (pa1 <= pb1 && pa1 <= pc1 ? ca2 : pb1 <= pc1 ? b1 : c1) + data.b[pos1] & 255;
						bgra.b[w++] = ca2;
					}
				} else {
					var _g21 = 0;
					var _g22 = width;
					while(_g21 < _g22) {
						var x9 = _g21++;
						var b2 = y == 0 ? 0 : bgra.b[w - stride2];
						var c2 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k2 = cv2 + b2 - c2;
						var pa2 = k2 - cv2;
						if(pa2 < 0) {
							pa2 = -pa2;
						}
						var pb2 = k2 - b2;
						if(pb2 < 0) {
							pb2 = -pb2;
						}
						var pc2 = k2 - c2;
						if(pc2 < 0) {
							pc2 = -pc2;
						}
						var pos2 = r++;
						cv2 = (pa2 <= pb2 && pa2 <= pc2 ? cv2 : pb2 <= pc2 ? b2 : c2) + data.b[pos2] & 255;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid filter " + f);
			}
			w += lineDelta;
		}
		break;
	case 1:
		var alpha = _g.alpha;
		if(h.colbits != 8) {
			throw haxe_Exception.thrown("Unsupported color mode");
		}
		var width = h.width;
		var stride = (alpha ? 4 : 3) * width + 1;
		if(data.length < h.height * stride) {
			throw haxe_Exception.thrown("Not enough data");
		}
		var alphaRed = -1;
		var alphaGreen = -1;
		var alphaBlue = -1;
		if(!alpha) {
			var _g1_head = d.h;
			while(_g1_head != null) {
				var val = _g1_head.item;
				_g1_head = _g1_head.next;
				var t = val;
				if(t._hx_index == 4) {
					if(t.id == "tRNS") {
						var data1 = t.data;
						if(data1.length >= 6) {
							alphaRed = data1.b[1];
							alphaGreen = data1.b[3];
							alphaBlue = data1.b[5];
						}
						break;
					}
				}
			}
		}
		var cr = 0;
		var cg = 0;
		var cb = 0;
		var ca = 0;
		var _g = 0;
		var _g1 = h.height;
		while(_g < _g1) {
			var y = _g++;
			var f = data.b[r++];
			switch(f) {
			case 0:
				if(alpha) {
					var _g2 = 0;
					var _g3 = width;
					while(_g2 < _g3) {
						var x = _g2++;
						bgra.b[w++] = data.b[r + 2];
						bgra.b[w++] = data.b[r + 1];
						bgra.b[w++] = data.b[r];
						bgra.b[w++] = data.b[r + 3];
						r += 4;
					}
				} else {
					var _g4 = 0;
					var _g5 = width;
					while(_g4 < _g5) {
						var x1 = _g4++;
						cb = data.b[r + 2];
						bgra.b[w++] = cb;
						cg = data.b[r + 1];
						bgra.b[w++] = cg;
						cr = data.b[r];
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 1:
				ca = 0;
				cb = ca;
				cg = cb;
				cr = cg;
				if(alpha) {
					var _g6 = 0;
					var _g7 = width;
					while(_g6 < _g7) {
						var x2 = _g6++;
						cb += data.b[r + 2];
						bgra.b[w++] = cb;
						cg += data.b[r + 1];
						bgra.b[w++] = cg;
						cr += data.b[r];
						bgra.b[w++] = cr;
						ca += data.b[r + 3];
						bgra.b[w++] = ca;
						r += 4;
					}
				} else {
					var _g8 = 0;
					var _g9 = width;
					while(_g8 < _g9) {
						var x3 = _g8++;
						cb += data.b[r + 2];
						bgra.b[w++] = cb;
						cg += data.b[r + 1];
						bgra.b[w++] = cg;
						cr += data.b[r];
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 2:
				var stride = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g10 = 0;
					var _g11 = width;
					while(_g10 < _g11) {
						var x4 = _g10++;
						bgra.b[w] = data.b[r + 2] + bgra.b[w - stride];
						++w;
						bgra.b[w] = data.b[r + 1] + bgra.b[w - stride];
						++w;
						bgra.b[w] = data.b[r] + bgra.b[w - stride];
						++w;
						bgra.b[w] = data.b[r + 3] + bgra.b[w - stride];
						++w;
						r += 4;
					}
				} else {
					var _g12 = 0;
					var _g13 = width;
					while(_g12 < _g13) {
						var x5 = _g12++;
						cb = data.b[r + 2] + bgra.b[w - stride];
						bgra.b[w] = cb;
						++w;
						cg = data.b[r + 1] + bgra.b[w - stride];
						bgra.b[w] = cg;
						++w;
						cr = data.b[r] + bgra.b[w - stride];
						bgra.b[w] = cr;
						++w;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 3:
				ca = 0;
				cb = ca;
				cg = cb;
				cr = cg;
				var stride1 = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g14 = 0;
					var _g15 = width;
					while(_g14 < _g15) {
						var x6 = _g14++;
						cb = data.b[r + 2] + (cb + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cb;
						cg = data.b[r + 1] + (cg + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cg;
						cr = data.b[r] + (cr + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cr;
						ca = data.b[r + 3] + (ca + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = ca;
						r += 4;
					}
				} else {
					var _g16 = 0;
					var _g17 = width;
					while(_g16 < _g17) {
						var x7 = _g16++;
						cb = data.b[r + 2] + (cb + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cb;
						cg = data.b[r + 1] + (cg + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cg;
						cr = data.b[r] + (cr + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 4:
				var stride2 = width * 4 * flipY1;
				ca = 0;
				cb = ca;
				cg = cb;
				cr = cg;
				if(alpha) {
					var _g18 = 0;
					var _g19 = width;
					while(_g18 < _g19) {
						var x8 = _g18++;
						var b = y == 0 ? 0 : bgra.b[w - stride2];
						var c = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k = cb + b - c;
						var pa = k - cb;
						if(pa < 0) {
							pa = -pa;
						}
						var pb = k - b;
						if(pb < 0) {
							pb = -pb;
						}
						var pc = k - c;
						if(pc < 0) {
							pc = -pc;
						}
						cb = (pa <= pb && pa <= pc ? cb : pb <= pc ? b : c) + data.b[r + 2] & 255;
						bgra.b[w++] = cb;
						var b1 = y == 0 ? 0 : bgra.b[w - stride2];
						var c1 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k1 = cg + b1 - c1;
						var pa1 = k1 - cg;
						if(pa1 < 0) {
							pa1 = -pa1;
						}
						var pb1 = k1 - b1;
						if(pb1 < 0) {
							pb1 = -pb1;
						}
						var pc1 = k1 - c1;
						if(pc1 < 0) {
							pc1 = -pc1;
						}
						cg = (pa1 <= pb1 && pa1 <= pc1 ? cg : pb1 <= pc1 ? b1 : c1) + data.b[r + 1] & 255;
						bgra.b[w++] = cg;
						var b2 = y == 0 ? 0 : bgra.b[w - stride2];
						var c2 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k2 = cr + b2 - c2;
						var pa2 = k2 - cr;
						if(pa2 < 0) {
							pa2 = -pa2;
						}
						var pb2 = k2 - b2;
						if(pb2 < 0) {
							pb2 = -pb2;
						}
						var pc2 = k2 - c2;
						if(pc2 < 0) {
							pc2 = -pc2;
						}
						cr = (pa2 <= pb2 && pa2 <= pc2 ? cr : pb2 <= pc2 ? b2 : c2) + data.b[r] & 255;
						bgra.b[w++] = cr;
						var b3 = y == 0 ? 0 : bgra.b[w - stride2];
						var c3 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k3 = ca + b3 - c3;
						var pa3 = k3 - ca;
						if(pa3 < 0) {
							pa3 = -pa3;
						}
						var pb3 = k3 - b3;
						if(pb3 < 0) {
							pb3 = -pb3;
						}
						var pc3 = k3 - c3;
						if(pc3 < 0) {
							pc3 = -pc3;
						}
						ca = (pa3 <= pb3 && pa3 <= pc3 ? ca : pb3 <= pc3 ? b3 : c3) + data.b[r + 3] & 255;
						bgra.b[w++] = ca;
						r += 4;
					}
				} else {
					var _g20 = 0;
					var _g21 = width;
					while(_g20 < _g21) {
						var x9 = _g20++;
						var b4 = y == 0 ? 0 : bgra.b[w - stride2];
						var c4 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k4 = cb + b4 - c4;
						var pa4 = k4 - cb;
						if(pa4 < 0) {
							pa4 = -pa4;
						}
						var pb4 = k4 - b4;
						if(pb4 < 0) {
							pb4 = -pb4;
						}
						var pc4 = k4 - c4;
						if(pc4 < 0) {
							pc4 = -pc4;
						}
						cb = (pa4 <= pb4 && pa4 <= pc4 ? cb : pb4 <= pc4 ? b4 : c4) + data.b[r + 2] & 255;
						bgra.b[w++] = cb;
						var b5 = y == 0 ? 0 : bgra.b[w - stride2];
						var c5 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k5 = cg + b5 - c5;
						var pa5 = k5 - cg;
						if(pa5 < 0) {
							pa5 = -pa5;
						}
						var pb5 = k5 - b5;
						if(pb5 < 0) {
							pb5 = -pb5;
						}
						var pc5 = k5 - c5;
						if(pc5 < 0) {
							pc5 = -pc5;
						}
						cg = (pa5 <= pb5 && pa5 <= pc5 ? cg : pb5 <= pc5 ? b5 : c5) + data.b[r + 1] & 255;
						bgra.b[w++] = cg;
						var b6 = y == 0 ? 0 : bgra.b[w - stride2];
						var c6 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k6 = cr + b6 - c6;
						var pa6 = k6 - cr;
						if(pa6 < 0) {
							pa6 = -pa6;
						}
						var pb6 = k6 - b6;
						if(pb6 < 0) {
							pb6 = -pb6;
						}
						var pc6 = k6 - c6;
						if(pc6 < 0) {
							pc6 = -pc6;
						}
						cr = (pa6 <= pb6 && pa6 <= pc6 ? cr : pb6 <= pc6 ? b6 : c6) + data.b[r] & 255;
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid filter " + f);
			}
			w += lineDelta;
		}
		break;
	case 2:
		var pal = format_png_Tools.getPalette(d);
		if(pal == null) {
			throw haxe_Exception.thrown("PNG Palette is missing");
		}
		var alpha = null;
		var _g1_head = d.h;
		while(_g1_head != null) {
			var val = _g1_head.item;
			_g1_head = _g1_head.next;
			var t = val;
			if(t._hx_index == 4) {
				if(t.id == "tRNS") {
					var data1 = t.data;
					alpha = data1;
					break;
				}
			}
		}
		if(alpha != null && alpha.length < 1 << h.colbits) {
			var alpha2 = new haxe_io_Bytes(new ArrayBuffer(1 << h.colbits));
			alpha2.blit(0,alpha,0,alpha.length);
			alpha2.fill(alpha.length,alpha2.length - alpha.length,255);
			alpha = alpha2;
		}
		var width = h.width;
		var stride = Math.ceil(width * h.colbits / 8) + 1;
		if(data.length < h.height * stride) {
			throw haxe_Exception.thrown("Not enough data");
		}
		var tmp = h.width * h.colbits;
		var rline = tmp >> 3;
		var _g = 0;
		var _g1 = h.height;
		while(_g < _g1) {
			var y = _g++;
			var f = data.b[r++];
			if(f == 0) {
				r += rline;
				continue;
			}
			switch(f) {
			case 1:
				var c = 0;
				var _g2 = 0;
				var _g3 = width;
				while(_g2 < _g3) {
					var x = _g2++;
					var v = data.b[r];
					c += v;
					data.b[r++] = c & 255;
				}
				break;
			case 2:
				var stride = y == 0 ? 0 : rline + 1;
				var _g4 = 0;
				var _g5 = width;
				while(_g4 < _g5) {
					var x1 = _g4++;
					var v1 = data.b[r];
					data.b[r] = v1 + data.b[r - stride];
					++r;
				}
				break;
			case 3:
				var c1 = 0;
				var stride1 = y == 0 ? 0 : rline + 1;
				var _g6 = 0;
				var _g7 = width;
				while(_g6 < _g7) {
					var x2 = _g6++;
					var v2 = data.b[r];
					c1 = v2 + (c1 + data.b[r - stride1] >> 1) & 255;
					data.b[r++] = c1;
				}
				break;
			case 4:
				var stride2 = rline + 1;
				var c2 = 0;
				var _g8 = 0;
				var _g9 = width;
				while(_g8 < _g9) {
					var x3 = _g8++;
					var v3 = data.b[r];
					var numChannels = 1;
					if(numChannels == null) {
						numChannels = 4;
					}
					var b = y == 0 ? 0 : data.b[r - stride2];
					var c3 = x3 == 0 || y == 0 ? 0 : data.b[r - stride2 - numChannels];
					var k = c2 + b - c3;
					var pa = k - c2;
					if(pa < 0) {
						pa = -pa;
					}
					var pb = k - b;
					if(pb < 0) {
						pb = -pb;
					}
					var pc = k - c3;
					if(pc < 0) {
						pc = -pc;
					}
					c2 = (pa <= pb && pa <= pc ? c2 : pb <= pc ? b : c3) + v3 & 255;
					data.b[r++] = c2;
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid filter " + f);
			}
		}
		var r = 0;
		if(h.colbits == 8) {
			var _g = 0;
			var _g1 = h.height;
			while(_g < _g1) {
				var y = _g++;
				++r;
				var _g2 = 0;
				var _g3 = h.width;
				while(_g2 < _g3) {
					var x = _g2++;
					var c = data.b[r++];
					bgra.b[w++] = pal.b[c * 3 + 2];
					bgra.b[w++] = pal.b[c * 3 + 1];
					bgra.b[w++] = pal.b[c * 3];
					bgra.b[w++] = alpha != null ? alpha.b[c] : 255;
				}
				w += lineDelta;
			}
		} else if(h.colbits < 8) {
			var req = h.colbits;
			var mask = (1 << req) - 1;
			var _g = 0;
			var _g1 = h.height;
			while(_g < _g1) {
				var y = _g++;
				++r;
				var bits = 0;
				var nbits = 0;
				var _g2 = 0;
				var _g3 = h.width;
				while(_g2 < _g3) {
					var x = _g2++;
					if(nbits < req) {
						bits = bits << 8 | data.b[r++];
						nbits += 8;
					}
					var c = bits >>> nbits - req & mask;
					nbits -= req;
					bgra.b[w++] = pal.b[c * 3 + 2];
					bgra.b[w++] = pal.b[c * 3 + 1];
					bgra.b[w++] = pal.b[c * 3];
					bgra.b[w++] = alpha != null ? alpha.b[c] : 255;
				}
				w += lineDelta;
			}
		} else {
			throw haxe_Exception.thrown(h.colbits + " indexed bits per pixel not supported");
		}
		break;
	}
	return bgra;
};
var format_tga_ImageOrigin = $hxEnums["format.tga.ImageOrigin"] = { __ename__ : true, __constructs__ : ["BottomLeft","BottomRight","TopLeft","TopRight"]
	,BottomLeft: {_hx_index:0,__enum__:"format.tga.ImageOrigin",toString:$estr}
	,BottomRight: {_hx_index:1,__enum__:"format.tga.ImageOrigin",toString:$estr}
	,TopLeft: {_hx_index:2,__enum__:"format.tga.ImageOrigin",toString:$estr}
	,TopRight: {_hx_index:3,__enum__:"format.tga.ImageOrigin",toString:$estr}
};
format_tga_ImageOrigin.__empty_constructs__ = [format_tga_ImageOrigin.BottomLeft,format_tga_ImageOrigin.BottomRight,format_tga_ImageOrigin.TopLeft,format_tga_ImageOrigin.TopRight];
var format_tga_ImageType = $hxEnums["format.tga.ImageType"] = { __ename__ : true, __constructs__ : ["NoImage","UncompressedColorMapped","UncompressedTrueColor","UncompressedBlackAndWhite","RunLengthColorMapped","RunLengthTrueColor","RunLengthBlackAndWhite","Unknown"]
	,NoImage: {_hx_index:0,__enum__:"format.tga.ImageType",toString:$estr}
	,UncompressedColorMapped: {_hx_index:1,__enum__:"format.tga.ImageType",toString:$estr}
	,UncompressedTrueColor: {_hx_index:2,__enum__:"format.tga.ImageType",toString:$estr}
	,UncompressedBlackAndWhite: {_hx_index:3,__enum__:"format.tga.ImageType",toString:$estr}
	,RunLengthColorMapped: {_hx_index:4,__enum__:"format.tga.ImageType",toString:$estr}
	,RunLengthTrueColor: {_hx_index:5,__enum__:"format.tga.ImageType",toString:$estr}
	,RunLengthBlackAndWhite: {_hx_index:6,__enum__:"format.tga.ImageType",toString:$estr}
	,Unknown: ($_=function(type) { return {_hx_index:7,type:type,__enum__:"format.tga.ImageType",toString:$estr}; },$_.__params__ = ["type"],$_)
};
format_tga_ImageType.__empty_constructs__ = [format_tga_ImageType.NoImage,format_tga_ImageType.UncompressedColorMapped,format_tga_ImageType.UncompressedTrueColor,format_tga_ImageType.UncompressedBlackAndWhite,format_tga_ImageType.RunLengthColorMapped,format_tga_ImageType.RunLengthTrueColor,format_tga_ImageType.RunLengthBlackAndWhite];
var format_tga_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(false);
};
$hxClasses["format.tga.Reader"] = format_tga_Reader;
format_tga_Reader.__name__ = "format.tga.Reader";
format_tga_Reader.prototype = {
	read: function() {
		var idLength = this.i.readByte();
		var header = this.readHeader();
		var id = idLength == 0 ? "" : this.i.readString(idLength);
		var colorMap = this.readColorMapData(header);
		return { header : header, imageId : id, colorMapData : colorMap, imageData : this.readImageData(header,colorMap), developerData : null};
	}
	,readHeader: function() {
		var colorMapType = this.i.readByte();
		var dataType;
		var dataId = this.i.readByte();
		switch(dataId) {
		case 0:
			dataType = format_tga_ImageType.NoImage;
			break;
		case 1:
			dataType = format_tga_ImageType.UncompressedColorMapped;
			break;
		case 2:
			dataType = format_tga_ImageType.UncompressedTrueColor;
			break;
		case 3:
			dataType = format_tga_ImageType.UncompressedBlackAndWhite;
			break;
		case 9:
			dataType = format_tga_ImageType.RunLengthColorMapped;
			break;
		case 10:
			dataType = format_tga_ImageType.RunLengthTrueColor;
			break;
		case 11:
			dataType = format_tga_ImageType.RunLengthBlackAndWhite;
			break;
		default:
			dataType = format_tga_ImageType.Unknown(dataId);
		}
		var colorMapOrigin = this.i.readInt16();
		var colorMapLength = this.i.readInt16();
		var colorMapDepth = this.i.readByte();
		var xOrigin = this.i.readInt16();
		var yOrigin = this.i.readInt16();
		var width = this.i.readInt16();
		var height = this.i.readInt16();
		var depth = this.i.readByte();
		var descriptor = this.i.readByte();
		var origin;
		switch(descriptor & 48) {
		case 16:
			origin = format_tga_ImageOrigin.BottomRight;
			break;
		case 32:
			origin = format_tga_ImageOrigin.TopLeft;
			break;
		case 48:
			origin = format_tga_ImageOrigin.TopRight;
			break;
		default:
			origin = format_tga_ImageOrigin.BottomLeft;
		}
		return { colorMapType : colorMapType, imageType : dataType, colorMapFirstIndex : colorMapOrigin, colorMapLength : colorMapLength, colorMapEntrySize : colorMapDepth, xOrigin : xOrigin, yOrigin : yOrigin, width : width, height : height, bitsPerPixel : depth, alphaChannelBits : descriptor & 15, imageOrigin : origin};
	}
	,readColorMapData: function(header) {
		if(header.colorMapType == 0) {
			return null;
		}
		return this.readPixels(header.colorMapEntrySize,header.colorMapLength,header.alphaChannelBits,false);
	}
	,readImageData: function(header,colorMap) {
		switch(header.imageType._hx_index) {
		case 0:
			return null;
		case 1:
			return this.readIndexes(header.bitsPerPixel,header.width * header.height,colorMap,header.colorMapFirstIndex,false);
		case 2:
			return this.readPixels(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,false);
		case 3:
			return this.readMono(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,false);
		case 4:
			return this.readIndexes(header.bitsPerPixel,header.width * header.height,colorMap,header.colorMapFirstIndex,true);
		case 5:
			return this.readPixels(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,true);
		case 6:
			return this.readMono(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,true);
		default:
			throw haxe_Exception.thrown("Unsupported image data type!");
		}
	}
	,readPixels: function(bitsPerPixel,amount,alphaChannelBits,rle) {
		var this1 = new Array(amount);
		var list = this1;
		var alpha = alphaChannelBits != 0;
		var bitFieldSize = bitsPerPixel / 3 | 0;
		if(bitFieldSize > 8) {
			bitFieldSize = 8;
		}
		var parsePixel;
		var readEntry;
		switch(bitsPerPixel) {
		case 8:
			readEntry = ($_=this.i,$bind($_,$_.readByte));
			parsePixel = $bind(this,this.parsePixel1);
			break;
		case 16:
			readEntry = ($_=this.i,$bind($_,$_.readUInt16));
			parsePixel = $bind(this,this.parsePixel2);
			break;
		case 24:
			readEntry = ($_=this.i,$bind($_,$_.readUInt24));
			parsePixel = $bind(this,this.parsePixel3);
			break;
		case 32:
			readEntry = ($_=this.i,$bind($_,$_.readInt32));
			parsePixel = $bind(this,this.parsePixel4);
			break;
		default:
			throw haxe_Exception.thrown("Unsupported bits per pixels amount!");
		}
		if(rle) {
			var rleChunk;
			var i = 0;
			while(i < amount) {
				rleChunk = this.i.readByte();
				if((rleChunk & 128) != 0) {
					rleChunk &= 127;
					var pixel = parsePixel(readEntry(),alpha);
					while(rleChunk >= 0) {
						list[i++] = pixel;
						--rleChunk;
					}
				} else {
					rleChunk &= 127;
					while(rleChunk >= 0) {
						list[i++] = parsePixel(readEntry(),alpha);
						--rleChunk;
					}
				}
			}
		} else {
			var _g = 0;
			var _g1 = amount;
			while(_g < _g1) {
				var i = _g++;
				list[i] = parsePixel(readEntry(),alpha);
			}
		}
		return list;
	}
	,readMono: function(bitsPerPixel,amount,alphaChannelBits,rle) {
		var this1 = new Array(amount);
		var list = this1;
		var alpha = alphaChannelBits != 0;
		var parsePixel;
		var readEntry;
		switch(bitsPerPixel) {
		case 8:
			readEntry = ($_=this.i,$bind($_,$_.readByte));
			parsePixel = $bind(this,this.parsePixel1);
			break;
		case 16:
			readEntry = ($_=this.i,$bind($_,$_.readUInt16));
			parsePixel = $bind(this,this.parsePixelGreyAlpha);
			break;
		default:
			throw haxe_Exception.thrown("Unsupported bits per pixels amount!");
		}
		if(rle) {
			var rleChunk;
			var i = 0;
			while(i < amount) {
				rleChunk = this.i.readByte();
				if((rleChunk & 128) != 0) {
					rleChunk &= 127;
					var pixel = parsePixel(readEntry(),alpha);
					while(rleChunk >= 0) {
						list[i++] = pixel;
						--rleChunk;
					}
				} else {
					rleChunk &= 127;
					while(rleChunk >= 0) {
						list[i++] = parsePixel(readEntry(),alpha);
						--rleChunk;
					}
				}
			}
		} else {
			var _g = 0;
			var _g1 = amount;
			while(_g < _g1) {
				var i = _g++;
				list[i] = parsePixel(readEntry(),alpha);
			}
		}
		return list;
	}
	,readIndexes: function(bitsPerPixel,amount,colorMap,offset,rle) {
		var this1 = new Array(amount);
		var list = this1;
		var readEntry;
		switch(bitsPerPixel) {
		case 8:
			readEntry = ($_=this.i,$bind($_,$_.readByte));
			break;
		case 16:
			readEntry = ($_=this.i,$bind($_,$_.readUInt16));
			break;
		case 24:
			readEntry = ($_=this.i,$bind($_,$_.readUInt24));
			break;
		case 32:
			readEntry = ($_=this.i,$bind($_,$_.readInt32));
			break;
		default:
			throw haxe_Exception.thrown("Unsupported bits per pixels amount!");
		}
		if(rle) {
			var i = 0;
			var rleChunk;
			while(i < amount) {
				rleChunk = this.i.readByte();
				if((rleChunk & 128) != 0) {
					rleChunk &= 127;
					var pixel = colorMap[offset + readEntry()];
					while(rleChunk >= 0) {
						list[i++] = pixel;
						--rleChunk;
					}
				} else {
					rleChunk &= 127;
					while(rleChunk >= 0) {
						list[i++] = colorMap[offset + readEntry()];
						--rleChunk;
					}
				}
			}
		} else {
			var _g = 0;
			var _g1 = amount;
			while(_g < _g1) {
				var i = _g++;
				list[i] = colorMap[offset + readEntry()];
			}
		}
		return list;
	}
	,parsePixel1: function(value,alpha) {
		return value << 16 | value << 8 | value;
	}
	,parsePixelGreyAlpha: function(value,alpha) {
		return (alpha ? (value & 65280) << 16 : 0) | this.parsePixel1(value & 255,false);
	}
	,parsePixel2: function(value,alpha) {
		return (alpha ? (value & 32768) == 1 ? -16777216 : 0 : 0) | (((value & 31744) >> 10) / 31 * 255 | 0) << 16 | (((value & 992) >> 5) / 31 * 255 | 0) << 8 | ((value & 31) / 31 * 255 | 0);
	}
	,parsePixel3: function(value,alpha) {
		return value;
	}
	,parsePixel4: function(value,alpha) {
		return value;
	}
	,__class__: format_tga_Reader
};
var format_tools_Inflate = function() { };
$hxClasses["format.tools.Inflate"] = format_tools_Inflate;
format_tools_Inflate.__name__ = "format.tools.Inflate";
format_tools_Inflate.run = function(bytes) {
	return haxe_zip_Uncompress.run(bytes);
};
var h2d_Bitmap = function(tile,parent) {
	h2d_Drawable.call(this,parent);
	this.set_tile(tile);
};
$hxClasses["h2d.Bitmap"] = h2d_Bitmap;
h2d_Bitmap.__name__ = "h2d.Bitmap";
h2d_Bitmap.__super__ = h2d_Drawable;
h2d_Bitmap.prototype = $extend(h2d_Drawable.prototype,{
	getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.tile != null) {
			if(this.width == null && this.height == null) {
				this.addBounds(relativeTo,out,this.tile.dx,this.tile.dy,this.tile.width,this.tile.height);
			} else {
				this.addBounds(relativeTo,out,this.tile.dx,this.tile.dy,this.width != null ? this.width : this.tile.width * this.height / this.tile.height,this.height != null ? this.height : this.tile.height * this.width / this.tile.width);
			}
		}
	}
	,set_tile: function(t) {
		if(this.tile == t) {
			return t;
		}
		this.tile = t;
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
		return t;
	}
	,draw: function(ctx) {
		if(this.width == null && this.height == null) {
			this.emitTile(ctx,this.tile);
			return;
		}
		if(this.tile == null) {
			this.set_tile(h2d_Tile.fromColor(16711935));
		}
		var ow = this.tile.width;
		var oh = this.tile.height;
		this.tile.width = this.width != null ? this.width : ow * this.height / oh;
		this.tile.height = this.height != null ? this.height : oh * this.width / ow;
		this.emitTile(ctx,this.tile);
		this.tile.width = ow;
		this.tile.height = oh;
	}
	,__class__: h2d_Bitmap
});
var h2d_BlendMode = $hxEnums["h2d.BlendMode"] = { __ename__ : true, __constructs__ : ["None","Alpha","Add","AlphaAdd","SoftAdd","Multiply","AlphaMultiply","Erase","Screen","Sub","Max","Min"]
	,None: {_hx_index:0,__enum__:"h2d.BlendMode",toString:$estr}
	,Alpha: {_hx_index:1,__enum__:"h2d.BlendMode",toString:$estr}
	,Add: {_hx_index:2,__enum__:"h2d.BlendMode",toString:$estr}
	,AlphaAdd: {_hx_index:3,__enum__:"h2d.BlendMode",toString:$estr}
	,SoftAdd: {_hx_index:4,__enum__:"h2d.BlendMode",toString:$estr}
	,Multiply: {_hx_index:5,__enum__:"h2d.BlendMode",toString:$estr}
	,AlphaMultiply: {_hx_index:6,__enum__:"h2d.BlendMode",toString:$estr}
	,Erase: {_hx_index:7,__enum__:"h2d.BlendMode",toString:$estr}
	,Screen: {_hx_index:8,__enum__:"h2d.BlendMode",toString:$estr}
	,Sub: {_hx_index:9,__enum__:"h2d.BlendMode",toString:$estr}
	,Max: {_hx_index:10,__enum__:"h2d.BlendMode",toString:$estr}
	,Min: {_hx_index:11,__enum__:"h2d.BlendMode",toString:$estr}
};
h2d_BlendMode.__empty_constructs__ = [h2d_BlendMode.None,h2d_BlendMode.Alpha,h2d_BlendMode.Add,h2d_BlendMode.AlphaAdd,h2d_BlendMode.SoftAdd,h2d_BlendMode.Multiply,h2d_BlendMode.AlphaMultiply,h2d_BlendMode.Erase,h2d_BlendMode.Screen,h2d_BlendMode.Sub,h2d_BlendMode.Max,h2d_BlendMode.Min];
var h2d_Camera = function(scene) {
	this.posChanged = true;
	this.x = 0;
	this.posChanged = true;
	this.y = 0;
	this.posChanged = true;
	this.scaleX = 1;
	this.posChanged = true;
	this.scaleY = 1;
	this.posChanged = true;
	this.rotation = 0;
	this.posChanged = true;
	this.anchorX = 0;
	this.posChanged = true;
	this.anchorY = 0;
	this.viewX = 0;
	this.viewY = 0;
	this.viewW = 1;
	this.viewH = 1;
	this.visible = true;
	if(scene != null) {
		scene.addCamera(this);
	}
};
$hxClasses["h2d.Camera"] = h2d_Camera;
h2d_Camera.__name__ = "h2d.Camera";
h2d_Camera.prototype = {
	layerVisible: function(layer) {
		return true;
	}
	,enter: function(ctx) {
		ctx.pushCamera(this);
		if(this.clipViewport) {
			var old = ctx.inFilter;
			ctx.inFilter = null;
			ctx.pushRenderZone(this.viewX * this.scene.width,this.viewY * this.scene.height,this.viewW * this.scene.width,this.viewH * this.scene.height);
			ctx.inFilter = old;
		}
	}
	,exit: function(ctx) {
		if(this.clipViewport) {
			var old = ctx.inFilter;
			ctx.inFilter = null;
			ctx.popRenderZone();
			ctx.inFilter = old;
		}
		ctx.popCamera();
	}
	,sync: function(ctx,force) {
		if(force == null) {
			force = false;
		}
		if(this.scene == null) {
			return;
		}
		if(this.follow != null) {
			this.posChanged = true;
			this.x = this.follow.absX;
			this.posChanged = true;
			this.y = this.follow.absY;
			if(this.followRotation) {
				this.posChanged = true;
				this.rotation = -this.follow.rotation;
			}
		}
		if(this.posChanged || force) {
			if(this.rotation == 0) {
				this.matA = this.scaleX;
				this.matB = 0;
				this.matC = 0;
				this.matD = this.scaleY;
			} else {
				var cr = Math.cos(this.rotation);
				var sr = Math.sin(this.rotation);
				this.matA = this.scaleX * cr;
				this.matB = this.scaleX * sr;
				this.matC = this.scaleY * -sr;
				this.matD = this.scaleY * cr;
			}
			this.absX = Math.round(-(this.x * this.matA + this.y * this.matC) + this.scene.width * this.anchorX * this.viewW + this.scene.width * this.viewX);
			this.absY = Math.round(-(this.x * this.matB + this.y * this.matD) + this.scene.height * this.anchorY * this.viewH + this.scene.height * this.viewY);
			this.invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
			this.posChanged = false;
		}
	}
	,eventToCamera: function(e) {
		var x = (e.relX - this.scene.offsetX) / this.scene.viewportScaleX - this.absX;
		var y = (e.relY - this.scene.offsetY) / this.scene.viewportScaleY - this.absY;
		e.relX = (x * this.matD - y * this.matC) * this.invDet;
		e.relY = (-x * this.matB + y * this.matA) * this.invDet;
	}
	,__class__: h2d_Camera
};
var h2d_ConsoleArg = $hxEnums["h2d.ConsoleArg"] = { __ename__ : true, __constructs__ : ["AInt","AFloat","AString","ABool","AEnum"]
	,AInt: {_hx_index:0,__enum__:"h2d.ConsoleArg",toString:$estr}
	,AFloat: {_hx_index:1,__enum__:"h2d.ConsoleArg",toString:$estr}
	,AString: {_hx_index:2,__enum__:"h2d.ConsoleArg",toString:$estr}
	,ABool: {_hx_index:3,__enum__:"h2d.ConsoleArg",toString:$estr}
	,AEnum: ($_=function(values) { return {_hx_index:4,values:values,__enum__:"h2d.ConsoleArg",toString:$estr}; },$_.__params__ = ["values"],$_)
};
h2d_ConsoleArg.__empty_constructs__ = [h2d_ConsoleArg.AInt,h2d_ConsoleArg.AFloat,h2d_ConsoleArg.AString,h2d_ConsoleArg.ABool];
var h2d_Console = function(font,parent) {
	this.autoComplete = true;
	this.shortKeyChar = 47;
	this.logDY = 0;
	var _gthis = this;
	h2d_Object.call(this,parent);
	this.height = Math.ceil(font.lineHeight) + 2;
	this.logTxt = new h2d_HtmlText(font,this);
	var _this = this.logTxt;
	_this.posChanged = true;
	_this.x = 2;
	this.logTxt.dropShadow = { dx : 0, dy : 1, color : 0, alpha : 0.5};
	this.logTxt.set_visible(false);
	this.logs = [];
	this.logIndex = -1;
	this.bg = new h2d_Bitmap(h2d_Tile.fromColor(0,1,1,0.5),this);
	this.bg.set_visible(false);
	this.hintTxt = new h2d_Text(font,this.bg);
	var _this = this.hintTxt;
	_this.posChanged = true;
	_this.x = 2;
	var _this = this.hintTxt;
	_this.posChanged = true;
	_this.y = 1;
	this.hintTxt.set_textColor(-1);
	this.hintTxt.alpha = 0.5;
	this.tf = new h2d_TextInput(font,this.bg);
	this.tf.onKeyDown = $bind(this,this.handleKey);
	this.tf.onChange = $bind(this,this.handleCmdChange);
	this.tf.onFocusLost = function(_) {
		_gthis.hide();
	};
	var _this = this.tf;
	_this.posChanged = true;
	_this.x = 2;
	var _this = this.tf;
	_this.posChanged = true;
	_this.y = 1;
	this.tf.set_textColor(-1);
	this.commands = new haxe_ds_StringMap();
	this.aliases = new haxe_ds_StringMap();
	this.addCommand("help","Show help",[{ name : "command", t : h2d_ConsoleArg.AString, opt : true}],$bind(this,this.showHelp));
	this.addCommand("cls","Clear console",[],function() {
		_gthis.logs = [];
		_gthis.logTxt.set_text("");
	});
	this.addAlias("?","help");
};
$hxClasses["h2d.Console"] = h2d_Console;
h2d_Console.__name__ = "h2d.Console";
h2d_Console.__super__ = h2d_Object;
h2d_Console.prototype = $extend(h2d_Object.prototype,{
	addCommand: function(name,help,args,callb) {
		this.commands.h[name] = { help : help == null ? "" : help, args : args, callb : callb};
	}
	,addAlias: function(name,command) {
		this.aliases.h[name] = command;
	}
	,onAdd: function() {
		h2d_Object.prototype.onAdd.call(this);
		this.getScene().window.addEventTarget($bind(this,this.onEvent));
	}
	,onRemove: function() {
		this.getScene().window.removeEventTarget($bind(this,this.onEvent));
		h2d_Object.prototype.onRemove.call(this);
	}
	,onEvent: function(e) {
		switch(e.kind._hx_index) {
		case 5:
			if(this.logTxt.visible) {
				this.logDY -= this.tf.font.lineHeight * e.wheelDelta * 3;
				if(this.logDY < 0) {
					this.logDY = 0;
				}
				if(this.logDY > this.logTxt.get_textHeight()) {
					this.logDY = this.logTxt.get_textHeight();
				}
				e.propagate = false;
			}
			break;
		case 11:
			if(e.charCode == this.shortKeyChar && !this.bg.visible) {
				this.show();
			}
			break;
		default:
		}
	}
	,showHelp: function(command) {
		var _gthis = this;
		var all;
		if(command == null) {
			all = Lambda.array({ iterator : function() {
				return haxe_ds_StringMap.keysIterator(_gthis.commands.h);
			}});
			all.sort(Reflect.compare);
			HxOverrides.remove(all,"help");
			all.push("help");
		} else {
			if(Object.prototype.hasOwnProperty.call(this.aliases.h,command)) {
				command = this.aliases.h[command];
			}
			if(!Object.prototype.hasOwnProperty.call(this.commands.h,command)) {
				throw haxe_Exception.thrown("Command not found \"" + command + "\"");
			}
			all = [command];
		}
		var _g = 0;
		while(_g < all.length) {
			var cmdName = all[_g];
			++_g;
			var c = this.commands.h[cmdName];
			var str = "/" + cmdName;
			var a = haxe_ds_StringMap.keysIterator(this.aliases.h);
			while(a.hasNext()) {
				var a1 = a.next();
				if(this.aliases.h[a1] == cmdName) {
					str += "|" + a1;
				}
			}
			var _g1 = 0;
			var _g2 = c.args;
			while(_g1 < _g2.length) {
				var a2 = _g2[_g1];
				++_g1;
				var astr = a2.name;
				var _g3 = a2.t;
				switch(_g3._hx_index) {
				case 0:case 1:
					var e = a2.t;
					astr += ":" + HxOverrides.substr($hxEnums[e.__enum__].__constructs__[e._hx_index],1,null);
					break;
				case 2:
					break;
				case 3:
					astr += "=0|1";
					break;
				case 4:
					var values = _g3.values;
					astr += "=" + values.join("|");
					break;
				}
				str += " " + (a2.opt ? "[" + astr + "]" : astr);
			}
			if(c.help != "") {
				str += " : " + c.help;
			}
			this.log(str);
		}
	}
	,isActive: function() {
		return this.bg.visible;
	}
	,hide: function() {
		this.bg.set_visible(false);
		this.tf.set_text("");
		this.hintTxt.set_text("");
		this.tf.cursorIndex = -1;
	}
	,show: function() {
		this.bg.set_visible(true);
		this.tf.focus();
		this.tf.cursorIndex = this.tf.text.length;
		this.logIndex = -1;
	}
	,getCommandSuggestion: function(cmd) {
		if(cmd == "") {
			return "";
		}
		var closestCommand = "";
		var commandNames = haxe_ds_StringMap.keysIterator(this.commands.h);
		var command = commandNames;
		while(command.hasNext()) {
			var command1 = command.next();
			if(command1.indexOf(cmd) == 0) {
				if(closestCommand == "" || closestCommand.length > command1.length) {
					closestCommand = command1;
				}
			}
		}
		return closestCommand;
	}
	,handleKey: function(e) {
		if(!this.bg.visible) {
			return;
		}
		switch(e.keyCode) {
		case 9:
			if(this.autoComplete) {
				if(this.hintTxt.text != "") {
					this.tf.set_text(this.hintTxt.text + " ");
					this.tf.cursorIndex = this.tf.text.length;
				}
			}
			break;
		case 13:case 108:
			var cmd = this.tf.text;
			this.tf.set_text("");
			this.hintTxt.set_text("");
			if(this.autoComplete) {
				var suggestion = this.getCommandSuggestion(cmd);
				if(suggestion != "") {
					cmd = suggestion;
				}
			}
			this.handleCommand(cmd);
			if(!this.logTxt.visible) {
				this.bg.set_visible(false);
			}
			e.cancel = true;
			return;
		case 27:
			this.hide();
			break;
		case 38:
			if(this.logs.length == 0 || this.logIndex == 0) {
				return;
			}
			if(this.logIndex == -1) {
				this.curCmd = this.tf.text;
				this.logIndex = this.logs.length - 1;
			} else {
				this.logIndex--;
			}
			this.tf.set_text(this.logs[this.logIndex]);
			this.tf.cursorIndex = this.tf.text.length;
			break;
		case 40:
			if(this.tf.text == this.curCmd) {
				return;
			}
			if(this.logIndex == this.logs.length - 1) {
				this.tf.set_text(this.curCmd == null ? "" : this.curCmd);
				this.tf.cursorIndex = this.tf.text.length;
				this.logIndex = -1;
				return;
			}
			this.logIndex++;
			this.tf.set_text(this.logs[this.logIndex]);
			this.tf.cursorIndex = this.tf.text.length;
			break;
		}
	}
	,handleCmdChange: function() {
		this.hintTxt.set_visible(this.autoComplete);
		if(this.autoComplete) {
			this.hintTxt.set_text(this.getCommandSuggestion(this.tf.text));
		} else {
			this.hintTxt.set_text("");
		}
	}
	,handleCommand: function(command) {
		command = StringTools.trim(command);
		if(HxOverrides.cca(command,0) == 47) {
			command = HxOverrides.substr(command,1,null);
		}
		if(command == "") {
			this.hide();
			return;
		}
		this.logs.push(command);
		this.logIndex = -1;
		var errorColor = 12582912;
		var args = [];
		var c = "";
		var i = 0;
		var readString = function(endChar) {
			var string = "";
			while(i < command.length) {
				var c1 = i += 1;
				c = command.charAt(c1);
				if(c == endChar) {
					i += 1;
					return string;
				}
				string += c;
			}
			return null;
		};
		var last = "";
		while(i < command.length) {
			c = command.charAt(i);
			switch(c) {
			case "\t":case " ":
				c = command.charAt(i);
				while(c == " " || c == "\t") {
					var c1 = i += 1;
					c = command.charAt(c1);
				}
				i -= 1;
				args.push(last);
				last = "";
				break;
			case "\"":case "'":
				var string = readString(c);
				if(string == null) {
					this.log("Bad formated string",errorColor);
					return;
				}
				args.push(string);
				last = "";
				c = command.charAt(i);
				while(c == " " || c == "\t") {
					var c2 = i += 1;
					c = command.charAt(c2);
				}
				i -= 1;
				break;
			default:
				last += c;
			}
			i += 1;
		}
		args.push(last);
		var cmdName = args[0];
		if(Object.prototype.hasOwnProperty.call(this.aliases.h,cmdName)) {
			cmdName = this.aliases.h[cmdName];
		}
		var cmd = this.commands.h[cmdName];
		if(cmd == null) {
			this.log("Unknown command \"" + cmdName + "\"",errorColor);
			return;
		}
		var vargs = [];
		var _g = 0;
		var _g1 = cmd.args.length;
		while(_g < _g1) {
			var i1 = _g++;
			var a = cmd.args[i1];
			var v = args[i1 + 1];
			if(v == null) {
				if(a.opt) {
					vargs.push(null);
					continue;
				}
				this.log("Missing argument " + a.name,errorColor);
				return;
			}
			var _g2 = a.t;
			switch(_g2._hx_index) {
			case 0:
				var i2 = Std.parseInt(v);
				if(i2 == null) {
					this.log("" + v + " should be Int for argument " + a.name,errorColor);
					return;
				}
				vargs.push(i2);
				break;
			case 1:
				var f = parseFloat(v);
				if(isNaN(f)) {
					this.log("" + v + " should be Float for argument " + a.name,errorColor);
					return;
				}
				vargs.push(f);
				break;
			case 2:
				vargs.push(cmd.args.length == 1 ? StringTools.trim(HxOverrides.substr(command,args[0].length,null)) : v);
				break;
			case 3:
				switch(v) {
				case "1":case "true":
					vargs.push(true);
					break;
				case "0":case "false":
					vargs.push(false);
					break;
				default:
					this.log("" + v + " should be Bool for argument " + a.name,errorColor);
					return;
				}
				break;
			case 4:
				var values = _g2.values;
				var found = false;
				var _g3 = 0;
				while(_g3 < values.length) {
					var v2 = values[_g3];
					++_g3;
					if(v == v2) {
						found = true;
						vargs.push(v2);
					}
				}
				if(!found) {
					this.log("" + v + " should be [" + values.join("|") + "] for argument " + a.name,errorColor);
					return;
				}
				break;
			}
		}
		try {
			cmd.callb.apply(null,vargs);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(typeof(_g1) == "string") {
				var e = _g1;
				this.log("ERROR " + e,errorColor);
			} else {
				throw _g;
			}
		}
	}
	,log: function(text,color) {
		if(color == null) {
			color = this.tf.textColor;
		}
		var oldH = this.logTxt.get_textHeight();
		this.logTxt.set_text(this.logTxt.text + ("<font color=\"#" + StringTools.hex(color & 16777215,6) + "\">" + StringTools.htmlEscape(text) + "</font><br/>"));
		if(this.logDY != 0) {
			this.logDY += this.logTxt.get_textHeight() - oldH;
		}
		this.logTxt.alpha = 1;
		this.logTxt.set_visible(true);
		this.lastLogTime = HxOverrides.now() / 1000;
	}
	,sync: function(ctx) {
		var scene = ctx.scene;
		if(scene != null) {
			this.posChanged = true;
			this.x = 0;
			this.posChanged = true;
			this.y = scene.height - this.height;
			this.width = scene.width;
			this.tf.set_maxWidth(this.width);
			this.bg.tile.scaleToSize(this.width,this.height);
		}
		var log = this.logTxt;
		if(log.visible) {
			var v = this.bg.y - log.get_textHeight() + this.logDY;
			log.posChanged = true;
			log.y = v;
			var dt = HxOverrides.now() / 1000 - this.lastLogTime;
			if(dt > h2d_Console.HIDE_LOG_TIMEOUT && !this.bg.visible) {
				log.alpha -= ctx.elapsedTime * 4;
				if(log.alpha <= 0) {
					log.set_visible(false);
				}
			}
		}
		h2d_Object.prototype.sync.call(this,ctx);
	}
	,__class__: h2d_Console
});
var h2d_FlowAlign = $hxEnums["h2d.FlowAlign"] = { __ename__ : true, __constructs__ : ["Top","Left","Right","Middle","Bottom"]
	,Top: {_hx_index:0,__enum__:"h2d.FlowAlign",toString:$estr}
	,Left: {_hx_index:1,__enum__:"h2d.FlowAlign",toString:$estr}
	,Right: {_hx_index:2,__enum__:"h2d.FlowAlign",toString:$estr}
	,Middle: {_hx_index:3,__enum__:"h2d.FlowAlign",toString:$estr}
	,Bottom: {_hx_index:4,__enum__:"h2d.FlowAlign",toString:$estr}
};
h2d_FlowAlign.__empty_constructs__ = [h2d_FlowAlign.Top,h2d_FlowAlign.Left,h2d_FlowAlign.Right,h2d_FlowAlign.Middle,h2d_FlowAlign.Bottom];
var h2d_FlowLayout = $hxEnums["h2d.FlowLayout"] = { __ename__ : true, __constructs__ : ["Horizontal","Vertical","Stack"]
	,Horizontal: {_hx_index:0,__enum__:"h2d.FlowLayout",toString:$estr}
	,Vertical: {_hx_index:1,__enum__:"h2d.FlowLayout",toString:$estr}
	,Stack: {_hx_index:2,__enum__:"h2d.FlowLayout",toString:$estr}
};
h2d_FlowLayout.__empty_constructs__ = [h2d_FlowLayout.Horizontal,h2d_FlowLayout.Vertical,h2d_FlowLayout.Stack];
var h2d_FlowOverflow = $hxEnums["h2d.FlowOverflow"] = { __ename__ : true, __constructs__ : ["Expand","Limit","Hidden"]
	,Expand: {_hx_index:0,__enum__:"h2d.FlowOverflow",toString:$estr}
	,Limit: {_hx_index:1,__enum__:"h2d.FlowOverflow",toString:$estr}
	,Hidden: {_hx_index:2,__enum__:"h2d.FlowOverflow",toString:$estr}
};
h2d_FlowOverflow.__empty_constructs__ = [h2d_FlowOverflow.Expand,h2d_FlowOverflow.Limit,h2d_FlowOverflow.Hidden];
var h2d_FlowProperties = function(elt) {
	this.constraint = true;
	this.lineBreak = false;
	this.calculatedHeight = 0;
	this.calculatedWidth = 0;
	this.offsetY = 0;
	this.offsetX = 0;
	this.isAbsolute = false;
	this.paddingBottom = 0;
	this.paddingRight = 0;
	this.paddingTop = 0;
	this.paddingLeft = 0;
	this.elt = elt;
};
$hxClasses["h2d.FlowProperties"] = h2d_FlowProperties;
h2d_FlowProperties.__name__ = "h2d.FlowProperties";
h2d_FlowProperties.prototype = {
	set_isAbsolute: function(a) {
		if(a) {
			this.elt.constraintSize(-1,-1);
			this.isBreak = false;
		}
		return this.isAbsolute = a;
	}
	,__class__: h2d_FlowProperties
};
var h2d_Flow = function(parent) {
	this.realMinHeight = -1;
	this.realMinWidth = -1;
	this.realMaxHeight = -1;
	this.realMaxWidth = -1;
	this.constraintHeight = -1;
	this.constraintWidth = -1;
	this.calculatedHeight = 0.;
	this.calculatedWidth = 0.;
	this.properties = [];
	this.fillHeight = false;
	this.fillWidth = false;
	this.reverse = false;
	this.multiline = false;
	this.isInline = true;
	this.layout = h2d_FlowLayout.Horizontal;
	this.borderHeight = 0;
	this.borderWidth = 0;
	this.verticalSpacing = 0;
	this.horizontalSpacing = 0;
	this.paddingBottom = 0;
	this.paddingTop = 0;
	this.paddingRight = 0;
	this.paddingLeft = 0;
	this.overflow = h2d_FlowOverflow.Expand;
	this.needReflow = true;
	this.tmpBounds = new h2d_col_Bounds();
	h2d_Object.call(this,parent);
};
$hxClasses["h2d.Flow"] = h2d_Flow;
h2d_Flow.__name__ = "h2d.Flow";
h2d_Flow.__super__ = h2d_Object;
h2d_Flow.prototype = $extend(h2d_Object.prototype,{
	getProperties: function(e) {
		this.set_needReflow(true);
		return this.properties[this.getChildIndex(e)];
	}
	,set_layout: function(v) {
		if(this.layout == v) {
			return v;
		}
		this.set_needReflow(true);
		return this.layout = v == null ? h2d_FlowLayout.Horizontal : v;
	}
	,set_needReflow: function(v) {
		if(this.needReflow == v) {
			return v;
		}
		if(v) {
			if(this.parentContainer != null) {
				this.parentContainer.contentChanged(this);
			}
		}
		return this.needReflow = v;
	}
	,get_outerWidth: function() {
		if(this.needReflow) {
			this.reflow();
		}
		return Math.ceil(this.calculatedWidth);
	}
	,get_outerHeight: function() {
		if(this.needReflow) {
			this.reflow();
		}
		return Math.ceil(this.calculatedHeight);
	}
	,get_innerWidth: function() {
		if(this.needReflow) {
			this.reflow();
		}
		return Math.ceil(this.calculatedWidth) - (this.paddingLeft + this.paddingRight);
	}
	,get_innerHeight: function() {
		if(this.needReflow) {
			this.reflow();
		}
		return Math.ceil(this.calculatedHeight) - (this.paddingTop + this.paddingBottom);
	}
	,constraintSize: function(width,height) {
		this.constraintWidth = width;
		this.constraintHeight = height;
		this.isConstraint = true;
		this.updateConstraint();
	}
	,contentChanged: function(s) {
		while(s.parent != this) s = s.parent;
		if(this.getProperties(s).isAbsolute) {
			return;
		}
		this.set_needReflow(true);
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(this.needReflow) {
			this.reflow();
		}
		if(forSize) {
			if(!this.isInline) {
				h2d_Object.prototype.getBoundsRec.call(this,relativeTo,out,true);
			}
			if(this.calculatedWidth != 0) {
				if(this.posChanged) {
					this.calcAbsPos();
					var _g = 0;
					var _g1 = this.children;
					while(_g < _g1.length) {
						var c = _g1[_g];
						++_g;
						c.posChanged = true;
					}
					this.posChanged = false;
				}
				this.addBounds(relativeTo,out,0,0,this.calculatedWidth,this.calculatedHeight);
			}
		} else {
			h2d_Object.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		}
	}
	,setParentContainer: function(c) {
		this.parentContainer = c;
	}
	,addChildAt: function(s,pos) {
		if(this.background != null) {
			++pos;
		}
		if(this.interactive != null) {
			++pos;
		}
		var fp = this.getProperties(s);
		h2d_Object.prototype.addChildAt.call(this,s,pos);
		if(fp == null) {
			fp = new h2d_FlowProperties(s);
		} else {
			HxOverrides.remove(this.properties,fp);
		}
		this.properties.splice(pos,0,fp);
		this.set_needReflow(true);
		s.setParentContainer(this);
	}
	,removeChild: function(s) {
		var index = this.getChildIndex(s);
		h2d_Object.prototype.removeChild.call(this,s);
		if(index >= 0) {
			this.set_needReflow(true);
			this.properties.splice(index,1);
			s.constraintSize(-1,-1);
		}
		if(s != null) {
			if(s == this.background) {
				this.set_backgroundTile(null);
			}
			if(s == this.interactive) {
				this.set_enableInteractive(false);
			}
		}
	}
	,removeChildren: function() {
		var k = 0;
		while(this.children.length > k) {
			var c = this.children[k];
			if(c == this.background || c == this.interactive || c == this.debugGraphics) {
				++k;
			} else {
				this.removeChild(c);
			}
		}
	}
	,sync: function(ctx) {
		if(!this.isConstraint && (this.fillWidth || this.fillHeight)) {
			var scene = ctx.scene;
			var cw = this.fillWidth ? scene.width : -1;
			var ch = this.fillHeight ? scene.height : -1;
			if(cw != this.constraintWidth || ch != this.constraintHeight) {
				this.set_needReflow(true);
			}
		}
		if(this.needReflow) {
			this.reflow();
		}
		h2d_Object.prototype.sync.call(this,ctx);
	}
	,drawRec: function(ctx) {
		if(this.overflow == h2d_FlowOverflow.Hidden) {
			if(this.posChanged) {
				this.calcAbsPos();
				var _g = 0;
				var _g1 = this.children;
				while(_g < _g1.length) {
					var c = _g1[_g];
					++_g;
					c.posChanged = true;
				}
				this.posChanged = false;
			}
			var a = this.get_outerWidth();
			var b = this.maxWidth;
			var a1 = this.get_outerHeight();
			var b1 = this.maxHeight;
			h2d_Mask.maskWith(ctx,this,a < b ? b : a,a1 < b1 ? b1 : a1,0,0);
			h2d_Object.prototype.drawRec.call(this,ctx);
			h2d_Mask.unmask(ctx);
		} else {
			h2d_Object.prototype.drawRec.call(this,ctx);
		}
	}
	,updateConstraint: function() {
		var oldW = this.realMaxWidth;
		var oldH = this.realMaxHeight;
		var tmp;
		if(this.maxWidth == null) {
			tmp = this.constraintWidth;
		} else if(this.constraintWidth < 0) {
			tmp = this.maxWidth;
		} else {
			var a = this.maxWidth;
			var b = this.constraintWidth;
			tmp = a > b ? b : a;
		}
		this.realMaxWidth = tmp;
		var tmp;
		if(this.maxHeight == null) {
			tmp = this.constraintHeight;
		} else if(this.constraintHeight < 0) {
			tmp = this.maxHeight;
		} else {
			var a = this.maxHeight;
			var b = this.constraintHeight;
			tmp = a > b ? b : a;
		}
		this.realMaxHeight = tmp;
		if(this.minWidth != null && this.realMaxWidth < this.minWidth && this.realMaxWidth >= 0) {
			this.realMaxWidth = this.minWidth;
		}
		if(this.minHeight != null && this.realMaxHeight < this.minHeight && this.realMaxWidth >= 0) {
			this.realMaxHeight = this.minHeight;
		}
		if(this.realMaxWidth != oldW || this.realMaxHeight != oldH) {
			this.set_needReflow(true);
		}
		var oldW = this.realMinWidth;
		var oldH = this.realMinHeight;
		this.realMinWidth = this.minWidth == null && this.fillWidth ? Math.ceil(this.constraintWidth) : this.minWidth != null ? this.minWidth : -1;
		this.realMinHeight = this.minHeight == null && this.fillHeight ? Math.ceil(this.constraintHeight) : this.minHeight != null ? this.minHeight : -1;
		if(this.realMinWidth != oldW || this.realMinHeight != oldH) {
			this.set_needReflow(true);
		}
	}
	,set_verticalSpacing: function(s) {
		if(this.verticalSpacing == s) {
			return s;
		}
		this.set_needReflow(true);
		return this.verticalSpacing = s;
	}
	,set_enableInteractive: function(b) {
		if(this.enableInteractive == b) {
			return b;
		}
		if(b) {
			if(this.interactive == null) {
				var interactive = new h2d_Interactive(0,0);
				this.addChildAt(interactive,0);
				this.interactive = interactive;
				interactive.set_cursor(hxd_Cursor.Default);
				this.getProperties(interactive).set_isAbsolute(true);
				if(!this.needReflow) {
					interactive.width = this.calculatedWidth;
					interactive.height = this.calculatedHeight;
				}
			}
		} else if(this.interactive != null) {
			var _this = this.interactive;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.interactive = null;
		}
		return this.enableInteractive = b;
	}
	,set_backgroundTile: function(t) {
		if(this.backgroundTile == t) {
			return t;
		}
		if(t != null) {
			if(this.background == null) {
				var background = new h2d_ScaleGrid(t,this.borderWidth,this.borderHeight);
				this.addChildAt(background,0);
				this.getProperties(background).set_isAbsolute(true);
				this.background = background;
				if(!this.needReflow) {
					background.set_width(Math.ceil(this.calculatedWidth));
					background.set_height(Math.ceil(this.calculatedHeight));
				}
			}
			this.background.tile = t;
		} else if(this.background != null) {
			var _this = this.background;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
			this.background = null;
		}
		return this.backgroundTile = t;
	}
	,set_borderWidth: function(v) {
		if(this.borderWidth == v) {
			return v;
		}
		if(this.background != null) {
			this.background.set_borderWidth(v);
		}
		return this.borderWidth = v;
	}
	,set_borderHeight: function(v) {
		if(this.borderHeight == v) {
			return v;
		}
		if(this.background != null) {
			this.background.set_borderHeight(v);
		}
		return this.borderHeight = v;
	}
	,reflow: function() {
		var _gthis = this;
		this.onBeforeReflow();
		if(!this.isConstraint && (this.fillWidth || this.fillHeight)) {
			var scene = this.getScene();
			var cw = this.fillWidth ? scene.width : -1;
			var ch = this.fillHeight ? scene.height : -1;
			if(cw != this.constraintWidth || ch != this.constraintHeight) {
				this.constraintSize(cw,ch);
				this.isConstraint = false;
			}
		}
		var borderWidth = 0;
		var borderHeight = 0;
		var isConstraintWidth = this.realMaxWidth >= 0;
		var isConstraintHeight = this.realMaxHeight >= 0;
		var maxTotWidth = this.realMaxWidth < 0 ? 100000000 : Math.floor(this.realMaxWidth);
		var maxTotHeight = this.realMaxHeight < 0 ? 100000000 : Math.floor(this.realMaxHeight);
		var maxInWidth = maxTotWidth - (this.paddingLeft + this.paddingRight + borderWidth * 2);
		var maxInHeight = maxTotHeight - (this.paddingTop + this.paddingBottom + borderHeight * 2);
		if(this.debug) {
			this.debugGraphics.clear();
		}
		var cw;
		var ch;
		switch(this.layout._hx_index) {
		case 0:
			var halign = this.horizontalAlign == null ? h2d_FlowAlign.Left : this.horizontalAlign;
			var valign = this.verticalAlign == null ? h2d_FlowAlign.Bottom : this.verticalAlign;
			var startX = this.paddingLeft + borderWidth;
			var x = startX;
			var y = this.paddingTop + borderHeight;
			cw = x;
			var maxLineHeight = 0;
			var minLineHeight = this.lineHeight != null ? this.lineHeight : this.realMinHeight >= 0 && !this.multiline ? this.realMinHeight - (this.paddingTop + this.paddingBottom + borderHeight * 2) : 0;
			var lastIndex = 0;
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var isAbs = p.isAbsolute;
				if(isAbs && p.horizontalAlign == null && p.verticalAlign == null) {
					continue;
				}
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				var pw = p.paddingLeft + p.paddingRight;
				var ph = p.paddingTop + p.paddingBottom;
				if(!isAbs) {
					c.constraintSize(isConstraintWidth && p.constraint ? (maxInWidth - pw) / Math.abs(c.scaleX) : -1,isConstraintHeight && p.constraint ? (maxInHeight - ph) / Math.abs(c.scaleX) : -1);
				}
				var b = c.getSize(this.tmpBounds);
				var br = false;
				p.calculatedWidth = Math.ceil(b.xMax) + pw;
				p.calculatedHeight = Math.ceil(b.yMax) + ph;
				if(p.minWidth != null && p.calculatedWidth < p.minWidth) {
					p.calculatedWidth = p.minWidth;
				}
				if(p.minHeight != null && p.calculatedHeight < p.minHeight) {
					p.calculatedHeight = p.minHeight;
				}
				if(isAbs) {
					continue;
				}
				if((this.multiline && x - startX + p.calculatedWidth > maxInWidth || p.lineBreak) && x - startX > 0) {
					br = true;
					if(maxLineHeight < minLineHeight) {
						maxLineHeight = minLineHeight;
					} else if(_gthis.overflow != h2d_FlowOverflow.Expand && minLineHeight != 0) {
						maxLineHeight = minLineHeight;
					}
					var _g2 = lastIndex;
					var _g3 = i;
					while(_g2 < _g3) {
						var i1 = _g2++;
						var p1 = _gthis.properties[_gthis.reverse ? _gthis.children.length - i1 - 1 : i1];
						if(p1.isAbsolute && p1.verticalAlign == null) {
							continue;
						}
						var c1 = _gthis.children[_gthis.reverse ? _gthis.children.length - i1 - 1 : i1];
						if(!c1.visible) {
							continue;
						}
						var a = p1.verticalAlign != null ? p1.verticalAlign : valign;
						c1.posChanged = true;
						c1.y = y + p1.offsetY + p1.paddingTop;
						if(a != null) {
							switch(a._hx_index) {
							case 3:
								var _g4 = c1;
								_g4.posChanged = true;
								_g4.y += (maxLineHeight - p1.calculatedHeight) * 0.5 | 0;
								break;
							case 4:
								var _g5 = c1;
								_g5.posChanged = true;
								_g5.y += maxLineHeight - (p1.calculatedHeight | 0);
								break;
							default:
							}
						}
					}
					lastIndex = i;
					y += maxLineHeight + this.verticalSpacing;
					maxLineHeight = 0;
					x = startX;
				}
				p.isBreak = br;
				x += p.calculatedWidth;
				if(x > cw) {
					cw = x;
				}
				x += this.horizontalSpacing;
				if(p.calculatedHeight > maxLineHeight) {
					maxLineHeight = p.calculatedHeight;
				}
			}
			var maxIndex = this.children.length;
			if(maxLineHeight < minLineHeight) {
				maxLineHeight = minLineHeight;
			} else if(_gthis.overflow != h2d_FlowOverflow.Expand && minLineHeight != 0) {
				maxLineHeight = minLineHeight;
			}
			var _g = lastIndex;
			var _g1 = maxIndex;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(p.isAbsolute && p.verticalAlign == null) {
					continue;
				}
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				var a = p.verticalAlign != null ? p.verticalAlign : valign;
				c.posChanged = true;
				c.y = y + p.offsetY + p.paddingTop;
				if(a != null) {
					switch(a._hx_index) {
					case 3:
						var _g2 = c;
						_g2.posChanged = true;
						_g2.y += (maxLineHeight - p.calculatedHeight) * 0.5 | 0;
						break;
					case 4:
						var _g3 = c;
						_g3.posChanged = true;
						_g3.y += maxLineHeight - (p.calculatedHeight | 0);
						break;
					default:
					}
				}
			}
			lastIndex = maxIndex;
			cw += this.paddingRight + borderWidth;
			ch = y + maxLineHeight + this.paddingBottom + borderHeight;
			if(this.realMinWidth >= 0 && cw < this.realMinWidth) {
				cw = this.realMinWidth;
			}
			var endX = cw - (this.paddingRight + borderWidth);
			var xmin = startX;
			var xmax = endX;
			var midSpace = 0;
			var curAlign = null;
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				if(p.isAbsolute) {
					var _g2 = p.horizontalAlign;
					if(_g2 != null) {
						switch(_g2._hx_index) {
						case 1:
							c.posChanged = true;
							c.x = startX + p.offsetX;
							break;
						case 2:
							c.posChanged = true;
							c.x = endX - p.calculatedWidth + p.offsetX;
							break;
						case 3:
							c.posChanged = true;
							c.x = startX + ((endX - startX - p.calculatedWidth) * 0.5 | 0) + p.offsetX + startX;
							break;
						default:
						}
					}
					continue;
				}
				if(p.isBreak) {
					xmin = startX;
					xmax = endX;
					midSpace = 0;
				}
				var px;
				var align = p.horizontalAlign == null ? halign : p.horizontalAlign;
				if(curAlign != align) {
					curAlign = align;
					midSpace = 0;
				}
				if(align == null) {
					px = xmin;
					xmin += p.calculatedWidth + this.horizontalSpacing;
				} else {
					switch(align._hx_index) {
					case 2:
						if(midSpace == 0) {
							var p1 = p.calculatedWidth;
							var size = 0;
							var _g3 = i + 1;
							var _g4 = _gthis.children.length;
							while(_g3 < _g4) {
								var j = _g3++;
								var p2 = _gthis.properties[_gthis.reverse ? _gthis.children.length - j - 1 : j];
								if(p2.isAbsolute || !_gthis.children[_gthis.reverse ? _gthis.children.length - j - 1 : j].visible) {
									continue;
								}
								if(p2.isBreak) {
									break;
								}
								size += _gthis.horizontalSpacing + p2.calculatedWidth;
							}
							var remSize = p1 + size;
							midSpace = xmax - xmin - remSize;
							xmin += midSpace;
						}
						px = xmin;
						xmin += p.calculatedWidth + this.horizontalSpacing;
						break;
					case 3:
						if(midSpace == 0) {
							var p3 = p.calculatedWidth;
							var size1 = 0;
							var _g5 = i + 1;
							var _g6 = _gthis.children.length;
							while(_g5 < _g6) {
								var j1 = _g5++;
								var p4 = _gthis.properties[_gthis.reverse ? _gthis.children.length - j1 - 1 : j1];
								if(p4.isAbsolute || !_gthis.children[_gthis.reverse ? _gthis.children.length - j1 - 1 : j1].visible) {
									continue;
								}
								if(p4.isBreak) {
									break;
								}
								size1 += _gthis.horizontalSpacing + p4.calculatedWidth;
							}
							var remSize1 = p3 + size1;
							midSpace = (xmax - xmin - remSize1) * 0.5 | 0;
							xmin += midSpace;
						}
						px = xmin;
						xmin += p.calculatedWidth + this.horizontalSpacing;
						break;
					default:
						px = xmin;
						xmin += p.calculatedWidth + this.horizontalSpacing;
					}
				}
				c.posChanged = true;
				c.x = px + p.offsetX + p.paddingLeft;
				if(p.isAbsolute) {
					xmin = px;
				}
			}
			break;
		case 1:
			var halign = this.horizontalAlign == null ? h2d_FlowAlign.Left : this.horizontalAlign;
			var valign = this.verticalAlign == null ? h2d_FlowAlign.Top : this.verticalAlign;
			var startY = this.paddingTop + borderHeight;
			var y = startY;
			var x = this.paddingLeft + borderWidth;
			ch = y;
			var maxColWidth = 0;
			var minColWidth = this.colWidth != null ? this.colWidth : this.realMinWidth >= 0 && !this.multiline ? this.realMinWidth - (this.paddingLeft + this.paddingRight + borderWidth * 2) : 0;
			var lastIndex = 0;
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var isAbs = p.isAbsolute;
				if(isAbs && p.horizontalAlign == null && p.verticalAlign == null) {
					continue;
				}
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				var pw = p.paddingLeft + p.paddingRight;
				var ph = p.paddingTop + p.paddingBottom;
				if(!isAbs) {
					c.constraintSize(isConstraintWidth && p.constraint ? (maxInWidth - pw) / Math.abs(c.scaleX) : -1,isConstraintHeight && p.constraint ? (maxInHeight - ph) / Math.abs(c.scaleY) : -1);
				}
				var b = c.getSize(this.tmpBounds);
				var br = false;
				p.calculatedWidth = Math.ceil(b.xMax) + pw;
				p.calculatedHeight = Math.ceil(b.yMax) + ph;
				if(p.minWidth != null && p.calculatedWidth < p.minWidth) {
					p.calculatedWidth = p.minWidth;
				}
				if(p.minHeight != null && p.calculatedHeight < p.minHeight) {
					p.calculatedHeight = p.minHeight;
				}
				if(isAbs) {
					continue;
				}
				if((this.multiline && y - startY + p.calculatedHeight > maxInHeight || p.lineBreak) && y - startY > 0) {
					br = true;
					if(maxColWidth < minColWidth) {
						maxColWidth = minColWidth;
					} else if(_gthis.overflow != h2d_FlowOverflow.Expand && minColWidth != 0) {
						maxColWidth = minColWidth;
					}
					var _g2 = lastIndex;
					var _g3 = i;
					while(_g2 < _g3) {
						var i1 = _g2++;
						var p1 = _gthis.properties[_gthis.reverse ? _gthis.children.length - i1 - 1 : i1];
						if(p1.isAbsolute && p1.horizontalAlign == null) {
							continue;
						}
						var c1 = _gthis.children[_gthis.reverse ? _gthis.children.length - i1 - 1 : i1];
						if(!c1.visible) {
							continue;
						}
						var a = p1.horizontalAlign != null ? p1.horizontalAlign : halign;
						c1.posChanged = true;
						c1.x = x + p1.offsetX + p1.paddingLeft;
						if(a != null) {
							switch(a._hx_index) {
							case 2:
								var _g4 = c1;
								_g4.posChanged = true;
								_g4.x += maxColWidth - p1.calculatedWidth;
								break;
							case 3:
								var _g5 = c1;
								_g5.posChanged = true;
								_g5.x += (maxColWidth - p1.calculatedWidth) * 0.5 | 0;
								break;
							default:
							}
						}
					}
					lastIndex = i;
					x += maxColWidth + this.horizontalSpacing;
					maxColWidth = 0;
					y = startY;
				}
				p.isBreak = br;
				c.posChanged = true;
				c.y = y + p.offsetY + p.paddingTop;
				y += p.calculatedHeight;
				if(y > ch) {
					ch = y;
				}
				y += this.verticalSpacing;
				if(p.calculatedWidth > maxColWidth) {
					maxColWidth = p.calculatedWidth;
				}
			}
			var maxIndex = this.children.length;
			if(maxColWidth < minColWidth) {
				maxColWidth = minColWidth;
			} else if(_gthis.overflow != h2d_FlowOverflow.Expand && minColWidth != 0) {
				maxColWidth = minColWidth;
			}
			var _g = lastIndex;
			var _g1 = maxIndex;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(p.isAbsolute && p.horizontalAlign == null) {
					continue;
				}
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				var a = p.horizontalAlign != null ? p.horizontalAlign : halign;
				c.posChanged = true;
				c.x = x + p.offsetX + p.paddingLeft;
				if(a != null) {
					switch(a._hx_index) {
					case 2:
						var _g2 = c;
						_g2.posChanged = true;
						_g2.x += maxColWidth - p.calculatedWidth;
						break;
					case 3:
						var _g3 = c;
						_g3.posChanged = true;
						_g3.x += (maxColWidth - p.calculatedWidth) * 0.5 | 0;
						break;
					default:
					}
				}
			}
			lastIndex = maxIndex;
			ch += this.paddingBottom + borderHeight;
			cw = x + maxColWidth + this.paddingRight + borderWidth;
			if(this.realMinHeight >= 0 && ch < this.realMinHeight) {
				ch = this.realMinHeight;
			}
			var endY = ch - (this.paddingBottom + borderHeight);
			var ymin = startY;
			var ymax = endY;
			var midSpace = 0;
			var curAlign = null;
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				if(p.isAbsolute) {
					var _g2 = p.verticalAlign;
					if(_g2 != null) {
						switch(_g2._hx_index) {
						case 0:
							c.posChanged = true;
							c.y = startY + p.offsetY;
							break;
						case 3:
							c.posChanged = true;
							c.y = startY + ((endY - startY - p.calculatedHeight) * 0.5 | 0) + p.offsetY + startY;
							break;
						case 4:
							c.posChanged = true;
							c.y = endY - p.calculatedHeight + p.offsetY;
							break;
						default:
						}
					}
					continue;
				}
				if(p.isBreak) {
					ymin = startY;
					ymax = endY;
					midSpace = 0;
				}
				var py;
				var align = p.verticalAlign == null ? valign : p.verticalAlign;
				if(curAlign != align) {
					curAlign = align;
					midSpace = 0;
				}
				if(align == null) {
					py = ymin;
					ymin += p.calculatedHeight + this.verticalSpacing;
				} else {
					switch(align._hx_index) {
					case 3:
						if(midSpace == 0) {
							var p1 = p.calculatedHeight;
							var size = 0;
							var _g3 = i + 1;
							var _g4 = _gthis.children.length;
							while(_g3 < _g4) {
								var j = _g3++;
								var p2 = _gthis.properties[_gthis.reverse ? _gthis.children.length - j - 1 : j];
								if(p2.isAbsolute || !_gthis.children[_gthis.reverse ? _gthis.children.length - j - 1 : j].visible) {
									continue;
								}
								if(p2.isBreak) {
									break;
								}
								size += _gthis.verticalSpacing + p2.calculatedHeight;
							}
							var remSize = p1 + size;
							midSpace = (ymax - ymin - remSize) * 0.5 | 0;
							ymin += midSpace;
						}
						py = ymin;
						ymin += p.calculatedHeight + this.verticalSpacing;
						break;
					case 4:
						if(midSpace == 0) {
							var p3 = p.calculatedHeight;
							var size1 = 0;
							var _g5 = i + 1;
							var _g6 = _gthis.children.length;
							while(_g5 < _g6) {
								var j1 = _g5++;
								var p4 = _gthis.properties[_gthis.reverse ? _gthis.children.length - j1 - 1 : j1];
								if(p4.isAbsolute || !_gthis.children[_gthis.reverse ? _gthis.children.length - j1 - 1 : j1].visible) {
									continue;
								}
								if(p4.isBreak) {
									break;
								}
								size1 += _gthis.verticalSpacing + p4.calculatedHeight;
							}
							var remSize1 = p3 + size1;
							midSpace = ymax - ymin - remSize1;
							ymin += midSpace;
						}
						py = ymin;
						ymin += p.calculatedHeight + this.verticalSpacing;
						break;
					default:
						py = ymin;
						ymin += p.calculatedHeight + this.verticalSpacing;
					}
				}
				c.posChanged = true;
				c.y = py + p.offsetY + p.paddingTop;
			}
			break;
		case 2:
			var halign = this.horizontalAlign == null ? h2d_FlowAlign.Left : this.horizontalAlign;
			var valign = this.verticalAlign == null ? h2d_FlowAlign.Top : this.verticalAlign;
			var maxChildW = 0;
			var maxChildH = 0;
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var isAbs = p.isAbsolute;
				if(isAbs && p.verticalAlign == null && p.horizontalAlign == null) {
					continue;
				}
				var pw = p.paddingLeft + p.paddingRight;
				var ph = p.paddingTop + p.paddingBottom;
				if(!isAbs) {
					c.constraintSize(isConstraintWidth && p.constraint ? (maxInWidth - pw) / Math.abs(c.scaleX) : -1,isConstraintHeight && p.constraint ? (maxInHeight - ph) / Math.abs(c.scaleY) : -1);
				}
				var b = c.getSize(this.tmpBounds);
				p.calculatedWidth = Math.ceil(b.xMax) + pw;
				p.calculatedHeight = Math.ceil(b.yMax) + ph;
				if(p.minWidth != null && p.calculatedWidth < p.minWidth) {
					p.calculatedWidth = p.minWidth;
				}
				if(p.minHeight != null && p.calculatedHeight < p.minHeight) {
					p.calculatedHeight = p.minHeight;
				}
				if(isAbs) {
					continue;
				}
				if(p.calculatedWidth > maxChildW) {
					maxChildW = p.calculatedWidth;
				}
				if(p.calculatedHeight > maxChildH) {
					maxChildH = p.calculatedHeight;
				}
			}
			var xmin = this.paddingLeft + borderWidth;
			var ymin = this.paddingTop + borderHeight;
			var xmax;
			if(this.realMaxWidth > 0 && this.overflow != h2d_FlowOverflow.Expand) {
				xmax = Math.floor(this.realMaxWidth - (this.paddingRight + borderWidth));
			} else {
				var a = xmin + maxChildW;
				var b = this.realMinWidth - (this.paddingRight + borderWidth);
				xmax = a < b ? b : a;
			}
			var ymax;
			if(this.realMaxWidth > 0 && this.overflow != h2d_FlowOverflow.Expand) {
				ymax = Math.floor(this.realMaxHeight - (this.paddingBottom + borderHeight));
			} else {
				var a = ymin + maxChildH;
				var b = this.realMinHeight - (this.paddingBottom + borderHeight);
				ymax = a < b ? b : a;
			}
			cw = xmax + this.paddingRight + borderWidth;
			ch = ymax + this.paddingBottom + borderHeight;
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(!c.visible) {
					continue;
				}
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var isAbs = p.isAbsolute;
				if(isAbs && p.verticalAlign == null && p.horizontalAlign == null) {
					continue;
				}
				var valign1 = p.verticalAlign == null ? valign : p.verticalAlign;
				var halign1 = p.horizontalAlign == null ? halign : p.horizontalAlign;
				var px;
				if(halign1 == null) {
					px = xmin;
				} else {
					switch(halign1._hx_index) {
					case 2:
						px = xmax - p.calculatedWidth;
						break;
					case 3:
						px = xmin + ((xmax - xmin - p.calculatedWidth) * 0.5 | 0);
						break;
					default:
						px = xmin;
					}
				}
				var py;
				if(valign1 == null) {
					py = ymin;
				} else {
					switch(valign1._hx_index) {
					case 3:
						py = ymin + ((ymax - ymin - p.calculatedHeight) * 0.5 | 0);
						break;
					case 4:
						py = ymax - p.calculatedHeight;
						break;
					default:
						py = ymin;
					}
				}
				if(!isAbs || p.horizontalAlign != null) {
					c.posChanged = true;
					c.x = px + p.offsetX + p.paddingLeft;
				}
				if(!isAbs || p.verticalAlign != null) {
					c.posChanged = true;
					c.y = py + p.offsetY + p.paddingTop;
				}
			}
			break;
		}
		if(this.realMinWidth >= 0 && cw < this.realMinWidth) {
			cw = this.realMinWidth;
		}
		if(this.realMinHeight >= 0 && ch < this.realMinHeight) {
			ch = this.realMinHeight;
		}
		if(this.overflow != h2d_FlowOverflow.Expand) {
			if(isConstraintWidth && cw > maxTotWidth) {
				cw = maxTotWidth;
			}
			if(isConstraintHeight && ch > maxTotHeight) {
				ch = maxTotHeight;
			}
		}
		if(this.interactive != null) {
			this.interactive.width = cw;
			this.interactive.height = ch;
		}
		if(this.background != null) {
			this.background.set_width(Math.ceil(cw));
			this.background.set_height(Math.ceil(ch));
		}
		this.calculatedWidth = cw;
		this.calculatedHeight = ch;
		this.set_needReflow(false);
		if(this.debug) {
			if(this.debugGraphics != this.children[this.children.length - 1]) {
				this.addChild(this.debugGraphics);
				this.set_needReflow(false);
			}
			if(this.paddingLeft != 0 || this.paddingRight != 0 || this.paddingTop != 0 || this.paddingBottom != 0 || borderWidth != 0 || borderHeight != 0) {
				this.debugGraphics.lineStyle(1,65280);
				this.debugGraphics.drawRect(this.paddingLeft + borderWidth,this.paddingTop + borderHeight,this.get_innerWidth(),this.get_innerHeight());
			}
			this.debugGraphics.lineStyle(1,33023);
			var _g = 0;
			var _g1 = this.children.length;
			while(_g < _g1) {
				var i = _g++;
				var p = _gthis.properties[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				var c = _gthis.children[_gthis.reverse ? _gthis.children.length - i - 1 : i];
				if(p.isAbsolute || !c.visible) {
					continue;
				}
				this.debugGraphics.drawRect(c.x,c.y,p.calculatedWidth,p.calculatedHeight);
			}
			this.debugGraphics.lineStyle(1,16711680);
			this.debugGraphics.drawRect(0,0,cw,ch);
		}
		this.onAfterReflow();
	}
	,onBeforeReflow: function() {
	}
	,onAfterReflow: function() {
	}
	,__class__: h2d_Flow
});
var h2d_Kerning = function(c,o) {
	this.prevChar = c;
	this.offset = o;
};
$hxClasses["h2d.Kerning"] = h2d_Kerning;
h2d_Kerning.__name__ = "h2d.Kerning";
h2d_Kerning.prototype = {
	__class__: h2d_Kerning
};
var h2d_FontChar = function(t,w) {
	this.t = t;
	this.width = w;
};
$hxClasses["h2d.FontChar"] = h2d_FontChar;
h2d_FontChar.__name__ = "h2d.FontChar";
h2d_FontChar.prototype = {
	addKerning: function(prevChar,offset) {
		var k = new h2d_Kerning(prevChar,offset);
		k.next = this.kerning;
		this.kerning = k;
	}
	,getKerningOffset: function(prevChar) {
		var k = this.kerning;
		while(k != null) {
			if(k.prevChar == prevChar) {
				return k.offset;
			}
			k = k.next;
		}
		return 0;
	}
	,__class__: h2d_FontChar
};
var h2d_FontType = $hxEnums["h2d.FontType"] = { __ename__ : true, __constructs__ : ["BitmapFont","SignedDistanceField"]
	,BitmapFont: {_hx_index:0,__enum__:"h2d.FontType",toString:$estr}
	,SignedDistanceField: ($_=function(channel,alphaCutoff,smoothing) { return {_hx_index:1,channel:channel,alphaCutoff:alphaCutoff,smoothing:smoothing,__enum__:"h2d.FontType",toString:$estr}; },$_.__params__ = ["channel","alphaCutoff","smoothing"],$_)
};
h2d_FontType.__empty_constructs__ = [h2d_FontType.BitmapFont];
var h2d_Font = function(name,size,type) {
	this.name = name;
	this.size = size;
	this.initSize = size;
	this.glyphs = new haxe_ds_IntMap();
	this.defaultChar = this.nullChar = new h2d_FontChar(new h2d_Tile(null,0,0,0,0),0);
	this.charset = hxd_Charset.getDefault();
	if(name != null) {
		this.tilePath = haxe_io_Path.withExtension(name,"png");
	}
	if(type == null) {
		this.type = h2d_FontType.BitmapFont;
	} else {
		this.type = type;
	}
};
$hxClasses["h2d.Font"] = h2d_Font;
h2d_Font.__name__ = "h2d.Font";
h2d_Font.prototype = {
	hasChar: function(code) {
		return this.glyphs.h[code] != null;
	}
	,__class__: h2d_Font
};
var h2d_GPoint = function() {
};
$hxClasses["h2d.GPoint"] = h2d_GPoint;
h2d_GPoint.__name__ = "h2d.GPoint";
h2d_GPoint.prototype = {
	load: function(x,y,r,g,b,a) {
		this.x = x;
		this.y = y;
		this.r = r;
		this.g = g;
		this.b = b;
		this.a = a;
	}
	,__class__: h2d_GPoint
};
var hxd_impl__$Serializable_NoSerializeSupport = function() { };
$hxClasses["hxd.impl._Serializable.NoSerializeSupport"] = hxd_impl__$Serializable_NoSerializeSupport;
hxd_impl__$Serializable_NoSerializeSupport.__name__ = "hxd.impl._Serializable.NoSerializeSupport";
hxd_impl__$Serializable_NoSerializeSupport.__isInterface__ = true;
var h3d_prim_Primitive = function() {
	this.refCount = 0;
};
$hxClasses["h3d.prim.Primitive"] = h3d_prim_Primitive;
h3d_prim_Primitive.__name__ = "h3d.prim.Primitive";
h3d_prim_Primitive.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_prim_Primitive.prototype = {
	getBounds: function() {
		throw haxe_Exception.thrown("not implemented for " + Std.string(this));
	}
	,incref: function() {
		this.refCount++;
	}
	,decref: function() {
		this.refCount--;
		if(this.refCount <= 0) {
			this.refCount = 0;
			this.dispose();
		}
	}
	,alloc: function(engine) {
		throw haxe_Exception.thrown("not implemented");
	}
	,render: function(engine) {
		if(this.buffer == null || this.buffer.isDisposed()) {
			this.alloc(engine);
		}
		if(this.indexes == null) {
			if((this.buffer.flags & 1 << h3d_BufferFlag.Quads._hx_index) != 0) {
				engine.renderBuffer(this.buffer,engine.mem.quadIndexes,2,0,-1);
			} else {
				engine.renderBuffer(this.buffer,engine.mem.triIndexes,3,0,-1);
			}
		} else {
			engine.renderIndexed(this.buffer,this.indexes);
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			this.buffer.dispose();
			this.buffer = null;
		}
		if(this.indexes != null) {
			this.indexes.dispose();
			this.indexes = null;
		}
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__.split(".").pop();
	}
	,__class__: h3d_prim_Primitive
};
var h2d__$Graphics_GraphicsContent = function() {
	h3d_prim_Primitive.call(this);
	this.buffers = [];
};
$hxClasses["h2d._Graphics.GraphicsContent"] = h2d__$Graphics_GraphicsContent;
h2d__$Graphics_GraphicsContent.__name__ = "h2d._Graphics.GraphicsContent";
h2d__$Graphics_GraphicsContent.__super__ = h3d_prim_Primitive;
h2d__$Graphics_GraphicsContent.prototype = $extend(h3d_prim_Primitive.prototype,{
	next: function() {
		var nvect = this.tmp.pos >> 3;
		if(nvect < 32768) {
			return false;
		}
		this.buffers.push({ buf : this.tmp, idx : this.index, vbuf : null, ibuf : null});
		var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
		this.tmp = this1;
		var this1 = new Array(0);
		this.index = this1;
		h3d_prim_Primitive.prototype.dispose.call(this);
		return true;
	}
	,alloc: function(engine) {
		if(this.index.length <= 0) {
			return;
		}
		var alloc = hxd_impl_Allocator.get();
		this.buffer = alloc.ofFloats(this.tmp,8,2);
		this.indexes = alloc.ofIndexes(this.index);
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.vbuf == null || b.vbuf.isDisposed()) {
				b.vbuf = alloc.ofFloats(b.buf,8,2);
			}
			if(b.ibuf == null || b.ibuf.isDisposed()) {
				b.ibuf = alloc.ofIndexes(b.idx);
			}
		}
		this.bufferDirty = false;
		this.indexDirty = false;
	}
	,render: function(engine) {
		if(this.index.length <= 0) {
			return;
		}
		this.flush();
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			engine.renderIndexed(b.vbuf,b.ibuf);
		}
		h3d_prim_Primitive.prototype.render.call(this,engine);
	}
	,flush: function() {
		if(this.buffer == null || this.buffer.isDisposed()) {
			this.alloc(h3d_Engine.CURRENT);
		} else {
			var allocator = hxd_impl_Allocator.get();
			if(this.bufferDirty) {
				allocator.disposeBuffer(this.buffer);
				this.buffer = allocator.ofFloats(this.tmp,8,2);
				this.bufferDirty = false;
			}
			if(this.indexDirty) {
				allocator.disposeIndexBuffer(this.indexes);
				this.indexes = allocator.ofIndexes(this.index);
				this.indexDirty = false;
			}
		}
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.vbuf != null) {
				hxd_impl_Allocator.get().disposeBuffer(b.vbuf);
			}
			if(b.ibuf != null) {
				hxd_impl_Allocator.get().disposeIndexBuffer(b.ibuf);
			}
			b.vbuf = null;
			b.ibuf = null;
		}
		if(this.buffer != null) {
			hxd_impl_Allocator.get().disposeBuffer(this.buffer);
			this.buffer = null;
		}
		if(this.indexes != null) {
			hxd_impl_Allocator.get().disposeIndexBuffer(this.indexes);
			this.indexes = null;
		}
		h3d_prim_Primitive.prototype.dispose.call(this);
	}
	,clear: function() {
		this.dispose();
		var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
		this.tmp = this1;
		var this1 = new Array(0);
		this.index = this1;
		this.buffers = [];
	}
	,__class__: h2d__$Graphics_GraphicsContent
});
var h2d_Graphics = function(parent) {
	this.bevel = 0.25;
	this.my = 0.;
	this.mx = 0.;
	this.md = 1.;
	this.mc = 0.;
	this.mb = 0.;
	this.ma = 1.;
	h2d_Drawable.call(this,parent);
	this.content = new h2d__$Graphics_GraphicsContent();
	this.tile = h2d_Tile.fromColor(16777215);
	this.clear();
};
$hxClasses["h2d.Graphics"] = h2d_Graphics;
h2d_Graphics.__name__ = "h2d.Graphics";
h2d_Graphics.__super__ = h2d_Drawable;
h2d_Graphics.prototype = $extend(h2d_Drawable.prototype,{
	onRemove: function() {
		h2d_Drawable.prototype.onRemove.call(this);
		this.clear();
	}
	,clear: function() {
		this.content.clear();
		this.tmpPoints = [];
		this.pindex = 0;
		this.lineSize = 0;
		this.xMin = Infinity;
		this.yMin = Infinity;
		this.yMax = -Infinity;
		this.xMax = -Infinity;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.tile != null) {
			this.addBounds(relativeTo,out,this.xMin,this.yMin,this.xMax - this.xMin,this.yMax - this.yMin);
		}
	}
	,isConvex: function(points) {
		var first = true;
		var sign = false;
		var _g = 0;
		var _g1 = points.length;
		while(_g < _g1) {
			var i = _g++;
			var p1 = points[i];
			var p2 = points[(i + 1) % points.length];
			var p3 = points[(i + 2) % points.length];
			var s = (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x) > 0;
			if(first) {
				first = false;
				sign = s;
			} else if(sign != s) {
				return false;
			}
		}
		return true;
	}
	,flushLine: function(start) {
		var pts = this.tmpPoints;
		var last = pts.length - 1;
		var prev = pts[last];
		var p = pts[0];
		var closed = p.x == prev.x && p.y == prev.y;
		var count = pts.length;
		if(!closed) {
			var prevLast = pts[last - 1];
			if(prevLast == null) {
				prevLast = p;
			}
			var gp = new h2d_GPoint();
			gp.load(prev.x * 2 - prevLast.x,prev.y * 2 - prevLast.y,0,0,0,0);
			pts.push(gp);
			var pNext = pts[1];
			if(pNext == null) {
				pNext = p;
			}
			var gp = new h2d_GPoint();
			gp.load(p.x * 2 - pNext.x,p.y * 2 - pNext.y,0,0,0,0);
			prev = gp;
		} else if(p != prev) {
			--count;
			--last;
			prev = pts[last];
		}
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var next = pts[(i + 1) % pts.length];
			var nx1 = prev.y - p.y;
			var ny1 = p.x - prev.x;
			var ns1 = 1. / Math.sqrt(nx1 * nx1 + ny1 * ny1);
			var nx2 = p.y - next.y;
			var ny2 = next.x - p.x;
			var ns2 = 1. / Math.sqrt(nx2 * nx2 + ny2 * ny2);
			var nx = nx1 * ns1 + nx2 * ns2;
			var ny = ny1 * ns1 + ny2 * ns2;
			var ns = 1. / Math.sqrt(nx * nx + ny * ny);
			nx *= ns;
			ny *= ns;
			var size = nx * nx1 * ns1 + ny * ny1 * ns1;
			if(size < 0.1) {
				size = 0.1;
			}
			var d = this.lineSize * 0.5 / size;
			nx *= d;
			ny *= d;
			if(size > this.bevel) {
				var _this = this.content;
				var x = p.x + nx;
				var y = p.y + ny;
				var r = p.r;
				var g = p.g;
				var b = p.b;
				var a = p.a;
				var this1 = _this.tmp;
				if(this1.pos == this1.array.length) {
					var newSize = this1.array.length << 1;
					if(newSize < 128) {
						newSize = 128;
					}
					var newArray = new Float32Array(newSize);
					newArray.set(this1.array);
					this1.array = newArray;
				}
				this1.array[this1.pos++] = x;
				var this2 = _this.tmp;
				if(this2.pos == this2.array.length) {
					var newSize1 = this2.array.length << 1;
					if(newSize1 < 128) {
						newSize1 = 128;
					}
					var newArray1 = new Float32Array(newSize1);
					newArray1.set(this2.array);
					this2.array = newArray1;
				}
				this2.array[this2.pos++] = y;
				var this3 = _this.tmp;
				if(this3.pos == this3.array.length) {
					var newSize2 = this3.array.length << 1;
					if(newSize2 < 128) {
						newSize2 = 128;
					}
					var newArray2 = new Float32Array(newSize2);
					newArray2.set(this3.array);
					this3.array = newArray2;
				}
				this3.array[this3.pos++] = 0;
				var this4 = _this.tmp;
				if(this4.pos == this4.array.length) {
					var newSize3 = this4.array.length << 1;
					if(newSize3 < 128) {
						newSize3 = 128;
					}
					var newArray3 = new Float32Array(newSize3);
					newArray3.set(this4.array);
					this4.array = newArray3;
				}
				this4.array[this4.pos++] = 0;
				var this5 = _this.tmp;
				if(this5.pos == this5.array.length) {
					var newSize4 = this5.array.length << 1;
					if(newSize4 < 128) {
						newSize4 = 128;
					}
					var newArray4 = new Float32Array(newSize4);
					newArray4.set(this5.array);
					this5.array = newArray4;
				}
				this5.array[this5.pos++] = r;
				var this6 = _this.tmp;
				if(this6.pos == this6.array.length) {
					var newSize5 = this6.array.length << 1;
					if(newSize5 < 128) {
						newSize5 = 128;
					}
					var newArray5 = new Float32Array(newSize5);
					newArray5.set(this6.array);
					this6.array = newArray5;
				}
				this6.array[this6.pos++] = g;
				var this7 = _this.tmp;
				if(this7.pos == this7.array.length) {
					var newSize6 = this7.array.length << 1;
					if(newSize6 < 128) {
						newSize6 = 128;
					}
					var newArray6 = new Float32Array(newSize6);
					newArray6.set(this7.array);
					this7.array = newArray6;
				}
				this7.array[this7.pos++] = b;
				var this8 = _this.tmp;
				if(this8.pos == this8.array.length) {
					var newSize7 = this8.array.length << 1;
					if(newSize7 < 128) {
						newSize7 = 128;
					}
					var newArray7 = new Float32Array(newSize7);
					newArray7.set(this8.array);
					this8.array = newArray7;
				}
				this8.array[this8.pos++] = a;
				_this.bufferDirty = true;
				var _this1 = this.content;
				var x1 = p.x - nx;
				var y1 = p.y - ny;
				var r1 = p.r;
				var g1 = p.g;
				var b1 = p.b;
				var a1 = p.a;
				var this9 = _this1.tmp;
				if(this9.pos == this9.array.length) {
					var newSize8 = this9.array.length << 1;
					if(newSize8 < 128) {
						newSize8 = 128;
					}
					var newArray8 = new Float32Array(newSize8);
					newArray8.set(this9.array);
					this9.array = newArray8;
				}
				this9.array[this9.pos++] = x1;
				var this10 = _this1.tmp;
				if(this10.pos == this10.array.length) {
					var newSize9 = this10.array.length << 1;
					if(newSize9 < 128) {
						newSize9 = 128;
					}
					var newArray9 = new Float32Array(newSize9);
					newArray9.set(this10.array);
					this10.array = newArray9;
				}
				this10.array[this10.pos++] = y1;
				var this11 = _this1.tmp;
				if(this11.pos == this11.array.length) {
					var newSize10 = this11.array.length << 1;
					if(newSize10 < 128) {
						newSize10 = 128;
					}
					var newArray10 = new Float32Array(newSize10);
					newArray10.set(this11.array);
					this11.array = newArray10;
				}
				this11.array[this11.pos++] = 0;
				var this12 = _this1.tmp;
				if(this12.pos == this12.array.length) {
					var newSize11 = this12.array.length << 1;
					if(newSize11 < 128) {
						newSize11 = 128;
					}
					var newArray11 = new Float32Array(newSize11);
					newArray11.set(this12.array);
					this12.array = newArray11;
				}
				this12.array[this12.pos++] = 0;
				var this13 = _this1.tmp;
				if(this13.pos == this13.array.length) {
					var newSize12 = this13.array.length << 1;
					if(newSize12 < 128) {
						newSize12 = 128;
					}
					var newArray12 = new Float32Array(newSize12);
					newArray12.set(this13.array);
					this13.array = newArray12;
				}
				this13.array[this13.pos++] = r1;
				var this14 = _this1.tmp;
				if(this14.pos == this14.array.length) {
					var newSize13 = this14.array.length << 1;
					if(newSize13 < 128) {
						newSize13 = 128;
					}
					var newArray13 = new Float32Array(newSize13);
					newArray13.set(this14.array);
					this14.array = newArray13;
				}
				this14.array[this14.pos++] = g1;
				var this15 = _this1.tmp;
				if(this15.pos == this15.array.length) {
					var newSize14 = this15.array.length << 1;
					if(newSize14 < 128) {
						newSize14 = 128;
					}
					var newArray14 = new Float32Array(newSize14);
					newArray14.set(this15.array);
					this15.array = newArray14;
				}
				this15.array[this15.pos++] = b1;
				var this16 = _this1.tmp;
				if(this16.pos == this16.array.length) {
					var newSize15 = this16.array.length << 1;
					if(newSize15 < 128) {
						newSize15 = 128;
					}
					var newArray15 = new Float32Array(newSize15);
					newArray15.set(this16.array);
					this16.array = newArray15;
				}
				this16.array[this16.pos++] = a1;
				_this1.bufferDirty = true;
				var pnext = i == last ? start : this.pindex + 2;
				if(i < count - 1 || closed) {
					var _this2 = this.content;
					_this2.index.push(this.pindex);
					_this2.indexDirty = true;
					var _this3 = this.content;
					_this3.index.push(this.pindex + 1);
					_this3.indexDirty = true;
					var _this4 = this.content;
					_this4.index.push(pnext);
					_this4.indexDirty = true;
					var _this5 = this.content;
					_this5.index.push(this.pindex + 1);
					_this5.indexDirty = true;
					var _this6 = this.content;
					_this6.index.push(pnext);
					_this6.indexDirty = true;
					var _this7 = this.content;
					_this7.index.push(pnext + 1);
					_this7.indexDirty = true;
				}
				this.pindex += 2;
			} else {
				var n0x = next.x - p.x;
				var n0y = next.y - p.y;
				var sign = n0x * nx + n0y * ny;
				var nnx = -ny;
				var nny = nx;
				var size1 = nnx * nx1 * ns1 + nny * ny1 * ns1;
				var d1 = this.lineSize * 0.5 / size1;
				nnx *= d1;
				nny *= d1;
				var pnext1 = i == last ? start : this.pindex + 3;
				if(sign > 0) {
					var _this8 = this.content;
					var x2 = p.x + nx;
					var y2 = p.y + ny;
					var r2 = p.r;
					var g2 = p.g;
					var b2 = p.b;
					var a2 = p.a;
					var this17 = _this8.tmp;
					if(this17.pos == this17.array.length) {
						var newSize16 = this17.array.length << 1;
						if(newSize16 < 128) {
							newSize16 = 128;
						}
						var newArray16 = new Float32Array(newSize16);
						newArray16.set(this17.array);
						this17.array = newArray16;
					}
					this17.array[this17.pos++] = x2;
					var this18 = _this8.tmp;
					if(this18.pos == this18.array.length) {
						var newSize17 = this18.array.length << 1;
						if(newSize17 < 128) {
							newSize17 = 128;
						}
						var newArray17 = new Float32Array(newSize17);
						newArray17.set(this18.array);
						this18.array = newArray17;
					}
					this18.array[this18.pos++] = y2;
					var this19 = _this8.tmp;
					if(this19.pos == this19.array.length) {
						var newSize18 = this19.array.length << 1;
						if(newSize18 < 128) {
							newSize18 = 128;
						}
						var newArray18 = new Float32Array(newSize18);
						newArray18.set(this19.array);
						this19.array = newArray18;
					}
					this19.array[this19.pos++] = 0;
					var this20 = _this8.tmp;
					if(this20.pos == this20.array.length) {
						var newSize19 = this20.array.length << 1;
						if(newSize19 < 128) {
							newSize19 = 128;
						}
						var newArray19 = new Float32Array(newSize19);
						newArray19.set(this20.array);
						this20.array = newArray19;
					}
					this20.array[this20.pos++] = 0;
					var this21 = _this8.tmp;
					if(this21.pos == this21.array.length) {
						var newSize20 = this21.array.length << 1;
						if(newSize20 < 128) {
							newSize20 = 128;
						}
						var newArray20 = new Float32Array(newSize20);
						newArray20.set(this21.array);
						this21.array = newArray20;
					}
					this21.array[this21.pos++] = r2;
					var this22 = _this8.tmp;
					if(this22.pos == this22.array.length) {
						var newSize21 = this22.array.length << 1;
						if(newSize21 < 128) {
							newSize21 = 128;
						}
						var newArray21 = new Float32Array(newSize21);
						newArray21.set(this22.array);
						this22.array = newArray21;
					}
					this22.array[this22.pos++] = g2;
					var this23 = _this8.tmp;
					if(this23.pos == this23.array.length) {
						var newSize22 = this23.array.length << 1;
						if(newSize22 < 128) {
							newSize22 = 128;
						}
						var newArray22 = new Float32Array(newSize22);
						newArray22.set(this23.array);
						this23.array = newArray22;
					}
					this23.array[this23.pos++] = b2;
					var this24 = _this8.tmp;
					if(this24.pos == this24.array.length) {
						var newSize23 = this24.array.length << 1;
						if(newSize23 < 128) {
							newSize23 = 128;
						}
						var newArray23 = new Float32Array(newSize23);
						newArray23.set(this24.array);
						this24.array = newArray23;
					}
					this24.array[this24.pos++] = a2;
					_this8.bufferDirty = true;
					var _this9 = this.content;
					var x3 = p.x - nnx;
					var y3 = p.y - nny;
					var r3 = p.r;
					var g3 = p.g;
					var b3 = p.b;
					var a3 = p.a;
					var this25 = _this9.tmp;
					if(this25.pos == this25.array.length) {
						var newSize24 = this25.array.length << 1;
						if(newSize24 < 128) {
							newSize24 = 128;
						}
						var newArray24 = new Float32Array(newSize24);
						newArray24.set(this25.array);
						this25.array = newArray24;
					}
					this25.array[this25.pos++] = x3;
					var this26 = _this9.tmp;
					if(this26.pos == this26.array.length) {
						var newSize25 = this26.array.length << 1;
						if(newSize25 < 128) {
							newSize25 = 128;
						}
						var newArray25 = new Float32Array(newSize25);
						newArray25.set(this26.array);
						this26.array = newArray25;
					}
					this26.array[this26.pos++] = y3;
					var this27 = _this9.tmp;
					if(this27.pos == this27.array.length) {
						var newSize26 = this27.array.length << 1;
						if(newSize26 < 128) {
							newSize26 = 128;
						}
						var newArray26 = new Float32Array(newSize26);
						newArray26.set(this27.array);
						this27.array = newArray26;
					}
					this27.array[this27.pos++] = 0;
					var this28 = _this9.tmp;
					if(this28.pos == this28.array.length) {
						var newSize27 = this28.array.length << 1;
						if(newSize27 < 128) {
							newSize27 = 128;
						}
						var newArray27 = new Float32Array(newSize27);
						newArray27.set(this28.array);
						this28.array = newArray27;
					}
					this28.array[this28.pos++] = 0;
					var this29 = _this9.tmp;
					if(this29.pos == this29.array.length) {
						var newSize28 = this29.array.length << 1;
						if(newSize28 < 128) {
							newSize28 = 128;
						}
						var newArray28 = new Float32Array(newSize28);
						newArray28.set(this29.array);
						this29.array = newArray28;
					}
					this29.array[this29.pos++] = r3;
					var this30 = _this9.tmp;
					if(this30.pos == this30.array.length) {
						var newSize29 = this30.array.length << 1;
						if(newSize29 < 128) {
							newSize29 = 128;
						}
						var newArray29 = new Float32Array(newSize29);
						newArray29.set(this30.array);
						this30.array = newArray29;
					}
					this30.array[this30.pos++] = g3;
					var this31 = _this9.tmp;
					if(this31.pos == this31.array.length) {
						var newSize30 = this31.array.length << 1;
						if(newSize30 < 128) {
							newSize30 = 128;
						}
						var newArray30 = new Float32Array(newSize30);
						newArray30.set(this31.array);
						this31.array = newArray30;
					}
					this31.array[this31.pos++] = b3;
					var this32 = _this9.tmp;
					if(this32.pos == this32.array.length) {
						var newSize31 = this32.array.length << 1;
						if(newSize31 < 128) {
							newSize31 = 128;
						}
						var newArray31 = new Float32Array(newSize31);
						newArray31.set(this32.array);
						this32.array = newArray31;
					}
					this32.array[this32.pos++] = a3;
					_this9.bufferDirty = true;
					var _this10 = this.content;
					var x4 = p.x + nnx;
					var y4 = p.y + nny;
					var r4 = p.r;
					var g4 = p.g;
					var b4 = p.b;
					var a4 = p.a;
					var this33 = _this10.tmp;
					if(this33.pos == this33.array.length) {
						var newSize32 = this33.array.length << 1;
						if(newSize32 < 128) {
							newSize32 = 128;
						}
						var newArray32 = new Float32Array(newSize32);
						newArray32.set(this33.array);
						this33.array = newArray32;
					}
					this33.array[this33.pos++] = x4;
					var this34 = _this10.tmp;
					if(this34.pos == this34.array.length) {
						var newSize33 = this34.array.length << 1;
						if(newSize33 < 128) {
							newSize33 = 128;
						}
						var newArray33 = new Float32Array(newSize33);
						newArray33.set(this34.array);
						this34.array = newArray33;
					}
					this34.array[this34.pos++] = y4;
					var this35 = _this10.tmp;
					if(this35.pos == this35.array.length) {
						var newSize34 = this35.array.length << 1;
						if(newSize34 < 128) {
							newSize34 = 128;
						}
						var newArray34 = new Float32Array(newSize34);
						newArray34.set(this35.array);
						this35.array = newArray34;
					}
					this35.array[this35.pos++] = 0;
					var this36 = _this10.tmp;
					if(this36.pos == this36.array.length) {
						var newSize35 = this36.array.length << 1;
						if(newSize35 < 128) {
							newSize35 = 128;
						}
						var newArray35 = new Float32Array(newSize35);
						newArray35.set(this36.array);
						this36.array = newArray35;
					}
					this36.array[this36.pos++] = 0;
					var this37 = _this10.tmp;
					if(this37.pos == this37.array.length) {
						var newSize36 = this37.array.length << 1;
						if(newSize36 < 128) {
							newSize36 = 128;
						}
						var newArray36 = new Float32Array(newSize36);
						newArray36.set(this37.array);
						this37.array = newArray36;
					}
					this37.array[this37.pos++] = r4;
					var this38 = _this10.tmp;
					if(this38.pos == this38.array.length) {
						var newSize37 = this38.array.length << 1;
						if(newSize37 < 128) {
							newSize37 = 128;
						}
						var newArray37 = new Float32Array(newSize37);
						newArray37.set(this38.array);
						this38.array = newArray37;
					}
					this38.array[this38.pos++] = g4;
					var this39 = _this10.tmp;
					if(this39.pos == this39.array.length) {
						var newSize38 = this39.array.length << 1;
						if(newSize38 < 128) {
							newSize38 = 128;
						}
						var newArray38 = new Float32Array(newSize38);
						newArray38.set(this39.array);
						this39.array = newArray38;
					}
					this39.array[this39.pos++] = b4;
					var this40 = _this10.tmp;
					if(this40.pos == this40.array.length) {
						var newSize39 = this40.array.length << 1;
						if(newSize39 < 128) {
							newSize39 = 128;
						}
						var newArray39 = new Float32Array(newSize39);
						newArray39.set(this40.array);
						this40.array = newArray39;
					}
					this40.array[this40.pos++] = a4;
					_this10.bufferDirty = true;
					var _this11 = this.content;
					_this11.index.push(this.pindex);
					_this11.indexDirty = true;
					var _this12 = this.content;
					_this12.index.push(pnext1);
					_this12.indexDirty = true;
					var _this13 = this.content;
					_this13.index.push(this.pindex + 2);
					_this13.indexDirty = true;
					var _this14 = this.content;
					_this14.index.push(this.pindex + 2);
					_this14.indexDirty = true;
					var _this15 = this.content;
					_this15.index.push(pnext1);
					_this15.indexDirty = true;
					var _this16 = this.content;
					_this16.index.push(pnext1 + 1);
					_this16.indexDirty = true;
				} else {
					var _this17 = this.content;
					var x5 = p.x + nnx;
					var y5 = p.y + nny;
					var r5 = p.r;
					var g5 = p.g;
					var b5 = p.b;
					var a5 = p.a;
					var this41 = _this17.tmp;
					if(this41.pos == this41.array.length) {
						var newSize40 = this41.array.length << 1;
						if(newSize40 < 128) {
							newSize40 = 128;
						}
						var newArray40 = new Float32Array(newSize40);
						newArray40.set(this41.array);
						this41.array = newArray40;
					}
					this41.array[this41.pos++] = x5;
					var this42 = _this17.tmp;
					if(this42.pos == this42.array.length) {
						var newSize41 = this42.array.length << 1;
						if(newSize41 < 128) {
							newSize41 = 128;
						}
						var newArray41 = new Float32Array(newSize41);
						newArray41.set(this42.array);
						this42.array = newArray41;
					}
					this42.array[this42.pos++] = y5;
					var this43 = _this17.tmp;
					if(this43.pos == this43.array.length) {
						var newSize42 = this43.array.length << 1;
						if(newSize42 < 128) {
							newSize42 = 128;
						}
						var newArray42 = new Float32Array(newSize42);
						newArray42.set(this43.array);
						this43.array = newArray42;
					}
					this43.array[this43.pos++] = 0;
					var this44 = _this17.tmp;
					if(this44.pos == this44.array.length) {
						var newSize43 = this44.array.length << 1;
						if(newSize43 < 128) {
							newSize43 = 128;
						}
						var newArray43 = new Float32Array(newSize43);
						newArray43.set(this44.array);
						this44.array = newArray43;
					}
					this44.array[this44.pos++] = 0;
					var this45 = _this17.tmp;
					if(this45.pos == this45.array.length) {
						var newSize44 = this45.array.length << 1;
						if(newSize44 < 128) {
							newSize44 = 128;
						}
						var newArray44 = new Float32Array(newSize44);
						newArray44.set(this45.array);
						this45.array = newArray44;
					}
					this45.array[this45.pos++] = r5;
					var this46 = _this17.tmp;
					if(this46.pos == this46.array.length) {
						var newSize45 = this46.array.length << 1;
						if(newSize45 < 128) {
							newSize45 = 128;
						}
						var newArray45 = new Float32Array(newSize45);
						newArray45.set(this46.array);
						this46.array = newArray45;
					}
					this46.array[this46.pos++] = g5;
					var this47 = _this17.tmp;
					if(this47.pos == this47.array.length) {
						var newSize46 = this47.array.length << 1;
						if(newSize46 < 128) {
							newSize46 = 128;
						}
						var newArray46 = new Float32Array(newSize46);
						newArray46.set(this47.array);
						this47.array = newArray46;
					}
					this47.array[this47.pos++] = b5;
					var this48 = _this17.tmp;
					if(this48.pos == this48.array.length) {
						var newSize47 = this48.array.length << 1;
						if(newSize47 < 128) {
							newSize47 = 128;
						}
						var newArray47 = new Float32Array(newSize47);
						newArray47.set(this48.array);
						this48.array = newArray47;
					}
					this48.array[this48.pos++] = a5;
					_this17.bufferDirty = true;
					var _this18 = this.content;
					var x6 = p.x - nx;
					var y6 = p.y - ny;
					var r6 = p.r;
					var g6 = p.g;
					var b6 = p.b;
					var a6 = p.a;
					var this49 = _this18.tmp;
					if(this49.pos == this49.array.length) {
						var newSize48 = this49.array.length << 1;
						if(newSize48 < 128) {
							newSize48 = 128;
						}
						var newArray48 = new Float32Array(newSize48);
						newArray48.set(this49.array);
						this49.array = newArray48;
					}
					this49.array[this49.pos++] = x6;
					var this50 = _this18.tmp;
					if(this50.pos == this50.array.length) {
						var newSize49 = this50.array.length << 1;
						if(newSize49 < 128) {
							newSize49 = 128;
						}
						var newArray49 = new Float32Array(newSize49);
						newArray49.set(this50.array);
						this50.array = newArray49;
					}
					this50.array[this50.pos++] = y6;
					var this51 = _this18.tmp;
					if(this51.pos == this51.array.length) {
						var newSize50 = this51.array.length << 1;
						if(newSize50 < 128) {
							newSize50 = 128;
						}
						var newArray50 = new Float32Array(newSize50);
						newArray50.set(this51.array);
						this51.array = newArray50;
					}
					this51.array[this51.pos++] = 0;
					var this52 = _this18.tmp;
					if(this52.pos == this52.array.length) {
						var newSize51 = this52.array.length << 1;
						if(newSize51 < 128) {
							newSize51 = 128;
						}
						var newArray51 = new Float32Array(newSize51);
						newArray51.set(this52.array);
						this52.array = newArray51;
					}
					this52.array[this52.pos++] = 0;
					var this53 = _this18.tmp;
					if(this53.pos == this53.array.length) {
						var newSize52 = this53.array.length << 1;
						if(newSize52 < 128) {
							newSize52 = 128;
						}
						var newArray52 = new Float32Array(newSize52);
						newArray52.set(this53.array);
						this53.array = newArray52;
					}
					this53.array[this53.pos++] = r6;
					var this54 = _this18.tmp;
					if(this54.pos == this54.array.length) {
						var newSize53 = this54.array.length << 1;
						if(newSize53 < 128) {
							newSize53 = 128;
						}
						var newArray53 = new Float32Array(newSize53);
						newArray53.set(this54.array);
						this54.array = newArray53;
					}
					this54.array[this54.pos++] = g6;
					var this55 = _this18.tmp;
					if(this55.pos == this55.array.length) {
						var newSize54 = this55.array.length << 1;
						if(newSize54 < 128) {
							newSize54 = 128;
						}
						var newArray54 = new Float32Array(newSize54);
						newArray54.set(this55.array);
						this55.array = newArray54;
					}
					this55.array[this55.pos++] = b6;
					var this56 = _this18.tmp;
					if(this56.pos == this56.array.length) {
						var newSize55 = this56.array.length << 1;
						if(newSize55 < 128) {
							newSize55 = 128;
						}
						var newArray55 = new Float32Array(newSize55);
						newArray55.set(this56.array);
						this56.array = newArray55;
					}
					this56.array[this56.pos++] = a6;
					_this18.bufferDirty = true;
					var _this19 = this.content;
					var x7 = p.x - nnx;
					var y7 = p.y - nny;
					var r7 = p.r;
					var g7 = p.g;
					var b7 = p.b;
					var a7 = p.a;
					var this57 = _this19.tmp;
					if(this57.pos == this57.array.length) {
						var newSize56 = this57.array.length << 1;
						if(newSize56 < 128) {
							newSize56 = 128;
						}
						var newArray56 = new Float32Array(newSize56);
						newArray56.set(this57.array);
						this57.array = newArray56;
					}
					this57.array[this57.pos++] = x7;
					var this58 = _this19.tmp;
					if(this58.pos == this58.array.length) {
						var newSize57 = this58.array.length << 1;
						if(newSize57 < 128) {
							newSize57 = 128;
						}
						var newArray57 = new Float32Array(newSize57);
						newArray57.set(this58.array);
						this58.array = newArray57;
					}
					this58.array[this58.pos++] = y7;
					var this59 = _this19.tmp;
					if(this59.pos == this59.array.length) {
						var newSize58 = this59.array.length << 1;
						if(newSize58 < 128) {
							newSize58 = 128;
						}
						var newArray58 = new Float32Array(newSize58);
						newArray58.set(this59.array);
						this59.array = newArray58;
					}
					this59.array[this59.pos++] = 0;
					var this60 = _this19.tmp;
					if(this60.pos == this60.array.length) {
						var newSize59 = this60.array.length << 1;
						if(newSize59 < 128) {
							newSize59 = 128;
						}
						var newArray59 = new Float32Array(newSize59);
						newArray59.set(this60.array);
						this60.array = newArray59;
					}
					this60.array[this60.pos++] = 0;
					var this61 = _this19.tmp;
					if(this61.pos == this61.array.length) {
						var newSize60 = this61.array.length << 1;
						if(newSize60 < 128) {
							newSize60 = 128;
						}
						var newArray60 = new Float32Array(newSize60);
						newArray60.set(this61.array);
						this61.array = newArray60;
					}
					this61.array[this61.pos++] = r7;
					var this62 = _this19.tmp;
					if(this62.pos == this62.array.length) {
						var newSize61 = this62.array.length << 1;
						if(newSize61 < 128) {
							newSize61 = 128;
						}
						var newArray61 = new Float32Array(newSize61);
						newArray61.set(this62.array);
						this62.array = newArray61;
					}
					this62.array[this62.pos++] = g7;
					var this63 = _this19.tmp;
					if(this63.pos == this63.array.length) {
						var newSize62 = this63.array.length << 1;
						if(newSize62 < 128) {
							newSize62 = 128;
						}
						var newArray62 = new Float32Array(newSize62);
						newArray62.set(this63.array);
						this63.array = newArray62;
					}
					this63.array[this63.pos++] = b7;
					var this64 = _this19.tmp;
					if(this64.pos == this64.array.length) {
						var newSize63 = this64.array.length << 1;
						if(newSize63 < 128) {
							newSize63 = 128;
						}
						var newArray63 = new Float32Array(newSize63);
						newArray63.set(this64.array);
						this64.array = newArray63;
					}
					this64.array[this64.pos++] = a7;
					_this19.bufferDirty = true;
					var _this20 = this.content;
					_this20.index.push(this.pindex + 1);
					_this20.indexDirty = true;
					var _this21 = this.content;
					_this21.index.push(pnext1);
					_this21.indexDirty = true;
					var _this22 = this.content;
					_this22.index.push(this.pindex + 2);
					_this22.indexDirty = true;
					var _this23 = this.content;
					_this23.index.push(this.pindex + 1);
					_this23.indexDirty = true;
					var _this24 = this.content;
					_this24.index.push(pnext1);
					_this24.indexDirty = true;
					var _this25 = this.content;
					_this25.index.push(pnext1 + 1);
					_this25.indexDirty = true;
				}
				var _this26 = this.content;
				_this26.index.push(this.pindex);
				_this26.indexDirty = true;
				var _this27 = this.content;
				_this27.index.push(this.pindex + 1);
				_this27.indexDirty = true;
				var _this28 = this.content;
				_this28.index.push(this.pindex + 2);
				_this28.indexDirty = true;
				this.pindex += 3;
			}
			prev = p;
			p = next;
		}
	}
	,flushFill: function(i0) {
		if(this.tmpPoints.length < 3) {
			return;
		}
		var pts = this.tmpPoints;
		var p0 = pts[0];
		var p1 = pts[pts.length - 1];
		var last = null;
		var tmp;
		var f = p0.x - p1.x;
		if((f < 0 ? -f : f) < 1e-9) {
			var f = p0.y - p1.y;
			tmp = (f < 0 ? -f : f) < 1e-9;
		} else {
			tmp = false;
		}
		if(tmp) {
			last = pts.pop();
		}
		if(this.isConvex(pts)) {
			var _g = 1;
			var _g1 = pts.length - 1;
			while(_g < _g1) {
				var i = _g++;
				var _this = this.content;
				_this.index.push(i0);
				_this.indexDirty = true;
				var _this1 = this.content;
				_this1.index.push(i0 + i);
				_this1.indexDirty = true;
				var _this2 = this.content;
				_this2.index.push(i0 + i + 1);
				_this2.indexDirty = true;
			}
		} else {
			var ear = h2d_Graphics.EARCUT;
			if(ear == null) {
				ear = new hxd_earcut_Earcut();
				h2d_Graphics.EARCUT = ear;
			}
			var _g = 0;
			var _g1 = ear.triangulate_h2d_GPoint(pts);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				var _this = this.content;
				_this.index.push(i + i0);
				_this.indexDirty = true;
			}
		}
		if(last != null) {
			pts.push(last);
		}
	}
	,flush: function() {
		if(this.tmpPoints.length == 0) {
			return;
		}
		if(this.doFill) {
			this.flushFill(this.pindex);
			this.pindex += this.tmpPoints.length;
			if(this.content.next()) {
				this.pindex = 0;
			}
		}
		if(this.lineSize > 0) {
			this.flushLine(this.pindex);
			if(this.content.next()) {
				this.pindex = 0;
			}
		}
		this.tmpPoints = [];
	}
	,lineStyle: function(size,color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		if(color == null) {
			color = 0;
		}
		if(size == null) {
			size = 0;
		}
		this.flush();
		this.lineSize = size;
		this.lineA = alpha;
		this.lineR = (color >> 16 & 255) / 255.;
		this.lineG = (color >> 8 & 255) / 255.;
		this.lineB = (color & 255) / 255.;
	}
	,drawRect: function(x,y,w,h) {
		this.flush();
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		var x1 = x + w;
		this.addVertex(x1,y,this.curR,this.curG,this.curB,this.curA,x1 * this.ma + y * this.mc + this.mx,x1 * this.mb + y * this.md + this.my);
		var x1 = x + w;
		var y1 = y + h;
		this.addVertex(x1,y1,this.curR,this.curG,this.curB,this.curA,x1 * this.ma + y1 * this.mc + this.mx,x1 * this.mb + y1 * this.md + this.my);
		var y1 = y + h;
		this.addVertex(x,y1,this.curR,this.curG,this.curB,this.curA,x * this.ma + y1 * this.mc + this.mx,x * this.mb + y1 * this.md + this.my);
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		var e = 0.01;
		this.tmpPoints[0].x += e;
		this.tmpPoints[0].y += e;
		this.tmpPoints[1].y += e;
		this.tmpPoints[3].x += e;
		this.tmpPoints[4].x += e;
		this.tmpPoints[4].y += e;
		this.flush();
	}
	,drawCircle: function(cx,cy,radius,nsegments) {
		if(nsegments == null) {
			nsegments = 0;
		}
		this.flush();
		if(nsegments == 0) {
			var f = radius * 3.14 * 2 / 4;
			nsegments = Math.ceil(f < 0 ? -f : f);
		}
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = 6.2831853071795862 / nsegments;
		var _g = 0;
		var _g1 = nsegments + 1;
		while(_g < _g1) {
			var i = _g++;
			var a = i * angle;
			var x = cx + Math.cos(a) * radius;
			var y = cy + Math.sin(a) * radius;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.flush();
	}
	,curveTo: function(bx,by,cx,cy) {
		var ax = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].x;
		var ay = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].y;
		var t = 0.66666666666666663;
		this.cubicCurveTo(ax + t * (bx - ax),ay + t * (by - ay),cx + t * (bx - cx),cy + t * (by - cy),cx,cy);
	}
	,cubicCurveTo: function(bx,by,cx,cy,dx,dy,nsegments) {
		if(nsegments == null) {
			nsegments = 40;
		}
		var ax = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].x;
		var ay = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].y;
		var tobx = bx - ax;
		var toby = by - ay;
		var tocx = cx - bx;
		var tocy = cy - by;
		var todx = dx - cx;
		var tody = dy - cy;
		var step = 1 / nsegments;
		var _g = 1;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			var d = i * step;
			var px = ax + d * tobx;
			var py = ay + d * toby;
			var qx = bx + d * tocx;
			var qy = by + d * tocy;
			var rx = cx + d * todx;
			var ry = cy + d * tody;
			var toqx = qx - px;
			var toqy = qy - py;
			var torx = rx - qx;
			var tory = ry - qy;
			var sx = px + d * toqx;
			var sy = py + d * toqy;
			var tx = qx + d * torx;
			var ty = qy + d * tory;
			var totx = tx - sx;
			var toty = ty - sy;
			var x = sx + d * totx;
			var y = sy + d * toty;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.addVertex(dx,dy,this.curR,this.curG,this.curB,this.curA,dx * this.ma + dy * this.mc + this.mx,dx * this.mb + dy * this.md + this.my);
	}
	,addVertex: function(x,y,r,g,b,a,u,v) {
		if(v == null) {
			v = 0.;
		}
		if(u == null) {
			u = 0.;
		}
		if(x < this.xMin) {
			this.xMin = x;
		}
		if(y < this.yMin) {
			this.yMin = y;
		}
		if(x > this.xMax) {
			this.xMax = x;
		}
		if(y > this.yMax) {
			this.yMax = y;
		}
		if(this.doFill) {
			var _this = this.content;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = x;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = y;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = u;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = v;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = r;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = g;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = b;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = a;
			_this.bufferDirty = true;
		}
		var gp = new h2d_GPoint();
		gp.load(x,y,this.lineR,this.lineG,this.lineB,this.lineA);
		this.tmpPoints.push(gp);
	}
	,draw: function(ctx) {
		if(!ctx.beginDrawObject(this,this.tile.innerTex)) {
			return;
		}
		this.content.render(ctx.engine);
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		this.flush();
		this.content.flush();
	}
	,__class__: h2d_Graphics
});
var h2d_LineHeightMode = $hxEnums["h2d.LineHeightMode"] = { __ename__ : true, __constructs__ : ["Accurate","TextOnly","Constant"]
	,Accurate: {_hx_index:0,__enum__:"h2d.LineHeightMode",toString:$estr}
	,TextOnly: {_hx_index:1,__enum__:"h2d.LineHeightMode",toString:$estr}
	,Constant: {_hx_index:2,__enum__:"h2d.LineHeightMode",toString:$estr}
};
h2d_LineHeightMode.__empty_constructs__ = [h2d_LineHeightMode.Accurate,h2d_LineHeightMode.TextOnly,h2d_LineHeightMode.Constant];
var h2d_ImageVerticalAlign = $hxEnums["h2d.ImageVerticalAlign"] = { __ename__ : true, __constructs__ : ["Top","Bottom","Middle"]
	,Top: {_hx_index:0,__enum__:"h2d.ImageVerticalAlign",toString:$estr}
	,Bottom: {_hx_index:1,__enum__:"h2d.ImageVerticalAlign",toString:$estr}
	,Middle: {_hx_index:2,__enum__:"h2d.ImageVerticalAlign",toString:$estr}
};
h2d_ImageVerticalAlign.__empty_constructs__ = [h2d_ImageVerticalAlign.Top,h2d_ImageVerticalAlign.Bottom,h2d_ImageVerticalAlign.Middle];
var h2d_Text = function(font,parent) {
	this.realMaxWidth = -1;
	this.constraintWidth = -1;
	h2d_Drawable.call(this,parent);
	this.set_font(font);
	this.set_textAlign(h2d_Align.Left);
	this.set_letterSpacing(0);
	this.set_lineSpacing(0);
	this.set_text("");
	this.currentText = "";
	this.set_textColor(16777215);
};
$hxClasses["h2d.Text"] = h2d_Text;
h2d_Text.__name__ = "h2d.Text";
h2d_Text.__super__ = h2d_Drawable;
h2d_Text.prototype = $extend(h2d_Drawable.prototype,{
	set_font: function(font) {
		if(this.font == font) {
			return font;
		}
		this.font = font;
		if(font != null) {
			var _g = font.type;
			switch(_g._hx_index) {
			case 0:
				if(this.sdfShader != null) {
					this.removeShader(this.sdfShader);
					this.sdfShader = null;
				}
				break;
			case 1:
				var smoothing = _g.smoothing;
				var alphaCutoff = _g.alphaCutoff;
				var channel = _g.channel;
				if(this.sdfShader == null) {
					this.sdfShader = new h3d_shader_SignedDistanceField();
					this.addShader(this.sdfShader);
				}
				this.sdfShader.alphaCutoff__ = alphaCutoff;
				this.sdfShader.smoothing__ = smoothing;
				var _this = this.sdfShader;
				_this.constModified = true;
				_this.channel__ = channel;
				break;
			}
		}
		if(this.glyphs != null) {
			var _this = this.glyphs;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
		}
		this.glyphs = new h2d_TileGroup(font == null ? null : font.tile,this);
		this.glyphs.set_visible(false);
		this.rebuild();
		return font;
	}
	,set_textAlign: function(a) {
		if(this.textAlign == a) {
			return a;
		}
		this.textAlign = a;
		this.rebuild();
		return a;
	}
	,set_letterSpacing: function(s) {
		if(this.letterSpacing == s) {
			return s;
		}
		this.letterSpacing = s;
		this.rebuild();
		return s;
	}
	,set_lineSpacing: function(s) {
		if(this.lineSpacing == s) {
			return s;
		}
		this.lineSpacing = s;
		this.rebuild();
		return s;
	}
	,constraintSize: function(width,height) {
		this.constraintWidth = width;
		this.updateConstraint();
	}
	,onAdd: function() {
		h2d_Drawable.prototype.onAdd.call(this);
		this.rebuild();
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(this.needsRebuild) {
			this.initGlyphs(this.currentText);
		}
	}
	,draw: function(ctx) {
		if(this.glyphs == null) {
			this.emitTile(ctx,h2d_Tile.fromColor(16711935,16,16));
			return;
		}
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(this.needsRebuild) {
			this.initGlyphs(this.currentText);
		}
		if(this.dropShadow != null) {
			var oldX = this.absX;
			var oldY = this.absY;
			this.absX += this.dropShadow.dx * this.matA + this.dropShadow.dy * this.matC;
			this.absY += this.dropShadow.dx * this.matB + this.dropShadow.dy * this.matD;
			var oldR = this.color.x;
			var oldG = this.color.y;
			var oldB = this.color.z;
			var oldA = this.color.w;
			var _this = this.color;
			var c = this.dropShadow.color;
			_this.x = (c >> 16 & 255) / 255;
			_this.y = (c >> 8 & 255) / 255;
			_this.z = (c & 255) / 255;
			_this.w = (c >>> 24) / 255;
			this.color.w = this.dropShadow.alpha * oldA;
			this.glyphs.drawWith(ctx,this);
			this.absX = oldX;
			this.absY = oldY;
			var _this = this.color;
			var x = oldR;
			var y = oldG;
			var z = oldB;
			var w = oldA;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		this.glyphs.drawWith(ctx,this);
	}
	,set_text: function(t) {
		var t1 = t == null ? "null" : t;
		if(t1 == this.text) {
			return t1;
		}
		this.text = t1;
		this.textChanged = true;
		this.validateText();
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
		return t1;
	}
	,validateText: function() {
	}
	,rebuild: function() {
		this.calcDone = false;
		this.needsRebuild = true;
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
	}
	,calcTextWidth: function(text) {
		if(this.calcDone) {
			var ow = this.calcWidth;
			var oh = this.calcHeight;
			var osh = this.calcSizeHeight;
			var ox = this.calcXMin;
			var oy = this.calcYMin;
			this.initGlyphs(text,false);
			var w = this.calcWidth;
			this.calcWidth = ow;
			this.calcHeight = oh;
			this.calcSizeHeight = osh;
			this.calcXMin = ox;
			this.calcYMin = oy;
			return w;
		} else {
			this.initGlyphs(text,false);
			this.calcDone = false;
			return this.calcWidth;
		}
	}
	,splitRawText: function(text,leftMargin,afterData,font,sizes,prevChar) {
		if(prevChar == null) {
			prevChar = -1;
		}
		if(afterData == null) {
			afterData = 0.;
		}
		if(leftMargin == null) {
			leftMargin = 0.;
		}
		var maxWidth = this.realMaxWidth;
		if(maxWidth < 0) {
			if(sizes == null) {
				return text;
			} else {
				maxWidth = Infinity;
			}
		}
		if(font == null) {
			font = this.font;
		}
		var lines = [];
		var restPos = 0;
		var x = leftMargin;
		var _g = 0;
		var _g1 = text.length;
		while(_g < _g1) {
			var i = _g++;
			var cc = HxOverrides.cca(text,i);
			var c = font.glyphs.h[cc];
			if(c == null) {
				c = font.charset.resolveChar(cc,font.glyphs);
				if(c == null) {
					c = cc == 13 || cc == 10 ? font.nullChar : font.defaultChar;
				}
			}
			var e = c;
			var newline = cc == 10;
			var esize = e.width + e.getKerningOffset(prevChar);
			var nc = HxOverrides.cca(text,i + 1);
			if(font.charset.isBreakChar(cc) && (nc == null || !font.charset.isComplementChar(nc))) {
				if(lines.length == 0 && leftMargin > 0 && x > maxWidth) {
					lines.push("");
					if(sizes != null) {
						sizes.push(leftMargin);
					}
					x -= leftMargin;
				}
				var size = x + esize + this.letterSpacing;
				var k = i + 1;
				var max = text.length;
				var prevChar1 = prevChar;
				var breakFound = false;
				while(size <= maxWidth && k < max) {
					var cc1 = HxOverrides.cca(text,k++);
					if(font.charset.isSpace(cc1) || cc1 == 10) {
						breakFound = true;
						break;
					}
					var c1 = font.glyphs.h[cc1];
					if(c1 == null) {
						c1 = font.charset.resolveChar(cc1,font.glyphs);
						if(c1 == null) {
							c1 = cc1 == 13 || cc1 == 10 ? font.nullChar : font.defaultChar;
						}
					}
					var e1 = c1;
					size += e1.width + this.letterSpacing + e1.getKerningOffset(prevChar1);
					prevChar1 = cc1;
					var nc1 = HxOverrides.cca(text,k + 1);
					if(font.charset.isBreakChar(cc1) && (nc1 == null || !font.charset.isComplementChar(nc1))) {
						break;
					}
				}
				if(size > maxWidth || !breakFound && size + afterData > maxWidth) {
					newline = true;
					if(font.charset.isSpace(cc)) {
						lines.push(HxOverrides.substr(text,restPos,i - restPos));
						e = null;
					} else {
						lines.push(HxOverrides.substr(text,restPos,i + 1 - restPos));
					}
					restPos = i + 1;
				}
			}
			if(e != null && cc != 10) {
				x += esize + this.letterSpacing;
			}
			if(newline) {
				if(sizes != null) {
					sizes.push(x);
				}
				x = 0;
				prevChar = -1;
			} else {
				prevChar = cc;
			}
		}
		if(restPos < text.length) {
			if(lines.length == 0 && leftMargin > 0 && x + afterData - this.letterSpacing > maxWidth) {
				lines.push("");
				if(sizes != null) {
					sizes.push(leftMargin);
				}
				x -= leftMargin;
			}
			lines.push(HxOverrides.substr(text,restPos,text.length - restPos));
			if(sizes != null) {
				sizes.push(x);
			}
		}
		return lines.join("\n");
	}
	,initGlyphs: function(text,rebuild) {
		if(rebuild == null) {
			rebuild = true;
		}
		if(rebuild) {
			this.glyphs.clear();
		}
		var x = 0.;
		var y = 0.;
		var xMax = 0.;
		var xMin = 0.;
		var yMin = 0.;
		var prevChar = -1;
		var linei = 0;
		var align = this.textAlign;
		var lines = [];
		var dl = this.font.lineHeight + this.lineSpacing;
		var t = this.splitRawText(text,0,0,null,lines);
		var _g = 0;
		while(_g < lines.length) {
			var lw = lines[_g];
			++_g;
			if(lw > x) {
				x = lw;
			}
		}
		this.calcWidth = x;
		switch(align._hx_index) {
		case 0:
			x = 0;
			break;
		case 1:case 2:case 3:case 4:
			var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(this.calcWidth) : this.realMaxWidth < 0 ? 0 : Math.ceil(this.realMaxWidth);
			var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
			var _g = 0;
			var _g1 = lines.length;
			while(_g < _g1) {
				var i = _g++;
				lines[i] = Math.floor((max - lines[i]) * k);
			}
			x = lines[0];
			xMin = x;
			break;
		}
		var _g = 0;
		var _g1 = t.length;
		while(_g < _g1) {
			var i = _g++;
			var cc = HxOverrides.cca(t,i);
			var _this = this.font;
			var c = _this.glyphs.h[cc];
			if(c == null) {
				c = _this.charset.resolveChar(cc,_this.glyphs);
				if(c == null) {
					c = cc == 13 || cc == 10 ? _this.nullChar : _this.defaultChar;
				}
			}
			var e = c;
			var offs = e.getKerningOffset(prevChar);
			var esize = e.width + offs;
			if(cc == 10) {
				if(x > xMax) {
					xMax = x;
				}
				switch(align._hx_index) {
				case 0:
					x = 0;
					break;
				case 1:case 2:case 3:case 4:
					x = lines[++linei];
					if(x < xMin) {
						xMin = x;
					}
					break;
				}
				y += dl;
				prevChar = -1;
			} else {
				if(e != null) {
					if(rebuild) {
						var _this1 = this.glyphs;
						_this1.content.add(x + offs,y,_this1.curColor.x,_this1.curColor.y,_this1.curColor.z,_this1.curColor.w,e.t);
					}
					if(y == 0 && e.t.dy < yMin) {
						yMin = e.t.dy;
					}
					x += esize + this.letterSpacing;
				}
				prevChar = cc;
			}
		}
		if(x > xMax) {
			xMax = x;
		}
		this.calcXMin = xMin;
		this.calcYMin = yMin;
		this.calcWidth = xMax - xMin;
		this.calcHeight = y + this.font.lineHeight;
		this.calcSizeHeight = y + (this.font.baseLine > 0 ? this.font.baseLine : this.font.lineHeight);
		this.calcDone = true;
		if(rebuild) {
			this.needsRebuild = false;
		}
	}
	,get_textHeight: function() {
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(!this.calcDone) {
			this.initGlyphs(this.text,this.needsRebuild);
		}
		return this.calcHeight;
	}
	,get_textWidth: function() {
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(!this.calcDone) {
			this.initGlyphs(this.text,this.needsRebuild);
		}
		return this.calcWidth;
	}
	,set_maxWidth: function(w) {
		if(this.maxWidth == w) {
			return w;
		}
		this.maxWidth = w;
		this.updateConstraint();
		return w;
	}
	,updateConstraint: function() {
		var old = this.realMaxWidth;
		if(this.maxWidth == null) {
			this.realMaxWidth = this.constraintWidth;
		} else if(this.constraintWidth < 0) {
			this.realMaxWidth = this.maxWidth;
		} else {
			var a = this.maxWidth;
			var b = this.constraintWidth;
			this.realMaxWidth = a > b ? b : a;
		}
		if(this.realMaxWidth != old) {
			this.rebuild();
		}
	}
	,set_textColor: function(c) {
		if(this.textColor == c) {
			return c;
		}
		this.textColor = c;
		var a = this.color.w;
		var _this = this.color;
		_this.x = (c >> 16 & 255) / 255;
		_this.y = (c >> 8 & 255) / 255;
		_this.z = (c & 255) / 255;
		_this.w = (c >>> 24) / 255;
		this.color.w = a;
		return c;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(!this.calcDone) {
			this.initGlyphs(this.text,this.needsRebuild);
		}
		var x;
		var y;
		var w;
		var h;
		if(forSize) {
			x = this.calcXMin;
			y = 0.;
			w = this.calcWidth;
			h = this.calcSizeHeight;
		} else {
			x = this.calcXMin;
			y = this.calcYMin;
			w = this.calcWidth;
			h = this.calcHeight - this.calcYMin;
		}
		this.addBounds(relativeTo,out,x,y,w,h);
	}
	,__class__: h2d_Text
});
var h2d_HtmlText = function(font,parent) {
	this.elements = [];
	this.imageVerticalAlign = h2d_ImageVerticalAlign.Bottom;
	this.lineHeightMode = h2d_LineHeightMode.Accurate;
	this.imageSpacing = 1;
	this.condenseWhite = true;
	h2d_Text.call(this,font,parent);
};
$hxClasses["h2d.HtmlText"] = h2d_HtmlText;
h2d_HtmlText.__name__ = "h2d.HtmlText";
h2d_HtmlText.defaultLoadImage = function(url) {
	return null;
};
h2d_HtmlText.defaultLoadFont = function(name) {
	return null;
};
h2d_HtmlText.defaultFormatText = function(text) {
	return text;
};
h2d_HtmlText.__super__ = h2d_Text;
h2d_HtmlText.prototype = $extend(h2d_Text.prototype,{
	draw: function(ctx) {
		if(this.dropShadow != null) {
			var oldX = this.absX;
			var oldY = this.absY;
			this.absX += this.dropShadow.dx * this.matA + this.dropShadow.dy * this.matC;
			this.absY += this.dropShadow.dx * this.matB + this.dropShadow.dy * this.matD;
			if(this.dropMatrix == null) {
				this.dropMatrix = new h3d_shader_ColorMatrix();
			}
			this.addShader(this.dropMatrix);
			var m = this.dropMatrix.matrix__;
			m.zero();
			m._41 = (this.dropShadow.color >> 16 & 255) / 255;
			m._42 = (this.dropShadow.color >> 8 & 255) / 255;
			m._43 = (this.dropShadow.color & 255) / 255;
			m._44 = this.dropShadow.alpha;
			this.glyphs.drawWith(ctx,this);
			this.removeShader(this.dropMatrix);
			this.absX = oldX;
			this.absY = oldY;
		} else {
			this.dropMatrix = null;
		}
		this.glyphs.drawWith(ctx,this);
	}
	,loadImage: function(url) {
		return h2d_HtmlText.defaultLoadImage(url);
	}
	,loadFont: function(name) {
		var f = h2d_HtmlText.defaultLoadFont(name);
		if(f == null) {
			return this.font;
		} else {
			return f;
		}
	}
	,onHyperlink: function(url) {
	}
	,formatText: function(text) {
		return h2d_HtmlText.defaultFormatText(text);
	}
	,set_text: function(t) {
		h2d_Text.prototype.set_text.call(this,this.formatText(t));
		return t;
	}
	,parseText: function(text) {
		try {
			return Xml.parse(text);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			throw haxe_Exception.thrown("Could not parse " + text + " (" + Std.string(e) + ")");
		}
	}
	,validateText: function() {
		this.textXml = this.parseText(this.text);
		this.validateNodes(this.textXml);
	}
	,validateNodes: function(xml) {
		if(xml.nodeType == 0) {
			if(xml.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
			}
			var nodeName = xml.nodeName.toLowerCase();
			switch(nodeName) {
			case "b":case "bold":
				this.loadFont("bold");
				break;
			case "font":
				if(xml.exists("face")) {
					this.loadFont(xml.get("face"));
				}
				break;
			case "img":
				this.loadImage(xml.get("src"));
				break;
			case "i":case "italic":
				this.loadFont("italic");
				break;
			}
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
			}
			var _g_current = 0;
			var _g_array = xml.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.validateNodes(xml);
			}
		}
	}
	,initGlyphs: function(text,rebuild) {
		if(rebuild == null) {
			rebuild = true;
		}
		if(rebuild) {
			this.glyphs.clear();
			var _g = 0;
			var _g1 = this.elements;
			while(_g < _g1.length) {
				var e = _g1[_g];
				++_g;
				if(e != null && e.parent != null) {
					e.parent.removeChild(e);
				}
			}
			this.elements = [];
		}
		this.glyphs.setDefaultColor(this.textColor);
		var doc;
		if(this.textXml == null) {
			doc = this.parseText(text);
		} else {
			doc = this.textXml;
		}
		this.yPos = 0;
		this.xMax = 0;
		this.xMin = Infinity;
		this.sizePos = 0;
		this.calcYMin = 0;
		var metrics = [{ width : 0, height : this.font.lineHeight, baseLine : this.font.baseLine}];
		this.prevChar = -1;
		this.newLine = true;
		var splitNode = { node : null, pos : 0, font : this.font, prevChar : -1, width : 0, height : 0, baseLine : 0};
		if(doc.nodeType != Xml.Document && doc.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (doc.nodeType == null ? "null" : XmlType.toString(doc.nodeType)));
		}
		var _g_current = 0;
		var _g_array = doc.children;
		while(_g_current < _g_array.length) {
			var e = _g_array[_g_current++];
			this.buildSizes(e,this.font,metrics,splitNode);
		}
		var max = 0.;
		var _g = 0;
		while(_g < metrics.length) {
			var info = metrics[_g];
			++_g;
			if(info.width > max) {
				max = info.width;
			}
		}
		this.calcWidth = max;
		this.prevChar = -1;
		this.newLine = true;
		var align = this.textAlign;
		var size = metrics[0].width;
		switch(align._hx_index) {
		case 0:
			this.xPos = 0;
			if(this.xMin > 0) {
				this.xMin = 0;
			}
			break;
		case 1:case 2:case 3:case 4:
			var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(this.calcWidth) : this.calcWidth < 0 ? 0 : Math.ceil(this.realMaxWidth);
			var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
			this.xPos = Math.floor((max - size) * k);
			if(this.xPos < this.xMin) {
				this.xMin = this.xPos;
			}
			break;
		}
		if(doc.nodeType != Xml.Document && doc.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (doc.nodeType == null ? "null" : XmlType.toString(doc.nodeType)));
		}
		var _g2_current = 0;
		var _g2_array = doc.children;
		while(_g2_current < _g2_array.length) {
			var e = _g2_array[_g2_current++];
			this.addNode(e,this.font,this.textAlign,rebuild,metrics);
		}
		if(this.xPos > this.xMax) {
			this.xMax = this.xPos;
		}
		this.textXml = null;
		var y = this.yPos;
		this.calcXMin = this.xMin;
		this.calcWidth = this.xMax - this.xMin;
		this.calcHeight = y + metrics[this.sizePos].height;
		this.calcSizeHeight = y + metrics[this.sizePos].baseLine;
		this.calcDone = true;
		if(rebuild) {
			this.needsRebuild = false;
		}
	}
	,buildSizes: function(e,font,metrics,splitNode) {
		var _gthis = this;
		var wordSplit = function() {
			var fnt = splitNode.font;
			var _this = splitNode.node;
			if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
			}
			var str = _this.nodeValue;
			var info = metrics[metrics.length - 1];
			var w = info.width;
			var cc = HxOverrides.cca(str,splitNode.pos);
			info.width = splitNode.width;
			info.height = splitNode.height;
			info.baseLine = splitNode.baseLine;
			var c = fnt.glyphs.h[cc];
			if(c == null) {
				c = fnt.charset.resolveChar(cc,fnt.glyphs);
				if(c == null) {
					c = cc == 13 || cc == 10 ? fnt.nullChar : fnt.defaultChar;
				}
			}
			var char = c;
			if(fnt.charset.isSpace(cc)) {
				w -= splitNode.width + _gthis.letterSpacing + char.width + char.getKerningOffset(splitNode.prevChar);
				var _this = splitNode.node;
				var v = HxOverrides.substr(str,0,splitNode.pos) + "\n" + HxOverrides.substr(str,splitNode.pos + 1,null);
				if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
				}
				_this.nodeValue = v;
			} else {
				w -= splitNode.width + _gthis.letterSpacing + char.getKerningOffset(splitNode.prevChar);
				var _this = splitNode.node;
				var v = HxOverrides.substr(str,0,splitNode.pos + 1) + "\n" + HxOverrides.substr(str,splitNode.pos + 1,null);
				if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
				}
				_this.nodeValue = v;
			}
			splitNode.node = null;
			return w;
		};
		if(e.nodeType == Xml.Element) {
			if(e.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
			}
			var nodeName = e.nodeName.toLowerCase();
			switch(nodeName) {
			case "b":case "bold":
				font = this.loadFont("bold");
				break;
			case "br":
				var fontInfo = _gthis.lineHeightMode == h2d_LineHeightMode.Constant ? _gthis.font : font;
				metrics.push({ width : 0, height : fontInfo.lineHeight, baseLine : fontInfo.baseLine});
				splitNode.node = null;
				_gthis.newLine = true;
				_gthis.prevChar = -1;
				break;
			case "font":
				var a = e.attributes();
				while(a.hasNext()) {
					var a1 = a.next();
					var v = e.get(a1);
					if(a1.toLowerCase() == "face") {
						font = this.loadFont(v);
					}
				}
				break;
			case "img":
				var i = this.loadImage(e.get("src"));
				if(i == null) {
					i = h2d_Tile.fromColor(16711935,8,8);
				}
				var size = metrics[metrics.length - 1].width + i.width + this.imageSpacing;
				if(this.realMaxWidth >= 0 && size > this.realMaxWidth && metrics[metrics.length - 1].width > 0) {
					if(splitNode.node != null) {
						size = wordSplit() + i.width + this.imageSpacing;
						var info = metrics[metrics.length - 1];
						if(this.lineHeightMode._hx_index == 0) {
							var grow = i.height - i.dy - info.baseLine;
							var h = info.height;
							var bl = info.baseLine;
							if(grow > 0) {
								h += grow;
								bl += grow;
							}
							metrics.push({ width : size, height : Math.max(h,bl + i.dy), baseLine : bl});
						} else {
							metrics.push({ width : size, height : info.height, baseLine : info.baseLine});
						}
					}
				} else {
					var info = metrics[metrics.length - 1];
					info.width = size;
					if(this.lineHeightMode == h2d_LineHeightMode.Accurate) {
						var grow = i.height - i.dy - info.baseLine;
						if(grow > 0) {
							switch(this.imageVerticalAlign._hx_index) {
							case 0:
								info.height += grow;
								break;
							case 1:
								info.baseLine += grow;
								info.height += grow;
								break;
							case 2:
								info.height += grow;
								info.baseLine += grow / 2 | 0;
								break;
							}
						}
						grow = info.baseLine + i.dy;
						if(info.height < grow) {
							info.height = grow;
						}
					}
				}
				this.newLine = false;
				this.prevChar = -1;
				break;
			case "i":case "italic":
				font = this.loadFont("italic");
				break;
			case "p":
				if(!this.newLine) {
					var fontInfo = _gthis.lineHeightMode == h2d_LineHeightMode.Constant ? _gthis.font : font;
					metrics.push({ width : 0, height : fontInfo.lineHeight, baseLine : fontInfo.baseLine});
					splitNode.node = null;
					_gthis.newLine = true;
					_gthis.prevChar = -1;
				}
				break;
			default:
			}
			if(e.nodeType != Xml.Document && e.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
			}
			var _g_current = 0;
			var _g_array = e.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.buildSizes(child,font,metrics,splitNode);
			}
			if(nodeName == "p") {
				if(!this.newLine) {
					var fontInfo = _gthis.lineHeightMode == h2d_LineHeightMode.Constant ? _gthis.font : font;
					metrics.push({ width : 0, height : fontInfo.lineHeight, baseLine : fontInfo.baseLine});
					splitNode.node = null;
					_gthis.newLine = true;
					_gthis.prevChar = -1;
				}
			}
		} else {
			if(e.nodeType == Xml.Document || e.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
			}
			if(e.nodeValue.length != 0) {
				this.newLine = false;
				if(e.nodeType == Xml.Document || e.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
				}
				var text = this.htmlToText(e.nodeValue);
				var fontInfo = _gthis.lineHeightMode == h2d_LineHeightMode.Constant ? _gthis.font : font;
				var info = metrics.pop();
				var leftMargin = info.width;
				var maxWidth = this.realMaxWidth < 0 ? Infinity : this.realMaxWidth;
				var textSplit = [];
				var restPos = 0;
				var x = leftMargin;
				var breakChars = 0;
				var _g = 0;
				var _g1 = text.length;
				while(_g < _g1) {
					var i = _g++;
					var cc = HxOverrides.cca(text,i);
					var c = font.glyphs.h[cc];
					if(c == null) {
						c = font.charset.resolveChar(cc,font.glyphs);
						if(c == null) {
							c = cc == 13 || cc == 10 ? font.nullChar : font.defaultChar;
						}
					}
					var g = c;
					var newline = cc == 10;
					var esize = g.width + g.getKerningOffset(this.prevChar);
					var nc = HxOverrides.cca(text,i + 1);
					if(font.charset.isBreakChar(cc) && (nc == null || !font.charset.isComplementChar(nc))) {
						if(x > maxWidth && textSplit.length == 0 && splitNode.node != null) {
							metrics.push({ width : x, height : info.height, baseLine : info.baseLine});
							x = wordSplit();
						}
						var size = x + esize + this.letterSpacing;
						var k = i + 1;
						var max = text.length;
						var prevChar = this.prevChar;
						while(size <= maxWidth && k < max) {
							var cc1 = HxOverrides.cca(text,k++);
							if(font.charset.isSpace(cc1) || cc1 == 10) {
								break;
							}
							var c1 = font.glyphs.h[cc1];
							if(c1 == null) {
								c1 = font.charset.resolveChar(cc1,font.glyphs);
								if(c1 == null) {
									c1 = cc1 == 13 || cc1 == 10 ? font.nullChar : font.defaultChar;
								}
							}
							var e1 = c1;
							size += e1.width + this.letterSpacing + e1.getKerningOffset(prevChar);
							prevChar = cc1;
							var nc1 = HxOverrides.cca(text,k + 1);
							if(font.charset.isBreakChar(cc1) && (nc1 == null || !font.charset.isComplementChar(nc1))) {
								break;
							}
						}
						if(size > maxWidth && i != max - 1) {
							newline = true;
							if(font.charset.isSpace(cc)) {
								textSplit.push(HxOverrides.substr(text,restPos,i - restPos));
								g = null;
							} else {
								textSplit.push(HxOverrides.substr(text,restPos,i + 1 - restPos));
								++breakChars;
							}
							splitNode.node = null;
							restPos = i + 1;
						} else {
							splitNode.node = e;
							splitNode.pos = i + breakChars;
							splitNode.prevChar = this.prevChar;
							splitNode.width = x;
							splitNode.height = info.height;
							splitNode.baseLine = info.baseLine;
							splitNode.font = font;
						}
					}
					if(g != null && cc != 10) {
						x += esize + this.letterSpacing;
					}
					if(newline) {
						metrics.push({ width : x, height : info.height, baseLine : info.baseLine});
						info.height = fontInfo.lineHeight;
						info.baseLine = fontInfo.baseLine;
						x = 0;
						this.prevChar = -1;
						this.newLine = true;
					} else {
						this.prevChar = cc;
						this.newLine = false;
					}
				}
				if(restPos < text.length) {
					if(x > maxWidth) {
						if(splitNode.node != null && splitNode.node != e) {
							metrics.push({ width : x, height : info.height, baseLine : info.baseLine});
							x = wordSplit();
						}
					}
					textSplit.push(HxOverrides.substr(text,restPos,null));
					metrics.push({ width : x, height : info.height, baseLine : info.baseLine});
				}
				if(this.newLine || metrics.length == 0) {
					metrics.push({ width : 0, height : fontInfo.lineHeight, baseLine : fontInfo.baseLine});
					textSplit.push("");
				}
				var v = textSplit.join("\n");
				if(e.nodeType == Xml.Document || e.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
				}
				e.nodeValue = v;
			}
		}
	}
	,htmlToText: function(t) {
		if(this.condenseWhite) {
			t = t.replace(h2d_HtmlText.REG_SPACES.r," ");
		}
		return t;
	}
	,addNode: function(e,font,align,rebuild,metrics) {
		var _gthis = this;
		if(e.nodeType == Xml.Element) {
			var prevColor = null;
			var prevGlyphs = null;
			var oldAlign = align;
			if(e.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
			}
			var nodeName = e.nodeName.toLowerCase();
			switch(nodeName) {
			case "a":
				if(e.exists("href")) {
					if(_gthis.aInteractive != null) {
						_gthis.aInteractive.width = _gthis.xPos - _gthis.aInteractive.x;
						_gthis.aInteractive = null;
					}
					if(this.aHrefs == null) {
						this.aHrefs = [];
					}
					this.aHrefs.push(e.get("href"));
					if(!(_gthis.aHrefs == null || _gthis.aHrefs.length == 0)) {
						_gthis.aInteractive = new h2d_Interactive(0,metrics[_gthis.sizePos].height,_gthis);
						var href = _gthis.aHrefs[_gthis.aHrefs.length - 1];
						_gthis.aInteractive.onClick = function(event) {
							_gthis.onHyperlink(href);
						};
						var _this = _gthis.aInteractive;
						var v = _gthis.xPos;
						_this.posChanged = true;
						_this.x = v;
						var _this = _gthis.aInteractive;
						var v = _gthis.yPos;
						_this.posChanged = true;
						_this.y = v;
						_gthis.elements.push(_gthis.aInteractive);
					}
				}
				break;
			case "b":case "bold":
				font = _gthis.loadFont("bold");
				if(prevGlyphs == null) {
					prevGlyphs = _gthis.glyphs;
				}
				var prev = _gthis.glyphs;
				_gthis.glyphs = new h2d_TileGroup(font == null ? null : font.tile,_gthis);
				if(font != null) {
					var _g = font.type;
					if(_g._hx_index == 1) {
						var smoothing = _g.smoothing;
						var alphaCutoff = _g.alphaCutoff;
						var channel = _g.channel;
						var shader = new h3d_shader_SignedDistanceField();
						shader.constModified = true;
						shader.channel__ = channel;
						shader.alphaCutoff__ = alphaCutoff;
						shader.smoothing__ = smoothing;
						_gthis.glyphs.smooth = true;
						_gthis.glyphs.addShader(shader);
					}
				}
				var _this = _gthis.glyphs.curColor;
				var v = prev.curColor;
				_this.x = v.x;
				_this.y = v.y;
				_this.z = v.z;
				_this.w = v.w;
				_gthis.elements.push(_gthis.glyphs);
				break;
			case "br":
				if(_gthis.aInteractive != null) {
					_gthis.aInteractive.width = _gthis.xPos - _gthis.aInteractive.x;
					_gthis.aInteractive = null;
				}
				if(_gthis.xPos > _gthis.xMax) {
					_gthis.xMax = _gthis.xPos;
				}
				_gthis.yPos += metrics[_gthis.sizePos].height + _gthis.lineSpacing;
				var size = metrics[++_gthis.sizePos].width;
				switch(align._hx_index) {
				case 0:
					_gthis.xPos = 0;
					if(_gthis.xMin > 0) {
						_gthis.xMin = 0;
					}
					break;
				case 1:case 2:case 3:case 4:
					var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(_gthis.calcWidth) : _gthis.calcWidth < 0 ? 0 : Math.ceil(_gthis.realMaxWidth);
					var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
					_gthis.xPos = Math.floor((max - size) * k);
					if(_gthis.xPos < _gthis.xMin) {
						_gthis.xMin = _gthis.xPos;
					}
					break;
				}
				if(!(_gthis.aHrefs == null || _gthis.aHrefs.length == 0)) {
					_gthis.aInteractive = new h2d_Interactive(0,metrics[_gthis.sizePos].height,_gthis);
					var href1 = _gthis.aHrefs[_gthis.aHrefs.length - 1];
					_gthis.aInteractive.onClick = function(event) {
						_gthis.onHyperlink(href1);
					};
					var _this = _gthis.aInteractive;
					var v = _gthis.xPos;
					_this.posChanged = true;
					_this.x = v;
					var _this = _gthis.aInteractive;
					var v = _gthis.yPos;
					_this.posChanged = true;
					_this.y = v;
					_gthis.elements.push(_gthis.aInteractive);
				}
				this.newLine = true;
				this.prevChar = -1;
				break;
			case "font":
				var a = e.attributes();
				while(a.hasNext()) {
					var a1 = a.next();
					var v = e.get(a1);
					switch(a1.toLowerCase()) {
					case "color":
						if(prevColor == null) {
							var _this = this.glyphs.curColor;
							prevColor = new h3d_Vector(_this.x,_this.y,_this.z,_this.w);
						}
						if(HxOverrides.cca(v,0) == 35 && v.length == 4) {
							v = "#" + v.charAt(1) + v.charAt(1) + v.charAt(2) + v.charAt(2) + v.charAt(3) + v.charAt(3);
						}
						this.glyphs.setDefaultColor(Std.parseInt("0x" + HxOverrides.substr(v,1,null)));
						break;
					case "face":
						font = _gthis.loadFont(v);
						if(prevGlyphs == null) {
							prevGlyphs = _gthis.glyphs;
						}
						var prev = _gthis.glyphs;
						_gthis.glyphs = new h2d_TileGroup(font == null ? null : font.tile,_gthis);
						if(font != null) {
							var _g = font.type;
							if(_g._hx_index == 1) {
								var smoothing = _g.smoothing;
								var alphaCutoff = _g.alphaCutoff;
								var channel = _g.channel;
								var shader = new h3d_shader_SignedDistanceField();
								shader.constModified = true;
								shader.channel__ = channel;
								shader.alphaCutoff__ = alphaCutoff;
								shader.smoothing__ = smoothing;
								_gthis.glyphs.smooth = true;
								_gthis.glyphs.addShader(shader);
							}
						}
						var _this1 = _gthis.glyphs.curColor;
						var v1 = prev.curColor;
						_this1.x = v1.x;
						_this1.y = v1.y;
						_this1.z = v1.z;
						_this1.w = v1.w;
						_gthis.elements.push(_gthis.glyphs);
						break;
					case "opacity":
						if(prevColor == null) {
							var _this2 = this.glyphs.curColor;
							prevColor = new h3d_Vector(_this2.x,_this2.y,_this2.z,_this2.w);
						}
						this.glyphs.curColor.w *= parseFloat(v);
						break;
					default:
					}
				}
				break;
			case "img":
				var i = this.loadImage(e.get("src"));
				if(i == null) {
					i = h2d_Tile.fromColor(16711935,8,8);
				}
				var py = this.yPos;
				switch(this.imageVerticalAlign._hx_index) {
				case 0:
					break;
				case 1:
					py += metrics[this.sizePos].baseLine - i.height;
					break;
				case 2:
					py += metrics[this.sizePos].baseLine - i.height / 2;
					break;
				}
				if(py + i.dy < this.calcYMin) {
					this.calcYMin = py + i.dy;
				}
				if(rebuild) {
					var b = new h2d_Bitmap(i,this);
					b.posChanged = true;
					b.x = this.xPos;
					b.posChanged = true;
					b.y = py;
					this.elements.push(b);
				}
				this.newLine = false;
				this.prevChar = -1;
				this.xPos += i.width + this.imageSpacing;
				break;
			case "i":case "italic":
				font = _gthis.loadFont("italic");
				if(prevGlyphs == null) {
					prevGlyphs = _gthis.glyphs;
				}
				var prev = _gthis.glyphs;
				_gthis.glyphs = new h2d_TileGroup(font == null ? null : font.tile,_gthis);
				if(font != null) {
					var _g = font.type;
					if(_g._hx_index == 1) {
						var smoothing = _g.smoothing;
						var alphaCutoff = _g.alphaCutoff;
						var channel = _g.channel;
						var shader = new h3d_shader_SignedDistanceField();
						shader.constModified = true;
						shader.channel__ = channel;
						shader.alphaCutoff__ = alphaCutoff;
						shader.smoothing__ = smoothing;
						_gthis.glyphs.smooth = true;
						_gthis.glyphs.addShader(shader);
					}
				}
				var _this = _gthis.glyphs.curColor;
				var v = prev.curColor;
				_this.x = v.x;
				_this.y = v.y;
				_this.z = v.z;
				_this.w = v.w;
				_gthis.elements.push(_gthis.glyphs);
				break;
			case "p":
				var a = e.attributes();
				while(a.hasNext()) {
					var a1 = a.next();
					if(a1.toLowerCase() == "align") {
						var v = e.get(a1);
						if(v != null) {
							switch(v.toLowerCase()) {
							case "center":
								align = h2d_Align.Center;
								break;
							case "left":
								align = h2d_Align.Left;
								break;
							case "multiline-center":
								align = h2d_Align.MultilineCenter;
								break;
							case "multiline-right":
								align = h2d_Align.MultilineRight;
								break;
							case "right":
								align = h2d_Align.Right;
								break;
							}
						}
					}
				}
				if(!this.newLine) {
					if(_gthis.aInteractive != null) {
						_gthis.aInteractive.width = _gthis.xPos - _gthis.aInteractive.x;
						_gthis.aInteractive = null;
					}
					if(_gthis.xPos > _gthis.xMax) {
						_gthis.xMax = _gthis.xPos;
					}
					_gthis.yPos += metrics[_gthis.sizePos].height + _gthis.lineSpacing;
					var size = metrics[++_gthis.sizePos].width;
					switch(align._hx_index) {
					case 0:
						_gthis.xPos = 0;
						if(_gthis.xMin > 0) {
							_gthis.xMin = 0;
						}
						break;
					case 1:case 2:case 3:case 4:
						var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(_gthis.calcWidth) : _gthis.calcWidth < 0 ? 0 : Math.ceil(_gthis.realMaxWidth);
						var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
						_gthis.xPos = Math.floor((max - size) * k);
						if(_gthis.xPos < _gthis.xMin) {
							_gthis.xMin = _gthis.xPos;
						}
						break;
					}
					if(!(_gthis.aHrefs == null || _gthis.aHrefs.length == 0)) {
						_gthis.aInteractive = new h2d_Interactive(0,metrics[_gthis.sizePos].height,_gthis);
						var href2 = _gthis.aHrefs[_gthis.aHrefs.length - 1];
						_gthis.aInteractive.onClick = function(event) {
							_gthis.onHyperlink(href2);
						};
						var _this = _gthis.aInteractive;
						var v = _gthis.xPos;
						_this.posChanged = true;
						_this.x = v;
						var _this = _gthis.aInteractive;
						var v = _gthis.yPos;
						_this.posChanged = true;
						_this.y = v;
						_gthis.elements.push(_gthis.aInteractive);
					}
					this.newLine = true;
					this.prevChar = -1;
				} else {
					var size = metrics[this.sizePos].width;
					switch(align._hx_index) {
					case 0:
						this.xPos = 0;
						if(this.xMin > 0) {
							this.xMin = 0;
						}
						break;
					case 1:case 2:case 3:case 4:
						var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(this.calcWidth) : this.calcWidth < 0 ? 0 : Math.ceil(this.realMaxWidth);
						var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
						this.xPos = Math.floor((max - size) * k);
						if(this.xPos < this.xMin) {
							this.xMin = this.xPos;
						}
						break;
					}
				}
				break;
			default:
			}
			if(e.nodeType != Xml.Document && e.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
			}
			var _g_current = 0;
			var _g_array = e.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.addNode(child,font,align,rebuild,metrics);
			}
			align = oldAlign;
			switch(nodeName) {
			case "a":
				if(this.aHrefs.length > 0) {
					if(_gthis.aInteractive != null) {
						_gthis.aInteractive.width = _gthis.xPos - _gthis.aInteractive.x;
						_gthis.aInteractive = null;
					}
					this.aHrefs.pop();
					if(!(_gthis.aHrefs == null || _gthis.aHrefs.length == 0)) {
						_gthis.aInteractive = new h2d_Interactive(0,metrics[_gthis.sizePos].height,_gthis);
						var href3 = _gthis.aHrefs[_gthis.aHrefs.length - 1];
						_gthis.aInteractive.onClick = function(event) {
							_gthis.onHyperlink(href3);
						};
						var _this = _gthis.aInteractive;
						var v = _gthis.xPos;
						_this.posChanged = true;
						_this.x = v;
						var _this = _gthis.aInteractive;
						var v = _gthis.yPos;
						_this.posChanged = true;
						_this.y = v;
						_gthis.elements.push(_gthis.aInteractive);
					}
				}
				break;
			case "p":
				if(this.newLine) {
					var size = metrics[this.sizePos].width;
					switch(align._hx_index) {
					case 0:
						this.xPos = 0;
						if(this.xMin > 0) {
							this.xMin = 0;
						}
						break;
					case 1:case 2:case 3:case 4:
						var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(this.calcWidth) : this.calcWidth < 0 ? 0 : Math.ceil(this.realMaxWidth);
						var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
						this.xPos = Math.floor((max - size) * k);
						if(this.xPos < this.xMin) {
							this.xMin = this.xPos;
						}
						break;
					}
				} else if(this.sizePos < metrics.length - 2 || metrics[this.sizePos + 1].width != 0) {
					if(_gthis.aInteractive != null) {
						_gthis.aInteractive.width = _gthis.xPos - _gthis.aInteractive.x;
						_gthis.aInteractive = null;
					}
					if(_gthis.xPos > _gthis.xMax) {
						_gthis.xMax = _gthis.xPos;
					}
					_gthis.yPos += metrics[_gthis.sizePos].height + _gthis.lineSpacing;
					var size = metrics[++_gthis.sizePos].width;
					switch(align._hx_index) {
					case 0:
						_gthis.xPos = 0;
						if(_gthis.xMin > 0) {
							_gthis.xMin = 0;
						}
						break;
					case 1:case 2:case 3:case 4:
						var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(_gthis.calcWidth) : _gthis.calcWidth < 0 ? 0 : Math.ceil(_gthis.realMaxWidth);
						var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
						_gthis.xPos = Math.floor((max - size) * k);
						if(_gthis.xPos < _gthis.xMin) {
							_gthis.xMin = _gthis.xPos;
						}
						break;
					}
					if(!(_gthis.aHrefs == null || _gthis.aHrefs.length == 0)) {
						_gthis.aInteractive = new h2d_Interactive(0,metrics[_gthis.sizePos].height,_gthis);
						var href4 = _gthis.aHrefs[_gthis.aHrefs.length - 1];
						_gthis.aInteractive.onClick = function(event) {
							_gthis.onHyperlink(href4);
						};
						var _this = _gthis.aInteractive;
						var v = _gthis.xPos;
						_this.posChanged = true;
						_this.x = v;
						var _this = _gthis.aInteractive;
						var v = _gthis.yPos;
						_this.posChanged = true;
						_this.y = v;
						_gthis.elements.push(_gthis.aInteractive);
					}
					this.newLine = true;
					this.prevChar = -1;
				}
				break;
			default:
			}
			if(prevGlyphs != null) {
				this.glyphs = prevGlyphs;
			}
			if(prevColor != null) {
				var _this = this.glyphs.curColor;
				_this.x = prevColor.x;
				_this.y = prevColor.y;
				_this.z = prevColor.z;
				_this.w = prevColor.w;
			}
		} else {
			if(e.nodeType == Xml.Document || e.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
			}
			if(e.nodeValue.length != 0) {
				this.newLine = false;
				if(e.nodeType == Xml.Document || e.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (e.nodeType == null ? "null" : XmlType.toString(e.nodeType)));
				}
				var t = e.nodeValue;
				var dy = metrics[this.sizePos].baseLine - font.baseLine;
				var _g = 0;
				var _g1 = t.length;
				while(_g < _g1) {
					var i = _g++;
					var cc = HxOverrides.cca(t,i);
					if(cc == 10) {
						if(_gthis.aInteractive != null) {
							_gthis.aInteractive.width = _gthis.xPos - _gthis.aInteractive.x;
							_gthis.aInteractive = null;
						}
						if(_gthis.xPos > _gthis.xMax) {
							_gthis.xMax = _gthis.xPos;
						}
						_gthis.yPos += metrics[_gthis.sizePos].height + _gthis.lineSpacing;
						var size = metrics[++_gthis.sizePos].width;
						switch(align._hx_index) {
						case 0:
							_gthis.xPos = 0;
							if(_gthis.xMin > 0) {
								_gthis.xMin = 0;
							}
							break;
						case 1:case 2:case 3:case 4:
							var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(_gthis.calcWidth) : _gthis.calcWidth < 0 ? 0 : Math.ceil(_gthis.realMaxWidth);
							var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
							_gthis.xPos = Math.floor((max - size) * k);
							if(_gthis.xPos < _gthis.xMin) {
								_gthis.xMin = _gthis.xPos;
							}
							break;
						}
						if(!(_gthis.aHrefs == null || _gthis.aHrefs.length == 0)) {
							_gthis.aInteractive = new h2d_Interactive(0,metrics[_gthis.sizePos].height,_gthis);
							var href5 = [_gthis.aHrefs[_gthis.aHrefs.length - 1]];
							_gthis.aInteractive.onClick = (function(href) {
								return function(event) {
									_gthis.onHyperlink(href[0]);
								};
							})(href5);
							var _this = _gthis.aInteractive;
							var v = _gthis.xPos;
							_this.posChanged = true;
							_this.x = v;
							var _this1 = _gthis.aInteractive;
							var v1 = _gthis.yPos;
							_this1.posChanged = true;
							_this1.y = v1;
							_gthis.elements.push(_gthis.aInteractive);
						}
						dy = metrics[this.sizePos].baseLine - font.baseLine;
						this.prevChar = -1;
						continue;
					} else {
						var c = font.glyphs.h[cc];
						if(c == null) {
							c = font.charset.resolveChar(cc,font.glyphs);
							if(c == null) {
								c = cc == 13 || cc == 10 ? font.nullChar : font.defaultChar;
							}
						}
						var fc = c;
						if(fc != null) {
							this.xPos += fc.getKerningOffset(this.prevChar);
							if(rebuild) {
								var _this2 = this.glyphs;
								_this2.content.add(this.xPos,this.yPos + dy,_this2.curColor.x,_this2.curColor.y,_this2.curColor.z,_this2.curColor.w,fc.t);
							}
							if(this.yPos == 0 && fc.t.dy + dy < this.calcYMin) {
								this.calcYMin = fc.t.dy + dy;
							}
							this.xPos += fc.width + this.letterSpacing;
						}
						this.prevChar = cc;
					}
				}
			}
		}
	}
	,set_textColor: function(c) {
		if(this.textColor == c) {
			return c;
		}
		this.textColor = c;
		this.rebuild();
		return c;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(forSize) {
			var _g = 0;
			var _g1 = this.elements;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(((i) instanceof h2d_Bitmap)) {
					i.set_visible(false);
				}
			}
		}
		h2d_Text.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(forSize) {
			var _g = 0;
			var _g1 = this.elements;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				i.set_visible(true);
			}
		}
	}
	,__class__: h2d_HtmlText
});
var hxd_Interactive = function() { };
$hxClasses["hxd.Interactive"] = hxd_Interactive;
hxd_Interactive.__name__ = "hxd.Interactive";
hxd_Interactive.__isInterface__ = true;
hxd_Interactive.prototype = {
	__class__: hxd_Interactive
};
var h2d_Interactive = function(width,height,parent,shape) {
	this.shapeY = 0;
	this.shapeX = 0;
	this.mouseDownButton = -1;
	this.propagateEvents = false;
	this.cancelEvents = false;
	h2d_Drawable.call(this,parent);
	this.width = width;
	this.height = height;
	this.shape = shape;
	this.set_cursor(hxd_Cursor.Button);
};
$hxClasses["h2d.Interactive"] = h2d_Interactive;
h2d_Interactive.__name__ = "h2d.Interactive";
h2d_Interactive.__interfaces__ = [hxd_Interactive];
h2d_Interactive.__super__ = h2d_Drawable;
h2d_Interactive.prototype = $extend(h2d_Drawable.prototype,{
	onAdd: function() {
		this.scene = this.getScene();
		if(this.scene != null) {
			this.scene.addEventTarget(this);
		}
		this.updateMask();
		h2d_Drawable.prototype.onAdd.call(this);
	}
	,draw: function(ctx) {
		if(this.backgroundColor != null) {
			this.emitTile(ctx,h2d_Tile.fromColor(this.backgroundColor,this.width | 0,this.height | 0,(this.backgroundColor >>> 24) / 255));
		}
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.backgroundColor != null || forSize) {
			this.addBounds(relativeTo,out,0,0,this.width | 0,this.height | 0);
		}
	}
	,onHierarchyMoved: function(parentChanged) {
		h2d_Drawable.prototype.onHierarchyMoved.call(this,parentChanged);
		if(this.scene != null) {
			this.scene.removeEventTarget(this);
			this.scene = this.getScene();
			if(this.scene != null) {
				this.scene.addEventTarget(this);
			}
		}
		if(parentChanged) {
			this.updateMask();
		}
	}
	,updateMask: function() {
		this.parentMask = null;
		var p = this.parent;
		while(p != null) {
			var m = ((p) instanceof h2d_Mask) ? p : null;
			if(m != null) {
				this.parentMask = m;
				break;
			}
			p = p.parent;
		}
	}
	,onRemove: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this,true);
			this.scene = null;
		}
		h2d_Drawable.prototype.onRemove.call(this);
	}
	,checkBounds: function(e) {
		switch(e.kind._hx_index) {
		case 4:case 6:case 7:case 10:
			return false;
		default:
			return true;
		}
	}
	,getInteractiveScene: function() {
		return this.scene;
	}
	,handleEvent: function(e) {
		if(this.parentMask != null && this.checkBounds(e)) {
			var p = this.parentMask;
			var pt = new h2d_col_Point(e.relX,e.relY);
			this.localToGlobal(pt);
			var saveX = pt.x;
			var saveY = pt.y;
			while(p != null) {
				pt.x = saveX;
				pt.y = saveY;
				var pt1 = p.globalToLocal(pt);
				if(pt1.x < 0 || pt1.y < 0 || pt1.x > p.width || pt1.y > p.height) {
					e.cancel = true;
					return;
				}
				p = p.parentMask;
			}
		}
		if(this.shape == null && this.isEllipse && this.checkBounds(e)) {
			var cx = this.width * 0.5;
			var cy = this.height * 0.5;
			var dx = (e.relX - cx) / cx;
			var dy = (e.relY - cy) / cy;
			if(dx * dx + dy * dy > 1) {
				e.cancel = true;
				return;
			}
		}
		if(this.propagateEvents) {
			e.propagate = true;
		}
		if(this.cancelEvents) {
			e.cancel = true;
		}
		switch(e.kind._hx_index) {
		case 0:
			if(this.enableRightButton || e.button == 0) {
				this.mouseDownButton = e.button;
				this.onPush(e);
			}
			break;
		case 1:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onClick(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 2:
			this.onMove(e);
			break;
		case 3:
			this.onOver(e);
			break;
		case 4:
			this.onOut(e);
			break;
		case 5:
			this.onWheel(e);
			break;
		case 6:
			this.onFocus(e);
			break;
		case 7:
			this.onFocusLost(e);
			break;
		case 8:
			this.onKeyDown(e);
			break;
		case 9:
			this.onKeyUp(e);
			break;
		case 10:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onReleaseOutside(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 11:
			this.onTextInput(e);
			break;
		case 12:
			this.onCheck(e);
			break;
		}
	}
	,calcAbsPos: function() {
		h2d_Drawable.prototype.calcAbsPos.call(this);
		this.invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
	}
	,set_cursor: function(c) {
		this.cursor = c;
		if(this.scene != null && this.scene.events != null) {
			this.scene.events.updateCursor(this);
		}
		return c;
	}
	,focus: function() {
		if(this.scene == null || this.scene.events == null) {
			return;
		}
		this.scene.events.focus(this);
	}
	,blur: function() {
		if(this.hasFocus()) {
			this.scene.events.blur();
		}
	}
	,hasFocus: function() {
		if(this.scene != null && this.scene.events != null) {
			return this.scene.events.currentFocus == this;
		} else {
			return false;
		}
	}
	,onOver: function(e) {
	}
	,onOut: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onReleaseOutside: function(e) {
	}
	,onClick: function(e) {
	}
	,onMove: function(e) {
	}
	,onWheel: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,onCheck: function(e) {
	}
	,onTextInput: function(e) {
	}
	,__class__: h2d_Interactive
});
var h2d_Layers = function(parent) {
	h2d_Object.call(this,parent);
	this.layersIndexes = [];
	this.layerCount = 0;
};
$hxClasses["h2d.Layers"] = h2d_Layers;
h2d_Layers.__name__ = "h2d.Layers";
h2d_Layers.__super__ = h2d_Object;
h2d_Layers.prototype = $extend(h2d_Object.prototype,{
	addChild: function(s) {
		this.addChildAt(s,0);
	}
	,addChildAt: function(s,layer) {
		if(s.parent == this) {
			var old = s.allocated;
			s.allocated = false;
			this.removeChild(s);
			s.allocated = old;
		}
		while(layer >= this.layerCount) this.layersIndexes[this.layerCount++] = this.children.length;
		h2d_Object.prototype.addChildAt.call(this,s,this.layersIndexes[layer]);
		var _g = layer;
		var _g1 = this.layerCount;
		while(_g < _g1) {
			var i = _g++;
			this.layersIndexes[i]++;
		}
	}
	,removeChild: function(s) {
		var _g = 0;
		var _g1 = this.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.children[i] == s) {
				this.children.splice(i,1);
				if(s.allocated) {
					s.onRemove();
				}
				s.parent = null;
				s.posChanged = true;
				if(s.parentContainer != null) {
					s.setParentContainer(null);
				}
				var k = this.layerCount - 1;
				while(k >= 0 && this.layersIndexes[k] > i) {
					this.layersIndexes[k]--;
					--k;
				}
				if(this.parentContainer != null) {
					this.parentContainer.contentChanged(this);
				}
				break;
			}
		}
	}
	,under: function(s) {
		var _g = 0;
		var _g1 = this.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.children[i] == s) {
				var pos = 0;
				var _g2 = 0;
				var _g3 = this.layersIndexes;
				while(_g2 < _g3.length) {
					var l = _g3[_g2];
					++_g2;
					if(l > i) {
						break;
					} else {
						pos = l;
					}
				}
				var p = i;
				while(p > pos) {
					this.children[p] = this.children[p - 1];
					--p;
				}
				this.children[pos] = s;
				if(s.allocated) {
					s.onHierarchyMoved(false);
				}
				return;
			}
		}
	}
	,over: function(s) {
		var _g = 0;
		var _g1 = this.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.children[i] == s) {
				var _g2 = 0;
				var _g3 = this.layersIndexes;
				while(_g2 < _g3.length) {
					var l = _g3[_g2];
					++_g2;
					if(l > i) {
						var _g4 = i;
						var _g5 = l - 1;
						while(_g4 < _g5) {
							var p = _g4++;
							this.children[p] = this.children[p + 1];
						}
						this.children[l - 1] = s;
						if(s.allocated) {
							s.onHierarchyMoved(false);
						}
						return;
					}
				}
				return;
			}
		}
	}
	,__class__: h2d_Layers
});
var h2d_Mask = function(width,height,parent) {
	this.scrollY = 0;
	this.scrollX = 0;
	h2d_Object.call(this,parent);
	this.width = width;
	this.height = height;
};
$hxClasses["h2d.Mask"] = h2d_Mask;
h2d_Mask.__name__ = "h2d.Mask";
h2d_Mask.maskWith = function(ctx,object,width,height,scrollX,scrollY) {
	if(scrollY == null) {
		scrollY = 0;
	}
	if(scrollX == null) {
		scrollX = 0;
	}
	var x1 = object.absX + scrollX;
	var y1 = object.absY + scrollY;
	var x2 = width * object.matA + height * object.matC + x1;
	var y2 = width * object.matB + height * object.matD + y1;
	var tmp;
	if(x1 > x2) {
		tmp = x1;
		x1 = x2;
		x2 = tmp;
	}
	if(y1 > y2) {
		tmp = y1;
		y1 = y2;
		y2 = tmp;
	}
	ctx.pushRenderZone(x1,y1,x2 - x1,y2 - y1);
};
h2d_Mask.unmask = function(ctx) {
	ctx.popRenderZone();
};
h2d_Mask.__super__ = h2d_Object;
h2d_Mask.prototype = $extend(h2d_Object.prototype,{
	onHierarchyMoved: function(parentChanged) {
		h2d_Object.prototype.onHierarchyMoved.call(this,parentChanged);
		if(parentChanged) {
			this.updateMask();
		}
	}
	,onAdd: function() {
		h2d_Object.prototype.onAdd.call(this);
		this.updateMask();
	}
	,updateMask: function() {
		this.parentMask = null;
		var p = this.parent;
		while(p != null) {
			var m = ((p) instanceof h2d_Mask) ? p : null;
			if(m != null) {
				this.parentMask = m;
				break;
			}
			p = p.parent;
		}
	}
	,calcAbsPos: function() {
		h2d_Object.prototype.calcAbsPos.call(this);
		this.absX -= this.scrollX;
		this.absY -= this.scrollY;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		var xMin = out.xMin;
		var yMin = out.yMin;
		var xMax = out.xMax;
		var yMax = out.yMax;
		out.xMin = 1e20;
		out.yMin = 1e20;
		out.xMax = -1e20;
		out.yMax = -1e20;
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		this.addBounds(relativeTo,out,this.scrollX,this.scrollY,this.width,this.height);
		var bxMin = out.xMin;
		var byMin = out.yMin;
		var bxMax = out.xMax;
		var byMax = out.yMax;
		out.xMin = xMin;
		out.xMax = xMax;
		out.yMin = yMin;
		out.yMax = yMax;
		h2d_Object.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(out.xMin < bxMin) {
			out.xMin = xMin > bxMin ? bxMin : xMin;
		}
		if(out.yMin < byMin) {
			out.yMin = yMin > byMin ? byMin : yMin;
		}
		if(out.xMax > bxMax) {
			out.xMax = xMax < bxMax ? bxMax : xMax;
		}
		if(out.yMax > byMax) {
			out.yMax = yMax < byMax ? byMax : yMax;
		}
	}
	,drawRec: function(ctx) {
		h2d_Mask.maskWith(ctx,this,this.width,this.height,this.scrollX,this.scrollY);
		h2d_Object.prototype.drawRec.call(this,ctx);
		h2d_Mask.unmask(ctx);
	}
	,__class__: h2d_Mask
});
var h3d_impl_RenderContext = function() {
	this.engine = h3d_Engine.CURRENT;
	this.frame = 0;
	this.time = 0.;
	this.elapsedTime = 1. / hxd_System.getDefaultFrameRate();
	this.textures = new h3d_impl_TextureCache(this);
};
$hxClasses["h3d.impl.RenderContext"] = h3d_impl_RenderContext;
h3d_impl_RenderContext.__name__ = "h3d.impl.RenderContext";
h3d_impl_RenderContext.prototype = {
	__class__: h3d_impl_RenderContext
};
var h2d_RenderContext = function(scene) {
	this.renderZoneIndex = 0;
	this.renderZoneStack = [];
	this.tmpBounds = new h2d_col_Bounds();
	this.defaultSmooth = false;
	this.globalAlpha = 1.;
	h3d_impl_RenderContext.call(this);
	this.scene = scene;
	this.bufPos = 0;
	this.manager = new h3d_pass_ShaderManager();
	this.pass = new h3d_mat_Pass("",null);
	this.pass.depth(true,h3d_mat_Compare.Always);
	this.pass.set_culling(h3d_mat_Face.None);
	this.baseShader = new h3d_shader_Base2d();
	this.baseShader.setPriority(100);
	this.baseShader.zValue__ = 0.;
	this.baseShaderList = new hxsl_ShaderList(this.baseShader);
	this.targetsStack = [];
	this.targetsStackIndex = 0;
	this.cameraStack = [];
	this.cameraStackIndex = 0;
	this.filterStack = [];
};
$hxClasses["h2d.RenderContext"] = h2d_RenderContext;
h2d_RenderContext.__name__ = "h2d.RenderContext";
h2d_RenderContext.__super__ = h3d_impl_RenderContext;
h2d_RenderContext.prototype = $extend(h3d_impl_RenderContext.prototype,{
	begin: function() {
		this.texture = null;
		this.currentObj = null;
		this.bufPos = 0;
		this.stride = 0;
		this.viewA = this.scene.viewportA;
		this.viewB = 0;
		this.viewC = 0;
		this.viewD = this.scene.viewportD;
		this.viewX = this.scene.viewportX;
		this.viewY = this.scene.viewportY;
		this.targetFlipY = this.engine.driver.hasFeature(h3d_impl_Feature.BottomLeftCoords) ? -1 : 1;
		this.baseFlipY = this.engine.getCurrentTarget() != null ? this.targetFlipY : 1;
		this.inFilter = null;
		this.manager.globals.set("time",this.time);
		this.manager.globals.set("global.time",this.time);
		var _this = this.baseShader;
		_this.constModified = true;
		_this.pixelAlign__ = false;
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / this.engine.width;
		var y = 0.5 / this.engine.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this = this.baseShader.viewportA__;
		var x = this.scene.viewportA;
		var y = 0;
		var z = this.scene.viewportX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = 0;
		var y = this.scene.viewportD * -this.baseFlipY;
		var z = this.scene.viewportY * -this.baseFlipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.filterMatrixA__;
		var x = 1;
		var y = 0;
		var z = 0;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.filterMatrixB__;
		var x = 0;
		var y = 1;
		var z = 0;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		this.baseShaderList.next = null;
		this.initShaders(this.baseShaderList);
		this.engine.selectMaterial(this.pass);
		this.textures.begin();
	}
	,initShaders: function(shaders) {
		this.currentShaders = shaders;
		this.compiledShader = this.manager.compileShaders(shaders);
		if(this.buffers == null) {
			this.buffers = new h3d_shader_Buffers(this.compiledShader);
		} else {
			var _this = this.buffers;
			var s = this.compiledShader;
			_this.vertex.grow(s.vertex);
			_this.fragment.grow(s.fragment);
		}
		this.manager.fillGlobals(this.buffers,this.compiledShader);
		this.engine.selectShader(this.compiledShader);
		this.engine.uploadShaderBuffers(this.buffers,0);
	}
	,end: function() {
		this.texture = null;
		this.currentObj = null;
		this.baseShaderList.next = null;
		if(this.targetsStackIndex != 0) {
			throw haxe_Exception.thrown("Missing popTarget()");
		}
		if(this.cameraStackIndex != 0) {
			throw haxe_Exception.thrown("Missing popCamera()");
		}
	}
	,pushCamera: function(cam) {
		var entry = this.cameraStack[this.cameraStackIndex++];
		if(entry == null) {
			entry = { va : 0, vb : 0, vc : 0, vd : 0, vx : 0, vy : 0};
			this.cameraStack.push(entry);
		}
		var tmpA = this.viewA;
		var tmpB = this.viewB;
		var tmpC = this.viewC;
		var tmpD = this.viewD;
		entry.va = tmpA;
		entry.vb = tmpB;
		entry.vc = tmpC;
		entry.vd = tmpD;
		entry.vx = this.viewX;
		entry.vy = this.viewY;
		this.viewA = cam.matA * tmpA + cam.matB * tmpC;
		this.viewB = cam.matA * tmpB + cam.matB * tmpD;
		this.viewC = cam.matC * tmpA + cam.matD * tmpC;
		this.viewD = cam.matC * tmpB + cam.matD * tmpD;
		this.viewX = cam.absX * tmpA + cam.absY * tmpC + this.viewX;
		this.viewY = cam.absX * tmpB + cam.absY * tmpD + this.viewY;
		var flipY = this.curTarget != null ? -this.targetFlipY : -this.baseFlipY;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * flipY;
		var y = this.viewD * flipY;
		var z = this.viewY * flipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
	}
	,popCamera: function() {
		if(this.cameraStackIndex == 0) {
			throw haxe_Exception.thrown("Too many popCamera()");
		}
		var inf = this.cameraStack[--this.cameraStackIndex];
		this.viewA = inf.va;
		this.viewB = inf.vb;
		this.viewC = inf.vc;
		this.viewD = inf.vd;
		this.viewX = inf.vx;
		this.viewY = inf.vy;
		var flipY = this.curTarget != null ? -this.targetFlipY : -this.baseFlipY;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * flipY;
		var y = this.viewD * flipY;
		var z = this.viewY * flipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
	}
	,pushFilter: function(spr) {
		if(this.filterStack.length == 0 && this.onEnterFilter != null) {
			if(!this.onEnterFilter(spr)) {
				return false;
			}
		}
		this.filterStack.push(spr);
		this.inFilter = spr;
		return true;
	}
	,popFilter: function() {
		var spr = this.filterStack.pop();
		if(this.filterStack.length > 0) {
			this.inFilter = this.filterStack[this.filterStack.length - 1];
		} else {
			this.inFilter = null;
			if(this.onLeaveFilter != null) {
				this.onLeaveFilter(spr);
			}
		}
	}
	,pushTarget: function(t,startX,startY,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(startY == null) {
			startY = 0;
		}
		if(startX == null) {
			startX = 0;
		}
		this.engine.pushTarget(t);
		this.initShaders(this.baseShaderList);
		var entry = this.targetsStack[this.targetsStackIndex++];
		if(entry == null) {
			entry = { t : null, va : 0, vb : 0, vc : 0, vd : 0, vx : 0, vy : 0, hasRZ : false, rzX : 0, rzY : 0, rzW : 0, rzH : 0};
			this.targetsStack.push(entry);
		}
		entry.t = this.curTarget;
		entry.va = this.viewA;
		entry.vb = this.viewB;
		entry.vc = this.viewC;
		entry.vd = this.viewD;
		entry.vx = this.viewX;
		entry.vy = this.viewY;
		entry.hasRZ = this.hasRenderZone;
		entry.rzX = this.renderX;
		entry.rzY = this.renderY;
		entry.rzW = this.renderW;
		entry.rzH = this.renderH;
		if(width < 0) {
			width = t == null ? this.scene.width : t.width;
		}
		if(height < 0) {
			height = t == null ? this.scene.height : t.height;
		}
		this.viewA = 2 / width;
		this.viewB = 0;
		this.viewC = 0;
		this.viewD = 2 / height;
		this.viewX = -1 - startX * this.viewA;
		this.viewY = -1 - startY * this.viewD;
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / (t == null ? this.engine.width : t.width);
		var y = 0.5 / (t == null ? this.engine.height : t.height);
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * -this.targetFlipY;
		var y = this.viewD * -this.targetFlipY;
		var z = this.viewY * -this.targetFlipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		this.curTarget = t;
		this.currentBlend = null;
		if(this.hasRenderZone) {
			this.hasRenderZone = false;
			this.engine.setRenderZone();
		}
	}
	,popTarget: function() {
		if(this.targetsStackIndex <= 0) {
			throw haxe_Exception.thrown("Too many popTarget()");
		}
		this.engine.popTarget();
		var tinf = this.targetsStack[--this.targetsStackIndex];
		var t = this.curTarget = tinf.t;
		this.viewA = tinf.va;
		this.viewB = tinf.vb;
		this.viewC = tinf.vc;
		this.viewD = tinf.vd;
		this.viewX = tinf.vx;
		this.viewY = tinf.vy;
		var flipY = t == null ? -this.baseFlipY : -this.targetFlipY;
		this.initShaders(this.baseShaderList);
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / (t == null ? this.engine.width : t.width);
		var y = 0.5 / (t == null ? this.engine.height : t.height);
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * flipY;
		var y = this.viewD * flipY;
		var z = this.viewY * flipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		if(tinf.hasRZ) {
			this.setRZ(tinf.rzX,tinf.rzY,tinf.rzW,tinf.rzH);
		}
	}
	,pushRenderZone: function(x,y,w,h) {
		var inf = this.renderZoneStack[this.renderZoneIndex++];
		if(inf == null) {
			inf = { hasRZ : this.hasRenderZone, x : this.renderX, y : this.renderY, w : this.renderW, h : this.renderH};
			this.renderZoneStack[this.renderZoneIndex - 1] = inf;
		} else if(this.hasRenderZone) {
			inf.hasRZ = true;
			inf.x = this.renderX;
			inf.y = this.renderY;
			inf.w = this.renderW;
			inf.h = this.renderH;
		} else {
			inf.hasRZ = false;
		}
		this.setRZ(x,y,w,h);
	}
	,popRenderZone: function() {
		if(this.renderZoneIndex == 0) {
			throw haxe_Exception.thrown("Too many popRenderZone()");
		}
		var inf = this.renderZoneStack[--this.renderZoneIndex];
		if(inf.hasRZ) {
			this.setRZ(inf.x,inf.y,inf.w,inf.h);
		} else {
			this.hasRenderZone = false;
			this.engine.setRenderZone();
		}
	}
	,setRZ: function(x,y,w,h) {
		this.hasRenderZone = true;
		this.renderX = x;
		this.renderY = y;
		this.renderW = w;
		this.renderH = h;
		var scaleX = this.scene.viewportA * this.engine.width / 2;
		var scaleY = this.scene.viewportD * this.engine.height / 2;
		if(this.inFilter != null) {
			var fa = this.baseShader.filterMatrixA__;
			var fb = this.baseShader.filterMatrixB__;
			var x2 = x + w;
			var y2 = y + h;
			var rx1 = x * fa.x + y * fa.y + fa.z;
			var ry1 = x * fb.x + y * fb.y + fb.z;
			var rx2 = x2 * fa.x + y2 * fa.y + fa.z;
			var ry2 = x2 * fb.x + y2 * fb.y + fb.z;
			x = rx1;
			y = ry1;
			w = rx2 - rx1;
			h = ry2 - ry1;
		}
		this.engine.setRenderZone(x * scaleX + (this.scene.viewportX + 1) * (this.engine.width / 2) + 1e-10 | 0,y * scaleY + (this.scene.viewportY + 1) * (this.engine.height / 2) + 1e-10 | 0,w * scaleX + 1e-10 | 0,h * scaleY + 1e-10 | 0);
	}
	,drawScene: function() {
		this.scene.drawRec(this);
	}
	,beforeDraw: function() {
		if(this.texture == null) {
			this.texture = h3d_mat_Texture.fromColor(16711935);
		}
		this.baseShader.texture__ = this.texture;
		this.texture.set_filter((this.currentObj.smooth == null ? this.defaultSmooth : this.currentObj.smooth) ? h3d_mat_Filter.Linear : h3d_mat_Filter.Nearest);
		this.texture.set_wrap(this.currentObj.tileWrap && (this.currentObj.filter == null || this.inFilter != null) ? h3d_mat_Wrap.Repeat : h3d_mat_Wrap.Clamp);
		var blend = this.currentObj.blendMode;
		if(this.inFilter == this.currentObj && blend == h2d_BlendMode.Erase) {
			blend = h2d_BlendMode.Add;
		}
		if(this.inFilterBlend != null) {
			blend = this.inFilterBlend;
		}
		if(blend != this.currentBlend) {
			this.currentBlend = blend;
			this.pass.setBlendMode(blend);
			if(blend == h2d_BlendMode.Alpha || blend == h2d_BlendMode.Add) {
				this.pass.set_blendAlphaSrc(h3d_mat_Blend.One);
				if(this.inFilterBlend != null) {
					this.pass.set_blendSrc(h3d_mat_Blend.One);
				}
			}
		}
		this.manager.fillParams(this.buffers,this.compiledShader,this.currentShaders);
		this.engine.selectMaterial(this.pass);
		this.engine.uploadShaderBuffers(this.buffers,1);
		this.engine.uploadShaderBuffers(this.buffers,2);
		this.engine.uploadShaderBuffers(this.buffers,3);
	}
	,beginDrawBatchState: function(obj) {
		if(!this.beginDraw(obj,null,true)) {
			return false;
		}
		if(this.inFilter == obj) {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else if(this.inFilterBlend != null) {
			var _this = this.baseShader.color__;
			var x = this.globalAlpha;
			var y = this.globalAlpha;
			var z = this.globalAlpha;
			var w = this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		var _this = this.baseShader.absoluteMatrixA__;
		var x = obj.matA;
		var y = obj.matC;
		var z = obj.absX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.absoluteMatrixB__;
		var x = obj.matB;
		var y = obj.matD;
		var z = obj.absY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		return true;
	}
	,beginDrawObject: function(obj,texture) {
		if(!this.beginDraw(obj,texture,true)) {
			return false;
		}
		if(this.inFilter == obj) {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else if(this.inFilterBlend != null) {
			var _this = this.baseShader.color__;
			var x = this.globalAlpha;
			var y = this.globalAlpha;
			var z = this.globalAlpha;
			var w = this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		var _this = this.baseShader.absoluteMatrixA__;
		var x = obj.matA;
		var y = obj.matC;
		var z = obj.absX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.absoluteMatrixB__;
		var x = obj.matB;
		var y = obj.matD;
		var z = obj.absY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		this.beforeDraw();
		return true;
	}
	,drawTile: function(obj,tile) {
		var matA;
		var matB;
		var matC;
		var matD;
		var absX;
		var absY;
		if(this.inFilter != null) {
			var f1 = this.baseShader.filterMatrixA__;
			var f2 = this.baseShader.filterMatrixB__;
			var tmpA = obj.matA * f1.x + obj.matB * f1.y;
			var tmpB = obj.matA * f2.x + obj.matB * f2.y;
			var tmpC = obj.matC * f1.x + obj.matD * f1.y;
			var tmpD = obj.matC * f2.x + obj.matD * f2.y;
			var tmpX = obj.absX * f1.x + obj.absY * f1.y + f1.z;
			var tmpY = obj.absX * f2.x + obj.absY * f2.y + f2.z;
			matA = tmpA * this.viewA + tmpB * this.viewC;
			matB = tmpA * this.viewB + tmpB * this.viewD;
			matC = tmpC * this.viewA + tmpD * this.viewC;
			matD = tmpC * this.viewB + tmpD * this.viewD;
			absX = tmpX * this.viewA + tmpY * this.viewC + this.viewX;
			absY = tmpX * this.viewB + tmpY * this.viewD + this.viewY;
		} else {
			matA = obj.matA * this.viewA + obj.matB * this.viewC;
			matB = obj.matA * this.viewB + obj.matB * this.viewD;
			matC = obj.matC * this.viewA + obj.matD * this.viewC;
			matD = obj.matC * this.viewB + obj.matD * this.viewD;
			absX = obj.absX * this.viewA + obj.absY * this.viewC + this.viewX;
			absY = obj.absX * this.viewB + obj.absY * this.viewD + this.viewY;
		}
		if(matB == 0 && matC == 0) {
			var tx = tile.dx + tile.width * 0.5;
			var ty = tile.dy + tile.height * 0.5;
			var a = matA < 0 ? -matA : matA;
			var b = matD < 0 ? -matD : matD;
			var tr = (tile.width > tile.height ? tile.width : tile.height) * 1.5 * (a < b ? b : a);
			var cx = absX + tx * matA;
			var cy = absY + ty * matD;
			if(cx + tr < -1 || cx - tr > 1 || cy + tr < -1 || cy - tr > 1) {
				return false;
			}
		} else {
			var xMin = 1e20;
			var yMin = 1e20;
			var xMax = -1e20;
			var yMax = -1e20;
			var hw = tile.width * 0.5;
			var hh = tile.height * 0.5;
			var px = tile.dx * matA + tile.dy * matC;
			var py = tile.dx * matB + tile.dy * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var x = tile.width;
			var px = (x + tile.dx) * matA + tile.dy * matC;
			var py = (x + tile.dx) * matB + tile.dy * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var y = tile.height;
			var px = tile.dx * matA + (y + tile.dy) * matC;
			var py = tile.dx * matB + (y + tile.dy) * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var x = tile.width;
			var y = tile.height;
			var px = (x + tile.dx) * matA + (y + tile.dy) * matC;
			var py = (x + tile.dx) * matB + (y + tile.dy) * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			if(absX + xMax < -1 || absY + yMax < -1 || absX + xMin > 1 || absY + yMin > 1) {
				return false;
			}
		}
		if(!this.beginDraw(obj,tile.innerTex,true,true)) {
			return false;
		}
		if(this.inFilter == obj) {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else if(this.inFilterBlend != null) {
			var _this = this.baseShader.color__;
			var x = this.globalAlpha;
			var y = this.globalAlpha;
			var z = this.globalAlpha;
			var w = this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		var _this = this.baseShader.absoluteMatrixA__;
		var x = tile.width * obj.matA;
		var y = tile.height * obj.matC;
		var z = obj.absX + tile.dx * obj.matA + tile.dy * obj.matC;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.absoluteMatrixB__;
		var x = tile.width * obj.matB;
		var y = tile.height * obj.matD;
		var z = obj.absY + tile.dx * obj.matB + tile.dy * obj.matD;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.uvPos__;
		var x = tile.u;
		var y = tile.v;
		var z = tile.u2 - tile.u;
		var w = tile.v2 - tile.v;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = w;
		this.beforeDraw();
		if(this.fixedBuffer == null || this.fixedBuffer.isDisposed()) {
			this.fixedBuffer = new h3d_Buffer(4,8,[h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat]);
			var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
			var k = this1;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			this.fixedBuffer.uploadVector(k,0,4);
		}
		var _this = this.engine;
		_this.renderBuffer(this.fixedBuffer,_this.mem.quadIndexes,2,0,-1);
		return true;
	}
	,beginDraw: function(obj,texture,isRelative,hasUVPos) {
		if(hasUVPos == null) {
			hasUVPos = false;
		}
		if(this.onBeginDraw != null && !this.onBeginDraw(obj)) {
			return false;
		}
		var stride = 8;
		var shaderChanged = false;
		var paramsChanged = false;
		var objShaders = obj.shaders;
		var curShaders = this.currentShaders.next;
		while(objShaders != null && curShaders != null) {
			var s = objShaders.s;
			var t = curShaders.s;
			objShaders = objShaders.next;
			curShaders = curShaders.next;
			var prevInst = t.instance;
			if(s != t) {
				paramsChanged = true;
			}
			s.updateConstants(this.manager.globals);
			if(s.instance != prevInst) {
				shaderChanged = true;
			}
		}
		if(objShaders != null || curShaders != null || this.baseShader.isRelative__ != isRelative || this.baseShader.hasUVPos__ != hasUVPos || this.baseShader.killAlpha__ != this.killAlpha) {
			shaderChanged = true;
		}
		if(shaderChanged) {
			var _this = this.baseShader;
			_this.constModified = true;
			_this.hasUVPos__ = hasUVPos;
			var _this = this.baseShader;
			_this.constModified = true;
			_this.isRelative__ = isRelative;
			var _this = this.baseShader;
			_this.constModified = true;
			_this.killAlpha__ = this.killAlpha;
			this.baseShader.updateConstants(this.manager.globals);
			this.baseShaderList.next = obj.shaders;
			this.initShaders(this.baseShaderList);
		} else if(paramsChanged) {
			if(this.currentShaders != this.baseShaderList) {
				throw haxe_Exception.thrown("!");
			}
			this.currentShaders.next = obj.shaders;
		}
		this.texture = texture;
		this.stride = stride;
		this.currentObj = obj;
		return true;
	}
	,__class__: h2d_RenderContext
});
var h2d_TileGroup = function(t,parent) {
	h2d_Drawable.call(this,parent);
	this.tile = t;
	this.rangeMin = this.rangeMax = -1;
	this.curColor = new h3d_Vector(1,1,1,1);
	this.content = new h2d_TileLayerContent();
};
$hxClasses["h2d.TileGroup"] = h2d_TileGroup;
h2d_TileGroup.__name__ = "h2d.TileGroup";
h2d_TileGroup.__super__ = h2d_Drawable;
h2d_TileGroup.prototype = $extend(h2d_Drawable.prototype,{
	getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		this.addBounds(relativeTo,out,this.content.xMin,this.content.yMin,this.content.xMax - this.content.xMin,this.content.yMax - this.content.yMin);
	}
	,clear: function() {
		this.content.clear();
	}
	,onRemove: function() {
		this.content.dispose();
		h2d_Drawable.prototype.onRemove.call(this);
	}
	,setDefaultColor: function(rgb,alpha) {
		if(alpha == null) {
			alpha = 1.0;
		}
		this.curColor.x = (rgb >> 16 & 255) / 255;
		this.curColor.y = (rgb >> 8 & 255) / 255;
		this.curColor.z = (rgb & 255) / 255;
		this.curColor.w = alpha;
	}
	,draw: function(ctx) {
		this.drawWith(ctx,this);
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		var _this = this.content;
		if(_this.buffer == null || _this.buffer.isDisposed()) {
			_this.alloc(h3d_Engine.CURRENT);
		}
	}
	,drawWith: function(ctx,obj) {
		var max = this.content.triCount();
		if(max == 0) {
			return;
		}
		if(!ctx.beginDrawBatchState(obj)) {
			return;
		}
		var min = this.rangeMin < 0 ? 0 : this.rangeMin * 2;
		if(this.rangeMax > 0 && this.rangeMax < max * 2) {
			max = this.rangeMax * 2;
		}
		var _this = this.content;
		if(_this.buffer == null || _this.buffer.isDisposed()) {
			_this.alloc(h3d_Engine.CURRENT);
		}
		_this.state.drawQuads(ctx,_this.buffer,min,max - min);
	}
	,__class__: h2d_TileGroup
});
var h2d_ScaleGrid = function(tile,borderW,borderH,parent) {
	h2d_TileGroup.call(this,tile,parent);
	this.set_borderWidth(borderW);
	this.set_borderHeight(borderH);
	this.set_width(tile.width);
	this.set_height(tile.height);
	this.content.useAllocator = true;
};
$hxClasses["h2d.ScaleGrid"] = h2d_ScaleGrid;
h2d_ScaleGrid.__name__ = "h2d.ScaleGrid";
h2d_ScaleGrid.__super__ = h2d_TileGroup;
h2d_ScaleGrid.prototype = $extend(h2d_TileGroup.prototype,{
	set_width: function(w) {
		if(this.width == w) {
			return w;
		}
		this.width = w;
		this.clear();
		return w;
	}
	,set_height: function(h) {
		if(this.height == h) {
			return h;
		}
		this.height = h;
		this.clear();
		return h;
	}
	,set_borderWidth: function(w) {
		if(this.borderWidth == w) {
			return w;
		}
		this.borderWidth = w;
		this.clear();
		return w;
	}
	,set_borderHeight: function(h) {
		if(this.borderHeight == h) {
			return h;
		}
		this.borderHeight = h;
		this.clear();
		return h;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		this.checkUpdate();
		h2d_TileGroup.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
	}
	,checkUpdate: function() {
		if(this.content.isEmpty() || this.tile != this.contentTile) {
			this.clear();
			this.contentTile = this.tile;
			this.updateContent();
		}
	}
	,updateContent: function() {
		var bw = this.borderWidth;
		var bh = this.borderHeight;
		var _this = this.content;
		var color = this.curColor;
		var t = this.tile.sub(0,0,bw,bh);
		_this.add(0,0,color.x,color.y,color.z,color.w,t);
		var _this = this.content;
		var x = this.width - bw;
		var color = this.curColor;
		var t = this.tile.sub(this.tile.width - bw,0,bw,bh);
		_this.add(x,0,color.x,color.y,color.z,color.w,t);
		var _this = this.content;
		var y = this.height - bh;
		var color = this.curColor;
		var t = this.tile.sub(0,this.tile.height - bh,bw,bh);
		_this.add(0,y,color.x,color.y,color.z,color.w,t);
		var _this = this.content;
		var x = this.width - bw;
		var y = this.height - bh;
		var color = this.curColor;
		var t = this.tile.sub(this.tile.width - bw,this.tile.height - bh,bw,bh);
		_this.add(x,y,color.x,color.y,color.z,color.w,t);
		var sizeX = this.tile.width - bw * 2;
		var sizeY = this.tile.height - bh * 2;
		if(!this.tileBorders) {
			var w = this.width - bw * 2;
			var h = this.height - bh * 2;
			var t = this.tile.sub(bw,0,sizeX,bh);
			t.scaleToSize(w,bh);
			var color = this.curColor;
			this.content.add(bw,0,color.x,color.y,color.z,color.w,t);
			var t = this.tile.sub(bw,this.tile.height - bh,sizeX,bh);
			t.scaleToSize(w,bh);
			var color = this.curColor;
			this.content.add(bw,h + bh,color.x,color.y,color.z,color.w,t);
			var t = this.tile.sub(0,bh,bw,sizeY);
			t.scaleToSize(bw,h);
			var color = this.curColor;
			this.content.add(0,bh,color.x,color.y,color.z,color.w,t);
			var t = this.tile.sub(this.tile.width - bw,bh,bw,sizeY);
			t.scaleToSize(bw,h);
			var color = this.curColor;
			this.content.add(w + bw,bh,color.x,color.y,color.z,color.w,t);
		} else {
			var rw = (this.width - bw * 2) / sizeX | 0;
			var _g = 0;
			var _g1 = rw;
			while(_g < _g1) {
				var x = _g++;
				var _this = this.content;
				var color = this.curColor;
				var t = this.tile.sub(bw,0,sizeX,bh);
				_this.add(bw + x * sizeX,0,color.x,color.y,color.z,color.w,t);
				var _this1 = this.content;
				var y = this.height - bh;
				var color1 = this.curColor;
				var t1 = this.tile.sub(bw,this.tile.height - bh,sizeX,bh);
				_this1.add(bw + x * sizeX,y,color1.x,color1.y,color1.z,color1.w,t1);
			}
			var dx = this.width - bw * 2 - rw * sizeX;
			if(dx > 0) {
				var _this = this.content;
				var color = this.curColor;
				var t = this.tile.sub(bw,0,dx,bh);
				_this.add(bw + rw * sizeX,0,color.x,color.y,color.z,color.w,t);
				var _this = this.content;
				var y = this.height - bh;
				var color = this.curColor;
				var t = this.tile.sub(bw,this.tile.height - bh,dx,bh);
				_this.add(bw + rw * sizeX,y,color.x,color.y,color.z,color.w,t);
			}
			var rh = (this.height - bh * 2) / sizeY | 0;
			var _g = 0;
			var _g1 = rh;
			while(_g < _g1) {
				var y = _g++;
				var _this = this.content;
				var color = this.curColor;
				var t = this.tile.sub(0,bh,bw,sizeY);
				_this.add(0,bh + y * sizeY,color.x,color.y,color.z,color.w,t);
				var _this1 = this.content;
				var x = this.width - bw;
				var color1 = this.curColor;
				var t1 = this.tile.sub(this.tile.width - bw,bh,bw,sizeY);
				_this1.add(x,bh + y * sizeY,color1.x,color1.y,color1.z,color1.w,t1);
			}
			var dy = this.height - bh * 2 - rh * sizeY;
			if(dy > 0) {
				var _this = this.content;
				var color = this.curColor;
				var t = this.tile.sub(0,bh,bw,dy);
				_this.add(0,bh + rh * sizeY,color.x,color.y,color.z,color.w,t);
				var _this = this.content;
				var x = this.width - bw;
				var color = this.curColor;
				var t = this.tile.sub(this.tile.width - bw,bh,bw,dy);
				_this.add(x,bh + rh * sizeY,color.x,color.y,color.z,color.w,t);
			}
		}
		var t = this.tile.sub(bw,bh,sizeX,sizeY);
		t.scaleToSize(this.width - bw * 2,this.height - bh * 2);
		var color = this.curColor;
		this.content.add(bw,bh,color.x,color.y,color.z,color.w,t);
	}
	,sync: function(ctx) {
		this.checkUpdate();
		h2d_TileGroup.prototype.sync.call(this,ctx);
	}
	,__class__: h2d_ScaleGrid
});
var h2d_ScaleModeAlign = $hxEnums["h2d.ScaleModeAlign"] = { __ename__ : true, __constructs__ : ["Left","Right","Center","Top","Bottom"]
	,Left: {_hx_index:0,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Right: {_hx_index:1,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Center: {_hx_index:2,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Top: {_hx_index:3,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Bottom: {_hx_index:4,__enum__:"h2d.ScaleModeAlign",toString:$estr}
};
h2d_ScaleModeAlign.__empty_constructs__ = [h2d_ScaleModeAlign.Left,h2d_ScaleModeAlign.Right,h2d_ScaleModeAlign.Center,h2d_ScaleModeAlign.Top,h2d_ScaleModeAlign.Bottom];
var h2d_ScaleMode = $hxEnums["h2d.ScaleMode"] = { __ename__ : true, __constructs__ : ["Resize","Stretch","LetterBox","Fixed","Zoom","AutoZoom"]
	,Resize: {_hx_index:0,__enum__:"h2d.ScaleMode",toString:$estr}
	,Stretch: ($_=function(width,height) { return {_hx_index:1,width:width,height:height,__enum__:"h2d.ScaleMode",toString:$estr}; },$_.__params__ = ["width","height"],$_)
	,LetterBox: ($_=function(width,height,integerScale,horizontalAlign,verticalAlign) { return {_hx_index:2,width:width,height:height,integerScale:integerScale,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,__enum__:"h2d.ScaleMode",toString:$estr}; },$_.__params__ = ["width","height","integerScale","horizontalAlign","verticalAlign"],$_)
	,Fixed: ($_=function(width,height,zoom,horizontalAlign,verticalAlign) { return {_hx_index:3,width:width,height:height,zoom:zoom,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,__enum__:"h2d.ScaleMode",toString:$estr}; },$_.__params__ = ["width","height","zoom","horizontalAlign","verticalAlign"],$_)
	,Zoom: ($_=function(level) { return {_hx_index:4,level:level,__enum__:"h2d.ScaleMode",toString:$estr}; },$_.__params__ = ["level"],$_)
	,AutoZoom: ($_=function(minWidth,minHeight,integerScaling) { return {_hx_index:5,minWidth:minWidth,minHeight:minHeight,integerScaling:integerScaling,__enum__:"h2d.ScaleMode",toString:$estr}; },$_.__params__ = ["minWidth","minHeight","integerScaling"],$_)
};
h2d_ScaleMode.__empty_constructs__ = [h2d_ScaleMode.Resize];
var hxd_InteractiveScene = function() { };
$hxClasses["hxd.InteractiveScene"] = hxd_InteractiveScene;
hxd_InteractiveScene.__name__ = "hxd.InteractiveScene";
hxd_InteractiveScene.__isInterface__ = true;
hxd_InteractiveScene.prototype = {
	__class__: hxd_InteractiveScene
};
var h2d_Scene = function() {
	this.scaleMode = h2d_ScaleMode.Resize;
	h2d_Layers.call(this,null);
	var e = h3d_Engine.CURRENT;
	this.ctx = new h2d_RenderContext(this);
	this._cameras = [];
	new h2d_Camera(this);
	this.set_interactiveCamera(this._cameras[0]);
	this.width = e.width;
	this.height = e.height;
	this.viewportA = 2 / e.width;
	this.viewportD = 2 / e.height;
	this.viewportX = -1;
	this.viewportY = -1;
	this.viewportScaleX = 1;
	this.viewportScaleY = 1;
	this.offsetX = 0;
	this.offsetY = 0;
	this.interactive = [];
	this.eventListeners = [];
	this.shapePoint = new h2d_col_Point();
	this.window = hxd_Window.getInstance();
	this.posChanged = true;
};
$hxClasses["h2d.Scene"] = h2d_Scene;
h2d_Scene.__name__ = "h2d.Scene";
h2d_Scene.__interfaces__ = [hxd_InteractiveScene,h3d_IDrawable];
h2d_Scene.__super__ = h2d_Layers;
h2d_Scene.prototype = $extend(h2d_Layers.prototype,{
	setEvents: function(events) {
		this.events = events;
	}
	,set_interactiveCamera: function(cam) {
		if(cam == null) {
			throw haxe_Exception.thrown("Interactive cammera cannot be null!");
		}
		if(cam.scene != this) {
			this.addCamera(cam);
		}
		return this.interactiveCamera = cam;
	}
	,addCamera: function(cam,pos) {
		if(cam.scene != null) {
			cam.scene.removeCamera(cam);
		}
		cam.scene = this;
		cam.posChanged = true;
		if(pos != null) {
			this._cameras.splice(pos,0,cam);
		} else {
			this._cameras.push(cam);
		}
	}
	,removeCamera: function(cam) {
		if(cam == this.interactiveCamera) {
			throw haxe_Exception.thrown("Current interactive Camera cannot be removed from camera list!");
		}
		cam.scene = null;
		HxOverrides.remove(this._cameras,cam);
	}
	,checkResize: function() {
		var _gthis = this;
		var engine = h3d_Engine.CURRENT;
		var _g = this.scaleMode;
		switch(_g._hx_index) {
		case 0:
			var w = engine.width;
			var h = engine.height;
			if(w != _gthis.width || h != _gthis.height) {
				_gthis.width = w;
				_gthis.height = h;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = 1;
			_gthis.viewportScaleY = 1;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		case 1:
			var _height = _g.height;
			var _width = _g.width;
			if(_width != _gthis.width || _height != _gthis.height) {
				_gthis.width = _width;
				_gthis.height = _height;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = engine.width / _width;
			_gthis.viewportScaleY = engine.height / _height;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		case 2:
			var verticalAlign = _g.verticalAlign;
			var horizontalAlign = _g.horizontalAlign;
			var integerScale = _g.integerScale;
			var _height = _g.height;
			var _width = _g.width;
			if(_width != _gthis.width || _height != _gthis.height) {
				_gthis.width = _width;
				_gthis.height = _height;
				_gthis.posChanged = true;
			}
			var a = engine.width / _width;
			var b = engine.height / _height;
			var zoom = a > b ? b : a;
			if(integerScale) {
				zoom = zoom | 0;
				if(zoom == 0) {
					zoom = 1;
				}
			}
			var horizontal = horizontalAlign;
			var vertical = verticalAlign;
			_gthis.viewportA = zoom * 2 / engine.width;
			_gthis.viewportD = zoom * 2 / engine.height;
			_gthis.viewportScaleX = zoom;
			_gthis.viewportScaleY = zoom;
			if(horizontal == null) {
				horizontal = h2d_ScaleModeAlign.Center;
			}
			switch(horizontal._hx_index) {
			case 0:
				_gthis.viewportX = -1;
				_gthis.offsetX = 0;
				break;
			case 1:
				_gthis.viewportX = 1 - _gthis.width * _gthis.viewportA;
				_gthis.offsetX = engine.width - _gthis.width * zoom;
				break;
			default:
				_gthis.viewportX = Math.floor((engine.width - _gthis.width * zoom) / (zoom * 2)) * _gthis.viewportA - 1.;
				_gthis.offsetX = Math.floor((engine.width - _gthis.width * zoom) / 2);
			}
			if(vertical == null) {
				vertical = h2d_ScaleModeAlign.Center;
			}
			switch(vertical._hx_index) {
			case 3:
				_gthis.viewportY = -1;
				_gthis.offsetY = 0;
				break;
			case 4:
				_gthis.viewportY = 1 - _gthis.height * _gthis.viewportD;
				_gthis.offsetY = engine.height - _gthis.height * zoom;
				break;
			default:
				_gthis.viewportY = Math.floor((engine.height - _gthis.height * zoom) / (zoom * 2)) * _gthis.viewportD - 1.;
				_gthis.offsetY = Math.floor((engine.height - _gthis.height * zoom) / 2);
			}
			break;
		case 3:
			var verticalAlign = _g.verticalAlign;
			var horizontalAlign = _g.horizontalAlign;
			var zoom = _g.zoom;
			var _height = _g.height;
			var _width = _g.width;
			if(_width != _gthis.width || _height != _gthis.height) {
				_gthis.width = _width;
				_gthis.height = _height;
				_gthis.posChanged = true;
			}
			var horizontal = horizontalAlign;
			var vertical = verticalAlign;
			_gthis.viewportA = zoom * 2 / engine.width;
			_gthis.viewportD = zoom * 2 / engine.height;
			_gthis.viewportScaleX = zoom;
			_gthis.viewportScaleY = zoom;
			if(horizontal == null) {
				horizontal = h2d_ScaleModeAlign.Center;
			}
			switch(horizontal._hx_index) {
			case 0:
				_gthis.viewportX = -1;
				_gthis.offsetX = 0;
				break;
			case 1:
				_gthis.viewportX = 1 - _gthis.width * _gthis.viewportA;
				_gthis.offsetX = engine.width - _gthis.width * zoom;
				break;
			default:
				_gthis.viewportX = Math.floor((engine.width - _gthis.width * zoom) / (zoom * 2)) * _gthis.viewportA - 1.;
				_gthis.offsetX = Math.floor((engine.width - _gthis.width * zoom) / 2);
			}
			if(vertical == null) {
				vertical = h2d_ScaleModeAlign.Center;
			}
			switch(vertical._hx_index) {
			case 3:
				_gthis.viewportY = -1;
				_gthis.offsetY = 0;
				break;
			case 4:
				_gthis.viewportY = 1 - _gthis.height * _gthis.viewportD;
				_gthis.offsetY = engine.height - _gthis.height * zoom;
				break;
			default:
				_gthis.viewportY = Math.floor((engine.height - _gthis.height * zoom) / (zoom * 2)) * _gthis.viewportD - 1.;
				_gthis.offsetY = Math.floor((engine.height - _gthis.height * zoom) / 2);
			}
			break;
		case 4:
			var level = _g.level;
			var w = Math.ceil(engine.width / level);
			var h = Math.ceil(engine.height / level);
			if(w != _gthis.width || h != _gthis.height) {
				_gthis.width = w;
				_gthis.height = h;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = level;
			_gthis.viewportScaleY = level;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		case 5:
			var integerScaling = _g.integerScaling;
			var minHeight = _g.minHeight;
			var minWidth = _g.minWidth;
			var a = engine.width / minWidth;
			var b = engine.height / minHeight;
			var zoom = a > b ? b : a;
			if(integerScaling) {
				zoom = zoom | 0;
				if(zoom == 0) {
					zoom = 1;
				}
			}
			var w = Math.ceil(engine.width / zoom);
			var h = Math.ceil(engine.height / zoom);
			if(w != _gthis.width || h != _gthis.height) {
				_gthis.width = w;
				_gthis.height = h;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = zoom;
			_gthis.viewportScaleY = zoom;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		}
	}
	,dispatchListeners: function(event) {
		this.screenToViewport(event);
		var _g = 0;
		var _g1 = this.eventListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l(event);
			if(!event.propagate) {
				break;
			}
		}
	}
	,isInteractiveVisible: function(i) {
		var s = i;
		while(s != this) {
			if(s == null || !s.visible) {
				return false;
			}
			s = s.parent;
		}
		return true;
	}
	,screenToViewport: function(e) {
		this.interactiveCamera.eventToCamera(e);
	}
	,dispatchEvent: function(event,to) {
		var i = to;
		this.screenToViewport(event);
		var dx = event.relX - i.absX;
		var dy = event.relY - i.absY;
		var rx = (dx * i.matD - dy * i.matC) * i.invDet;
		var ry = (dy * i.matA - dx * i.matB) * i.invDet;
		event.relX = rx;
		event.relY = ry;
		i.handleEvent(event);
	}
	,handleEvent: function(event,last) {
		this.screenToViewport(event);
		var ex = event.relX;
		var ey = event.relY;
		var index = last == null ? 0 : this.interactive.indexOf(last) + 1;
		var pt = this.shapePoint;
		var _g = index;
		var _g1 = this.interactive.length;
		while(_g < _g1) {
			var idx = _g++;
			var i = this.interactive[idx];
			if(i == null) {
				break;
			}
			if(i.invDet == 0) {
				continue;
			}
			var dx = ex - i.absX;
			var dy = ey - i.absY;
			var rx = (dx * i.matD - dy * i.matC) * i.invDet;
			var ry = (dy * i.matA - dx * i.matB) * i.invDet;
			if(i.shape != null) {
				var x = rx + i.shapeX;
				var y = ry + i.shapeY;
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				pt.x = x;
				pt.y = y;
				if(!i.shape.contains(pt)) {
					continue;
				}
			} else if(ry < 0 || rx < 0 || rx >= i.width || ry >= i.height) {
				continue;
			}
			var visible = true;
			var p = i;
			while(p != null) {
				if(!p.visible) {
					visible = false;
					break;
				}
				p = p.parent;
			}
			if(!visible) {
				continue;
			}
			event.relX = rx;
			event.relY = ry;
			i.handleEvent(event);
			if(event.cancel) {
				event.cancel = false;
				event.propagate = false;
				continue;
			}
			return i;
		}
		return null;
	}
	,addEventListener: function(f) {
		this.eventListeners.push(f);
	}
	,startDrag: function(onEvent,onCancel,refEvent) {
		var _gthis = this;
		this.events.startDrag(function(e) {
			_gthis.screenToViewport(e);
			onEvent(e);
		},onCancel,refEvent);
	}
	,stopDrag: function() {
		this.events.stopDrag();
	}
	,addEventTarget: function(i) {
		var i1 = i;
		var lv = 0;
		while(i1 != null) {
			i1 = i1.parent;
			++lv;
		}
		var level = lv;
		var _g = 0;
		var _g1 = this.interactive.length;
		while(_g < _g1) {
			var index = _g++;
			var i1 = i;
			var i2 = this.interactive[index];
			var lv1 = level;
			var i3 = i2;
			var lv = 0;
			while(i3 != null) {
				i3 = i3.parent;
				++lv;
			}
			var lv2 = lv;
			var p1 = i1;
			var p2 = i2;
			while(lv1 > lv2) {
				i1 = p1;
				p1 = p1.parent;
				--lv1;
			}
			while(lv2 > lv1) {
				i2 = p2;
				p2 = p2.parent;
				--lv2;
			}
			while(p1 != p2) {
				i1 = p1;
				p1 = p1.parent;
				i2 = p2;
				p2 = p2.parent;
			}
			var id = -1;
			var _g2 = 0;
			var _g3 = p1.children.length;
			while(_g2 < _g3) {
				var k = _g2++;
				if(p1.children[k] == i1) {
					id = k;
					break;
				}
			}
			var tmp = id;
			var id1 = -1;
			var _g4 = 0;
			var _g5 = p2.children.length;
			while(_g4 < _g5) {
				var k1 = _g4++;
				if(p2.children[k1] == i2) {
					id1 = k1;
					break;
				}
			}
			if(tmp > id1) {
				this.interactive.splice(index,0,i);
				return;
			}
		}
		this.interactive.push(i);
	}
	,removeEventTarget: function(i,notify) {
		if(notify == null) {
			notify = false;
		}
		HxOverrides.remove(this.interactive,i);
		if(notify && this.events != null) {
			this.events.onRemove(i);
		}
	}
	,setElapsedTime: function(v) {
		this.ctx.elapsedTime = v;
	}
	,render: function(engine) {
		this.ctx.engine = engine;
		this.ctx.frame++;
		this.ctx.time += this.ctx.elapsedTime;
		this.ctx.globalAlpha = this.alpha;
		this.sync(this.ctx);
		if(this.children.length == 0) {
			return;
		}
		this.ctx.begin();
		this.ctx.drawScene();
		this.ctx.end();
	}
	,sync: function(ctx) {
		var forceCamSync = this.posChanged;
		if(!this.allocated) {
			this.onAdd();
		}
		h2d_Layers.prototype.sync.call(this,ctx);
		var _g = 0;
		var _g1 = this._cameras;
		while(_g < _g1.length) {
			var cam = _g1[_g];
			++_g;
			cam.sync(ctx,forceCamSync);
		}
	}
	,clipBounds: function(ctx,bounds) {
		var _gthis = this;
		if(this.rotation == 0) {
			var x = -this.absX;
			var y = -this.absY;
			if(x < bounds.xMin) {
				bounds.xMin = x;
			}
			if(x > bounds.xMax) {
				bounds.xMax = x;
			}
			if(y < bounds.yMin) {
				bounds.yMin = y;
			}
			if(y > bounds.yMax) {
				bounds.yMax = y;
			}
			var x = this.window.get_width() / this.matA - this.absX;
			var y = this.window.get_height() / this.matD - this.absY;
			if(x < bounds.xMin) {
				bounds.xMin = x;
			}
			if(x > bounds.xMax) {
				bounds.xMax = x;
			}
			if(y < bounds.yMin) {
				bounds.yMin = y;
			}
			if(y > bounds.yMax) {
				bounds.yMax = y;
			}
		} else {
			var ww = this.window.get_width() / this.matA - this.absX;
			var wh = this.window.get_height() / this.matD - this.absY;
			var x = -this.absX;
			var y = -this.absY;
			var x1 = x * _gthis.matA + y * _gthis.matC;
			var y1 = x * _gthis.matB + y * _gthis.matD;
			if(x1 < bounds.xMin) {
				bounds.xMin = x1;
			}
			if(x1 > bounds.xMax) {
				bounds.xMax = x1;
			}
			if(y1 < bounds.yMin) {
				bounds.yMin = y1;
			}
			if(y1 > bounds.yMax) {
				bounds.yMax = y1;
			}
			var x = ww - this.absX;
			var y = -this.absY;
			var x1 = x * _gthis.matA + y * _gthis.matC;
			var y1 = x * _gthis.matB + y * _gthis.matD;
			if(x1 < bounds.xMin) {
				bounds.xMin = x1;
			}
			if(x1 > bounds.xMax) {
				bounds.xMax = x1;
			}
			if(y1 < bounds.yMin) {
				bounds.yMin = y1;
			}
			if(y1 > bounds.yMax) {
				bounds.yMax = y1;
			}
			var x = -this.absX;
			var y = wh - this.absY;
			var x1 = x * _gthis.matA + y * _gthis.matC;
			var y1 = x * _gthis.matB + y * _gthis.matD;
			if(x1 < bounds.xMin) {
				bounds.xMin = x1;
			}
			if(x1 > bounds.xMax) {
				bounds.xMax = x1;
			}
			if(y1 < bounds.yMin) {
				bounds.yMin = y1;
			}
			if(y1 > bounds.yMax) {
				bounds.yMax = y1;
			}
			var x = ww - this.absX;
			var y = wh - this.absY;
			var x1 = x * _gthis.matA + y * _gthis.matC;
			var y1 = x * _gthis.matB + y * _gthis.matD;
			if(x1 < bounds.xMin) {
				bounds.xMin = x1;
			}
			if(x1 > bounds.xMax) {
				bounds.xMax = x1;
			}
			if(y1 < bounds.yMin) {
				bounds.yMin = y1;
			}
			if(y1 > bounds.yMax) {
				bounds.yMax = y1;
			}
		}
		h2d_Layers.prototype.clipBounds.call(this,ctx,bounds);
	}
	,drawContent: function(ctx) {
		if(ctx.front2back) {
			var _g = 0;
			var _g1 = this._cameras;
			while(_g < _g1.length) {
				var cam = _g1[_g];
				++_g;
				if(!cam.visible) {
					continue;
				}
				var i = this.children.length;
				var l = this.layerCount;
				cam.enter(ctx);
				while(l-- > 0) {
					var top = l == 0 ? 0 : this.layersIndexes[l - 1];
					if(cam.layerVisible(l)) {
						while(i >= top) this.children[i--].drawRec(ctx);
					} else {
						i = top - 1;
					}
				}
				cam.exit(ctx);
			}
			this.draw(ctx);
		} else {
			this.draw(ctx);
			var _g = 0;
			var _g1 = this._cameras;
			while(_g < _g1.length) {
				var cam = _g1[_g];
				++_g;
				if(!cam.visible) {
					continue;
				}
				var i = 0;
				var l = 0;
				cam.enter(ctx);
				while(l < this.layerCount) {
					var top = this.layersIndexes[l++];
					if(cam.layerVisible(l - 1)) {
						while(i < top) this.children[i++].drawRec(ctx);
					} else {
						i = top;
					}
				}
				cam.exit(ctx);
			}
		}
	}
	,onAdd: function() {
		this.checkResize();
		h2d_Layers.prototype.onAdd.call(this);
		this.window.addResizeEvent($bind(this,this.checkResize));
	}
	,onRemove: function() {
		h2d_Layers.prototype.onRemove.call(this);
		this.window.removeResizeEvent($bind(this,this.checkResize));
	}
	,__class__: h2d_Scene
});
var h2d_Align = $hxEnums["h2d.Align"] = { __ename__ : true, __constructs__ : ["Left","Right","Center","MultilineRight","MultilineCenter"]
	,Left: {_hx_index:0,__enum__:"h2d.Align",toString:$estr}
	,Right: {_hx_index:1,__enum__:"h2d.Align",toString:$estr}
	,Center: {_hx_index:2,__enum__:"h2d.Align",toString:$estr}
	,MultilineRight: {_hx_index:3,__enum__:"h2d.Align",toString:$estr}
	,MultilineCenter: {_hx_index:4,__enum__:"h2d.Align",toString:$estr}
};
h2d_Align.__empty_constructs__ = [h2d_Align.Left,h2d_Align.Right,h2d_Align.Center,h2d_Align.MultilineRight,h2d_Align.MultilineCenter];
var h2d_TextInput = function(font,parent) {
	this.maxHistorySize = 100;
	this.lastClick = 0.;
	this.lastChange = 0.;
	this.redo = [];
	this.undo = [];
	this.scrollX = 0.;
	this.cursorBlink = 0.;
	this.canEdit = true;
	this.cursorBlinkTime = 0.5;
	this.cursorIndex = -1;
	var _gthis = this;
	h2d_Text.call(this,font,parent);
	this.interactive = new h2d_Interactive(0,0);
	this.interactive.set_cursor(hxd_Cursor.TextInput);
	this.interactive.onPush = function(e) {
		_gthis.onPush(e);
		if(!e.cancel && e.button == 0) {
			if(!_gthis.interactive.hasFocus()) {
				e.kind = hxd_EventKind.EFocus;
				_gthis.onFocus(e);
				e.kind = hxd_EventKind.EPush;
				if(e.cancel) {
					return;
				}
				_gthis.interactive.focus();
			}
			_gthis.cursorBlink = 0;
			var startIndex = _gthis.textPos(e.relX,e.relY);
			_gthis.cursorIndex = startIndex;
			_gthis.selectionRange = null;
			var pt = new h2d_col_Point();
			var scene = _gthis.getScene();
			scene.startDrag(function(e) {
				pt.x = e.relX;
				pt.y = e.relY;
				_gthis.globalToLocal(pt);
				var index = _gthis.textPos(pt.x,pt.y);
				if(index == startIndex) {
					_gthis.selectionRange = null;
				} else if(index < startIndex) {
					_gthis.selectionRange = { start : index, length : startIndex - index};
				} else {
					_gthis.selectionRange = { start : startIndex, length : index - startIndex};
				}
				_gthis.selectionSize = 0;
				_gthis.cursorIndex = index;
				if(e.kind == hxd_EventKind.ERelease || _gthis.getScene() != scene) {
					scene.stopDrag();
				}
			});
		}
	};
	this.interactive.onKeyDown = function(e) {
		_gthis.onKeyDown(e);
		_gthis.handleKey(e);
	};
	this.interactive.onTextInput = function(e) {
		_gthis.onTextInput(e);
		_gthis.handleKey(e);
	};
	this.interactive.onFocusLost = function(e) {
		_gthis.cursorIndex = -1;
		_gthis.selectionRange = null;
		_gthis.onFocusLost(e);
	};
	this.interactive.onClick = function(e) {
		_gthis.onClick(e);
		if(e.cancel) {
			return;
		}
		var t = HxOverrides.now() / 1000;
		if(t - _gthis.lastClick < 0.3 && _gthis.text.length != 0) {
			_gthis.selectionRange = { start : 0, length : _gthis.text.length};
			_gthis.selectionSize = 0;
			_gthis.cursorIndex = _gthis.text.length;
		}
		_gthis.lastClick = t;
	};
	this.interactive.onKeyUp = function(e) {
		_gthis.onKeyUp(e);
	};
	this.interactive.onRelease = function(e) {
		_gthis.onRelease(e);
	};
	this.interactive.onFocus = function(e) {
		_gthis.onFocus(e);
	};
	this.interactive.onKeyUp = function(e) {
		_gthis.onKeyUp(e);
	};
	this.interactive.onMove = function(e) {
		_gthis.onMove(e);
	};
	this.interactive.onOver = function(e) {
		_gthis.onOver(e);
	};
	this.interactive.onOut = function(e) {
		_gthis.onOut(e);
	};
	this.interactive.set_cursor(hxd_Cursor.TextInput);
	this.addChildAt(this.interactive,0);
};
$hxClasses["h2d.TextInput"] = h2d_TextInput;
h2d_TextInput.__name__ = "h2d.TextInput";
h2d_TextInput.__super__ = h2d_Text;
h2d_TextInput.prototype = $extend(h2d_Text.prototype,{
	constraintSize: function(width,height) {
	}
	,handleKey: function(e) {
		if(e.cancel || this.cursorIndex < 0) {
			return;
		}
		var oldIndex = this.cursorIndex;
		var oldText = this.text;
		switch(e.keyCode) {
		case 8:
			if(this.selectionRange != null) {
				if(!this.canEdit) {
					return;
				}
				this.beforeChange();
				this.cutSelection();
				this.onChange();
			} else if(this.cursorIndex > 0 && this.canEdit) {
				this.beforeChange();
				this.cursorIndex--;
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + HxOverrides.substr(this.text,this.cursorIndex + 1,null));
				this.onChange();
			}
			break;
		case 13:case 27:case 108:
			this.cursorIndex = -1;
			this.interactive.blur();
			return;
		case 35:
			this.cursorIndex = this.text.length;
			break;
		case 36:
			this.cursorIndex = 0;
			break;
		case 37:
			if(hxd_Key.isDown(17)) {
				if(this.cursorIndex > 0) {
					var charset = hxd_Charset.getDefault();
					while(this.cursorIndex > 0 && charset.isSpace(this.text.charCodeAt(this.cursorIndex - 1))) this.cursorIndex--;
					while(this.cursorIndex > 0 && !charset.isSpace(this.text.charCodeAt(this.cursorIndex - 1))) this.cursorIndex--;
				}
			} else if(this.cursorIndex > 0) {
				this.cursorIndex--;
			}
			break;
		case 39:
			if(hxd_Key.isDown(17)) {
				var len = this.text.length;
				if(this.cursorIndex < this.text.length) {
					var charset = hxd_Charset.getDefault();
					while(this.cursorIndex < len && charset.isSpace(this.text.charCodeAt(this.cursorIndex))) this.cursorIndex++;
					while(this.cursorIndex < len && !charset.isSpace(this.text.charCodeAt(this.cursorIndex))) this.cursorIndex++;
				}
			} else if(this.cursorIndex < this.text.length) {
				this.cursorIndex++;
			}
			break;
		case 46:
			if(this.selectionRange != null) {
				if(!this.canEdit) {
					return;
				}
				this.beforeChange();
				this.cutSelection();
				this.onChange();
			} else if(this.cursorIndex < this.text.length && this.canEdit) {
				this.beforeChange();
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + HxOverrides.substr(this.text,this.cursorIndex + 1,null));
				this.onChange();
			}
			break;
		case 65:
			if(hxd_Key.isDown(17)) {
				if(this.text != "") {
					this.cursorIndex = this.text.length;
					this.selectionRange = { start : 0, length : this.text.length};
					this.selectionSize = 0;
				}
				return;
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 89:
			if(hxd_Key.isDown(17)) {
				if(this.redo.length > 0 && this.canEdit) {
					this.undo.push(this.curHistoryState());
					this.setState(this.redo.pop());
				}
				return;
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 90:
			if(hxd_Key.isDown(17)) {
				if(this.undo.length > 0 && this.canEdit) {
					this.redo.push(this.curHistoryState());
					this.setState(this.undo.pop());
				}
				return;
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		default:
			if(e.kind == hxd_EventKind.EKeyDown) {
				return;
			}
			if(e.charCode != 0 && this.canEdit) {
				if(!this.font.hasChar(e.charCode)) {
					return;
				}
				this.beforeChange();
				if(this.selectionRange != null) {
					this.cutSelection();
				}
				var code = e.charCode;
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
				this.cursorIndex++;
				this.onChange();
			}
		}
		this.cursorBlink = 0.;
		if(hxd_Key.isDown(16) && this.text == oldText) {
			if(this.cursorIndex == oldIndex) {
				return;
			}
			if(this.selectionRange == null) {
				this.selectionRange = oldIndex < this.cursorIndex ? { start : oldIndex, length : this.cursorIndex - oldIndex} : { start : this.cursorIndex, length : oldIndex - this.cursorIndex};
			} else if(oldIndex == this.selectionRange.start) {
				this.selectionRange.length += oldIndex - this.cursorIndex;
				this.selectionRange.start = this.cursorIndex;
			} else {
				this.selectionRange.length += this.cursorIndex - oldIndex;
			}
			if(this.selectionRange.length == 0) {
				this.selectionRange = null;
			} else if(this.selectionRange.length < 0) {
				this.selectionRange.start += this.selectionRange.length;
				this.selectionRange.length = -this.selectionRange.length;
			}
			this.selectionSize = 0;
		} else {
			this.selectionRange = null;
		}
	}
	,cutSelection: function() {
		if(this.selectionRange == null) {
			return false;
		}
		this.cursorIndex = this.selectionRange.start;
		var end = this.cursorIndex + this.selectionRange.length;
		this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + HxOverrides.substr(this.text,end,null));
		this.selectionRange = null;
		return true;
	}
	,setState: function(h) {
		this.set_text(h.t);
		this.cursorIndex = h.c;
		this.selectionRange = h.sel;
		if(this.selectionRange != null) {
			this.cursorIndex = this.selectionRange.start + this.selectionRange.length;
		}
	}
	,curHistoryState: function() {
		return { t : this.text, c : this.cursorIndex, sel : this.selectionRange == null ? null : { start : this.selectionRange.start, length : this.selectionRange.length}};
	}
	,beforeChange: function() {
		var t = HxOverrides.now() / 1000;
		if(t - this.lastChange < 1) {
			this.lastChange = t;
			return;
		}
		this.lastChange = t;
		this.undo.push(this.curHistoryState());
		this.redo = [];
		while(this.undo.length > this.maxHistorySize) this.undo.shift();
	}
	,set_text: function(t) {
		h2d_Text.prototype.set_text.call(this,t);
		if(this.cursorIndex > t.length) {
			this.cursorIndex = t.length;
		}
		return t;
	}
	,set_font: function(f) {
		h2d_Text.prototype.set_font.call(this,f);
		this.cursorTile = h2d_Tile.fromColor(16777215,1,this.font.size);
		this.cursorTile.dy = 2;
		this.selectionTile = h2d_Tile.fromColor(3381759,0,Math.ceil(this.font.lineHeight));
		return f;
	}
	,initGlyphs: function(text,rebuild) {
		if(rebuild == null) {
			rebuild = true;
		}
		h2d_Text.prototype.initGlyphs.call(this,text,rebuild);
		if(rebuild) {
			this.calcWidth += this.cursorTile.width;
			if(this.inputWidth != null && this.calcWidth > this.inputWidth) {
				this.calcWidth = this.inputWidth;
			}
		}
	}
	,textPos: function(x,y) {
		x += this.scrollX;
		var pos = 0;
		while(pos < this.text.length) {
			if(this.calcTextWidth(HxOverrides.substr(this.text,0,pos + 1)) > x) {
				break;
			}
			++pos;
		}
		return pos;
	}
	,sync: function(ctx) {
		var tmp = this.inputWidth != null ? this.inputWidth : this.maxWidth != null ? Math.ceil(this.maxWidth) : this.get_textWidth();
		this.interactive.width = tmp;
		this.interactive.height = this.font.lineHeight;
		h2d_Text.prototype.sync.call(this,ctx);
	}
	,draw: function(ctx) {
		if(this.inputWidth != null) {
			var h = this.localToGlobal(new h2d_col_Point(this.inputWidth,this.font.lineHeight));
			ctx.pushRenderZone(this.absX,this.absY,h.x - this.absX,h.y - this.absY);
		}
		if(this.cursorIndex >= 0 && (this.text != this.cursorText || this.cursorIndex != this.cursorXIndex)) {
			if(this.cursorIndex > this.text.length) {
				this.cursorIndex = this.text.length;
			}
			this.cursorText = this.text;
			this.cursorXIndex = this.cursorIndex;
			this.cursorX = this.calcTextWidth(HxOverrides.substr(this.text,0,this.cursorIndex));
			if(this.inputWidth != null && this.cursorX - this.scrollX >= this.inputWidth) {
				this.scrollX = this.cursorX - this.inputWidth + 1;
			} else if(this.cursorX < this.scrollX) {
				this.scrollX = this.cursorX;
			}
		}
		this.absX -= this.scrollX * this.matA;
		this.absY -= this.scrollX * this.matC;
		if(this.selectionRange != null) {
			if(this.selectionSize == 0) {
				this.selectionPos = this.calcTextWidth(HxOverrides.substr(this.text,0,this.selectionRange.start));
				this.selectionSize = this.calcTextWidth(HxOverrides.substr(this.text,this.selectionRange.start,this.selectionRange.length));
				if(this.selectionRange.start + this.selectionRange.length == this.text.length) {
					this.selectionSize += this.cursorTile.width;
				}
			}
			this.selectionTile.dx += this.selectionPos;
			this.selectionTile.width += this.selectionSize;
			this.emitTile(ctx,this.selectionTile);
			this.selectionTile.dx -= this.selectionPos;
			this.selectionTile.width -= this.selectionSize;
		}
		h2d_Text.prototype.draw.call(this,ctx);
		this.absX += this.scrollX * this.matA;
		this.absY += this.scrollX * this.matC;
		if(this.cursorIndex >= 0) {
			this.cursorBlink += ctx.elapsedTime;
			if(this.cursorBlink % (this.cursorBlinkTime * 2) < this.cursorBlinkTime) {
				this.cursorTile.dx += this.cursorX - this.scrollX;
				this.emitTile(ctx,this.cursorTile);
				this.cursorTile.dx -= this.cursorX - this.scrollX;
			}
		}
		if(this.inputWidth != null) {
			ctx.popRenderZone();
		}
	}
	,focus: function() {
		this.interactive.focus();
		if(this.cursorIndex < 0) {
			this.cursorIndex = 0;
			if(this.text != "") {
				this.selectionRange = { start : 0, length : this.text.length};
			}
		}
	}
	,onOut: function(e) {
	}
	,onOver: function(e) {
	}
	,onMove: function(e) {
	}
	,onClick: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onTextInput: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onChange: function() {
	}
	,drawRec: function(ctx) {
		var old = this.interactive.visible;
		this.interactive.set_visible(false);
		this.interactive.draw(ctx);
		h2d_Text.prototype.drawRec.call(this,ctx);
		this.interactive.set_visible(old);
	}
	,__class__: h2d_TextInput
});
var h2d_Tile = function(tex,x,y,w,h,dx,dy) {
	if(dy == null) {
		dy = 0;
	}
	if(dx == null) {
		dx = 0;
	}
	this.innerTex = tex;
	this.x = x;
	this.y = y;
	this.width = w;
	this.height = h;
	this.dx = dx;
	this.dy = dy;
	if(tex != null) {
		this.setTexture(tex);
	}
};
$hxClasses["h2d.Tile"] = h2d_Tile;
h2d_Tile.__name__ = "h2d.Tile";
h2d_Tile.fromColor = function(color,width,height,alpha) {
	if(alpha == null) {
		alpha = 1.;
	}
	if(height == null) {
		height = 1;
	}
	if(width == null) {
		width = 1;
	}
	var t = new h2d_Tile(h3d_mat_Texture.fromColor(color,alpha),0,0,1,1);
	t.width = width;
	t.height = height;
	return t;
};
h2d_Tile.fromTexture = function(t) {
	return new h2d_Tile(t,0,0,t.width,t.height);
};
h2d_Tile.prototype = {
	setTexture: function(tex) {
		this.innerTex = tex;
		if(tex != null) {
			this.u = this.x / tex.width;
			this.v = this.y / tex.height;
			this.u2 = (this.x + this.width) / tex.width;
			this.v2 = (this.y + this.height) / tex.height;
		}
	}
	,sub: function(x,y,w,h,dx,dy) {
		if(dy == null) {
			dy = 0.;
		}
		if(dx == null) {
			dx = 0.;
		}
		return new h2d_Tile(this.innerTex,this.x + x,this.y + y,w,h,dx,dy);
	}
	,flipX: function() {
		var tmp = this.u;
		this.u = this.u2;
		this.u2 = tmp;
		this.dx = -this.dx - this.width;
	}
	,flipY: function() {
		var tmp = this.v;
		this.v = this.v2;
		this.v2 = tmp;
		this.dy = -this.dy - this.height;
	}
	,setPosition: function(x,y) {
		this.x = x;
		this.y = y;
		var tex = this.innerTex;
		if(tex != null) {
			this.u = x / tex.width;
			this.v = y / tex.height;
			this.u2 = (x + this.width) / tex.width;
			this.v2 = (y + this.height) / tex.height;
		}
	}
	,setSize: function(w,h) {
		this.width = w;
		this.height = h;
		var tex = this.innerTex;
		if(tex != null) {
			this.u2 = (this.x + w) / tex.width;
			this.v2 = (this.y + h) / tex.height;
		}
	}
	,scaleToSize: function(w,h) {
		this.width = w;
		this.height = h;
	}
	,clone: function() {
		var t = new h2d_Tile(null,this.x,this.y,this.width,this.height,this.dx,this.dy);
		t.innerTex = this.innerTex;
		t.u = this.u;
		t.u2 = this.u2;
		t.v = this.v;
		t.v2 = this.v2;
		return t;
	}
	,__class__: h2d_Tile
};
var h2d_TileLayerContent = function() {
	this.useAllocator = false;
	h3d_prim_Primitive.call(this);
	this.state = new h2d_impl_BatchDrawState();
	this.clear();
};
$hxClasses["h2d.TileLayerContent"] = h2d_TileLayerContent;
h2d_TileLayerContent.__name__ = "h2d.TileLayerContent";
h2d_TileLayerContent.__super__ = h3d_prim_Primitive;
h2d_TileLayerContent.prototype = $extend(h3d_prim_Primitive.prototype,{
	clear: function() {
		var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
		this.tmp = this1;
		if(this.buffer != null) {
			if(this.useAllocator) {
				hxd_impl_Allocator.get().disposeBuffer(this.buffer);
			} else {
				this.buffer.dispose();
			}
		}
		this.buffer = null;
		this.xMin = Infinity;
		this.yMin = Infinity;
		this.xMax = -Infinity;
		this.yMax = -Infinity;
		this.state.clear();
	}
	,isEmpty: function() {
		return this.triCount() == 0;
	}
	,triCount: function() {
		if(this.buffer == null) {
			return this.tmp.pos >> 4;
		} else {
			return this.buffer.totalVertices() >> 1;
		}
	}
	,add: function(x,y,r,g,b,a,t) {
		var sx = x + t.dx;
		var sy = y + t.dy;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sx;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sy;
		var this1 = this.tmp;
		var v = t.u;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var this1 = this.tmp;
		var v = sx + t.width;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sy;
		var this1 = this.tmp;
		var v = t.u2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sx;
		var this1 = this.tmp;
		var v = sy + t.height;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.u;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var this1 = this.tmp;
		var v = sx + t.width;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = sy + t.height;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.u2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var x1 = x + t.dx;
		var y1 = y + t.dy;
		if(x1 < this.xMin) {
			this.xMin = x1;
		}
		if(y1 < this.yMin) {
			this.yMin = y1;
		}
		x1 += t.width;
		y1 += t.height;
		if(x1 > this.xMax) {
			this.xMax = x1;
		}
		if(y1 > this.yMax) {
			this.yMax = y1;
		}
		if(t != null) {
			this.state.setTexture(t.innerTex);
		}
		var _this = this.state;
		_this.tail.count += 4;
		_this.totalCount += 4;
	}
	,alloc: function(engine) {
		if(this.tmp == null) {
			this.clear();
		}
		if(this.tmp.pos > 0) {
			this.buffer = this.useAllocator ? hxd_impl_Allocator.get().ofFloats(this.tmp,8,3) : h3d_Buffer.ofFloats(this.tmp,8,[h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat]);
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			if(this.useAllocator) {
				hxd_impl_Allocator.get().disposeBuffer(this.buffer);
			} else {
				this.buffer.dispose();
			}
			this.buffer = null;
		}
		h3d_prim_Primitive.prototype.dispose.call(this);
	}
	,__class__: h2d_TileLayerContent
});
var h2d_col_Bounds = function() {
	this.xMin = 1e20;
	this.yMin = 1e20;
	this.xMax = -1e20;
	this.yMax = -1e20;
};
$hxClasses["h2d.col.Bounds"] = h2d_col_Bounds;
h2d_col_Bounds.__name__ = "h2d.col.Bounds";
h2d_col_Bounds.prototype = {
	__class__: h2d_col_Bounds
};
var h2d_col_Collider = function() { };
$hxClasses["h2d.col.Collider"] = h2d_col_Collider;
h2d_col_Collider.__name__ = "h2d.col.Collider";
h2d_col_Collider.__isInterface__ = true;
h2d_col_Collider.prototype = {
	__class__: h2d_col_Collider
};
var h2d_col_Matrix = function() {
	this.a = 1;
	this.b = 0;
	this.c = 0;
	this.d = 1;
	this.x = 0;
	this.y = 0;
};
$hxClasses["h2d.col.Matrix"] = h2d_col_Matrix;
h2d_col_Matrix.__name__ = "h2d.col.Matrix";
h2d_col_Matrix.prototype = {
	__class__: h2d_col_Matrix
};
var h2d_col_Point = function(x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["h2d.col.Point"] = h2d_col_Point;
h2d_col_Point.__name__ = "h2d.col.Point";
h2d_col_Point.prototype = {
	__class__: h2d_col_Point
};
var h2d_filter_Blur = function(radius,gain,quality,linear) {
	if(linear == null) {
		linear = 0.;
	}
	if(quality == null) {
		quality = 1.;
	}
	if(gain == null) {
		gain = 1.;
	}
	if(radius == null) {
		radius = 1.;
	}
	h2d_filter_Filter.call(this);
	this.smooth = true;
	this.pass = new h3d_pass_Blur(radius,gain,linear,quality);
};
$hxClasses["h2d.filter.Blur"] = h2d_filter_Blur;
h2d_filter_Blur.__name__ = "h2d.filter.Blur";
h2d_filter_Blur.__super__ = h2d_filter_Filter;
h2d_filter_Blur.prototype = $extend(h2d_filter_Filter.prototype,{
	sync: function(ctx,s) {
		this.boundsExtend = this.pass.radius * 2;
	}
	,draw: function(ctx,t) {
		var out = t.innerTex;
		var old = out.filter;
		out.set_filter(h3d_mat_Filter.Linear);
		this.pass.apply(ctx,out);
		out.set_filter(old);
		return t;
	}
	,__class__: h2d_filter_Blur
});
var h2d_filter_ColorMatrix = function(m) {
	h2d_filter_Filter.call(this);
	this.pass = new h3d_pass_ColorMatrix(m);
	var _this = this.pass.shader;
	_this.constModified = true;
	_this.useAlpha__ = true;
};
$hxClasses["h2d.filter.ColorMatrix"] = h2d_filter_ColorMatrix;
h2d_filter_ColorMatrix.__name__ = "h2d.filter.ColorMatrix";
h2d_filter_ColorMatrix.__super__ = h2d_filter_Filter;
h2d_filter_ColorMatrix.prototype = $extend(h2d_filter_Filter.prototype,{
	draw: function(ctx,t) {
		var tout = ctx.textures.allocTileTarget("colorMatrixOut",t);
		this.pass.apply(t.innerTex,tout);
		return h2d_Tile.fromTexture(tout);
	}
	,__class__: h2d_filter_ColorMatrix
});
var h2d_impl_BatchDrawState = function() {
	this.head = this.tail = new h2d_impl__$BatchDrawState_StateEntry(null);
	this.totalCount = 0;
};
$hxClasses["h2d.impl.BatchDrawState"] = h2d_impl_BatchDrawState;
h2d_impl_BatchDrawState.__name__ = "h2d.impl.BatchDrawState";
h2d_impl_BatchDrawState.prototype = {
	setTexture: function(texture) {
		if(texture != null) {
			if(this.tail.texture == null) {
				this.tail.texture = texture;
			} else if(this.tail.texture != texture) {
				var cur = this.tail;
				if(cur.next == null) {
					cur.next = this.tail = new h2d_impl__$BatchDrawState_StateEntry(texture);
				} else {
					this.tail = cur.next.set(texture);
				}
			}
		}
	}
	,clear: function() {
		var state = this.head;
		while(true) {
			state.texture = null;
			state = state.next;
			if(!(state != null)) {
				break;
			}
		}
		this.tail = this.head;
		this.tail.count = 0;
		this.totalCount = 0;
	}
	,drawQuads: function(ctx,buffer,offset,length) {
		if(length == null) {
			length = -1;
		}
		if(offset == null) {
			offset = 0;
		}
		var state = this.head;
		var last = this.tail.next;
		var engine = ctx.engine;
		var stateLen;
		if(offset == 0 && length == -1) {
			while(true) {
				ctx.texture = state.texture;
				ctx.beforeDraw();
				stateLen = state.count >> 1;
				var start = offset;
				var max = stateLen;
				if(max == null) {
					max = -1;
				}
				if(start == null) {
					start = 0;
				}
				engine.renderBuffer(buffer,engine.mem.quadIndexes,2,start,max);
				offset += stateLen;
				state = state.next;
				if(!(state != last)) {
					break;
				}
			}
		} else {
			if(length == -1) {
				length = (this.totalCount >> 1) - offset;
			}
			var caret = 0;
			while(true) {
				stateLen = state.count >> 1;
				if(caret + stateLen >= offset) {
					var stateMin = offset >= caret ? offset : caret;
					var stateLen1 = length > stateLen ? stateLen : length;
					ctx.texture = state.texture;
					ctx.beforeDraw();
					var start = stateMin;
					var max = stateLen1;
					if(max == null) {
						max = -1;
					}
					if(start == null) {
						start = 0;
					}
					engine.renderBuffer(buffer,engine.mem.quadIndexes,2,start,max);
					length -= stateLen1;
					if(length == 0) {
						break;
					}
				}
				caret += stateLen;
				state = state.next;
				if(!(state != last)) {
					break;
				}
			}
		}
	}
	,__class__: h2d_impl_BatchDrawState
};
var h2d_impl__$BatchDrawState_StateEntry = function(texture) {
	this.texture = texture;
	this.count = 0;
};
$hxClasses["h2d.impl._BatchDrawState.StateEntry"] = h2d_impl__$BatchDrawState_StateEntry;
h2d_impl__$BatchDrawState_StateEntry.__name__ = "h2d.impl._BatchDrawState.StateEntry";
h2d_impl__$BatchDrawState_StateEntry.prototype = {
	set: function(texture) {
		this.texture = texture;
		this.count = 0;
		return this;
	}
	,__class__: h2d_impl__$BatchDrawState_StateEntry
};
var h3d_BufferFlag = $hxEnums["h3d.BufferFlag"] = { __ename__ : true, __constructs__ : ["Dynamic","Triangles","Quads","Managed","RawFormat","NoAlloc","UniformBuffer","LargeBuffer"]
	,Dynamic: {_hx_index:0,__enum__:"h3d.BufferFlag",toString:$estr}
	,Triangles: {_hx_index:1,__enum__:"h3d.BufferFlag",toString:$estr}
	,Quads: {_hx_index:2,__enum__:"h3d.BufferFlag",toString:$estr}
	,Managed: {_hx_index:3,__enum__:"h3d.BufferFlag",toString:$estr}
	,RawFormat: {_hx_index:4,__enum__:"h3d.BufferFlag",toString:$estr}
	,NoAlloc: {_hx_index:5,__enum__:"h3d.BufferFlag",toString:$estr}
	,UniformBuffer: {_hx_index:6,__enum__:"h3d.BufferFlag",toString:$estr}
	,LargeBuffer: {_hx_index:7,__enum__:"h3d.BufferFlag",toString:$estr}
};
h3d_BufferFlag.__empty_constructs__ = [h3d_BufferFlag.Dynamic,h3d_BufferFlag.Triangles,h3d_BufferFlag.Quads,h3d_BufferFlag.Managed,h3d_BufferFlag.RawFormat,h3d_BufferFlag.NoAlloc,h3d_BufferFlag.UniformBuffer,h3d_BufferFlag.LargeBuffer];
var h3d_Buffer = function(vertices,stride,flags) {
	this.id = h3d_Buffer.GUID++;
	this.vertices = vertices;
	var this1 = 0;
	this.flags = this1;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f._hx_index;
		}
	}
	if((this.flags & 1 << h3d_BufferFlag.NoAlloc._hx_index) == 0) {
		h3d_Engine.CURRENT.mem.allocBuffer(this,stride);
	}
};
$hxClasses["h3d.Buffer"] = h3d_Buffer;
h3d_Buffer.__name__ = "h3d.Buffer";
h3d_Buffer.ofFloats = function(v,stride,flags) {
	var nvert = v.pos / stride | 0;
	var b = new h3d_Buffer(nvert,stride,flags);
	b.uploadVector(v,0,nvert);
	return b;
};
h3d_Buffer.ofSubFloats = function(v,stride,vertices,flags) {
	var b = new h3d_Buffer(vertices,stride,flags);
	b.uploadVector(v,0,vertices);
	return b;
};
h3d_Buffer.prototype = {
	isDisposed: function() {
		if(this.buffer != null) {
			return this.buffer.vbuf == null;
		} else {
			return true;
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			this.buffer.freeBuffer(this);
			this.buffer = null;
			if(this.next != null) {
				this.next.dispose();
			}
		}
	}
	,totalVertices: function() {
		var count = 0;
		var b = this;
		while(b != null) {
			count += b.vertices;
			b = b.next;
		}
		return count;
	}
	,uploadVector: function(buf,bufPos,vertices,startVertice) {
		if(startVertice == null) {
			startVertice = 0;
		}
		var cur = this;
		while(cur != null && startVertice >= cur.vertices) {
			startVertice -= cur.vertices;
			cur = cur.next;
		}
		while(vertices > 0) {
			if(cur == null) {
				throw haxe_Exception.thrown("Too many vertices");
			}
			var count = vertices + startVertice > cur.vertices ? cur.vertices - startVertice : vertices;
			cur.buffer.uploadVertexBuffer(cur.position + startVertice,count,buf,bufPos);
			startVertice = 0;
			bufPos += count * this.buffer.stride;
			vertices -= count;
			cur = cur.next;
		}
	}
	,__class__: h3d_Buffer
};
var h3d_Camera = function(fovY,zoom,screenRatio,zNear,zFar,rightHanded) {
	if(rightHanded == null) {
		rightHanded = false;
	}
	if(zFar == null) {
		zFar = 4000.;
	}
	if(zNear == null) {
		zNear = 0.02;
	}
	if(screenRatio == null) {
		screenRatio = 1.333333;
	}
	if(zoom == null) {
		zoom = 1.;
	}
	if(fovY == null) {
		fovY = 25.;
	}
	this.viewY = 0.;
	this.viewX = 0.;
	this.fovY = fovY;
	this.zoom = zoom;
	this.screenRatio = screenRatio;
	this.zNear = zNear;
	this.zFar = zFar;
	this.rightHanded = rightHanded;
	this.pos = new h3d_Vector(2,3,4);
	this.up = new h3d_Vector(0,0,1);
	this.target = new h3d_Vector(0,0,0);
	this.m = new h3d_Matrix();
	this.mcam = new h3d_Matrix();
	this.mproj = new h3d_Matrix();
	this.frustum = new h3d_col_Frustum();
	this.update();
};
$hxClasses["h3d.Camera"] = h3d_Camera;
h3d_Camera.__name__ = "h3d.Camera";
h3d_Camera.prototype = {
	getInverseViewProj: function() {
		if(this.minv == null) {
			this.minv = new h3d_Matrix();
		}
		if(this.needInv) {
			this.minv.initInverse(this.m);
			this.needInv = false;
		}
		return this.minv;
	}
	,unproject: function(screenX,screenY,camZ) {
		var p = new h3d_Vector(screenX,screenY,camZ);
		var m = this.getInverseViewProj();
		var px = p.x * m._11 + p.y * m._21 + p.z * m._31 + p.w * m._41;
		var py = p.x * m._12 + p.y * m._22 + p.z * m._32 + p.w * m._42;
		var pz = p.x * m._13 + p.y * m._23 + p.z * m._33 + p.w * m._43;
		var iw = 1 / (p.x * m._14 + p.y * m._24 + p.z * m._34 + p.w * m._44);
		p.x = px * iw;
		p.y = py * iw;
		p.z = pz * iw;
		p.w = 1;
		return p;
	}
	,update: function() {
		if(this.follow != null) {
			var _this = this.pos;
			var x = 0;
			var y = 0;
			var z = 0;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.;
			var _this = this.target;
			var x = 0;
			var y = 0;
			var z = 0;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.;
			this.follow.pos.localToGlobal(this.pos);
			this.follow.target.localToGlobal(this.target);
			if(this.follow.pos.name != null) {
				var p = this.follow.pos;
				while(p != null) {
					if(p.currentAnimation != null) {
						var v = p.currentAnimation.getPropValue(this.follow.pos.name,"FOVY");
						if(v != null) {
							this.fovY = v;
							break;
						}
					}
					p = p.parent;
				}
			}
		}
		this.makeCameraMatrix(this.mcam);
		this.makeFrustumMatrix(this.mproj);
		this.m.multiply(this.mcam,this.mproj);
		this.needInv = true;
		if(this.mcamInv != null) {
			this.mcamInv._44 = 0;
		}
		if(this.mprojInv != null) {
			this.mprojInv._44 = 0;
		}
		this.frustum.loadMatrix(this.m);
	}
	,getFrustumCorners: function(zMax,zMin) {
		if(zMin == null) {
			zMin = 0.;
		}
		if(zMax == null) {
			zMax = 1.;
		}
		return [this.unproject(-1,1,zMin),this.unproject(1,1,zMin),this.unproject(1,-1,zMin),this.unproject(-1,-1,zMin),this.unproject(-1,1,zMax),this.unproject(1,1,zMax),this.unproject(1,-1,zMax),this.unproject(-1,-1,zMax)];
	}
	,makeCameraMatrix: function(m) {
		var _this = this.target;
		var v = this.pos;
		var x = _this.x - v.x;
		var y = _this.y - v.y;
		var z = _this.z - v.z;
		var w = _this.w - v.w;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var az_x = x;
		var az_y = y;
		var az_z = z;
		var az_w = w;
		if(this.rightHanded) {
			az_x *= -1;
			az_y *= -1;
			az_z *= -1;
		}
		var k = az_x * az_x + az_y * az_y + az_z * az_z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		az_x *= k;
		az_y *= k;
		az_z *= k;
		var _this = this.up;
		var x = _this.y * az_z - _this.z * az_y;
		var y = _this.z * az_x - _this.x * az_z;
		var z = _this.x * az_y - _this.y * az_x;
		var w = 1;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var ax_x = x;
		var ax_y = y;
		var ax_z = z;
		var ax_w = w;
		var k = ax_x * ax_x + ax_y * ax_y + ax_z * ax_z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		ax_x *= k;
		ax_y *= k;
		ax_z *= k;
		if(Math.sqrt(ax_x * ax_x + ax_y * ax_y + ax_z * ax_z) == 0) {
			ax_x = az_y;
			ax_y = az_z;
			ax_z = az_x;
		}
		var x = az_y * ax_z - az_z * ax_y;
		var y = az_z * ax_x - az_x * ax_z;
		var z = az_x * ax_y - az_y * ax_x;
		var w = 1;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var ay_x = x;
		var ay_y = y;
		var ay_z = z;
		var ay_w = w;
		m._11 = ax_x;
		m._12 = ay_x;
		m._13 = az_x;
		m._14 = 0;
		m._21 = ax_y;
		m._22 = ay_y;
		m._23 = az_y;
		m._24 = 0;
		m._31 = ax_z;
		m._32 = ay_z;
		m._33 = az_z;
		m._34 = 0;
		var v = this.pos;
		m._41 = -(ax_x * v.x + ax_y * v.y + ax_z * v.z);
		var v = this.pos;
		m._42 = -(ay_x * v.x + ay_y * v.y + ay_z * v.z);
		var v = this.pos;
		m._43 = -(az_x * v.x + az_y * v.y + az_z * v.z);
		m._44 = 1;
	}
	,makeFrustumMatrix: function(m) {
		m.zero();
		var bounds = this.orthoBounds;
		if(bounds != null) {
			var w = 1 / (bounds.xMax - bounds.xMin);
			var h = 1 / (bounds.yMax - bounds.yMin);
			var d = 1 / (bounds.zMax - bounds.zMin);
			m._11 = 2 * w;
			m._22 = 2 * h;
			m._33 = d;
			m._41 = -(bounds.xMin + bounds.xMax) * w;
			m._42 = -(bounds.yMin + bounds.yMax) * h;
			m._43 = -bounds.zMin * d;
			m._44 = 1;
		} else {
			var degToRad = Math.PI / 180;
			var halfFovX = Math.atan(Math.tan(this.fovY * 0.5 * degToRad) * this.screenRatio);
			var scale = this.zoom / Math.tan(halfFovX);
			m._11 = scale;
			m._22 = scale * this.screenRatio;
			m._33 = this.zFar / (this.zFar - this.zNear);
			m._34 = 1;
			m._43 = -(this.zNear * this.zFar) / (this.zFar - this.zNear);
		}
		m._11 += this.viewX * m._14;
		m._21 += this.viewX * m._24;
		m._31 += this.viewX * m._34;
		m._41 += this.viewX * m._44;
		m._12 += this.viewY * m._14;
		m._22 += this.viewY * m._24;
		m._32 += this.viewY * m._34;
		m._42 += this.viewY * m._44;
		if(this.rightHanded) {
			m._33 *= -1;
			m._34 *= -1;
		}
	}
	,__class__: h3d_Camera
};
var h3d__$Engine_TargetTmp = function(t,n,l,m) {
	this.t = t;
	this.next = n;
	this.layer = l;
	this.mipLevel = m;
};
$hxClasses["h3d._Engine.TargetTmp"] = h3d__$Engine_TargetTmp;
h3d__$Engine_TargetTmp.__name__ = "h3d._Engine.TargetTmp";
h3d__$Engine_TargetTmp.prototype = {
	__class__: h3d__$Engine_TargetTmp
};
var h3d_Engine = function() {
	this.resCache = new haxe_ds_ObjectMap();
	this.ready = false;
	this.textureColorCache = new haxe_ds_IntMap();
	this.tmpVector = new h3d_Vector();
	this.backgroundColor = -16777216;
	this.hardware = !h3d_Engine.SOFTWARE_DRIVER;
	this.antiAlias = h3d_Engine.ANTIALIASING;
	this.autoResize = true;
	this.set_fullScreen(!hxd_System.getValue(hxd_SystemValue.IsWindowed));
	this.window = hxd_Window.getInstance();
	this.realFps = hxd_System.getDefaultFrameRate();
	this.lastTime = HxOverrides.now() / 1000;
	this.window.addResizeEvent($bind(this,this.onWindowResize));
	this.driver = new h3d_impl_GlDriver(this.antiAlias);
	h3d_Engine.CURRENT = this;
};
$hxClasses["h3d.Engine"] = h3d_Engine;
h3d_Engine.__name__ = "h3d.Engine";
h3d_Engine.prototype = {
	init: function() {
		this.driver.init($bind(this,this.onCreate),!this.hardware);
	}
	,selectShader: function(shader) {
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		if(this.driver.selectShader(shader)) {
			this.shaderSwitches++;
		}
	}
	,selectMaterial: function(pass) {
		this.driver.selectMaterial(pass);
	}
	,uploadShaderBuffers: function(buffers,which) {
		this.driver.uploadShaderBuffers(buffers,which);
	}
	,selectBuffer: function(buf) {
		if(buf.isDisposed()) {
			return false;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.selectBuffer(buf);
		return true;
	}
	,renderBuffer: function(b,indexes,vertPerTri,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		if(indexes.isDisposed()) {
			return;
		}
		while(true) {
			var ntri = b.vertices / vertPerTri | 0;
			var pos = b.position / vertPerTri | 0;
			if(startTri > 0) {
				if(startTri >= ntri) {
					startTri -= ntri;
					b = b.next;
					if(!(b != null)) {
						break;
					} else {
						continue;
					}
				}
				pos += startTri;
				ntri -= startTri;
				startTri = 0;
			}
			if(drawTri >= 0) {
				if(drawTri == 0) {
					return;
				}
				drawTri -= ntri;
				if(drawTri < 0) {
					ntri += drawTri;
					drawTri = 0;
				}
			}
			if(ntri > 0 && this.selectBuffer(b)) {
				this.driver.draw(indexes.ibuf,pos * 3,ntri);
				this.drawTriangles += ntri;
				this.drawCalls++;
			}
			b = b.next;
			if(!(b != null)) {
				break;
			}
		}
	}
	,renderIndexed: function(b,indexes,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		if(b.next != null) {
			throw haxe_Exception.thrown("Buffer is split");
		}
		if(indexes.isDisposed()) {
			return;
		}
		var maxTri = indexes.count / 3 | 0;
		if(drawTri < 0) {
			drawTri = maxTri - startTri;
		}
		if(drawTri > 0 && this.selectBuffer(b)) {
			this.driver.draw(indexes.ibuf,startTri * 3,drawTri);
			this.drawTriangles += drawTri;
			this.drawCalls++;
		}
	}
	,set_debug: function(d) {
		this.debug = d;
		this.driver.setDebug(this.debug);
		return d;
	}
	,onCreate: function(disposed) {
		h3d_Engine.CURRENT = this;
		if(this.autoResize) {
			this.width = this.window.get_width();
			this.height = this.window.get_height();
		}
		if(disposed) {
			hxd_impl_Allocator.get().onContextLost();
			this.mem.onContextLost();
		} else {
			this.mem = new h3d_impl_MemoryManager(this.driver);
			this.mem.init();
			this.nullTexture = new h3d_mat_Texture(0,0,[h3d_mat_TextureFlags.NoAlloc]);
		}
		this.hardware = this.driver.hasFeature(h3d_impl_Feature.HardwareAccelerated);
		this.set_debug(this.debug);
		this.set_fullScreen(this.fullScreen);
		this.resize(this.width,this.height);
		if(disposed) {
			this.onContextLost();
		} else {
			this.onReady();
		}
		this.ready = true;
	}
	,onContextLost: function() {
	}
	,onReady: function() {
	}
	,onWindowResize: function() {
		if(this.autoResize && !this.driver.isDisposed()) {
			var w = this.window.get_width();
			var h = this.window.get_height();
			if(w != this.width || h != this.height) {
				this.resize(w,h);
			}
			this.onResized();
		}
	}
	,set_fullScreen: function(v) {
		this.fullScreen = v;
		if(this.mem != null && hxd_System.getValue(hxd_SystemValue.IsWindowed)) {
			this.window.set_displayMode(v ? hxd_DisplayMode.Borderless : hxd_DisplayMode.Windowed);
		}
		return v;
	}
	,onResized: function() {
	}
	,resize: function(width,height) {
		if(width < 32) {
			width = 32;
		}
		if(height < 32) {
			height = 32;
		}
		this.width = width;
		this.height = height;
		if(!this.driver.isDisposed()) {
			this.driver.resize(width,height);
		}
	}
	,begin: function() {
		if(this.driver.isDisposed()) {
			return false;
		}
		this.drawTriangles = 0;
		this.shaderSwitches = 0;
		this.drawCalls = 0;
		this.targetStack = null;
		this.needFlushTarget = this.currentTargetTex != null;
		this.driver.begin(hxd_Timer.frameCount);
		if(this.backgroundColor != null) {
			this.clear(this.backgroundColor,1,0);
		}
		return true;
	}
	,end: function() {
		this.driver.end();
	}
	,getCurrentTarget: function() {
		if(this.targetStack == null) {
			return null;
		} else {
			return this.targetStack.t;
		}
	}
	,pushTarget: function(tex,layer,mipLevel) {
		if(mipLevel == null) {
			mipLevel = 0;
		}
		if(layer == null) {
			layer = 0;
		}
		var c = this.targetTmp;
		if(c == null) {
			c = new h3d__$Engine_TargetTmp(tex,this.targetStack,layer,mipLevel);
		} else {
			this.targetTmp = c.next;
			c.t = tex;
			c.next = this.targetStack;
			c.mipLevel = mipLevel;
			c.layer = layer;
		}
		this.targetStack = c;
		this.updateNeedFlush();
	}
	,updateNeedFlush: function() {
		var t = this.targetStack;
		if(t == null) {
			this.needFlushTarget = this.currentTargetTex != null;
		} else {
			this.needFlushTarget = this.currentTargetTex != t.t || this.currentTargetLayer != t.layer || this.currentTargetMip != t.mipLevel || t.textures != null;
		}
	}
	,popTarget: function() {
		var c = this.targetStack;
		if(c == null) {
			throw haxe_Exception.thrown("popTarget() with no matching pushTarget()");
		}
		this.targetStack = c.next;
		this.updateNeedFlush();
		c.t = null;
		c.textures = null;
		c.next = this.targetTmp;
		this.targetTmp = c;
	}
	,doFlushTarget: function() {
		var t = this.targetStack;
		if(t == null) {
			this.driver.setRenderTarget(null);
			this.currentTargetTex = null;
		} else {
			if(t.textures != null) {
				this.driver.setRenderTargets(t.textures);
			} else {
				this.driver.setRenderTarget(t.t,t.layer,t.mipLevel);
			}
			this.currentTargetTex = t.t;
			this.currentTargetLayer = t.layer;
			this.currentTargetMip = t.mipLevel;
		}
		this.needFlushTarget = false;
	}
	,clear: function(color,depth,stencil) {
		if(color != null) {
			var _this = this.tmpVector;
			_this.x = (color >> 16 & 255) / 255;
			_this.y = (color >> 8 & 255) / 255;
			_this.z = (color & 255) / 255;
			_this.w = (color >>> 24) / 255;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.clear(color == null ? null : this.tmpVector,depth,stencil);
	}
	,setRenderZone: function(x,y,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.setRenderZone(x,y,width,height);
	}
	,render: function(obj) {
		if(!this.begin()) {
			return false;
		}
		obj.render(this);
		this.end();
		var delta = HxOverrides.now() / 1000 - this.lastTime;
		this.lastTime += delta;
		if(delta > 0) {
			var curFps = 1. / delta;
			if(curFps > this.realFps * 2) {
				curFps = this.realFps * 2;
			} else if(curFps < this.realFps * 0.5) {
				curFps = this.realFps * 0.5;
			}
			var f = delta / .5;
			if(f > 0.3) {
				f = 0.3;
			}
			this.realFps = this.realFps * (1 - f) + curFps * f;
		}
		return true;
	}
	,__class__: h3d_Engine
};
var h3d_Indexes = function(count,is32) {
	if(is32 == null) {
		is32 = false;
	}
	this.mem = h3d_Engine.CURRENT.mem;
	this.count = count;
	this.is32 = is32;
	this.mem.allocIndexes(this);
};
$hxClasses["h3d.Indexes"] = h3d_Indexes;
h3d_Indexes.__name__ = "h3d.Indexes";
h3d_Indexes.alloc = function(i,startPos,length) {
	if(length == null) {
		length = -1;
	}
	if(startPos == null) {
		startPos = 0;
	}
	if(length < 0) {
		length = i.length;
	}
	var idx = new h3d_Indexes(length);
	idx.upload(i,0,length);
	return idx;
};
h3d_Indexes.prototype = {
	isDisposed: function() {
		return this.ibuf == null;
	}
	,upload: function(indexes,pos,count,bufferPos) {
		if(bufferPos == null) {
			bufferPos = 0;
		}
		this.mem.driver.uploadIndexBuffer(this.ibuf,pos,count,indexes,bufferPos);
	}
	,dispose: function() {
		if(this.ibuf != null) {
			this.mem.deleteIndexes(this);
		}
	}
	,__class__: h3d_Indexes
};
var h3d_Matrix = function() {
};
$hxClasses["h3d.Matrix"] = h3d_Matrix;
h3d_Matrix.__name__ = "h3d.Matrix";
h3d_Matrix.I = function() {
	var m = new h3d_Matrix();
	m.identity();
	return m;
};
h3d_Matrix.L = function(a) {
	var m = new h3d_Matrix();
	m.loadValues(a);
	return m;
};
h3d_Matrix.prototype = {
	zero: function() {
		this._11 = 0.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 0.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 0.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 0.0;
	}
	,identity: function() {
		this._11 = 1.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 1.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 1.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,multiply3x4: function(a,b) {
		var m11 = a._11;
		var m12 = a._12;
		var m13 = a._13;
		var m21 = a._21;
		var m22 = a._22;
		var m23 = a._23;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		this._11 = m11 * b11 + m12 * b21 + m13 * b31;
		this._12 = m11 * b12 + m12 * b22 + m13 * b32;
		this._13 = m11 * b13 + m12 * b23 + m13 * b33;
		this._14 = 0;
		this._21 = m21 * b11 + m22 * b21 + m23 * b31;
		this._22 = m21 * b12 + m22 * b22 + m23 * b32;
		this._23 = m21 * b13 + m22 * b23 + m23 * b33;
		this._24 = 0;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33;
		this._34 = 0;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
		this._44 = 1;
	}
	,multiply: function(a,b) {
		var a11 = a._11;
		var a12 = a._12;
		var a13 = a._13;
		var a14 = a._14;
		var a21 = a._21;
		var a22 = a._22;
		var a23 = a._23;
		var a24 = a._24;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a34 = a._34;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var a44 = a._44;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b14 = b._14;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b24 = b._24;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b34 = b._34;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		var b44 = b._44;
		this._11 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this._12 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this._13 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this._14 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this._21 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this._22 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this._23 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this._24 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this._34 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this._44 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
	}
	,inverse3x4: function(m) {
		var m11 = m._11;
		var m12 = m._12;
		var m13 = m._13;
		var m21 = m._21;
		var m22 = m._22;
		var m23 = m._23;
		var m31 = m._31;
		var m32 = m._32;
		var m33 = m._33;
		var m41 = m._41;
		var m42 = m._42;
		var m43 = m._43;
		this._11 = m22 * m33 - m23 * m32;
		this._12 = m13 * m32 - m12 * m33;
		this._13 = m12 * m23 - m13 * m22;
		this._14 = 0;
		this._21 = m23 * m31 - m21 * m33;
		this._22 = m11 * m33 - m13 * m31;
		this._23 = m13 * m21 - m11 * m23;
		this._24 = 0;
		this._31 = m21 * m32 - m22 * m31;
		this._32 = m12 * m31 - m11 * m32;
		this._33 = m11 * m22 - m12 * m21;
		this._34 = 0;
		this._41 = -m21 * m32 * m43 + m21 * m33 * m42 + m31 * m22 * m43 - m31 * m23 * m42 - m41 * m22 * m33 + m41 * m23 * m32;
		this._42 = m11 * m32 * m43 - m11 * m33 * m42 - m31 * m12 * m43 + m31 * m13 * m42 + m41 * m12 * m33 - m41 * m13 * m32;
		this._43 = -m11 * m22 * m43 + m11 * m23 * m42 + m21 * m12 * m43 - m21 * m13 * m42 - m41 * m12 * m23 + m41 * m13 * m22;
		this._44 = m11 * m22 * m33 - m11 * m23 * m32 - m21 * m12 * m33 + m21 * m13 * m32 + m31 * m12 * m23 - m31 * m13 * m22;
		this._44 = 1;
		var det = m11 * this._11 + m12 * this._21 + m13 * this._31;
		if((det < 0 ? -det : det) < 1e-10) {
			this.zero();
			return;
		}
		var invDet = 1.0 / det;
		this._11 *= invDet;
		this._12 *= invDet;
		this._13 *= invDet;
		this._21 *= invDet;
		this._22 *= invDet;
		this._23 *= invDet;
		this._31 *= invDet;
		this._32 *= invDet;
		this._33 *= invDet;
		this._41 *= invDet;
		this._42 *= invDet;
		this._43 *= invDet;
	}
	,initInverse: function(m) {
		var m11 = m._11;
		var m12 = m._12;
		var m13 = m._13;
		var m14 = m._14;
		var m21 = m._21;
		var m22 = m._22;
		var m23 = m._23;
		var m24 = m._24;
		var m31 = m._31;
		var m32 = m._32;
		var m33 = m._33;
		var m34 = m._34;
		var m41 = m._41;
		var m42 = m._42;
		var m43 = m._43;
		var m44 = m._44;
		this._11 = m22 * m33 * m44 - m22 * m34 * m43 - m32 * m23 * m44 + m32 * m24 * m43 + m42 * m23 * m34 - m42 * m24 * m33;
		this._12 = -m12 * m33 * m44 + m12 * m34 * m43 + m32 * m13 * m44 - m32 * m14 * m43 - m42 * m13 * m34 + m42 * m14 * m33;
		this._13 = m12 * m23 * m44 - m12 * m24 * m43 - m22 * m13 * m44 + m22 * m14 * m43 + m42 * m13 * m24 - m42 * m14 * m23;
		this._14 = -m12 * m23 * m34 + m12 * m24 * m33 + m22 * m13 * m34 - m22 * m14 * m33 - m32 * m13 * m24 + m32 * m14 * m23;
		this._21 = -m21 * m33 * m44 + m21 * m34 * m43 + m31 * m23 * m44 - m31 * m24 * m43 - m41 * m23 * m34 + m41 * m24 * m33;
		this._22 = m11 * m33 * m44 - m11 * m34 * m43 - m31 * m13 * m44 + m31 * m14 * m43 + m41 * m13 * m34 - m41 * m14 * m33;
		this._23 = -m11 * m23 * m44 + m11 * m24 * m43 + m21 * m13 * m44 - m21 * m14 * m43 - m41 * m13 * m24 + m41 * m14 * m23;
		this._24 = m11 * m23 * m34 - m11 * m24 * m33 - m21 * m13 * m34 + m21 * m14 * m33 + m31 * m13 * m24 - m31 * m14 * m23;
		this._31 = m21 * m32 * m44 - m21 * m34 * m42 - m31 * m22 * m44 + m31 * m24 * m42 + m41 * m22 * m34 - m41 * m24 * m32;
		this._32 = -m11 * m32 * m44 + m11 * m34 * m42 + m31 * m12 * m44 - m31 * m14 * m42 - m41 * m12 * m34 + m41 * m14 * m32;
		this._33 = m11 * m22 * m44 - m11 * m24 * m42 - m21 * m12 * m44 + m21 * m14 * m42 + m41 * m12 * m24 - m41 * m14 * m22;
		this._34 = -m11 * m22 * m34 + m11 * m24 * m32 + m21 * m12 * m34 - m21 * m14 * m32 - m31 * m12 * m24 + m31 * m14 * m22;
		this._41 = -m21 * m32 * m43 + m21 * m33 * m42 + m31 * m22 * m43 - m31 * m23 * m42 - m41 * m22 * m33 + m41 * m23 * m32;
		this._42 = m11 * m32 * m43 - m11 * m33 * m42 - m31 * m12 * m43 + m31 * m13 * m42 + m41 * m12 * m33 - m41 * m13 * m32;
		this._43 = -m11 * m22 * m43 + m11 * m23 * m42 + m21 * m12 * m43 - m21 * m13 * m42 - m41 * m12 * m23 + m41 * m13 * m22;
		this._44 = m11 * m22 * m33 - m11 * m23 * m32 - m21 * m12 * m33 + m21 * m13 * m32 + m31 * m12 * m23 - m31 * m13 * m22;
		var det = m11 * this._11 + m12 * this._21 + m13 * this._31 + m14 * this._41;
		if((det < 0 ? -det : det) < 1e-10) {
			this.zero();
			return;
		}
		det = 1.0 / det;
		this._11 *= det;
		this._12 *= det;
		this._13 *= det;
		this._14 *= det;
		this._21 *= det;
		this._22 *= det;
		this._23 *= det;
		this._24 *= det;
		this._31 *= det;
		this._32 *= det;
		this._33 *= det;
		this._34 *= det;
		this._41 *= det;
		this._42 *= det;
		this._43 *= det;
		this._44 *= det;
	}
	,load: function(m) {
		this._11 = m._11;
		this._12 = m._12;
		this._13 = m._13;
		this._14 = m._14;
		this._21 = m._21;
		this._22 = m._22;
		this._23 = m._23;
		this._24 = m._24;
		this._31 = m._31;
		this._32 = m._32;
		this._33 = m._33;
		this._34 = m._34;
		this._41 = m._41;
		this._42 = m._42;
		this._43 = m._43;
		this._44 = m._44;
	}
	,loadValues: function(a) {
		this._11 = a[0];
		this._12 = a[1];
		this._13 = a[2];
		this._14 = a[3];
		this._21 = a[4];
		this._22 = a[5];
		this._23 = a[6];
		this._24 = a[7];
		this._31 = a[8];
		this._32 = a[9];
		this._33 = a[10];
		this._34 = a[11];
		this._41 = a[12];
		this._42 = a[13];
		this._43 = a[14];
		this._44 = a[15];
	}
	,__class__: h3d_Matrix
};
var h3d_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["h3d.Quat"] = h3d_Quat;
h3d_Quat.__name__ = "h3d.Quat";
h3d_Quat.prototype = {
	toMatrix: function(m) {
		if(m == null) {
			m = new h3d_Matrix();
		}
		var xx = this.x * this.x;
		var xy = this.x * this.y;
		var xz = this.x * this.z;
		var xw = this.x * this.w;
		var yy = this.y * this.y;
		var yz = this.y * this.z;
		var yw = this.y * this.w;
		var zz = this.z * this.z;
		var zw = this.z * this.w;
		m._11 = 1 - 2 * (yy + zz);
		m._12 = 2 * (xy + zw);
		m._13 = 2 * (xz - yw);
		m._14 = 0;
		m._21 = 2 * (xy - zw);
		m._22 = 1 - 2 * (xx + zz);
		m._23 = 2 * (yz + xw);
		m._24 = 0;
		m._31 = 2 * (xz + yw);
		m._32 = 2 * (yz - xw);
		m._33 = 1 - 2 * (xx + yy);
		m._34 = 0;
		m._41 = 0;
		m._42 = 0;
		m._43 = 0;
		m._44 = 1;
		return m;
	}
	,__class__: h3d_Quat
};
var h3d_Vector = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["h3d.Vector"] = h3d_Vector;
h3d_Vector.__name__ = "h3d.Vector";
h3d_Vector.prototype = {
	__class__: h3d_Vector
};
var h3d_anim_AnimatedObject = function() { };
$hxClasses["h3d.anim.AnimatedObject"] = h3d_anim_AnimatedObject;
h3d_anim_AnimatedObject.__name__ = "h3d.anim.AnimatedObject";
var h3d_anim_Animation = function(name,frameCount,sampling) {
	this.name = name;
	this.frameCount = frameCount;
	this.sampling = sampling;
	this.objects = [];
	this.lastEvent = -1;
	this.frame = 0.;
	this.speed = 1.;
	this.loop = true;
	this.pause = false;
};
$hxClasses["h3d.anim.Animation"] = h3d_anim_Animation;
h3d_anim_Animation.__name__ = "h3d.anim.Animation";
h3d_anim_Animation.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_anim_Animation.prototype = {
	getPropValue: function(objectName,propName) {
		return null;
	}
	,sync: function(decompose) {
		if(decompose == null) {
			decompose = false;
		}
		throw haxe_Exception.thrown("assert");
	}
	,isPlaying: function() {
		if(!this.pause) {
			return (this.speed < 0 ? -this.speed : this.speed) > 0.000001;
		} else {
			return false;
		}
	}
	,endFrame: function() {
		return this.frameCount;
	}
	,update: function(dt) {
		if(!this.isInstance) {
			throw haxe_Exception.thrown("You must instanciate this animation first");
		}
		if(!this.isPlaying()) {
			return 0;
		}
		if(this.events != null && this.onEvent != null) {
			var f0 = this.frame | 0;
			var f1 = this.frame + dt * this.speed * this.sampling | 0;
			if(f1 >= this.frameCount) {
				f1 = this.frameCount - 1;
			}
			var _g = f0;
			var _g1 = f1 + 1;
			while(_g < _g1) {
				var f = _g++;
				if(f == this.lastEvent) {
					continue;
				}
				this.lastEvent = f;
				if(this.events[f] != null) {
					var oldF = this.frame;
					var oldDT = dt;
					dt -= (f - this.frame) / (this.speed * this.sampling);
					this.frame = f;
					var _g2 = 0;
					var _g3 = this.events[f];
					while(_g2 < _g3.length) {
						var e = _g3[_g2];
						++_g2;
						this.onEvent(e);
					}
					if(this.frame == f && f == this.frameCount - 1) {
						this.frame = oldF;
						dt = oldDT;
						break;
					} else {
						return dt;
					}
				}
			}
		}
		if(this.onAnimEnd != null) {
			var end = this.endFrame();
			var et = this.speed == 0 ? 0 : (end - this.frame) / (this.speed * this.sampling);
			if(et <= dt && et > 0) {
				this.frame = end;
				dt -= et;
				this.onAnimEnd();
				if(this.frame == end && this.isPlaying()) {
					if(this.loop) {
						this.frame = 0;
					} else {
						dt = 0;
					}
				}
				return dt;
			}
		}
		this.frame += dt * this.speed * this.sampling;
		if(this.frame >= this.frameCount) {
			if(this.loop) {
				this.frame %= this.frameCount;
			} else {
				this.frame = this.frameCount;
			}
		}
		return 0;
	}
	,__class__: h3d_anim_Animation
};
var h3d_col_Collider = function() { };
$hxClasses["h3d.col.Collider"] = h3d_col_Collider;
h3d_col_Collider.__name__ = "h3d.col.Collider";
h3d_col_Collider.__isInterface__ = true;
h3d_col_Collider.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_col_Collider.prototype = {
	__class__: h3d_col_Collider
};
var h3d_col_Bounds = function() {
	this.xMin = 1e20;
	this.xMax = -1e20;
	this.yMin = 1e20;
	this.yMax = -1e20;
	this.zMin = 1e20;
	this.zMax = -1e20;
};
$hxClasses["h3d.col.Bounds"] = h3d_col_Bounds;
h3d_col_Bounds.__name__ = "h3d.col.Bounds";
h3d_col_Bounds.__interfaces__ = [h3d_col_Collider];
h3d_col_Bounds.prototype = {
	inFrustum: function(f,m) {
		if(m != null) {
			throw haxe_Exception.thrown("Not implemented");
		}
		return f.hasBounds(this);
	}
	,rayIntersection: function(r,bestMatch) {
		var minTx = (this.xMin - r.px) / r.lx;
		var minTy = (this.yMin - r.py) / r.ly;
		var minTz = (this.zMin - r.pz) / r.lz;
		var maxTx = (this.xMax - r.px) / r.lx;
		var maxTy = (this.yMax - r.py) / r.ly;
		var maxTz = (this.zMax - r.pz) / r.lz;
		var realMinTx = minTx > maxTx ? maxTx : minTx;
		var realMinTy = minTy > maxTy ? maxTy : minTy;
		var realMinTz = minTz > maxTz ? maxTz : minTz;
		var realMaxTx = minTx < maxTx ? maxTx : minTx;
		var realMaxTy = minTy < maxTy ? maxTy : minTy;
		var realMaxTz = minTz < maxTz ? maxTz : minTz;
		var a = realMaxTx > realMaxTy ? realMaxTy : realMaxTx;
		var minmax = a > realMaxTz ? realMaxTz : a;
		var a = realMinTx < realMinTy ? realMinTy : realMinTx;
		var maxmin = a < realMinTz ? realMinTz : a;
		if(minmax < maxmin) {
			return -1;
		}
		return maxmin;
	}
	,intersection: function(a,b) {
		var a1 = a.xMin;
		var b1 = b.xMin;
		var xMin = a1 < b1 ? b1 : a1;
		var a1 = a.yMin;
		var b1 = b.yMin;
		var yMin = a1 < b1 ? b1 : a1;
		var a1 = a.zMin;
		var b1 = b.zMin;
		var zMin = a1 < b1 ? b1 : a1;
		var a1 = a.xMax;
		var b1 = b.xMax;
		var xMax = a1 > b1 ? b1 : a1;
		var a1 = a.yMax;
		var b1 = b.yMax;
		var yMax = a1 > b1 ? b1 : a1;
		var a1 = a.zMax;
		var b1 = b.zMax;
		var zMax = a1 > b1 ? b1 : a1;
		this.xMin = xMin;
		this.xMax = xMax;
		this.yMin = yMin;
		this.yMax = yMax;
		this.zMin = zMin;
		this.zMax = zMax;
	}
	,load: function(b) {
		this.xMin = b.xMin;
		this.xMax = b.xMax;
		this.yMin = b.yMin;
		this.yMax = b.yMax;
		this.zMin = b.zMin;
		this.zMax = b.zMax;
	}
	,scaleCenter: function(v) {
		var dx = (this.xMax - this.xMin) * 0.5 * v;
		var dy = (this.yMax - this.yMin) * 0.5 * v;
		var dz = (this.zMax - this.zMin) * 0.5 * v;
		var mx = (this.xMax + this.xMin) * 0.5;
		var my = (this.yMax + this.yMin) * 0.5;
		var mz = (this.zMax + this.zMin) * 0.5;
		this.xMin = mx - dx;
		this.yMin = my - dy;
		this.zMin = mz - dz;
		this.xMax = mx + dx;
		this.yMax = my + dy;
		this.zMax = mz + dz;
	}
	,__class__: h3d_col_Bounds
};
var h3d_col_Frustum = function(mvp) {
	this.checkNearFar = true;
	this.pleft = new h3d_col_Plane(1,0,0,0.0);
	this.pright = new h3d_col_Plane(1,0,0,0.0);
	this.ptop = new h3d_col_Plane(1,0,0,0.0);
	this.pbottom = new h3d_col_Plane(1,0,0,0.0);
	this.pnear = new h3d_col_Plane(1,0,0,0.0);
	this.pfar = new h3d_col_Plane(1,0,0,0.0);
	if(mvp != null) {
		this.loadMatrix(mvp);
	}
};
$hxClasses["h3d.col.Frustum"] = h3d_col_Frustum;
h3d_col_Frustum.__name__ = "h3d.col.Frustum";
h3d_col_Frustum.prototype = {
	loadMatrix: function(mvp) {
		var _this = this.pleft;
		var p_nx = mvp._14 + mvp._11;
		var p_ny = mvp._24 + mvp._21;
		var p_nz = mvp._34 + mvp._31;
		var p_d = -(mvp._44 + mvp._41);
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pright;
		var p_nx = mvp._14 - mvp._11;
		var p_ny = mvp._24 - mvp._21;
		var p_nz = mvp._34 - mvp._31;
		var p_d = mvp._41 - mvp._44;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.ptop;
		var p_nx = mvp._14 - mvp._12;
		var p_ny = mvp._24 - mvp._22;
		var p_nz = mvp._34 - mvp._32;
		var p_d = mvp._42 - mvp._44;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pbottom;
		var p_nx = mvp._14 + mvp._12;
		var p_ny = mvp._24 + mvp._22;
		var p_nz = mvp._34 + mvp._32;
		var p_d = -(mvp._44 + mvp._42);
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pnear;
		var p_nx = mvp._13;
		var p_ny = mvp._23;
		var p_nz = mvp._33;
		var p_d = -mvp._43;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pfar;
		var p_nx = mvp._14 - mvp._13;
		var p_ny = mvp._24 - mvp._23;
		var p_nz = mvp._34 - mvp._33;
		var p_d = mvp._43 - mvp._44;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pleft;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pright;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.ptop;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pbottom;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pnear;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pfar;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
	}
	,hasSphere: function(s) {
		var x = s.x;
		var y = s.y;
		var z = s.z;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var p_x = x;
		var p_y = y;
		var p_z = z;
		var _this = this.pleft;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		var _this = this.pright;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		var _this = this.ptop;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		var _this = this.pbottom;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		if(this.checkNearFar) {
			var _this = this.pnear;
			if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
				return false;
			}
			var _this = this.pfar;
			if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
				return false;
			}
		}
		return true;
	}
	,hasBounds: function(b) {
		var p = this.pleft;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pright;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.ptop;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.ptop;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pnear;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pfar;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		return true;
	}
	,__class__: h3d_col_Frustum
};
var h3d_col_Ray = function() {
};
$hxClasses["h3d.col.Ray"] = h3d_col_Ray;
h3d_col_Ray.__name__ = "h3d.col.Ray";
h3d_col_Ray.prototype = {
	normalize: function() {
		var l = this.lx * this.lx + this.ly * this.ly + this.lz * this.lz;
		if(l == 1.) {
			return;
		}
		if(l < 1e-10) {
			l = 0;
		} else {
			l = 1. / Math.sqrt(l);
		}
		this.lx *= l;
		this.ly *= l;
		this.lz *= l;
	}
	,__class__: h3d_col_Ray
};
var h3d_col_Plane = function(nx,ny,nz,d) {
	this.nx = nx;
	this.ny = ny;
	this.nz = nz;
	this.d = d;
};
$hxClasses["h3d.col.Plane"] = h3d_col_Plane;
h3d_col_Plane.__name__ = "h3d.col.Plane";
h3d_col_Plane.prototype = {
	__class__: h3d_col_Plane
};
var h3d_col_Sphere = function(x,y,z,r) {
	if(r == null) {
		r = 0.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	var sx = x;
	var sy = y;
	var sz = z;
	var sr = r;
	if(sr == null) {
		sr = 0.;
	}
	if(sz == null) {
		sz = 0.;
	}
	if(sy == null) {
		sy = 0.;
	}
	if(sx == null) {
		sx = 0.;
	}
	this.x = sx;
	this.y = sy;
	this.z = sz;
	this.r = sr;
};
$hxClasses["h3d.col.Sphere"] = h3d_col_Sphere;
h3d_col_Sphere.__name__ = "h3d.col.Sphere";
h3d_col_Sphere.__interfaces__ = [h3d_col_Collider];
h3d_col_Sphere.prototype = {
	rayIntersection: function(r,bestMatch) {
		var r2 = this.r * this.r;
		var px = r.px + r.lx;
		var py = r.py + r.ly;
		var pz = r.pz + r.lz;
		var a = r.lx * r.lx + r.ly * r.ly + r.lz * r.lz;
		var b = 2 * r.lx * (this.x - px) + 2 * r.ly * (this.y - py) + 2 * r.lz * (this.z - pz);
		var c = this.x * this.x + this.y * this.y + this.z * this.z + (px * px + py * py + pz * pz) - 2 * (this.x * px + this.y * py + this.z * pz) - r2;
		var d = b * b - 4 * a * c;
		if(d < 0) {
			return -1;
		}
		d = Math.sqrt(d);
		var t = (-b + d) / (2 * a);
		return 1 - t;
	}
	,inFrustum: function(f,m) {
		if(m != null) {
			return this.inFrustumMatrix(f,m);
		}
		return f.hasSphere(this);
	}
	,inFrustumMatrix: function(f,m) {
		var oldX = this.x;
		var oldY = this.y;
		var oldZ = this.z;
		var oldR = this.r;
		var x = this.x;
		var y = this.y;
		var z = this.z;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var v_x = x;
		var v_y = y;
		var v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		this.x = v_x;
		this.y = v_y;
		this.z = v_z;
		var v = null;
		if(v == null) {
			v = new h3d_Vector();
		}
		v.x = Math.sqrt(m._11 * m._11 + m._12 * m._12 + m._13 * m._13);
		v.y = Math.sqrt(m._21 * m._21 + m._22 * m._22 + m._23 * m._23);
		v.z = Math.sqrt(m._31 * m._31 + m._32 * m._32 + m._33 * m._33);
		if(m._11 * (m._22 * m._33 - m._23 * m._32) + m._12 * (m._23 * m._31 - m._21 * m._33) + m._13 * (m._21 * m._32 - m._22 * m._31) < 0) {
			v.x *= -1;
			v.y *= -1;
			v.z *= -1;
		}
		var scale = v;
		this.r *= Math.max(Math.max(scale.x,scale.y),scale.z);
		var res = f.hasSphere(this);
		this.x = oldX;
		this.y = oldY;
		this.z = oldZ;
		this.r = oldR;
		return res;
	}
	,__class__: h3d_col_Sphere
};
var h3d_impl_Feature = $hxEnums["h3d.impl.Feature"] = { __ename__ : true, __constructs__ : ["StandardDerivatives","FloatTextures","AllocDepthBuffer","HardwareAccelerated","MultipleRenderTargets","Queries","SRGBTextures","ShaderModel3","BottomLeftCoords","Wireframe","InstancedRendering"]
	,StandardDerivatives: {_hx_index:0,__enum__:"h3d.impl.Feature",toString:$estr}
	,FloatTextures: {_hx_index:1,__enum__:"h3d.impl.Feature",toString:$estr}
	,AllocDepthBuffer: {_hx_index:2,__enum__:"h3d.impl.Feature",toString:$estr}
	,HardwareAccelerated: {_hx_index:3,__enum__:"h3d.impl.Feature",toString:$estr}
	,MultipleRenderTargets: {_hx_index:4,__enum__:"h3d.impl.Feature",toString:$estr}
	,Queries: {_hx_index:5,__enum__:"h3d.impl.Feature",toString:$estr}
	,SRGBTextures: {_hx_index:6,__enum__:"h3d.impl.Feature",toString:$estr}
	,ShaderModel3: {_hx_index:7,__enum__:"h3d.impl.Feature",toString:$estr}
	,BottomLeftCoords: {_hx_index:8,__enum__:"h3d.impl.Feature",toString:$estr}
	,Wireframe: {_hx_index:9,__enum__:"h3d.impl.Feature",toString:$estr}
	,InstancedRendering: {_hx_index:10,__enum__:"h3d.impl.Feature",toString:$estr}
};
h3d_impl_Feature.__empty_constructs__ = [h3d_impl_Feature.StandardDerivatives,h3d_impl_Feature.FloatTextures,h3d_impl_Feature.AllocDepthBuffer,h3d_impl_Feature.HardwareAccelerated,h3d_impl_Feature.MultipleRenderTargets,h3d_impl_Feature.Queries,h3d_impl_Feature.SRGBTextures,h3d_impl_Feature.ShaderModel3,h3d_impl_Feature.BottomLeftCoords,h3d_impl_Feature.Wireframe,h3d_impl_Feature.InstancedRendering];
var h3d_impl_RenderFlag = $hxEnums["h3d.impl.RenderFlag"] = { __ename__ : true, __constructs__ : ["CameraHandness"]
	,CameraHandness: {_hx_index:0,__enum__:"h3d.impl.RenderFlag",toString:$estr}
};
h3d_impl_RenderFlag.__empty_constructs__ = [h3d_impl_RenderFlag.CameraHandness];
var h3d_impl_InputNames = function(names) {
	this.id = h3d_impl_InputNames.UID++;
	this.names = names;
};
$hxClasses["h3d.impl.InputNames"] = h3d_impl_InputNames;
h3d_impl_InputNames.__name__ = "h3d.impl.InputNames";
h3d_impl_InputNames.get = function(names) {
	var key = names.join("|");
	var i = h3d_impl_InputNames.CACHE.h[key];
	if(i == null) {
		i = new h3d_impl_InputNames(names.slice());
		h3d_impl_InputNames.CACHE.h[key] = i;
	}
	return i;
};
h3d_impl_InputNames.prototype = {
	__class__: h3d_impl_InputNames
};
var h3d_impl_Driver = function() { };
$hxClasses["h3d.impl.Driver"] = h3d_impl_Driver;
h3d_impl_Driver.__name__ = "h3d.impl.Driver";
h3d_impl_Driver.prototype = {
	hasFeature: function(f) {
		return false;
	}
	,setRenderFlag: function(r,value) {
	}
	,isSupportedFormat: function(fmt) {
		return false;
	}
	,isDisposed: function() {
		return true;
	}
	,begin: function(frame) {
	}
	,generateMipMaps: function(texture) {
		throw haxe_Exception.thrown("Mipmaps auto generation is not supported on this platform");
	}
	,clear: function(color,depth,stencil) {
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
	}
	,resize: function(width,height) {
	}
	,selectShader: function(shader) {
		return false;
	}
	,selectMaterial: function(pass) {
	}
	,uploadShaderBuffers: function(buffers,which) {
	}
	,selectBuffer: function(buffer) {
	}
	,draw: function(ibuf,startIndex,ntriangles) {
	}
	,setRenderZone: function(x,y,width,height) {
	}
	,setRenderTarget: function(tex,layer,mipLevel) {
		if(mipLevel == null) {
			mipLevel = 0;
		}
		if(layer == null) {
			layer = 0;
		}
	}
	,setRenderTargets: function(textures) {
	}
	,allocDepthBuffer: function(b) {
		return null;
	}
	,disposeDepthBuffer: function(b) {
	}
	,getDefaultDepthBuffer: function() {
		return null;
	}
	,end: function() {
	}
	,setDebug: function(b) {
	}
	,allocTexture: function(t) {
		return null;
	}
	,allocIndexes: function(count,is32) {
		return null;
	}
	,allocVertexes: function(m) {
		return null;
	}
	,disposeTexture: function(t) {
	}
	,disposeIndexes: function(i) {
	}
	,disposeVertexes: function(v) {
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
	}
	,uploadVertexBuffer: function(v,startVertex,vertexCount,buf,bufPos) {
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
	}
	,copyTexture: function(from,to) {
		return false;
	}
	,__class__: h3d_impl_Driver
};
var h3d_impl__$GlDriver_CompiledShader = function(s,vertex,shader) {
	this.s = s;
	this.vertex = vertex;
	this.shader = shader;
};
$hxClasses["h3d.impl._GlDriver.CompiledShader"] = h3d_impl__$GlDriver_CompiledShader;
h3d_impl__$GlDriver_CompiledShader.__name__ = "h3d.impl._GlDriver.CompiledShader";
h3d_impl__$GlDriver_CompiledShader.prototype = {
	__class__: h3d_impl__$GlDriver_CompiledShader
};
var h3d_impl__$GlDriver_CompiledAttribute = function() {
};
$hxClasses["h3d.impl._GlDriver.CompiledAttribute"] = h3d_impl__$GlDriver_CompiledAttribute;
h3d_impl__$GlDriver_CompiledAttribute.__name__ = "h3d.impl._GlDriver.CompiledAttribute";
h3d_impl__$GlDriver_CompiledAttribute.prototype = {
	__class__: h3d_impl__$GlDriver_CompiledAttribute
};
var h3d_impl__$GlDriver_CompiledProgram = function() {
};
$hxClasses["h3d.impl._GlDriver.CompiledProgram"] = h3d_impl__$GlDriver_CompiledProgram;
h3d_impl__$GlDriver_CompiledProgram.__name__ = "h3d.impl._GlDriver.CompiledProgram";
h3d_impl__$GlDriver_CompiledProgram.prototype = {
	__class__: h3d_impl__$GlDriver_CompiledProgram
};
var h3d_impl_GlDriver = function(antiAlias) {
	if(antiAlias == null) {
		antiAlias = 0;
	}
	this.features = new haxe_ds_EnumValueMap();
	this.maxCompressedTexturesSupport = 0;
	this.rightHanded = false;
	this.firstShader = true;
	this.boundTextures = [];
	this.curTargets = [];
	var _g = [];
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	this.currentDivisor = _g;
	this.curColorMask = -1;
	this.lastActiveIndex = 0;
	this.curStEnabled = false;
	this.curStMaskBits = -1;
	this.curStOpBits = -1;
	this.curMatBits = -1;
	this.maxIdxCurAttribs = 0;
	this.curAttribs = [];
	this.canvas = hxd_Window.getInstance().canvas;
	var options = { alpha : false, stencil : true, antialias : antiAlias > 0};
	if(h3d_impl_GlDriver.ALLOW_WEBGL2) {
		this.gl = this.canvas.getContext("webgl2",options);
	}
	if(this.gl == null) {
		this.gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.canvas,options);
	}
	if(this.gl == null) {
		throw haxe_Exception.thrown("Could not acquire GL context");
	}
	if(typeof(WebGLDebugUtils) != "undefined") {
		this.gl = WebGLDebugUtils.makeDebugContext(this.gl);
		this.glDebug = true;
	}
	this.commonFB = this.gl.createFramebuffer();
	this.programs = new haxe_ds_IntMap();
	this.defStencil = new h3d_mat_Stencil();
	var v = this.gl.getParameter(7938);
	var reg = new EReg("ES ([0-9]+\\.[0-9]+)","");
	if(reg.match(v)) {
		this.glES = parseFloat(reg.matched(1));
	}
	var reg = new EReg("[0-9]+\\.[0-9]+","");
	var v = this.gl.getParameter(35724);
	if(reg.match(v)) {
		this.glES = parseFloat(reg.matched(0));
		this.shaderVersion = Math.round(parseFloat(reg.matched(0)) * 100);
	}
	this.drawMode = 4;
	this.makeFeatures();
	if(this.hasFeature(h3d_impl_Feature.InstancedRendering) && this.glES < 3) {
		var extension = this.gl.getExtension("ANGLE_instanced_arrays");
		this.gl["vertexAttribDivisor"] = $bind(extension,extension.vertexAttribDivisorANGLE);
		this.gl["drawElementsInstanced"] = $bind(extension,extension.drawElementsInstancedANGLE);
	}
	hxsl_SharedShader.UNROLL_LOOPS = !this.hasFeature(h3d_impl_Feature.ShaderModel3);
	this.gl.pixelStorei(3333,1);
	this.gl.pixelStorei(3317,1);
};
$hxClasses["h3d.impl.GlDriver"] = h3d_impl_GlDriver;
h3d_impl_GlDriver.__name__ = "h3d.impl.GlDriver";
h3d_impl_GlDriver.__super__ = h3d_impl_Driver;
h3d_impl_GlDriver.prototype = $extend(h3d_impl_Driver.prototype,{
	setRenderFlag: function(r,value) {
		this.rightHanded = value > 0;
	}
	,setDebug: function(d) {
		this.debug = d;
	}
	,begin: function(frame) {
		this.frame = frame;
		this.resetStream();
		this.gl.useProgram(null);
		this.curShader = null;
		this.curBuffer = null;
	}
	,getDriverName: function(details) {
		var render = this.gl.getParameter(7937);
		if(details) {
			render += " GLv" + Std.string(this.gl.getParameter(7938));
		} else {
			render = render.split("/").shift();
		}
		render = render.split("WebGL ").join("");
		return "OpenGL " + render;
	}
	,compileShader: function(glout,shader) {
		var type = shader.vertex ? 35633 : 35632;
		var s = this.gl.createShader(type);
		if(shader.code == null) {
			shader.code = glout.run(shader.data);
			shader.data.funs = null;
		}
		this.gl.shaderSource(s,shader.code);
		this.gl.compileShader(s);
		var log = this.gl.getShaderInfoLog(s);
		if(this.gl.getShaderParameter(s,35713) != 1) {
			var log = this.gl.getShaderInfoLog(s);
			var lid = Std.parseInt(HxOverrides.substr(log,9,null));
			var line = lid == null ? null : shader.code.split("\n")[lid - 1];
			if(line == null) {
				line = "";
			} else {
				line = "(" + StringTools.trim(line) + ")";
			}
			var codeLines = shader.code.split("\n");
			var _g = 0;
			var _g1 = codeLines.length;
			while(_g < _g1) {
				var i = _g++;
				codeLines[i] = i + 1 + "\t" + codeLines[i];
			}
			throw haxe_Exception.thrown("An error occurred compiling the shaders: " + log + line + "\n\n" + codeLines.join("\n"));
		}
		return new h3d_impl__$GlDriver_CompiledShader(s,shader.vertex,shader);
	}
	,initShader: function(p,s,shader) {
		var prefix = s.vertex ? "vertex" : "fragment";
		s.globals = this.gl.getUniformLocation(p.p,prefix + "Globals");
		s.params = this.gl.getUniformLocation(p.p,prefix + "Params");
		s.textures = [];
		var index = 0;
		var curT = null;
		var mode = 0;
		var name = "";
		var t = shader.textures;
		while(t != null) {
			var tt = t.type;
			var count = 1;
			switch(tt._hx_index) {
			case 15:
				var _g = tt.size;
				if(_g._hx_index == 0) {
					var t1 = tt.t;
					var n = _g.v;
					tt = t1;
					count = n;
				}
				break;
			case 17:
				var _g1 = tt.size;
				tt = hxsl_Type.TSampler2D;
				break;
			default:
			}
			if(tt != curT) {
				curT = tt;
				switch(tt._hx_index) {
				case 10:
					mode = 3553;
					name = "Textures";
					break;
				case 11:
					mode = 35866;
					name = "TexturesArray";
					break;
				case 12:
					mode = 34067;
					name = "TexturesCube";
					break;
				default:
					throw haxe_Exception.thrown("Unsupported texture type " + Std.string(tt));
				}
				index = 0;
			}
			var _g2 = 0;
			var _g3 = count;
			while(_g2 < _g3) {
				var i = _g2++;
				s.textures.push({ u : this.gl.getUniformLocation(p.p,prefix + name + "[" + index + "]"), t : curT, mode : mode});
				++index;
			}
			t = t.next;
		}
		if(shader.bufferCount > 0) {
			var _g = [];
			var _g1 = 0;
			var _g2 = shader.bufferCount;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(this.gl.getUniformBlockIndex(p.p,"uniform_buffer" + i));
			}
			s.buffers = _g;
			var _g = 0;
			var _g1 = shader.bufferCount;
			while(_g < _g1) {
				var i = _g++;
				this.gl.uniformBlockBinding(p.p,s.buffers[i],i);
			}
		}
	}
	,selectShader: function(shader) {
		var p = this.programs.h[shader.id];
		if(p == null) {
			p = new h3d_impl__$GlDriver_CompiledProgram();
			var glout = new hxsl_GlslOut();
			glout.glES = this.glES;
			glout.version = this.shaderVersion;
			p.vertex = this.compileShader(glout,shader.vertex);
			p.fragment = this.compileShader(glout,shader.fragment);
			p.p = this.gl.createProgram();
			this.gl.attachShader(p.p,p.vertex.s);
			this.gl.attachShader(p.p,p.fragment.s);
			var log = null;
			try {
				this.gl.linkProgram(p.p);
				if(this.gl.getProgramParameter(p.p,35714) != 1) {
					log = this.gl.getProgramInfoLog(p.p);
				}
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				throw haxe_Exception.thrown("Shader linkage error: " + Std.string(e) + " (" + this.getDriverName(false) + ")");
			}
			this.gl.deleteShader(p.vertex.s);
			this.gl.deleteShader(p.fragment.s);
			if(log != null) {
				this.gl.deleteProgram(p.p);
				throw haxe_Exception.thrown("Program linkage failure: " + log + "\nVertex=\n" + shader.vertex.code + "\n\nFragment=\n" + shader.fragment.code);
			}
			this.firstShader = false;
			this.initShader(p,p.vertex,shader.vertex);
			this.initShader(p,p.fragment,shader.fragment);
			var attribNames = [];
			p.attribs = [];
			p.hasAttribIndex = [];
			p.stride = 0;
			var _g = 0;
			var _g1 = shader.vertex.data.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v.kind._hx_index == 1) {
					var t = 5126;
					var size;
					var _g2 = v.type;
					switch(_g2._hx_index) {
					case 3:
						size = 1;
						break;
					case 5:
						var _g3 = _g2.t;
						var n = _g2.size;
						size = n;
						break;
					case 9:
						var n1 = _g2.size;
						t = 5120;
						size = n1;
						break;
					default:
						throw haxe_Exception.thrown("assert " + Std.string(v.type));
					}
					var index = this.gl.getAttribLocation(p.p,glout.varNames.h.hasOwnProperty(v.id) ? glout.varNames.h[v.id] : v.name);
					if(index < 0) {
						p.stride += size;
						continue;
					}
					var a = new h3d_impl__$GlDriver_CompiledAttribute();
					a.type = t;
					a.size = size;
					a.index = index;
					a.offset = p.stride;
					a.divisor = 0;
					if(v.qualifiers != null) {
						var _g4 = 0;
						var _g5 = v.qualifiers;
						while(_g4 < _g5.length) {
							var q = _g5[_g4];
							++_g4;
							if(q._hx_index == 9) {
								var n2 = q.v;
								a.divisor = n2;
							}
						}
					}
					p.attribs.push(a);
					p.hasAttribIndex[a.index] = true;
					attribNames.push(v.name);
					p.stride += size;
				}
			}
			p.inputs = h3d_impl_InputNames.get(attribNames);
			this.programs.h[shader.id] = p;
		}
		if(this.curShader == p) {
			return false;
		}
		this.gl.useProgram(p.p);
		var _g = 0;
		var _g1 = p.attribs;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(!this.curAttribs[a.index]) {
				this.gl.enableVertexAttribArray(a.index);
				this.curAttribs[a.index] = true;
				if(this.maxIdxCurAttribs < a.index) {
					this.maxIdxCurAttribs = a.index;
				}
			}
		}
		var lastIdxCurAttribTrue = 0;
		var _g = 0;
		var _g1 = this.maxIdxCurAttribs + 1;
		while(_g < _g1) {
			var i = _g++;
			if(this.curAttribs[i] && !p.hasAttribIndex[i]) {
				this.gl.disableVertexAttribArray(i);
				this.curAttribs[i] = false;
			} else if(this.curAttribs[i]) {
				lastIdxCurAttribTrue = i;
			}
		}
		this.maxIdxCurAttribs = lastIdxCurAttribTrue;
		this.curShader = p;
		this.curBuffer = null;
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			this.boundTextures[i] = null;
		}
		return true;
	}
	,uploadShaderBuffers: function(buf,which) {
		this.uploadBuffer(this.curShader.vertex,buf.vertex,which);
		this.uploadBuffer(this.curShader.fragment,buf.fragment,which);
	}
	,uploadBuffer: function(s,buf,which) {
		switch(which) {
		case 0:
			if(s.globals != null) {
				var a = buf.globals.subarray(0,s.shader.globalsSize * 4);
				this.gl.uniform4fv(s.globals,a);
			}
			break;
		case 1:
			if(s.params != null) {
				var a = buf.params.subarray(0,s.shader.paramsSize * 4);
				this.gl.uniform4fv(s.params,a);
			}
			break;
		case 2:
			var tcount = s.textures.length;
			var _g = 0;
			var _g1 = s.textures.length;
			while(_g < _g1) {
				var i = _g++;
				var t = buf.tex[i];
				var pt = s.textures[i];
				if(t == null || t.t == null && t.realloc == null) {
					switch(pt.t._hx_index) {
					case 10:
						var color = h3d_mat_Defaults.loadingTextureColor;
						t = h3d_mat_Texture.fromColor(color,(color >>> 24) / 255);
						break;
					case 12:
						t = h3d_mat_Texture.defaultCubeTexture();
						break;
					default:
						throw haxe_Exception.thrown("Missing texture");
					}
				}
				if(t != null && t.t == null && t.realloc != null) {
					t.alloc();
					t.realloc();
				}
				t.set_lastFrame(this.frame);
				if(pt.u == null) {
					continue;
				}
				var idx = s.vertex ? i : this.curShader.vertex.textures.length + i;
				if(this.boundTextures[idx] != t.t) {
					this.boundTextures[idx] = t.t;
					var mode = this.getBindType(t);
					if(mode != pt.mode) {
						throw haxe_Exception.thrown("Texture format mismatch: " + Std.string(t) + " should be " + Std.string(pt.t));
					}
					this.gl.activeTexture(33984 + idx);
					this.gl.uniform1i(pt.u,idx);
					this.gl.bindTexture(mode,t.t.t);
					this.lastActiveIndex = idx;
				}
				var mip = t.mipMap._hx_index;
				var filter = t.filter._hx_index;
				var wrap = t.wrap._hx_index;
				var bits = mip | filter << 3 | wrap << 6;
				if(bits != t.t.bits) {
					t.t.bits = bits;
					var flags = h3d_impl_GlDriver.TFILTERS[mip][filter];
					var mode1 = pt.mode;
					this.gl.texParameteri(mode1,10240,flags[0]);
					this.gl.texParameteri(mode1,10241,flags[1]);
					var w = h3d_impl_GlDriver.TWRAP[wrap];
					this.gl.texParameteri(mode1,10242,w);
					this.gl.texParameteri(mode1,10243,w);
				}
				if(t.lodBias != t.t.bias) {
					t.t.bias = t.lodBias;
					this.gl.texParameterf(pt.mode,34045,t.lodBias);
				}
			}
			break;
		case 3:
			if(s.buffers != null) {
				var _g = 0;
				var _g1 = s.buffers.length;
				while(_g < _g1) {
					var i = _g++;
					this.gl.bindBufferBase(35345,i,buf.buffers[i].buffer.vbuf.b);
				}
			}
			break;
		}
	}
	,selectMaterial: function(pass) {
		var bits = pass.bits;
		if(this.curTarget == null == this.rightHanded) {
			switch(pass.culling._hx_index) {
			case 1:
				bits = bits & -4 | 2;
				break;
			case 2:
				bits = bits & -4 | 1;
				break;
			default:
			}
		}
		this.selectMaterialBits(bits);
		if(this.curColorMask != pass.colorMask) {
			var m = pass.colorMask;
			this.gl.colorMask((m & 1) != 0,(m & 2) != 0,(m & 4) != 0,(m & 8) != 0);
			this.curColorMask = m;
		}
		var s = this.defStencil;
		if(pass.stencil == null) {
			if(this.curStEnabled) {
				this.gl.disable(2960);
				this.curStEnabled = false;
			}
		} else {
			s = pass.stencil;
			if(!this.curStEnabled) {
				this.gl.enable(2960);
				this.curStEnabled = true;
			}
		}
		this.selectStencilBits(s.opBits,s.maskBits);
	}
	,selectMaterialBits: function(bits) {
		var diff = bits ^ this.curMatBits;
		if(this.curMatBits < 0) {
			diff = -1;
		}
		if(diff == 0) {
			return;
		}
		var wireframe = (bits & 268435456) != 0;
		this.drawMode = wireframe ? 3 : 4;
		if((diff & 3) != 0) {
			var cull = bits & 3;
			if(cull == 0) {
				this.gl.disable(2884);
			} else {
				if(this.curMatBits < 0 || (this.curMatBits & 3) == 0) {
					this.gl.enable(2884);
				}
				this.gl.cullFace(h3d_impl_GlDriver.FACES[cull]);
			}
		}
		if((diff & 4194240) != 0) {
			var csrc = bits >> 6 & 15;
			var cdst = bits >> 10 & 15;
			var asrc = bits >> 14 & 15;
			var adst = bits >> 18 & 15;
			if(csrc == asrc && cdst == adst) {
				if(csrc == 0 && cdst == 1) {
					this.gl.disable(3042);
				} else {
					if(this.curMatBits < 0 || (this.curMatBits >> 6 & 15) == 0 && (this.curMatBits >> 10 & 15) == 1) {
						this.gl.enable(3042);
					}
					this.gl.blendFunc(h3d_impl_GlDriver.BLEND[csrc],h3d_impl_GlDriver.BLEND[cdst]);
				}
			} else {
				if(this.curMatBits < 0 || (this.curMatBits >> 6 & 15) == 0 && (this.curMatBits >> 10 & 15) == 1) {
					this.gl.enable(3042);
				}
				this.gl.blendFuncSeparate(h3d_impl_GlDriver.BLEND[csrc],h3d_impl_GlDriver.BLEND[cdst],h3d_impl_GlDriver.BLEND[asrc],h3d_impl_GlDriver.BLEND[adst]);
			}
		}
		if((diff & 264241152) != 0) {
			var cop = bits >> 22 & 7;
			var aop = bits >> 25 & 7;
			if(cop == aop) {
				this.gl.blendEquation(h3d_impl_GlDriver.OP[cop]);
			} else {
				this.gl.blendEquationSeparate(h3d_impl_GlDriver.OP[cop],h3d_impl_GlDriver.OP[aop]);
			}
		}
		if((diff & 4) != 0) {
			this.gl.depthMask((bits >> 2 & 1) != 0);
		}
		if((diff & 56) != 0) {
			var cmp = bits >> 3 & 7;
			if(cmp == 0) {
				this.gl.disable(2929);
			} else {
				if(this.curMatBits < 0 || (this.curMatBits >> 3 & 7) == 0) {
					this.gl.enable(2929);
				}
				this.gl.depthFunc(h3d_impl_GlDriver.COMPARE[cmp]);
			}
		}
		this.curMatBits = bits;
	}
	,selectStencilBits: function(opBits,maskBits) {
		var diffOp = opBits ^ this.curStOpBits;
		var diffMask = maskBits ^ this.curStMaskBits;
		if((diffOp | diffMask) == 0) {
			return;
		}
		if((diffOp & 4088) != 0) {
			this.gl.stencilOpSeparate(h3d_impl_GlDriver.FACES[2],h3d_impl_GlDriver.STENCIL_OP[opBits >> 6 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 9 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 3 & 7]);
		}
		if((diffOp & 16744448) != 0) {
			this.gl.stencilOpSeparate(h3d_impl_GlDriver.FACES[1],h3d_impl_GlDriver.STENCIL_OP[opBits >> 18 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 21 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 15 & 7]);
		}
		if((diffOp & 7 | diffMask & 16711935) != 0) {
			this.gl.stencilFuncSeparate(h3d_impl_GlDriver.FACES[2],h3d_impl_GlDriver.COMPARE[opBits & 7],maskBits >> 16 & 255,maskBits & 255);
		}
		if((diffOp & 28672 | diffMask & 16711935) != 0) {
			this.gl.stencilFuncSeparate(h3d_impl_GlDriver.FACES[1],h3d_impl_GlDriver.COMPARE[opBits >> 12 & 7],maskBits >> 16 & 255,maskBits & 255);
		}
		if((diffMask & 65280) != 0) {
			var w = maskBits >> 8 & 255;
			this.gl.stencilMaskSeparate(h3d_impl_GlDriver.FACES[2],w);
			this.gl.stencilMaskSeparate(h3d_impl_GlDriver.FACES[1],w);
		}
		this.curStOpBits = opBits;
		this.curStMaskBits = maskBits;
	}
	,clear: function(color,depth,stencil) {
		var bits = 0;
		if(color != null) {
			this.gl.colorMask(true,true,true,true);
			this.curColorMask = 15;
			this.gl.clearColor(color.x,color.y,color.z,color.w);
			bits |= 16384;
		}
		if(depth != null) {
			this.gl.depthMask(true);
			if(this.curMatBits >= 0) {
				this.curMatBits |= 4;
			}
			this.gl.clearDepth(depth);
			bits |= 256;
		}
		if(stencil != null) {
			this.selectStencilBits(this.defStencil.opBits,this.defStencil.maskBits);
			this.gl.clearStencil(stencil);
			bits |= 1024;
		}
		if(bits != 0) {
			this.gl.clear(bits);
		}
		if(this.curTarget != null) {
			this.curTarget.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		}
	}
	,resize: function(width,height) {
		if(this.canvas.style.width == "") {
			var tmp = width / window.devicePixelRatio | 0;
			this.canvas.style.width = tmp + "px";
			var tmp = height / window.devicePixelRatio | 0;
			this.canvas.style.height = tmp + "px";
		}
		this.canvas.width = width;
		this.canvas.height = height;
		this.bufferWidth = width;
		this.bufferHeight = height;
		this.gl.viewport(0,0,width,height);
		if(this.defaultDepth != null) {
			this.disposeDepthBuffer(this.defaultDepth);
			this.defaultDepth.width = this.bufferWidth;
			this.defaultDepth.height = this.bufferHeight;
			this.defaultDepth.b = this.allocDepthBuffer(this.defaultDepth);
		}
	}
	,getChannels: function(t) {
		switch(t.internalFmt) {
		case 6407:
			return 6407;
		case 6408:
			return 6408;
		case 32856:
			return 32993;
		case 32857:
			return 6408;
		case 6403:case 33321:case 33325:case 33326:
			return 6403;
		case 33319:case 33323:case 33327:case 33328:
			return 33319;
		case 33777:case 33778:case 33779:
			return 6408;
		case 34837:case 34843:
			return 6407;
		case 35898:
			return 6407;
		case 35904:case 35905:
			return 6407;
		case 34836:case 34842:case 35906:case 35907:
			return 6408;
		default:
			throw haxe_Exception.thrown("Invalid format " + t.internalFmt);
		}
	}
	,isSupportedFormat: function(fmt) {
		switch(fmt._hx_index) {
		case 2:
			return true;
		case 3:case 4:
			return this.hasFeature(h3d_impl_Feature.FloatTextures);
		case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 16:case 17:
			return this.glES >= 3;
		case 14:case 15:
			return this.hasFeature(h3d_impl_Feature.SRGBTextures);
		case 21:
			var n = fmt.v;
			return n <= this.maxCompressedTexturesSupport;
		default:
			return false;
		}
	}
	,getBindType: function(t) {
		var isCube = (t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0;
		var isArray = (t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0;
		if(isCube) {
			return 34067;
		} else if(isArray) {
			return 35866;
		} else {
			return 3553;
		}
	}
	,allocTexture: function(t) {
		var _gthis = this;
		if(h3d_impl_GlDriver.outOfMemoryCheck) {
			this.gl.getError();
		}
		var tt = this.gl.createTexture();
		var bind = this.getBindType(t);
		var tt1 = { t : tt, width : t.width, height : t.height, internalFmt : 6408, pixelFmt : 5121, bits : -1, bind : bind, bias : 0};
		var _g = t.format;
		switch(_g._hx_index) {
		case 1:
			tt1.internalFmt = 32856;
			break;
		case 2:
			break;
		case 3:
			if(this.hasFeature(h3d_impl_Feature.FloatTextures)) {
				tt1.pixelFmt = 5131;
				tt1.internalFmt = 34842;
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
			}
			break;
		case 4:
			if(this.hasFeature(h3d_impl_Feature.FloatTextures)) {
				tt1.internalFmt = 34836;
				tt1.pixelFmt = 5126;
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
			}
			break;
		case 5:
			tt1.internalFmt = 33321;
			break;
		case 6:
			tt1.internalFmt = 33325;
			tt1.pixelFmt = 5131;
			break;
		case 7:
			tt1.internalFmt = 33326;
			tt1.pixelFmt = 5126;
			break;
		case 8:
			tt1.internalFmt = 33323;
			break;
		case 9:
			tt1.internalFmt = 33327;
			tt1.pixelFmt = 5131;
			break;
		case 10:
			tt1.internalFmt = 33328;
			tt1.pixelFmt = 5126;
			break;
		case 11:
			tt1.internalFmt = 6407;
			break;
		case 12:
			tt1.internalFmt = 34843;
			tt1.pixelFmt = 5131;
			break;
		case 13:
			tt1.internalFmt = 34837;
			tt1.pixelFmt = 5126;
			break;
		case 14:
			tt1.internalFmt = 35905;
			break;
		case 15:
			tt1.internalFmt = 35907;
			break;
		case 16:
			tt1.internalFmt = 32857;
			tt1.pixelFmt = 33640;
			break;
		case 17:
			tt1.internalFmt = 35898;
			tt1.pixelFmt = 35899;
			break;
		case 21:
			var n = _g.v;
			if(n <= this.maxCompressedTexturesSupport) {
				if((t.width & 3) != 0 || (t.height & 3) != 0) {
					throw haxe_Exception.thrown("Compressed texture " + Std.string(t) + " has size " + t.width + "x" + t.height + " - must be a multiple of 4");
				}
				switch(n) {
				case 1:
					tt1.internalFmt = 33777;
					break;
				case 2:
					tt1.internalFmt = 33778;
					break;
				case 3:
					tt1.internalFmt = 33779;
					break;
				default:
					throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
				}
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
			}
			break;
		default:
			throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
		}
		t.set_lastFrame(this.frame);
		t.flags &= -1 - (1 << h3d_mat_TextureFlags.WasCleared._hx_index);
		this.gl.bindTexture(bind,tt1.t);
		var outOfMem = false;
		if((t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0) {
			var _g = 0;
			while(_g < 6) {
				var i = _g++;
				this.gl.texImage2D(h3d_impl_GlDriver.CUBE_FACES[i],0,tt1.internalFmt,tt1.width,tt1.height,0,this.getChannels(tt1),tt1.pixelFmt,null);
				var tmp;
				if(!h3d_impl_GlDriver.outOfMemoryCheck) {
					tmp = false;
				} else {
					var err = _gthis.gl.getError();
					if(err == 1285) {
						outOfMem = true;
						tmp = true;
					} else {
						if(err != 0) {
							throw haxe_Exception.thrown("Failed to alloc texture " + Std.string(t.format) + "(error " + err + ")");
						}
						tmp = false;
					}
				}
				if(tmp) {
					break;
				}
			}
		} else if((t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0) {
			this.gl.texImage3D(35866,0,tt1.internalFmt,tt1.width,tt1.height,t.get_layerCount(),0,this.getChannels(tt1),tt1.pixelFmt,null);
			if(h3d_impl_GlDriver.outOfMemoryCheck) {
				var err = _gthis.gl.getError();
				if(err == 1285) {
					outOfMem = true;
				} else if(err != 0) {
					throw haxe_Exception.thrown("Failed to alloc texture " + Std.string(t.format) + "(error " + err + ")");
				}
			}
		} else {
			var _g = t.format;
			var tmp;
			if(_g._hx_index == 21) {
				var _g1 = _g.v;
				tmp = true;
			} else {
				tmp = false;
			}
			if(!tmp) {
				this.gl.texImage2D(bind,0,tt1.internalFmt,tt1.width,tt1.height,0,this.getChannels(tt1),tt1.pixelFmt,null);
			}
			if(h3d_impl_GlDriver.outOfMemoryCheck) {
				var err = _gthis.gl.getError();
				if(err == 1285) {
					outOfMem = true;
				} else if(err != 0) {
					throw haxe_Exception.thrown("Failed to alloc texture " + Std.string(t.format) + "(error " + err + ")");
				}
			}
		}
		this.restoreBind();
		if(outOfMem) {
			this.gl.deleteTexture(tt1.t);
			return null;
		}
		return tt1;
	}
	,restoreBind: function() {
		var t = this.boundTextures[this.lastActiveIndex];
		if(t == null) {
			this.gl.bindTexture(3553,null);
		} else {
			this.gl.bindTexture(t.bind,t.t);
		}
	}
	,allocDepthBuffer: function(b) {
		var r = this.gl.createRenderbuffer();
		if(b.format == null) {
			b.format = this.glES >= 3 ? h3d_mat_DepthFormat.Depth24Stencil8 : h3d_mat_DepthFormat.Depth16;
		}
		var format;
		switch(b.format._hx_index) {
		case 0:
			format = 33189;
			break;
		case 1:
			if(this.glES >= 3) {
				format = 33190;
			} else {
				throw haxe_Exception.thrown("Unsupported depth format " + Std.string(b.format));
			}
			break;
		case 2:
			format = 34041;
			break;
		default:
			throw haxe_Exception.thrown("Unsupported depth format " + Std.string(b.format));
		}
		this.gl.bindRenderbuffer(36161,r);
		this.gl.renderbufferStorage(36161,format,b.width,b.height);
		this.gl.bindRenderbuffer(36161,null);
		return { r : r};
	}
	,disposeDepthBuffer: function(b) {
		if(b.b != null && b.b.r != null) {
			this.gl.deleteRenderbuffer(b.b.r);
			b.b = null;
		}
	}
	,getDefaultDepthBuffer: function() {
		if(this.defaultDepth != null) {
			return this.defaultDepth;
		}
		this.defaultDepth = new h3d_mat_DepthBuffer(0,0);
		this.defaultDepth.width = this.bufferWidth;
		this.defaultDepth.height = this.bufferHeight;
		this.defaultDepth.b = this.allocDepthBuffer(this.defaultDepth);
		return this.defaultDepth;
	}
	,allocVertexes: function(m) {
		if(h3d_impl_GlDriver.outOfMemoryCheck) {
			this.gl.getError();
		}
		var b = this.gl.createBuffer();
		this.gl.bindBuffer(34962,b);
		if(m.size * m.stride == 0) {
			throw haxe_Exception.thrown("assert");
		}
		this.gl.bufferData(34962,m.size * m.stride * 4,(m.flags & 1 << h3d_BufferFlag.Dynamic._hx_index) != 0 ? 35048 : 35044);
		var outOfMem = h3d_impl_GlDriver.outOfMemoryCheck && this.gl.getError() == 1285;
		this.gl.bindBuffer(34962,null);
		if(outOfMem) {
			this.gl.deleteBuffer(b);
			return null;
		}
		return { b : b, stride : m.stride};
	}
	,allocIndexes: function(count,is32) {
		if(h3d_impl_GlDriver.outOfMemoryCheck) {
			this.gl.getError();
		}
		var b = this.gl.createBuffer();
		var size = is32 ? 4 : 2;
		this.gl.bindBuffer(34963,b);
		this.gl.bufferData(34963,count * size,35044);
		var outOfMem = h3d_impl_GlDriver.outOfMemoryCheck && this.gl.getError() == 1285;
		this.gl.bindBuffer(34963,null);
		this.curIndexBuffer = null;
		if(outOfMem) {
			this.gl.deleteBuffer(b);
			return null;
		}
		return { b : b, is32 : is32};
	}
	,disposeTexture: function(t) {
		var tt = t.t;
		if(tt == null) {
			return;
		}
		t.t = null;
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.boundTextures[i] == tt) {
				this.boundTextures[i] = null;
			}
		}
		this.gl.deleteTexture(tt.t);
	}
	,disposeIndexes: function(i) {
		this.gl.deleteBuffer(i.b);
	}
	,disposeVertexes: function(v) {
		this.gl.deleteBuffer(v.b);
	}
	,generateMipMaps: function(t) {
		var bind = this.getBindType(t);
		this.gl.bindTexture(bind,t.t.t);
		this.gl.generateMipmap(bind);
		this.restoreBind();
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
		if(t.format != hxd_PixelFormat.RGBA || (t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0) {
			var pixels = bmp.getPixels();
			this.uploadTexturePixels(t,pixels,mipLevel,side);
			pixels.dispose();
		} else {
			var img = bmp.ctx;
			this.gl.bindTexture(3553,t.t.t);
			this.gl.texImage2D(3553,mipLevel,t.t.internalFmt,this.getChannels(t.t),t.t.pixelFmt,img.getImageData(0,0,bmp.ctx.canvas.width,bmp.ctx.canvas.height));
			this.restoreBind();
		}
	}
	,resetStream: function() {
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
		var cubic = (t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0;
		var bind = this.getBindType(t);
		if((t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0) {
			throw haxe_Exception.thrown("TODO:texImage3D");
		}
		var face = cubic ? h3d_impl_GlDriver.CUBE_FACES[side] : 3553;
		this.gl.bindTexture(bind,t.t.t);
		pixels.convert(t.format);
		pixels.setFlip(false);
		var bufLen = pixels.stride * pixels.height;
		var buffer;
		switch(t.format._hx_index) {
		case 4:case 7:case 10:case 13:
			buffer = new Float32Array(pixels.bytes.b.buffer,pixels.offset,bufLen >> 2);
			break;
		case 3:case 6:case 9:case 12:
			buffer = new Uint16Array(pixels.bytes.b.buffer,pixels.offset,bufLen >> 1);
			break;
		case 16:case 17:
			buffer = new Uint32Array(pixels.bytes.b.buffer,pixels.offset,bufLen >> 2);
			break;
		default:
			buffer = new Uint8Array(pixels.bytes.b.buffer,pixels.offset,bufLen);
		}
		var _g = t.format;
		var tmp;
		if(_g._hx_index == 21) {
			var _g1 = _g.v;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.gl.compressedTexImage2D(face,mipLevel,t.t.internalFmt,pixels.width,pixels.height,0,buffer);
		} else {
			this.gl.texImage2D(face,mipLevel,t.t.internalFmt,pixels.width,pixels.height,0,this.getChannels(t.t),t.t.pixelFmt,buffer);
		}
		t.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		this.restoreBind();
	}
	,uploadVertexBuffer: function(v,startVertex,vertexCount,buf,bufPos) {
		var stride = v.stride;
		this.gl.bindBuffer(34962,v.b);
		var buf1 = buf.array;
		var sub = new Float32Array(buf1.buffer,bufPos * 4,vertexCount * stride);
		this.gl.bufferSubData(34962,startVertex * stride * 4,sub);
		this.gl.bindBuffer(34962,null);
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
		var bits = i.is32 ? 2 : 1;
		this.gl.bindBuffer(34963,i.b);
		var buf1 = new Uint16Array(buf);
		var sub = new Uint16Array(buf1.buffer,bufPos << bits,indiceCount);
		this.gl.bufferSubData(34963,startIndice << bits,sub);
		this.gl.bindBuffer(34963,null);
		this.curIndexBuffer = null;
	}
	,selectBuffer: function(v) {
		if(v == this.curBuffer) {
			return;
		}
		if(this.curBuffer != null && v.buffer == this.curBuffer.buffer && (v.buffer.flags & 1 << h3d_BufferFlag.RawFormat._hx_index) != 0 == ((this.curBuffer.flags & 1 << h3d_BufferFlag.RawFormat._hx_index) != 0)) {
			this.curBuffer = v;
			return;
		}
		if(this.curShader == null) {
			throw haxe_Exception.thrown("No shader selected");
		}
		this.curBuffer = v;
		var m = v.buffer.vbuf;
		if(m.stride < this.curShader.stride) {
			throw haxe_Exception.thrown("Buffer stride (" + m.stride + ") and shader stride (" + this.curShader.stride + ") mismatch");
		}
		this.gl.bindBuffer(34962,m.b);
		if((v.flags & 1 << h3d_BufferFlag.RawFormat._hx_index) != 0) {
			var _g = 0;
			var _g1 = this.curShader.attribs;
			while(_g < _g1.length) {
				var a = _g1[_g];
				++_g;
				var pos = a.offset;
				this.gl.vertexAttribPointer(a.index,a.size,a.type,false,m.stride * 4,pos * 4);
				if(this.currentDivisor[a.index] != a.divisor) {
					this.currentDivisor[a.index] = a.divisor;
					this.gl.vertexAttribDivisor(a.index,a.divisor);
				}
			}
		} else {
			var offset = 8;
			var _g = 0;
			var _g1 = this.curShader.attribs.length;
			while(_g < _g1) {
				var i = _g++;
				var a = this.curShader.attribs[i];
				var pos;
				var _g2 = this.curShader.inputs.names[i];
				switch(_g2) {
				case "normal":
					if(m.stride < 6) {
						throw haxe_Exception.thrown("Buffer is missing NORMAL data, set it to RAW format ?");
					}
					pos = 3;
					break;
				case "position":
					pos = 0;
					break;
				case "uv":
					if(m.stride < 8) {
						throw haxe_Exception.thrown("Buffer is missing UV data, set it to RAW format ?");
					}
					pos = 6;
					break;
				default:
					var s = _g2;
					pos = offset;
					offset += a.size;
					if(offset > m.stride) {
						throw haxe_Exception.thrown("Buffer is missing '" + s + "' data, set it to RAW format ?");
					}
				}
				this.gl.vertexAttribPointer(a.index,a.size,a.type,false,m.stride * 4,pos * 4);
				if(this.currentDivisor[a.index] != a.divisor) {
					this.currentDivisor[a.index] = a.divisor;
					this.gl.vertexAttribDivisor(a.index,a.divisor);
				}
			}
		}
	}
	,draw: function(ibuf,startIndex,ntriangles) {
		if(ibuf != this.curIndexBuffer) {
			this.curIndexBuffer = ibuf;
			this.gl.bindBuffer(34963,ibuf.b);
		}
		if(ibuf.is32) {
			this.gl.drawElements(this.drawMode,ntriangles * 3,5125,startIndex * 4);
		} else {
			this.gl.drawElements(this.drawMode,ntriangles * 3,5123,startIndex * 2);
		}
	}
	,end: function() {
	}
	,isDisposed: function() {
		return this.gl.isContextLost();
	}
	,setRenderZone: function(x,y,width,height) {
		if(x == 0 && y == 0 && width < 0 && height < 0) {
			this.gl.disable(3089);
		} else {
			this.gl.enable(3089);
			if(this.curTarget == null) {
				y = this.bufferHeight - (y + height);
			}
			this.gl.scissor(x,y,width,height);
		}
	}
	,setDrawBuffers: function(k) {
		if(this.glES >= 3) {
			this.gl.drawBuffers(h3d_impl_GlDriver.CBUFFERS[k]);
		} else if(this.mrtExt != null) {
			this.mrtExt.drawBuffersWEBGL(h3d_impl_GlDriver.CBUFFERS[k]);
		}
	}
	,unbindTargets: function() {
		if(this.curTarget != null && this.numTargets > 1) {
			while(this.numTargets > 1) {
				this.gl.framebufferTexture2D(36160,36064 + --this.numTargets,3553,null,0);
				this.curTargets[this.numTargets] = null;
			}
			this.setDrawBuffers(1);
		}
	}
	,setRenderTarget: function(tex,layer,mipLevel) {
		if(mipLevel == null) {
			mipLevel = 0;
		}
		if(layer == null) {
			layer = 0;
		}
		this.unbindTargets();
		this.curTarget = tex;
		if(tex == null) {
			this.gl.bindFramebuffer(36160,null);
			this.gl.viewport(0,0,this.bufferWidth,this.bufferHeight);
			return;
		}
		if(tex.depthBuffer != null && (tex.depthBuffer.width != tex.width || tex.depthBuffer.height != tex.height)) {
			throw haxe_Exception.thrown("Invalid depth buffer size : does not match render target size");
		}
		if(mipLevel > 0 && this.glES == 1) {
			throw haxe_Exception.thrown("Cannot render to mipLevel in WebGL1, use upload() instead");
		}
		if(tex.t == null) {
			tex.alloc();
		}
		if((tex.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) != 0 && (tex.flags & 1 << h3d_mat_TextureFlags.WasCleared._hx_index) == 0) {
			var bind = this.getBindType(tex);
			this.gl.bindTexture(bind,tex.t.t);
			this.gl.generateMipmap(bind);
			this.restoreBind();
		}
		tex.set_lastFrame(this.frame);
		this.curTargetLayer = layer;
		this.curTargetMip = mipLevel;
		this.gl.bindFramebuffer(36160,this.commonFB);
		if((tex.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0) {
			this.gl.framebufferTextureLayer(36160,36064,tex.t.t,mipLevel,layer);
		} else {
			this.gl.framebufferTexture2D(36160,36064,(tex.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0 ? h3d_impl_GlDriver.CUBE_FACES[layer] : 3553,tex.t.t,mipLevel);
		}
		if(tex.depthBuffer != null) {
			if(tex.depthBuffer.hasStencil() && tex.depthBuffer.format == h3d_mat_DepthFormat.Depth24Stencil8) {
				this.gl.framebufferRenderbuffer(36160,33306,36161,tex.depthBuffer.b.r);
			} else {
				this.gl.framebufferRenderbuffer(36160,33306,36161,null);
				this.gl.framebufferRenderbuffer(36160,36096,36161,tex.depthBuffer.b.r);
				this.gl.framebufferRenderbuffer(36160,36128,36161,tex.depthBuffer.hasStencil() ? tex.depthBuffer.b.r : null);
			}
		} else {
			this.gl.framebufferRenderbuffer(36160,33306,36161,null);
			this.gl.framebufferRenderbuffer(36160,36096,36161,null);
			this.gl.framebufferRenderbuffer(36160,36128,36161,null);
		}
		this.gl.viewport(0,0,tex.width >> mipLevel,tex.height >> mipLevel);
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			this.boundTextures[i] = null;
		}
		if((tex.flags & 1 << h3d_mat_TextureFlags.WasCleared._hx_index) == 0) {
			tex.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
			this.clear(h3d_impl_GlDriver.BLACK);
		}
		if(this.glDebug) {
			var code = this.gl.checkFramebufferStatus(36160);
			if(code != 36053) {
				throw haxe_Exception.thrown("Invalid frame buffer: " + code);
			}
		}
	}
	,setRenderTargets: function(textures) {
		this.unbindTargets();
		this.setRenderTarget(textures[0]);
		if(textures.length < 2) {
			return;
		}
		this.numTargets = textures.length;
		var needClear = false;
		var _g = 1;
		var _g1 = textures.length;
		while(_g < _g1) {
			var i = _g++;
			var tex = textures[i];
			if(tex.t == null) {
				tex.alloc();
			}
			this.gl.framebufferTexture2D(36160,36064 + i,3553,tex.t.t,0);
			this.curTargets[i] = tex;
			tex.set_lastFrame(this.frame);
			if((tex.flags & 1 << h3d_mat_TextureFlags.WasCleared._hx_index) == 0) {
				tex.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
				needClear = true;
			}
		}
		this.setDrawBuffers(textures.length);
		if(needClear) {
			this.clear(h3d_impl_GlDriver.BLACK);
		}
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
		var ready = false;
		if(window.document.readyState == "complete") {
			var _g = onCreate;
			var a1 = false;
			haxe_Timer.delay(function() {
				_g(a1);
			},1);
		} else {
			window.addEventListener("load",function(_) {
				if(!ready) {
					ready = true;
					onCreate(false);
				}
			});
		}
	}
	,hasFeature: function(f) {
		return this.features.get(f);
	}
	,makeFeatures: function() {
		var _g = 0;
		var _g1 = h3d_impl_Feature.__empty_constructs__.slice();
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.features.set(f,this.checkFeature(f));
		}
		if(this.gl.getExtension("WEBGL_compressed_texture_s3tc") != null) {
			this.maxCompressedTexturesSupport = 3;
		}
	}
	,checkFeature: function(f) {
		switch(f._hx_index) {
		case 0:
			if(this.glES >= 3) {
				return true;
			} else {
				return this.gl.getExtension("OES_standard_derivatives") != null;
			}
			break;
		case 1:
			if(this.glES >= 3) {
				if(this.gl.getExtension("EXT_color_buffer_float") != null) {
					return this.gl.getExtension("OES_texture_float_linear") != null;
				} else {
					return false;
				}
			} else if(this.gl.getExtension("OES_texture_float") != null && this.gl.getExtension("OES_texture_float_linear") != null && this.gl.getExtension("OES_texture_half_float") != null) {
				return this.gl.getExtension("OES_texture_half_float_linear") != null;
			} else {
				return false;
			}
			break;
		case 4:
			if(this.glES >= 3) {
				return true;
			} else if(this.mrtExt == null) {
				return (this.mrtExt = this.gl.getExtension("WEBGL_draw_buffers")) != null;
			} else {
				return true;
			}
			break;
		case 6:
			if(this.glES >= 3) {
				return true;
			} else {
				return this.gl.getExtension("EXT_sRGB") != null;
			}
			break;
		case 7:
			if(this.glES >= 3) {
				return true;
			} else {
				return false;
			}
			break;
		case 2:case 3:case 8:case 9:
			return true;
		case 10:
			if(this.glES >= 3) {
				return true;
			} else {
				return this.gl.getExtension("ANGLE_instanced_arrays") != null;
			}
			break;
		default:
			return false;
		}
	}
	,__class__: h3d_impl_GlDriver
});
var h3d_impl__$ManagedBuffer_FreeCell = function(pos,count,next) {
	this.pos = pos;
	this.count = count;
	this.next = next;
};
$hxClasses["h3d.impl._ManagedBuffer.FreeCell"] = h3d_impl__$ManagedBuffer_FreeCell;
h3d_impl__$ManagedBuffer_FreeCell.__name__ = "h3d.impl._ManagedBuffer.FreeCell";
h3d_impl__$ManagedBuffer_FreeCell.prototype = {
	__class__: h3d_impl__$ManagedBuffer_FreeCell
};
var h3d_impl_ManagedBuffer = function(stride,size,flags) {
	var this1 = 0;
	this.flags = this1;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f._hx_index;
		}
	}
	this.size = size;
	this.stride = stride;
	this.freeList = new h3d_impl__$ManagedBuffer_FreeCell(0,size,null);
	this.mem = h3d_Engine.CURRENT.mem;
	this.mem.allocManaged(this);
};
$hxClasses["h3d.impl.ManagedBuffer"] = h3d_impl_ManagedBuffer;
h3d_impl_ManagedBuffer.__name__ = "h3d.impl.ManagedBuffer";
h3d_impl_ManagedBuffer.prototype = {
	uploadVertexBuffer: function(start,vertices,buf,bufPos) {
		if(bufPos == null) {
			bufPos = 0;
		}
		this.mem.driver.uploadVertexBuffer(this.vbuf,start,vertices,buf,bufPos);
	}
	,allocPosition: function(nvert,align) {
		var free = this.freeList;
		while(free != null) {
			if(free.count >= nvert) {
				var d = (align - free.pos % align) % align;
				if(d == 0) {
					break;
				}
				if(free.count >= nvert + d) {
					free.next = new h3d_impl__$ManagedBuffer_FreeCell(free.pos + d,free.count - d,free.next);
					free.count = d;
					free = free.next;
					break;
				}
			}
			free = free.next;
		}
		if(free == null) {
			return -1;
		}
		var pos = free.pos;
		free.pos += nvert;
		free.count -= nvert;
		return pos;
	}
	,allocBuffer: function(b) {
		var align = (b.flags & 1 << h3d_BufferFlag.Quads._hx_index) != 0 ? 4 : (b.flags & 1 << h3d_BufferFlag.Triangles._hx_index) != 0 ? 3 : 1;
		var p = this.allocPosition(b.vertices,align);
		if(p < 0) {
			return false;
		}
		b.position = p;
		b.buffer = this;
		return true;
	}
	,freeBuffer: function(b) {
		var prev = null;
		var f = this.freeList;
		var nvert = b.vertices;
		var end = b.position + nvert;
		while(f != null) {
			if(f.pos == end) {
				f.pos -= nvert;
				f.count += nvert;
				if(prev != null && prev.pos + prev.count == f.pos) {
					prev.count += f.count;
					prev.next = f.next;
				}
				nvert = 0;
				break;
			}
			if(f.pos > end) {
				if(prev != null && prev.pos + prev.count == b.position) {
					prev.count += nvert;
				} else {
					var n = new h3d_impl__$ManagedBuffer_FreeCell(b.position,nvert,f);
					if(prev == null) {
						this.freeList = n;
					} else {
						prev.next = n;
					}
				}
				nvert = 0;
				break;
			}
			prev = f;
			f = f.next;
		}
		if(nvert != 0) {
			throw haxe_Exception.thrown("assert");
		}
		if(this.freeList.count == this.size && (this.flags & 1 << h3d_BufferFlag.Managed._hx_index) == 0) {
			this.dispose();
		}
	}
	,dispose: function() {
		this.mem.freeManaged(this);
	}
	,__class__: h3d_impl_ManagedBuffer
};
var h3d_impl_MemoryManager = function(driver) {
	this.bufferCount = 0;
	this.texMemory = 0;
	this.usedMemory = 0;
	this.driver = driver;
};
$hxClasses["h3d.impl.MemoryManager"] = h3d_impl_MemoryManager;
h3d_impl_MemoryManager.__name__ = "h3d.impl.MemoryManager";
h3d_impl_MemoryManager.prototype = {
	init: function() {
		this.indexes = [];
		this.textures = [];
		this.buffers = [];
		this.depths = [];
		this.initIndexes();
	}
	,initIndexes: function() {
		var this1 = new Array(0);
		var indices = this1;
		var _g = 0;
		while(_g < 65533) {
			var i = _g++;
			indices.push(i);
		}
		this.triIndexes = h3d_Indexes.alloc(indices);
		var this1 = new Array(0);
		var indices = this1;
		var p = 0;
		var _g = 0;
		var _g1 = 16383;
		while(_g < _g1) {
			var i = _g++;
			var k = i << 2;
			indices.push(k);
			indices.push(k + 1);
			indices.push(k + 2);
			indices.push(k + 2);
			indices.push(k + 1);
			indices.push(k + 3);
		}
		indices.push(65533);
		this.quadIndexes = h3d_Indexes.alloc(indices);
	}
	,garbage: function() {
	}
	,cleanManagedBuffers: function() {
		var _g = 1;
		var _g1 = this.buffers.length;
		while(_g < _g1) {
			var i = _g++;
			var b = this.buffers[i];
			var prev = null;
			while(b != null) {
				if(b.freeList.count == b.size) {
					b.dispose();
					if(prev == null) {
						this.buffers[i] = b.next;
					} else {
						prev.next = b.next;
					}
				} else {
					prev = b;
				}
				b = b.next;
			}
		}
	}
	,allocManaged: function(m) {
		if(m.vbuf != null) {
			return;
		}
		var mem = m.size * m.stride * 4;
		if(mem == 0) {
			return;
		}
		while(this.usedMemory + mem > 4294967296. || this.bufferCount >= 65536 || (m.vbuf = this.driver.allocVertexes(m)) == null) {
			if(this.driver.isDisposed()) {
				return;
			}
			var size = this.usedMemory - this.freeMemorySize();
			this.garbage();
			this.cleanManagedBuffers();
			if(this.usedMemory - this.freeMemorySize() == size) {
				if(this.bufferCount >= 65536) {
					throw haxe_Exception.thrown("Too many buffers");
				}
				throw haxe_Exception.thrown("Memory full (" + Math.ceil(size / 1024) + " KB," + this.bufferCount + " buffers)");
			}
		}
		this.usedMemory += mem;
		this.bufferCount++;
	}
	,freeManaged: function(m) {
		if(m.vbuf == null) {
			return;
		}
		this.driver.disposeVertexes(m.vbuf);
		m.vbuf = null;
		this.usedMemory -= m.size * m.stride * 4;
		this.bufferCount--;
		if((m.flags & 1 << h3d_BufferFlag.Managed._hx_index) == 0) {
			var c = this.buffers[0];
			var prev = null;
			while(c != null) {
				if(c == m) {
					if(prev == null) {
						this.buffers[0] = m.next;
					} else {
						prev.next = m.next;
					}
					break;
				}
				prev = c;
				c = c.next;
			}
		}
	}
	,allocBuffer: function(b,stride) {
		var max = (b.flags & 1 << h3d_BufferFlag.Quads._hx_index) != 0 ? 65532 : (b.flags & 1 << h3d_BufferFlag.Triangles._hx_index) != 0 ? 65533 : 65534;
		if(b.vertices > max && (b.flags & 1 << h3d_BufferFlag.UniformBuffer._hx_index) == 0 && (b.flags & 1 << h3d_BufferFlag.LargeBuffer._hx_index) == 0) {
			if(max == 65534) {
				throw haxe_Exception.thrown("Cannot split buffer with " + b.vertices + " vertices if it's not Quads/Triangles");
			}
			var rem = b.vertices - max;
			b.vertices = max;
			this.allocBuffer(b,stride);
			var n = b;
			while(n.next != null) n = n.next;
			var flags = [];
			var _g = 0;
			var _g1 = h3d_impl_MemoryManager.ALL_FLAGS;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if((b.flags & 1 << f._hx_index) != 0) {
					flags.push(f);
				}
			}
			n.next = new h3d_Buffer(rem,stride,flags);
			return;
		}
		if((b.flags & 1 << h3d_BufferFlag.Managed._hx_index) == 0) {
			var flags = null;
			if((b.flags & 1 << h3d_BufferFlag.Dynamic._hx_index) != 0) {
				if(flags == null) {
					flags = [];
				}
				flags.push(h3d_BufferFlag.Dynamic);
			}
			if((b.flags & 1 << h3d_BufferFlag.UniformBuffer._hx_index) != 0) {
				if(flags == null) {
					flags = [];
				}
				flags.push(h3d_BufferFlag.UniformBuffer);
			}
			var m = new h3d_impl_ManagedBuffer(stride,b.vertices,flags);
			m.next = this.buffers[0];
			this.buffers[0] = m;
			if(!m.allocBuffer(b)) {
				throw haxe_Exception.thrown("assert");
			}
			return;
		}
		var m = this.buffers[stride];
		var prev = null;
		while(m != null) {
			if(m.allocBuffer(b)) {
				return;
			}
			prev = m;
			m = m.next;
		}
		var align = (b.flags & 1 << h3d_BufferFlag.Triangles._hx_index) != 0 ? 3 : (b.flags & 1 << h3d_BufferFlag.Quads._hx_index) != 0 ? 4 : 0;
		if(m == null && align > 0) {
			var total = b.vertices;
			var size = total;
			while(size > 2048) {
				m = this.buffers[stride];
				size >>= 1;
				size -= size % align;
				b.vertices = size;
				while(m != null) {
					if(m.allocBuffer(b)) {
						var flags = [];
						var _g = 0;
						var _g1 = h3d_impl_MemoryManager.ALL_FLAGS;
						while(_g < _g1.length) {
							var f = _g1[_g];
							++_g;
							if((b.flags & 1 << f._hx_index) != 0) {
								flags.push(f);
							}
						}
						b.next = new h3d_Buffer(total - size,stride,flags);
						return;
					}
					m = m.next;
				}
			}
			b.vertices = total;
		}
		m = new h3d_impl_ManagedBuffer(stride,65533,[h3d_BufferFlag.Managed]);
		if(prev == null) {
			this.buffers[stride] = m;
		} else {
			prev.next = m;
		}
		if(!m.allocBuffer(b)) {
			throw haxe_Exception.thrown("assert");
		}
	}
	,deleteIndexes: function(i) {
		HxOverrides.remove(this.indexes,i);
		this.driver.disposeIndexes(i.ibuf);
		i.ibuf = null;
		this.usedMemory -= i.count * (i.is32 ? 4 : 2);
	}
	,allocIndexes: function(i) {
		i.ibuf = this.driver.allocIndexes(i.count,i.is32);
		this.indexes.push(i);
		this.usedMemory += i.count * (i.is32 ? 4 : 2);
	}
	,bpp: function(t) {
		return 4;
	}
	,cleanTextures: function(force) {
		if(force == null) {
			force = true;
		}
		this.textures.sort($bind(this,this.sortByLRU));
		var _g = 0;
		var _g1 = this.textures;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.realloc == null || t.t == null && t.realloc == null) {
				continue;
			}
			if(force || t.get_lastFrame() < hxd_Timer.frameCount - 3600) {
				t.dispose();
				return true;
			}
		}
		return false;
	}
	,sortByLRU: function(t1,t2) {
		return t1.get_lastFrame() - t2.get_lastFrame();
	}
	,deleteTexture: function(t) {
		if(!HxOverrides.remove(this.textures,t)) {
			return;
		}
		this.driver.disposeTexture(t);
		this.texMemory -= t.width * t.height * this.bpp(t);
	}
	,allocTexture: function(t) {
		var free = this.cleanTextures(false);
		t.t = this.driver.allocTexture(t);
		if(t.t == null) {
			if(this.driver.isDisposed()) {
				return;
			}
			if(!this.cleanTextures(true)) {
				throw haxe_Exception.thrown("Maximum texture memory reached");
			}
			this.allocTexture(t);
			return;
		}
		this.textures.push(t);
		this.texMemory += t.width * t.height * this.bpp(t);
	}
	,allocDepth: function(b) {
		var free = this.cleanTextures(false);
		b.b = this.driver.allocDepthBuffer(b);
		if(b.b == null) {
			if(this.driver.isDisposed()) {
				return;
			}
			if(!this.cleanTextures(true)) {
				throw haxe_Exception.thrown("Maximum texture memory reached");
			}
			this.allocDepth(b);
			return;
		}
		this.depths.push(b);
		this.texMemory += b.width * b.height * 4;
	}
	,deleteDepth: function(b) {
		if(!HxOverrides.remove(this.depths,b)) {
			return;
		}
		this.driver.disposeDepthBuffer(b);
		this.texMemory -= b.width * b.height * 4;
	}
	,onContextLost: function() {
		this.dispose();
		this.initIndexes();
	}
	,dispose: function() {
		if(this.triIndexes != null) {
			this.triIndexes.dispose();
		}
		if(this.quadIndexes != null) {
			this.quadIndexes.dispose();
		}
		this.triIndexes = null;
		this.quadIndexes = null;
		var _g = 0;
		var _g1 = this.textures.slice();
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.dispose();
		}
		var _g = 0;
		var _g1 = this.depths.slice();
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.dispose();
		}
		var _g = 0;
		var _g1 = this.buffers.slice();
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var b1 = b;
			while(b1 != null) {
				b1.dispose();
				b1 = b1.next;
			}
		}
		var _g = 0;
		var _g1 = this.indexes.slice();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.dispose();
		}
		this.buffers = [];
		this.indexes = [];
		this.textures = [];
		this.bufferCount = 0;
		this.usedMemory = 0;
		this.texMemory = 0;
	}
	,freeMemorySize: function() {
		var size = 0;
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var b1 = b;
			while(b1 != null) {
				var free = b1.freeList;
				while(free != null) {
					size += free.count * b1.stride * 4;
					free = free.next;
				}
				b1 = b1.next;
			}
		}
		return size;
	}
	,__class__: h3d_impl_MemoryManager
};
var h3d_impl_TextureCache = function(ctx) {
	this.position = 0;
	this.ctx = ctx;
	this.cache = [];
	var engine = h3d_Engine.CURRENT;
	this.defaultFormat = h3d_mat_Texture.nativeFormat;
	this.defaultDepthBuffer = h3d_mat_DepthBuffer.getDefault();
};
$hxClasses["h3d.impl.TextureCache"] = h3d_impl_TextureCache;
h3d_impl_TextureCache.__name__ = "h3d.impl.TextureCache";
h3d_impl_TextureCache.prototype = {
	begin: function() {
		while(this.cache.length > this.position) {
			var t = this.cache.pop();
			if(t != null) {
				t.dispose();
			}
		}
		this.position = 0;
	}
	,lookupTarget: function(name,width,height,format,isCube) {
		var t = this.cache[this.position];
		var _g = this.position + 1;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var t2 = this.cache[i];
			if(t2 != null && !(t2.t == null && t2.realloc == null) && t2.width == width && t2.height == height && t2.format == format && isCube == ((t2.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0)) {
				this.cache[this.position] = t2;
				this.cache[i] = t;
				return t2;
			}
		}
		if(t != null && t.name == name) {
			t.dispose();
			t = null;
		}
		var flags = [h3d_mat_TextureFlags.Target];
		if(isCube) {
			flags.push(h3d_mat_TextureFlags.Cube);
		}
		var newt = new h3d_mat_Texture(width,height,flags,format);
		if(t != null) {
			this.cache.splice(this.position,0,newt);
		} else {
			this.cache[this.position] = newt;
		}
		return newt;
	}
	,allocTarget: function(name,width,height,defaultDepth,format,isCube) {
		if(isCube == null) {
			isCube = false;
		}
		if(defaultDepth == null) {
			defaultDepth = true;
		}
		var t = this.cache[this.position];
		if(format == null) {
			format = this.defaultFormat;
		}
		if(t == null || t.t == null && t.realloc == null || t.width != width || t.height != height || t.format != format || isCube != ((t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0)) {
			t = this.lookupTarget(name,width,height,format,isCube);
		}
		t.depthBuffer = defaultDepth ? this.defaultDepthBuffer : null;
		t.setName(name);
		this.position++;
		return t;
	}
	,allocTileTarget: function(name,tile,defaultDepth,format) {
		if(defaultDepth == null) {
			defaultDepth = false;
		}
		return this.allocTarget(name,Math.ceil(tile.width + tile.x) - Math.floor(tile.x),Math.ceil(tile.height + tile.y) - Math.floor(tile.y),defaultDepth,format);
	}
	,__class__: h3d_impl_TextureCache
};
var hxd_impl_AnyProps = function() { };
$hxClasses["hxd.impl.AnyProps"] = hxd_impl_AnyProps;
hxd_impl_AnyProps.__name__ = "hxd.impl.AnyProps";
hxd_impl_AnyProps.prototype = {
	set_props: function(p) {
		this.props = p;
		this.refreshProps();
		return p;
	}
	,getDefaultProps: function(kind) {
		return { };
	}
	,refreshProps: function() {
	}
	,__class__: hxd_impl_AnyProps
};
var h3d_mat_BaseMaterial = function(shader) {
	if(shader != null) {
		this.addPass(new h3d_mat_Pass("default",null)).addShader(shader);
	}
};
$hxClasses["h3d.mat.BaseMaterial"] = h3d_mat_BaseMaterial;
h3d_mat_BaseMaterial.__name__ = "h3d.mat.BaseMaterial";
h3d_mat_BaseMaterial.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_mat_BaseMaterial.__super__ = hxd_impl_AnyProps;
h3d_mat_BaseMaterial.prototype = $extend(hxd_impl_AnyProps.prototype,{
	addPass: function(p) {
		var prev = null;
		var cur = this.passes;
		while(cur != null) {
			prev = cur;
			cur = cur.nextPass;
		}
		if(prev == null) {
			this.passes = p;
		} else {
			prev.nextPass = p;
		}
		p.nextPass = null;
		return p;
	}
	,removePass: function(p) {
		var prev = null;
		var cur = this.passes;
		while(cur != null) {
			if(cur == p) {
				if(prev == null) {
					this.passes = p.nextPass;
				} else {
					prev.nextPass = p.nextPass;
				}
				p.nextPass = null;
				return true;
			}
			prev = cur;
			cur = cur.nextPass;
		}
		return false;
	}
	,getPass: function(name) {
		var p = this.passes;
		while(p != null) {
			if(p.name == name) {
				return p;
			}
			p = p.nextPass;
		}
		return null;
	}
	,__class__: h3d_mat_BaseMaterial
});
var h3d_mat_Face = $hxEnums["h3d.mat.Face"] = { __ename__ : true, __constructs__ : ["None","Back","Front","Both"]
	,None: {_hx_index:0,__enum__:"h3d.mat.Face",toString:$estr}
	,Back: {_hx_index:1,__enum__:"h3d.mat.Face",toString:$estr}
	,Front: {_hx_index:2,__enum__:"h3d.mat.Face",toString:$estr}
	,Both: {_hx_index:3,__enum__:"h3d.mat.Face",toString:$estr}
};
h3d_mat_Face.__empty_constructs__ = [h3d_mat_Face.None,h3d_mat_Face.Back,h3d_mat_Face.Front,h3d_mat_Face.Both];
var h3d_mat_Blend = $hxEnums["h3d.mat.Blend"] = { __ename__ : true, __constructs__ : ["One","Zero","SrcAlpha","SrcColor","DstAlpha","DstColor","OneMinusSrcAlpha","OneMinusSrcColor","OneMinusDstAlpha","OneMinusDstColor","ConstantColor","ConstantAlpha","OneMinusConstantColor","OneMinusConstantAlpha","SrcAlphaSaturate"]
	,One: {_hx_index:0,__enum__:"h3d.mat.Blend",toString:$estr}
	,Zero: {_hx_index:1,__enum__:"h3d.mat.Blend",toString:$estr}
	,SrcAlpha: {_hx_index:2,__enum__:"h3d.mat.Blend",toString:$estr}
	,SrcColor: {_hx_index:3,__enum__:"h3d.mat.Blend",toString:$estr}
	,DstAlpha: {_hx_index:4,__enum__:"h3d.mat.Blend",toString:$estr}
	,DstColor: {_hx_index:5,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusSrcAlpha: {_hx_index:6,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusSrcColor: {_hx_index:7,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusDstAlpha: {_hx_index:8,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusDstColor: {_hx_index:9,__enum__:"h3d.mat.Blend",toString:$estr}
	,ConstantColor: {_hx_index:10,__enum__:"h3d.mat.Blend",toString:$estr}
	,ConstantAlpha: {_hx_index:11,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusConstantColor: {_hx_index:12,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusConstantAlpha: {_hx_index:13,__enum__:"h3d.mat.Blend",toString:$estr}
	,SrcAlphaSaturate: {_hx_index:14,__enum__:"h3d.mat.Blend",toString:$estr}
};
h3d_mat_Blend.__empty_constructs__ = [h3d_mat_Blend.One,h3d_mat_Blend.Zero,h3d_mat_Blend.SrcAlpha,h3d_mat_Blend.SrcColor,h3d_mat_Blend.DstAlpha,h3d_mat_Blend.DstColor,h3d_mat_Blend.OneMinusSrcAlpha,h3d_mat_Blend.OneMinusSrcColor,h3d_mat_Blend.OneMinusDstAlpha,h3d_mat_Blend.OneMinusDstColor,h3d_mat_Blend.ConstantColor,h3d_mat_Blend.ConstantAlpha,h3d_mat_Blend.OneMinusConstantColor,h3d_mat_Blend.OneMinusConstantAlpha,h3d_mat_Blend.SrcAlphaSaturate];
var h3d_mat_Compare = $hxEnums["h3d.mat.Compare"] = { __ename__ : true, __constructs__ : ["Always","Never","Equal","NotEqual","Greater","GreaterEqual","Less","LessEqual"]
	,Always: {_hx_index:0,__enum__:"h3d.mat.Compare",toString:$estr}
	,Never: {_hx_index:1,__enum__:"h3d.mat.Compare",toString:$estr}
	,Equal: {_hx_index:2,__enum__:"h3d.mat.Compare",toString:$estr}
	,NotEqual: {_hx_index:3,__enum__:"h3d.mat.Compare",toString:$estr}
	,Greater: {_hx_index:4,__enum__:"h3d.mat.Compare",toString:$estr}
	,GreaterEqual: {_hx_index:5,__enum__:"h3d.mat.Compare",toString:$estr}
	,Less: {_hx_index:6,__enum__:"h3d.mat.Compare",toString:$estr}
	,LessEqual: {_hx_index:7,__enum__:"h3d.mat.Compare",toString:$estr}
};
h3d_mat_Compare.__empty_constructs__ = [h3d_mat_Compare.Always,h3d_mat_Compare.Never,h3d_mat_Compare.Equal,h3d_mat_Compare.NotEqual,h3d_mat_Compare.Greater,h3d_mat_Compare.GreaterEqual,h3d_mat_Compare.Less,h3d_mat_Compare.LessEqual];
var h3d_mat_StencilOp = $hxEnums["h3d.mat.StencilOp"] = { __ename__ : true, __constructs__ : ["Keep","Zero","Replace","Increment","IncrementWrap","Decrement","DecrementWrap","Invert"]
	,Keep: {_hx_index:0,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Zero: {_hx_index:1,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Replace: {_hx_index:2,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Increment: {_hx_index:3,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,IncrementWrap: {_hx_index:4,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Decrement: {_hx_index:5,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,DecrementWrap: {_hx_index:6,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Invert: {_hx_index:7,__enum__:"h3d.mat.StencilOp",toString:$estr}
};
h3d_mat_StencilOp.__empty_constructs__ = [h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Zero,h3d_mat_StencilOp.Replace,h3d_mat_StencilOp.Increment,h3d_mat_StencilOp.IncrementWrap,h3d_mat_StencilOp.Decrement,h3d_mat_StencilOp.DecrementWrap,h3d_mat_StencilOp.Invert];
var h3d_mat_MipMap = $hxEnums["h3d.mat.MipMap"] = { __ename__ : true, __constructs__ : ["None","Nearest","Linear"]
	,None: {_hx_index:0,__enum__:"h3d.mat.MipMap",toString:$estr}
	,Nearest: {_hx_index:1,__enum__:"h3d.mat.MipMap",toString:$estr}
	,Linear: {_hx_index:2,__enum__:"h3d.mat.MipMap",toString:$estr}
};
h3d_mat_MipMap.__empty_constructs__ = [h3d_mat_MipMap.None,h3d_mat_MipMap.Nearest,h3d_mat_MipMap.Linear];
var h3d_mat_Filter = $hxEnums["h3d.mat.Filter"] = { __ename__ : true, __constructs__ : ["Nearest","Linear"]
	,Nearest: {_hx_index:0,__enum__:"h3d.mat.Filter",toString:$estr}
	,Linear: {_hx_index:1,__enum__:"h3d.mat.Filter",toString:$estr}
};
h3d_mat_Filter.__empty_constructs__ = [h3d_mat_Filter.Nearest,h3d_mat_Filter.Linear];
var h3d_mat_Wrap = $hxEnums["h3d.mat.Wrap"] = { __ename__ : true, __constructs__ : ["Clamp","Repeat"]
	,Clamp: {_hx_index:0,__enum__:"h3d.mat.Wrap",toString:$estr}
	,Repeat: {_hx_index:1,__enum__:"h3d.mat.Wrap",toString:$estr}
};
h3d_mat_Wrap.__empty_constructs__ = [h3d_mat_Wrap.Clamp,h3d_mat_Wrap.Repeat];
var h3d_mat_Operation = $hxEnums["h3d.mat.Operation"] = { __ename__ : true, __constructs__ : ["Add","Sub","ReverseSub","Min","Max"]
	,Add: {_hx_index:0,__enum__:"h3d.mat.Operation",toString:$estr}
	,Sub: {_hx_index:1,__enum__:"h3d.mat.Operation",toString:$estr}
	,ReverseSub: {_hx_index:2,__enum__:"h3d.mat.Operation",toString:$estr}
	,Min: {_hx_index:3,__enum__:"h3d.mat.Operation",toString:$estr}
	,Max: {_hx_index:4,__enum__:"h3d.mat.Operation",toString:$estr}
};
h3d_mat_Operation.__empty_constructs__ = [h3d_mat_Operation.Add,h3d_mat_Operation.Sub,h3d_mat_Operation.ReverseSub,h3d_mat_Operation.Min,h3d_mat_Operation.Max];
var h3d_mat_TextureFlags = $hxEnums["h3d.mat.TextureFlags"] = { __ename__ : true, __constructs__ : ["Target","Cube","MipMapped","ManualMipMapGen","IsNPOT","NoAlloc","Dynamic","AlphaPremultiplied","WasCleared","Loading","Serialize","IsArray"]
	,Target: {_hx_index:0,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Cube: {_hx_index:1,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,MipMapped: {_hx_index:2,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,ManualMipMapGen: {_hx_index:3,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,IsNPOT: {_hx_index:4,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,NoAlloc: {_hx_index:5,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Dynamic: {_hx_index:6,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,AlphaPremultiplied: {_hx_index:7,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,WasCleared: {_hx_index:8,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Loading: {_hx_index:9,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Serialize: {_hx_index:10,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,IsArray: {_hx_index:11,__enum__:"h3d.mat.TextureFlags",toString:$estr}
};
h3d_mat_TextureFlags.__empty_constructs__ = [h3d_mat_TextureFlags.Target,h3d_mat_TextureFlags.Cube,h3d_mat_TextureFlags.MipMapped,h3d_mat_TextureFlags.ManualMipMapGen,h3d_mat_TextureFlags.IsNPOT,h3d_mat_TextureFlags.NoAlloc,h3d_mat_TextureFlags.Dynamic,h3d_mat_TextureFlags.AlphaPremultiplied,h3d_mat_TextureFlags.WasCleared,h3d_mat_TextureFlags.Loading,h3d_mat_TextureFlags.Serialize,h3d_mat_TextureFlags.IsArray];
var h3d_mat_Defaults = function() { };
$hxClasses["h3d.mat.Defaults"] = h3d_mat_Defaults;
h3d_mat_Defaults.__name__ = "h3d.mat.Defaults";
h3d_mat_Defaults.get_shadowShader = function() {
	var s = h3d_mat_Defaults.shadowShader;
	if(s == null) {
		s = new h3d_shader_Shadow();
		h3d_mat_Defaults.set_shadowShader(s);
		h3d_mat_Defaults.shadowShader.setPriority(-1);
	}
	return s;
};
h3d_mat_Defaults.set_shadowShader = function(s) {
	return h3d_mat_Defaults.shadowShader = s;
};
var h3d_mat_DepthFormat = $hxEnums["h3d.mat.DepthFormat"] = { __ename__ : true, __constructs__ : ["Depth16","Depth24","Depth24Stencil8"]
	,Depth16: {_hx_index:0,__enum__:"h3d.mat.DepthFormat",toString:$estr}
	,Depth24: {_hx_index:1,__enum__:"h3d.mat.DepthFormat",toString:$estr}
	,Depth24Stencil8: {_hx_index:2,__enum__:"h3d.mat.DepthFormat",toString:$estr}
};
h3d_mat_DepthFormat.__empty_constructs__ = [h3d_mat_DepthFormat.Depth16,h3d_mat_DepthFormat.Depth24,h3d_mat_DepthFormat.Depth24Stencil8];
var h3d_mat_DepthBuffer = function(width,height,format) {
	this.width = width;
	this.height = height;
	this.format = format;
	if(width > 0) {
		this.alloc();
	}
};
$hxClasses["h3d.mat.DepthBuffer"] = h3d_mat_DepthBuffer;
h3d_mat_DepthBuffer.__name__ = "h3d.mat.DepthBuffer";
h3d_mat_DepthBuffer.getDefault = function() {
	return h3d_Engine.CURRENT.driver.getDefaultDepthBuffer();
};
h3d_mat_DepthBuffer.prototype = {
	hasStencil: function() {
		switch(this.format._hx_index) {
		case 0:case 1:
			return false;
		case 2:
			return true;
		}
	}
	,alloc: function() {
		h3d_Engine.CURRENT.mem.allocDepth(this);
	}
	,dispose: function() {
		if(this.b != null) {
			h3d_Engine.CURRENT.mem.deleteDepth(this);
			this.b = null;
		}
	}
	,isDisposed: function() {
		return this.b == null;
	}
	,__class__: h3d_mat_DepthBuffer
};
var h3d_mat_Material = function(texture) {
	this.mshader = new h3d_shader_BaseMesh();
	this.set_blendMode(h2d_BlendMode.None);
	h3d_mat_BaseMaterial.call(this,this.mshader);
	this.set_texture(texture);
};
$hxClasses["h3d.mat.Material"] = h3d_mat_Material;
h3d_mat_Material.__name__ = "h3d.mat.Material";
h3d_mat_Material.__super__ = h3d_mat_BaseMaterial;
h3d_mat_Material.prototype = $extend(h3d_mat_BaseMaterial.prototype,{
	set_castShadows: function(v) {
		if(this.castShadows == v) {
			return v;
		}
		if(this.passes != null) {
			if(v) {
				this.addPass(new h3d_mat_Pass("shadow",null,this.passes)).set_isStatic(this.staticShadows);
			} else {
				this.removePass(this.getPass("shadow"));
			}
		}
		return this.castShadows = v;
	}
	,set_receiveShadows: function(v) {
		if(v == this.receiveShadows) {
			return v;
		}
		if(this.passes != null) {
			var shadows = h3d_mat_Defaults.get_shadowShader();
			if(v) {
				this.passes.addShader(shadows);
			} else {
				this.passes.removeShader(shadows);
			}
		}
		return this.receiveShadows = v;
	}
	,set_blendMode: function(v) {
		if(this.passes != null) {
			this.passes.setBlendMode(v);
			switch(v._hx_index) {
			case 0:
				this.passes.set_depthWrite(true);
				this.passes.setPassName("default");
				break;
			case 1:
				this.passes.set_depthWrite(true);
				this.passes.setPassName("alpha");
				break;
			case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			}
		}
		return this.blendMode = v;
	}
	,set_texture: function(t) {
		if(t == null) {
			if(this.textureShader != null) {
				this.passes.removeShader(this.textureShader);
				this.textureShader = null;
			}
		} else {
			if(this.textureShader == null) {
				this.textureShader = new h3d_shader_Texture();
				this.passes.addShader(this.textureShader);
			}
			this.textureShader.texture__ = t;
		}
		return t;
	}
	,getDefaultProps: function(type) {
		var props;
		if(type == null) {
			props = { kind : "Opaque", shadows : true, culling : true, light : true};
		} else {
			switch(type) {
			case "particles3D":case "trail3D":
				props = { kind : "Alpha", shadows : false, culling : false, light : true};
				break;
			case "ui":
				props = { kind : "Alpha", shadows : false, culling : false, light : false};
				break;
			default:
				props = { kind : "Opaque", shadows : true, culling : true, light : true};
			}
		}
		return props;
	}
	,refreshProps: function() {
		if(this.props == null || this.passes == null) {
			return;
		}
		var props = this.props;
		switch(props.kind) {
		case "Add":
			this.set_blendMode(h2d_BlendMode.Add);
			break;
		case "Alpha":
			this.set_blendMode(h2d_BlendMode.Alpha);
			break;
		case "AlphaKill":case "Hidden":case "Opaque":
			this.set_blendMode(h2d_BlendMode.None);
			break;
		case "SoftAdd":
			this.set_blendMode(h2d_BlendMode.SoftAdd);
			break;
		}
		var tshader = this.textureShader;
		if(tshader != null) {
			tshader.constModified = true;
			tshader.killAlpha__ = props.kind == "AlphaKill";
			tshader.killAlphaThreshold__ = 0.5;
		}
		this.passes.set_culling(props.kind == "Hidden" ? h3d_mat_Face.Both : props.culling ? h3d_mat_Face.Back : h3d_mat_Face.None);
		this.passes.set_enableLights(props.light);
		var v = props.shadows;
		this.set_castShadows(v);
		this.set_receiveShadows(v);
		if(this.castShadows && this.receiveShadows) {
			this.getPass("shadow").set_culling(this.passes.culling);
		}
	}
	,__class__: h3d_mat_Material
});
var h3d_mat_MaterialDatabase = function() {
};
$hxClasses["h3d.mat.MaterialDatabase"] = h3d_mat_MaterialDatabase;
h3d_mat_MaterialDatabase.__name__ = "h3d.mat.MaterialDatabase";
h3d_mat_MaterialDatabase.prototype = {
	__class__: h3d_mat_MaterialDatabase
};
var h3d_mat_MaterialSetup = function(name) {
	if(this.database == null) {
		this.database = new h3d_mat_MaterialDatabase();
	}
	this.name = name;
};
$hxClasses["h3d.mat.MaterialSetup"] = h3d_mat_MaterialSetup;
h3d_mat_MaterialSetup.__name__ = "h3d.mat.MaterialSetup";
h3d_mat_MaterialSetup.prototype = {
	createRenderer: function() {
		return new h3d_scene_fwd_Renderer();
	}
	,createLightSystem: function() {
		return new h3d_scene_fwd_LightSystem();
	}
	,createMaterial: function() {
		return new h3d_mat_Material();
	}
	,__class__: h3d_mat_MaterialSetup
};
var h3d_mat_Pass = function(name,shaders,parent) {
	this.layer = 0;
	this.bits = 0;
	this.parentPass = parent;
	this.shaders = shaders;
	this.setPassName(name);
	this.set_culling(h3d_mat_Face.Back);
	var src = h3d_mat_Blend.One;
	var dst = h3d_mat_Blend.Zero;
	this.set_blendSrc(src);
	this.set_blendAlphaSrc(src);
	this.set_blendDst(dst);
	this.set_blendAlphaDst(dst);
	this.depth(true,h3d_mat_Compare.Less);
	this.set_blendOp(this.set_blendAlphaOp(h3d_mat_Operation.Add));
	this.colorMask = 15;
};
$hxClasses["h3d.mat.Pass"] = h3d_mat_Pass;
h3d_mat_Pass.__name__ = "h3d.mat.Pass";
h3d_mat_Pass.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_mat_Pass.prototype = {
	setPassName: function(name) {
		this.name = name;
		this.passId = hxsl_Globals.allocID(name);
	}
	,setBlendMode: function(b) {
		switch(b._hx_index) {
		case 0:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.Zero;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 1:
			var src = h3d_mat_Blend.SrcAlpha;
			var dst = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 2:
			var src = h3d_mat_Blend.SrcAlpha;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 3:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 4:
			var src = h3d_mat_Blend.OneMinusDstColor;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 5:
			var src = h3d_mat_Blend.DstColor;
			var dst = h3d_mat_Blend.Zero;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 6:
			var src = h3d_mat_Blend.DstColor;
			var dst = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 7:
			var src = h3d_mat_Blend.Zero;
			var dst = h3d_mat_Blend.OneMinusSrcColor;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 8:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.OneMinusSrcColor;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.Add);
			this.set_blendAlphaOp(h3d_mat_Operation.Add);
			break;
		case 9:
			var src = h3d_mat_Blend.SrcAlpha;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.ReverseSub);
			this.set_blendAlphaOp(h3d_mat_Operation.ReverseSub);
			break;
		case 10:
			this.set_blendSrc(h3d_mat_Blend.Zero);
			this.set_blendAlphaSrc(h3d_mat_Blend.Zero);
			this.set_blendDst(h3d_mat_Blend.Zero);
			this.set_blendAlphaDst(h3d_mat_Blend.Zero);
			this.set_blendAlphaSrc(h3d_mat_Blend.Zero);
			this.set_blendAlphaDst(h3d_mat_Blend.Zero);
			this.set_blendAlphaOp(h3d_mat_Operation.Max);
			this.set_blendOp(h3d_mat_Operation.Max);
			break;
		case 11:
			this.set_blendSrc(h3d_mat_Blend.Zero);
			this.set_blendAlphaSrc(h3d_mat_Blend.Zero);
			this.set_blendDst(h3d_mat_Blend.Zero);
			this.set_blendAlphaDst(h3d_mat_Blend.Zero);
			this.set_blendAlphaSrc(h3d_mat_Blend.Zero);
			this.set_blendAlphaDst(h3d_mat_Blend.Zero);
			this.set_blendAlphaOp(h3d_mat_Operation.Min);
			this.set_blendOp(h3d_mat_Operation.Min);
			break;
		}
	}
	,depth: function(write,test) {
		this.set_depthWrite(write);
		this.set_depthTest(test);
	}
	,addShader: function(s) {
		if(s == null) {
			return null;
		}
		this.shaders = hxsl_ShaderList.addSort(s,this.shaders);
		return s;
	}
	,removeShader: function(s) {
		var sl = this.shaders;
		var prev = null;
		while(sl != null) {
			if(sl.s == s) {
				if(prev == null) {
					this.shaders = sl.next;
				} else {
					prev.next = sl.next;
				}
				return true;
			}
			prev = sl;
			sl = sl.next;
		}
		return false;
	}
	,getShadersRec: function() {
		if(this.parentPass == null || this.parentShaders == this.parentPass.shaders) {
			return this.shaders;
		}
		var s = this.shaders;
		var prev = null;
		while(s != null && s != this.parentShaders) {
			prev = s;
			s = s.next;
		}
		this.parentShaders = this.parentPass.shaders;
		if(prev == null) {
			this.shaders = this.parentShaders;
		} else {
			prev.next = this.parentShaders;
		}
		return this.shaders;
	}
	,set_enableLights: function(v) {
		this.flags = this.flags & -2 | (v ? 1 : 0);
		return this.enableLights = v;
	}
	,set_isStatic: function(v) {
		this.flags = this.flags & -5 | (v ? 1 : 0) << 2;
		return this.isStatic = v;
	}
	,set_culling: function(v) {
		this.bits = this.bits & -4 | v._hx_index;
		return this.culling = v;
	}
	,set_depthWrite: function(v) {
		this.bits = this.bits & -5 | (v ? 1 : 0) << 2;
		return this.depthWrite = v;
	}
	,set_depthTest: function(v) {
		this.bits = this.bits & -57 | v._hx_index << 3;
		return this.depthTest = v;
	}
	,set_blendSrc: function(v) {
		this.bits = this.bits & -961 | v._hx_index << 6;
		return this.blendSrc = v;
	}
	,set_blendDst: function(v) {
		this.bits = this.bits & -15361 | v._hx_index << 10;
		return this.blendDst = v;
	}
	,set_blendAlphaSrc: function(v) {
		this.bits = this.bits & -245761 | v._hx_index << 14;
		return this.blendAlphaSrc = v;
	}
	,set_blendAlphaDst: function(v) {
		this.bits = this.bits & -3932161 | v._hx_index << 18;
		return this.blendAlphaDst = v;
	}
	,set_blendOp: function(v) {
		this.bits = this.bits & -29360129 | v._hx_index << 22;
		return this.blendOp = v;
	}
	,set_blendAlphaOp: function(v) {
		this.bits = this.bits & -234881025 | v._hx_index << 25;
		return this.blendAlphaOp = v;
	}
	,__class__: h3d_mat_Pass
};
var h3d_mat_Stencil = function() {
	this.opBits = 0;
	this.maskBits = 0;
	this.setOp(h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Keep);
	this.setFunc(h3d_mat_Compare.Always);
};
$hxClasses["h3d.mat.Stencil"] = h3d_mat_Stencil;
h3d_mat_Stencil.__name__ = "h3d.mat.Stencil";
h3d_mat_Stencil.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_mat_Stencil.prototype = {
	setFront: function(stfail,dpfail,pass) {
		this.set_frontSTfail(stfail);
		this.set_frontDPfail(dpfail);
		this.set_frontPass(pass);
	}
	,setBack: function(stfail,dpfail,pass) {
		this.set_backSTfail(stfail);
		this.set_backDPfail(dpfail);
		this.set_backPass(pass);
	}
	,setOp: function(stfail,dpfail,pass) {
		this.setFront(stfail,dpfail,pass);
		this.setBack(stfail,dpfail,pass);
	}
	,setFunc: function(f,reference,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(reference == null) {
			reference = 0;
		}
		this.set_frontTest(this.set_backTest(f));
		this.set_reference(reference);
		this.set_readMask(readMask);
		this.set_writeMask(writeMask);
	}
	,set_readMask: function(v) {
		this.maskBits = this.maskBits & -256 | v & 255;
		return this.readMask = v;
	}
	,set_writeMask: function(v) {
		this.maskBits = this.maskBits & -65281 | (v & 255) << 8;
		return this.writeMask = v;
	}
	,set_reference: function(v) {
		this.maskBits = this.maskBits & -16711681 | (v & 255) << 16;
		return this.reference = v;
	}
	,set_frontTest: function(v) {
		this.opBits = this.opBits & -8 | v._hx_index;
		return this.frontTest = v;
	}
	,set_frontPass: function(v) {
		this.opBits = this.opBits & -57 | v._hx_index << 3;
		return this.frontPass = v;
	}
	,set_frontSTfail: function(v) {
		this.opBits = this.opBits & -449 | v._hx_index << 6;
		return this.frontSTfail = v;
	}
	,set_frontDPfail: function(v) {
		this.opBits = this.opBits & -3585 | v._hx_index << 9;
		return this.frontDPfail = v;
	}
	,set_backTest: function(v) {
		this.opBits = this.opBits & -28673 | v._hx_index << 12;
		return this.backTest = v;
	}
	,set_backPass: function(v) {
		this.opBits = this.opBits & -229377 | v._hx_index << 15;
		return this.backPass = v;
	}
	,set_backSTfail: function(v) {
		this.opBits = this.opBits & -1835009 | v._hx_index << 18;
		return this.backSTfail = v;
	}
	,set_backDPfail: function(v) {
		this.opBits = this.opBits & -14680065 | v._hx_index << 21;
		return this.backDPfail = v;
	}
	,__class__: h3d_mat_Stencil
};
var hxd_PixelFormat = $hxEnums["hxd.PixelFormat"] = { __ename__ : true, __constructs__ : ["ARGB","BGRA","RGBA","RGBA16F","RGBA32F","R8","R16F","R32F","RG8","RG16F","RG32F","RGB8","RGB16F","RGB32F","SRGB","SRGB_ALPHA","RGB10A2","RG11B10UF","R16U","RGB16U","RGBA16U","S3TC"]
	,ARGB: {_hx_index:0,__enum__:"hxd.PixelFormat",toString:$estr}
	,BGRA: {_hx_index:1,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA: {_hx_index:2,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA16F: {_hx_index:3,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA32F: {_hx_index:4,__enum__:"hxd.PixelFormat",toString:$estr}
	,R8: {_hx_index:5,__enum__:"hxd.PixelFormat",toString:$estr}
	,R16F: {_hx_index:6,__enum__:"hxd.PixelFormat",toString:$estr}
	,R32F: {_hx_index:7,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG8: {_hx_index:8,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG16F: {_hx_index:9,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG32F: {_hx_index:10,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB8: {_hx_index:11,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB16F: {_hx_index:12,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB32F: {_hx_index:13,__enum__:"hxd.PixelFormat",toString:$estr}
	,SRGB: {_hx_index:14,__enum__:"hxd.PixelFormat",toString:$estr}
	,SRGB_ALPHA: {_hx_index:15,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB10A2: {_hx_index:16,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG11B10UF: {_hx_index:17,__enum__:"hxd.PixelFormat",toString:$estr}
	,R16U: {_hx_index:18,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB16U: {_hx_index:19,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA16U: {_hx_index:20,__enum__:"hxd.PixelFormat",toString:$estr}
	,S3TC: ($_=function(v) { return {_hx_index:21,v:v,__enum__:"hxd.PixelFormat",toString:$estr}; },$_.__params__ = ["v"],$_)
};
hxd_PixelFormat.__empty_constructs__ = [hxd_PixelFormat.ARGB,hxd_PixelFormat.BGRA,hxd_PixelFormat.RGBA,hxd_PixelFormat.RGBA16F,hxd_PixelFormat.RGBA32F,hxd_PixelFormat.R8,hxd_PixelFormat.R16F,hxd_PixelFormat.R32F,hxd_PixelFormat.RG8,hxd_PixelFormat.RG16F,hxd_PixelFormat.RG32F,hxd_PixelFormat.RGB8,hxd_PixelFormat.RGB16F,hxd_PixelFormat.RGB32F,hxd_PixelFormat.SRGB,hxd_PixelFormat.SRGB_ALPHA,hxd_PixelFormat.RGB10A2,hxd_PixelFormat.RG11B10UF,hxd_PixelFormat.R16U,hxd_PixelFormat.RGB16U,hxd_PixelFormat.RGBA16U];
var h3d_mat_Texture = function(w,h,flags,format) {
	this.lodBias = 0.;
	var engine = h3d_Engine.CURRENT;
	this.mem = engine.mem;
	if(format == null) {
		format = h3d_mat_Texture.nativeFormat;
	}
	this.id = ++h3d_mat_Texture.UID;
	this.format = format;
	var this1 = 0;
	this.flags = this1;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f._hx_index;
		}
	}
	var tw = 1;
	var th = 1;
	while(tw < w) tw <<= 1;
	while(th < h) th <<= 1;
	if(tw != w || th != h) {
		this.flags |= 1 << h3d_mat_TextureFlags.IsNPOT._hx_index;
	}
	if((this.flags & 1 << h3d_mat_TextureFlags.Target._hx_index) != 0) {
		this.realloc = function() {
		};
	}
	this.width = w;
	this.height = h;
	this.set_mipMap((this.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) != 0 ? h3d_mat_MipMap.Nearest : h3d_mat_MipMap.None);
	this.set_filter(h3d_mat_Filter.Linear);
	this.set_wrap(h3d_mat_Wrap.Clamp);
	this.bits &= 32767;
	if((this.flags & 1 << h3d_mat_TextureFlags.NoAlloc._hx_index) == 0) {
		this.alloc();
	}
};
$hxClasses["h3d.mat.Texture"] = h3d_mat_Texture;
h3d_mat_Texture.__name__ = "h3d.mat.Texture";
h3d_mat_Texture.fromColor = function(color,alpha) {
	if(alpha == null) {
		alpha = 1.;
	}
	var engine = h3d_Engine.CURRENT;
	var aval = alpha * 255 | 0;
	if(aval < 0) {
		aval = 0;
	} else if(aval > 255) {
		aval = 255;
	}
	var key = color & 16777215 | aval << 24;
	var t = engine.textureColorCache.h[key];
	if(t != null) {
		return t;
	}
	var t = new h3d_mat_Texture(1,1,null);
	t.clear(color,alpha);
	t.realloc = function() {
		t.clear(color,alpha);
	};
	engine.textureColorCache.h[key] = t;
	return t;
};
h3d_mat_Texture.defaultCubeTexture = function() {
	var engine = h3d_Engine.CURRENT;
	var t = engine.resCache.h[h3d_mat_Texture.__id__];
	if(t != null) {
		return t;
	}
	t = new h3d_mat_Texture(1,1,[h3d_mat_TextureFlags.Cube]);
	t.clear(2105376);
	t.realloc = function() {
		t.clear(2105376);
	};
	engine.resCache.set(h3d_mat_Texture,t);
	return t;
};
h3d_mat_Texture.prototype = {
	set_lastFrame: function(lf) {
		if(this._lastFrame != h3d_mat_Texture.PREVENT_AUTO_DISPOSE) {
			this._lastFrame = lf;
		}
		return this._lastFrame;
	}
	,get_lastFrame: function() {
		return this._lastFrame;
	}
	,get_layerCount: function() {
		if((this.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0) {
			return 6;
		} else {
			return 1;
		}
	}
	,alloc: function() {
		if(this.t == null) {
			this.mem.allocTexture(this);
		}
	}
	,toString: function() {
		var str = this.name;
		if(this.name == null) {
			str = "Texture_" + this.id;
		}
		return str + "(" + this.width + "x" + this.height + ")";
	}
	,setName: function(n) {
		this.name = n;
	}
	,set_mipMap: function(m) {
		this.bits = this.bits & -4 | m._hx_index;
		return this.mipMap = m;
	}
	,set_filter: function(f) {
		this.bits = this.bits & -25 | f._hx_index << 3;
		return this.filter = f;
	}
	,set_wrap: function(w) {
		this.bits = this.bits & -193 | w._hx_index << 6;
		return this.wrap = w;
	}
	,resize: function(width,height) {
		this.dispose();
		var tw = 1;
		var th = 1;
		while(tw < width) tw <<= 1;
		while(th < height) th <<= 1;
		if(tw != width || th != height) {
			this.flags |= 1 << h3d_mat_TextureFlags.IsNPOT._hx_index;
		} else {
			this.flags &= -1 - (1 << h3d_mat_TextureFlags.IsNPOT._hx_index);
		}
		this.width = width;
		this.height = height;
		if((this.flags & 1 << h3d_mat_TextureFlags.NoAlloc._hx_index) == 0) {
			this.alloc();
		}
	}
	,clear: function(color,alpha,layer) {
		if(layer == null) {
			layer = -1;
		}
		if(alpha == null) {
			alpha = 1.;
		}
		this.alloc();
		if(this.width == 0 || this.height == 0) {
			return;
		}
		if(this.width != 1 || this.height != 1) {
			var engine = h3d_Engine.CURRENT;
			color |= ((alpha < 0. ? 0. : alpha > 1. ? 1. : alpha) * 255 | 0) << 24;
			if(layer < 0) {
				var _g = 0;
				var _g1 = this.get_layerCount();
				while(_g < _g1) {
					var i = _g++;
					engine.pushTarget(this,i);
					engine.clear(color);
					engine.popTarget();
				}
			} else {
				engine.pushTarget(this,layer);
				engine.clear(color);
				engine.popTarget();
			}
		} else {
			var p = hxd_Pixels.alloc(this.width,this.height,h3d_mat_Texture.nativeFormat);
			var k = 0;
			var b = color & 255;
			var g = color >> 8 & 255;
			var r = color >> 16 & 255;
			var a = alpha * 255 | 0;
			if(a < 0) {
				a = 0;
			} else if(a > 255) {
				a = 255;
			}
			switch(h3d_mat_Texture.nativeFormat._hx_index) {
			case 1:
				var tmp = r;
				r = b;
				b = tmp;
				break;
			case 2:
				break;
			default:
				throw haxe_Exception.thrown("TODO");
			}
			var _g = 0;
			var _g1 = this.width * this.height;
			while(_g < _g1) {
				var i = _g++;
				p.bytes.b[k++] = r;
				p.bytes.b[k++] = g;
				p.bytes.b[k++] = b;
				p.bytes.b[k++] = a;
			}
			if(layer < 0) {
				var _g = 0;
				var _g1 = this.get_layerCount();
				while(_g < _g1) {
					var i = _g++;
					this.uploadPixels(p,0,i);
				}
			} else {
				this.uploadPixels(p,0,layer);
			}
			p.dispose();
		}
	}
	,checkMipMapGen: function(mipLevel,layer) {
		if(mipLevel == 0 && (this.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) != 0 && (this.flags & 1 << h3d_mat_TextureFlags.ManualMipMapGen._hx_index) == 0 && ((this.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) == 0 || layer == 5)) {
			this.mem.driver.generateMipMaps(this);
		}
	}
	,uploadBitmap: function(bmp,mipLevel,layer) {
		if(layer == null) {
			layer = 0;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		this.alloc();
		var width = bmp.ctx.canvas.width;
		var height = bmp.ctx.canvas.height;
		if(width != this.width >> mipLevel || height != this.height >> mipLevel) {
			throw haxe_Exception.thrown("Invalid upload size : " + width + "x" + height + " should be " + (this.width >> mipLevel) + "x" + (this.height >> mipLevel));
		}
		this.mem.driver.uploadTextureBitmap(this,bmp,mipLevel,layer);
		this.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		this.checkMipMapGen(mipLevel,layer);
	}
	,uploadPixels: function(pixels,mipLevel,layer) {
		if(layer == null) {
			layer = 0;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		this.alloc();
		var width = pixels.width;
		var height = pixels.height;
		if(width != this.width >> mipLevel || height != this.height >> mipLevel) {
			throw haxe_Exception.thrown("Invalid upload size : " + width + "x" + height + " should be " + (this.width >> mipLevel) + "x" + (this.height >> mipLevel));
		}
		this.mem.driver.uploadTexturePixels(this,pixels,mipLevel,layer);
		this.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		this.checkMipMapGen(mipLevel,layer);
	}
	,dispose: function() {
		if(this.t != null) {
			this.mem.deleteTexture(this);
		}
	}
	,__class__: h3d_mat_Texture
};
var h3d_mat_TextureArray = function(w,h,layers,flags,format) {
	this.layers = layers;
	if(flags == null) {
		flags = [];
	}
	flags.push(h3d_mat_TextureFlags.IsArray);
	h3d_mat_Texture.call(this,w,h,flags,format);
};
$hxClasses["h3d.mat.TextureArray"] = h3d_mat_TextureArray;
h3d_mat_TextureArray.__name__ = "h3d.mat.TextureArray";
h3d_mat_TextureArray.__super__ = h3d_mat_Texture;
h3d_mat_TextureArray.prototype = $extend(h3d_mat_Texture.prototype,{
	get_layerCount: function() {
		return this.layers;
	}
	,toString: function() {
		return h3d_mat_Texture.prototype.toString.call(this) + "[" + this.layers + "]";
	}
	,__class__: h3d_mat_TextureArray
});
var h3d_pass_Base = function(name) {
	this.name = name;
};
$hxClasses["h3d.pass.Base"] = h3d_pass_Base;
h3d_pass_Base.__name__ = "h3d.pass.Base";
h3d_pass_Base.prototype = {
	setContext: function(ctx) {
		this.ctx = ctx;
	}
	,draw: function(passes,sort) {
	}
	,__class__: h3d_pass_Base
};
var h3d_pass_Blur = function(radius,gain,linear,quality) {
	if(quality == null) {
		quality = 1.;
	}
	if(linear == null) {
		linear = 0.;
	}
	if(gain == null) {
		gain = 1.;
	}
	if(radius == null) {
		radius = 1.;
	}
	this.cubeDir = [h3d_Matrix.L([0,0,-1,0,0,-1,0,0,1,0,0,0]),h3d_Matrix.L([0,0,1,0,0,-1,0,0,-1,0,0,0]),h3d_Matrix.L([1,0,0,0,0,0,1,0,0,1,0,0]),h3d_Matrix.L([1,0,0,0,0,0,-1,0,0,-1,0,0]),h3d_Matrix.L([1,0,0,0,0,-1,0,0,0,1,0,0]),h3d_Matrix.L([-1,0,0,0,0,-1,0,0,0,0,-1,0])];
	h3d_pass_ScreenFx.call(this,new h3d_shader_Blur());
	this.set_radius(radius);
	this.set_quality(quality);
	this.set_gain(gain);
	this.set_linear(linear);
};
$hxClasses["h3d.pass.Blur"] = h3d_pass_Blur;
h3d_pass_Blur.__name__ = "h3d.pass.Blur";
h3d_pass_Blur.__super__ = h3d_pass_ScreenFx;
h3d_pass_Blur.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	set_radius: function(r) {
		if(this.radius == r) {
			return r;
		}
		this.values = null;
		return this.radius = r;
	}
	,set_quality: function(q) {
		if(this.quality == q) {
			return q;
		}
		this.values = null;
		return this.quality = q;
	}
	,set_gain: function(s) {
		if(this.gain == s) {
			return s;
		}
		this.values = null;
		return this.gain = s;
	}
	,set_linear: function(b) {
		if(this.linear == b) {
			return b;
		}
		this.values = null;
		return this.linear = b;
	}
	,gauss: function(x,s) {
		if(s <= 0) {
			if(x == 0) {
				return 1;
			} else {
				return 0;
			}
		}
		var sq = s * s;
		var p = Math.pow(2.718281828459,-(x * x) / (2 * sq));
		return p / Math.sqrt(2 * Math.PI * sq);
	}
	,calcValues: function() {
		this.values = [];
		this.offsets = [];
		var tot = 0.;
		var f = this.quality;
		var qadj = (f < 0. ? 0. : f > 1. ? 1. : f) * 0.7 + 0.3;
		var width;
		if(this.radius > 0) {
			var a = this.radius - 1;
			width = Math.ceil((a < 1 ? 1 : a) * qadj / 2);
		} else {
			width = 0;
		}
		var sigma = Math.sqrt(this.radius);
		var _g = 0;
		var _g1 = width + 1;
		while(_g < _g1) {
			var i = _g++;
			var i1 = i * 2;
			var i2 = i == 0 ? 0 : i * 2 - 1;
			var g1 = this.gauss(i1,sigma);
			var g2 = this.gauss(i2,sigma);
			var g = g1 + g2;
			this.values[i] = g;
			this.offsets[i] = i == 0 ? 0 : (g1 * i1 + g2 * i2) / (g * i * Math.sqrt(qadj));
			tot += g;
			if(i > 0) {
				tot += g;
			}
		}
		var minVal = this.values[0] * (0.01 / qadj);
		while(this.values.length > 2) {
			var last = this.values[this.values.length - 1];
			if(last > minVal) {
				break;
			}
			tot -= last * 2;
			this.values.pop();
		}
		tot /= this.gain;
		var _g = 0;
		var _g1 = this.values.length;
		while(_g < _g1) {
			var i = _g++;
			this.values[i] /= tot;
		}
		if(this.linear > 0) {
			var m = this.gain / (this.values.length * 2 - 1);
			var _g = 0;
			var _g1 = this.values.length;
			while(_g < _g1) {
				var i = _g++;
				var a = this.values[i];
				this.values[i] = a + this.linear * (m - a);
				var a1 = this.offsets[i];
				this.offsets[i] = a1 + this.linear * ((i == 0 ? 0 : (i * 2 - 0.5) / (i * qadj)) - a1);
			}
		}
	}
	,apply: function(ctx,src,output) {
		if(this.radius <= 0 && this.shader.fixedColor__ == null) {
			if(output != null) {
				h3d_pass_Copy.run(src,output);
			}
			return;
		}
		if(output == null) {
			output = src;
		}
		if(this.values == null) {
			this.calcValues();
		}
		var isCube = (src.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0;
		var faceCount = isCube ? 6 : 1;
		var tmp = ctx.textures.allocTarget(src.name + "BlurTmp",src.width,src.height,false,src.format,isCube);
		var _this = this.shader;
		_this.constModified = true;
		_this.Quality__ = this.values.length;
		this.shader.values__ = this.values;
		this.shader.offsets__ = this.offsets;
		if(isCube) {
			this.shader.cubeTexture__ = src;
			var _this = this.shader;
			_this.constModified = true;
			_this.isCube__ = true;
		} else {
			this.shader.texture__ = src;
			var _this = this.shader;
			_this.constModified = true;
			_this.isCube__ = false;
		}
		var _this = this.shader.pixel__;
		var x = 1 / src.width;
		var y = 0;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _g = 0;
		var _g1 = faceCount;
		while(_g < _g1) {
			var i = _g++;
			this.get_engine().pushTarget(tmp,i);
			if(isCube) {
				this.shader.cubeDir__ = this.cubeDir[i];
			}
			this.render();
			this.get_engine().popTarget();
		}
		if(isCube) {
			this.shader.cubeTexture__ = tmp;
		} else {
			this.shader.texture__ = tmp;
		}
		var _this = this.shader.pixel__;
		var x = 0;
		var y = 1 / src.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var outDepth = output.depthBuffer;
		output.depthBuffer = null;
		var _g = 0;
		var _g1 = faceCount;
		while(_g < _g1) {
			var i = _g++;
			this.get_engine().pushTarget(output,i);
			if(isCube) {
				this.shader.cubeDir__ = this.cubeDir[i];
			}
			this.render();
			this.get_engine().popTarget();
		}
		output.depthBuffer = outDepth;
	}
	,__class__: h3d_pass_Blur
});
var h3d_pass__$Border_BorderShader = function() {
	this.color__ = new h3d_Vector();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._Border.BorderShader"] = h3d_pass__$Border_BorderShader;
h3d_pass__$Border_BorderShader.__name__ = "h3d.pass._Border.BorderShader";
h3d_pass__$Border_BorderShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$Border_BorderShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.color__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$Border_BorderShader
});
var h3d_pass_Border = function(width,height,size) {
	if(size == null) {
		size = 1;
	}
	h3d_pass_ScreenFx.call(this,new h3d_pass__$Border_BorderShader());
	var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
	var bbuf = this1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - size / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - size / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = size / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = size / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - (height - size) / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - (height - size) / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = (width - size) / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = (width - size) / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	this.primitive = new h3d_prim_RawPrimitive({ vbuf : bbuf, stride : 2, quads : true},true);
	var _this = this.shader.color__;
	var x = 1;
	var y = 1;
	var z = 1;
	var w = 1;
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = w;
};
$hxClasses["h3d.pass.Border"] = h3d_pass_Border;
h3d_pass_Border.__name__ = "h3d.pass.Border";
h3d_pass_Border.__super__ = h3d_pass_ScreenFx;
h3d_pass_Border.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	dispose: function() {
		h3d_pass_ScreenFx.prototype.dispose.call(this);
		this.primitive.dispose();
	}
	,__class__: h3d_pass_Border
});
var h3d_pass_ColorMatrixShader = function() {
	this.maskChannel__ = new h3d_Vector();
	this.maskPower__ = 0;
	this.maskMatB__ = new h3d_Vector();
	this.maskMatA__ = new h3d_Vector();
	this.matrix2__ = new h3d_Matrix();
	this.matrix__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass.ColorMatrixShader"] = h3d_pass_ColorMatrixShader;
h3d_pass_ColorMatrixShader.__name__ = "h3d.pass.ColorMatrixShader";
h3d_pass_ColorMatrixShader.__super__ = h3d_shader_ScreenShader;
h3d_pass_ColorMatrixShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.useAlpha__) {
			this.constBits |= 1;
		}
		if(this.useMask__) {
			this.constBits |= 2;
		}
		if(this.maskInvert__) {
			this.constBits |= 4;
		}
		if(this.hasSecondMatrix__) {
			this.constBits |= 8;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		case 2:
			return this.matrix__;
		case 3:
			return this.useAlpha__;
		case 4:
			return this.useMask__;
		case 5:
			return this.maskInvert__;
		case 6:
			return this.hasSecondMatrix__;
		case 7:
			return this.matrix2__;
		case 8:
			return this.mask__;
		case 9:
			return this.maskMatA__;
		case 10:
			return this.maskMatB__;
		case 11:
			return this.maskPower__;
		case 12:
			return this.maskChannel__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 11:
			return this.maskPower__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_pass_ColorMatrixShader
});
var h3d_pass_ColorMatrix = function(m) {
	h3d_pass_ScreenFx.call(this,new h3d_pass_ColorMatrixShader());
	if(m != null) {
		this.shader.matrix__ = m;
	} else {
		this.shader.matrix__.identity();
	}
	this.shader.maskPower__ = 1;
	var _this = this.shader.maskChannel__;
	var x = 1;
	var y = 0;
	var z = 0;
	var w = 0;
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = w;
};
$hxClasses["h3d.pass.ColorMatrix"] = h3d_pass_ColorMatrix;
h3d_pass_ColorMatrix.__name__ = "h3d.pass.ColorMatrix";
h3d_pass_ColorMatrix.__super__ = h3d_pass_ScreenFx;
h3d_pass_ColorMatrix.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	apply: function(src,out,mask,maskMatrix) {
		this.get_engine().pushTarget(out);
		this.shader.texture__ = src;
		var _this = this.shader;
		_this.constModified = true;
		_this.useMask__ = mask != null;
		if(mask != null) {
			this.shader.mask__ = mask;
			if(maskMatrix == null) {
				var _this = this.shader.maskMatA__;
				var x = 1;
				var y = 0;
				var z = 0;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
				var _this = this.shader.maskMatB__;
				var x = 0;
				var y = 1;
				var z = 0;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
			} else {
				var _this = this.shader.maskMatA__;
				var x = maskMatrix.a;
				var y = maskMatrix.c;
				var z = maskMatrix.x;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
				var _this = this.shader.maskMatB__;
				var x = maskMatrix.b;
				var y = maskMatrix.d;
				var z = maskMatrix.y;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
			}
		}
		this.render();
		this.get_engine().popTarget();
	}
	,__class__: h3d_pass_ColorMatrix
});
var h3d_pass__$Copy_ArrayCopyShader = function() {
	this.layer__ = 0;
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._Copy.ArrayCopyShader"] = h3d_pass__$Copy_ArrayCopyShader;
h3d_pass__$Copy_ArrayCopyShader.__name__ = "h3d.pass._Copy.ArrayCopyShader";
h3d_pass__$Copy_ArrayCopyShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$Copy_ArrayCopyShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		case 2:
			return this.layer__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$Copy_ArrayCopyShader
});
var h3d_pass__$Copy_CopyShader = function() {
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._Copy.CopyShader"] = h3d_pass__$Copy_CopyShader;
h3d_pass__$Copy_CopyShader.__name__ = "h3d.pass._Copy.CopyShader";
h3d_pass__$Copy_CopyShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$Copy_CopyShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$Copy_CopyShader
});
var h3d_pass_Copy = function() {
	h3d_pass_ScreenFx.call(this,new h3d_pass__$Copy_CopyShader());
};
$hxClasses["h3d.pass.Copy"] = h3d_pass_Copy;
h3d_pass_Copy.__name__ = "h3d.pass.Copy";
h3d_pass_Copy.run = function(from,to,blend,pass,layer) {
	var engine = h3d_Engine.CURRENT;
	if(to != null && from != null && (blend == null || blend == h2d_BlendMode.None) && pass == null && engine.driver.copyTexture(from,to)) {
		return;
	}
	var inst = engine.resCache.h[h3d_pass_Copy.__id__];
	if(inst == null) {
		inst = new h3d_pass_Copy();
		engine.resCache.set(h3d_pass_Copy,inst);
	}
	inst.apply(from,to,blend,pass,layer);
};
h3d_pass_Copy.__super__ = h3d_pass_ScreenFx;
h3d_pass_Copy.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	apply: function(from,to,blend,customPass,layer) {
		if(to != null) {
			this.get_engine().pushTarget(to,layer != null ? layer : 0);
		}
		this.shader.texture__ = from;
		if(customPass != null) {
			var old = this.pass;
			this.pass = customPass;
			if(blend != null) {
				this.pass.setBlendMode(blend);
			}
			var h = this.shaders;
			while(h.next != null) h = h.next;
			h.next = this.pass.shaders;
			this.render();
			this.pass = old;
			h.next = null;
		} else {
			this.pass.setBlendMode(blend == null ? h2d_BlendMode.None : blend);
			this.render();
		}
		this.shader.texture__ = null;
		if(to != null) {
			this.get_engine().popTarget();
		}
	}
	,__class__: h3d_pass_Copy
});
var h3d_pass__$CubeCopy_CubeCopyShader = function() {
	this.mat__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._CubeCopy.CubeCopyShader"] = h3d_pass__$CubeCopy_CubeCopyShader;
h3d_pass__$CubeCopy_CubeCopyShader.__name__ = "h3d.pass._CubeCopy.CubeCopyShader";
h3d_pass__$CubeCopy_CubeCopyShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$CubeCopy_CubeCopyShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		case 2:
			return this.mat__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$CubeCopy_CubeCopyShader
});
var h3d_pass_Default = function(name) {
	this.defaultSort = ($_=new h3d_pass_SortByMaterial(),$bind($_,$_.sort));
	h3d_pass_Base.call(this,name);
	this.manager = new h3d_pass_ShaderManager(this.getOutputs());
	this.initGlobals();
};
$hxClasses["h3d.pass.Default"] = h3d_pass_Default;
h3d_pass_Default.__name__ = "h3d.pass.Default";
h3d_pass_Default.__super__ = h3d_pass_Base;
h3d_pass_Default.prototype = $extend(h3d_pass_Base.prototype,{
	getOutputs: function() {
		return [hxsl_Output.Value("output.color")];
	}
	,processShaders: function(p,shaders) {
		var p = this.ctx.extraShaders;
		while(p != null) {
			shaders = this.ctx.allocShaderList(p.s,shaders);
			p = p.next;
		}
		return shaders;
	}
	,setupShaders: function(passes) {
		var lightInit = false;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			var shaders = p.pass.getShadersRec();
			shaders = this.processShaders(p,shaders);
			if(p.pass.enableLights && this.ctx.lightSystem != null) {
				if(!lightInit) {
					this.ctx.lightSystem.initGlobals(this.manager.globals);
					lightInit = true;
				}
				shaders = this.ctx.lightSystem.computeLight(p.obj,shaders);
			}
			p.shader = this.manager.compileShaders(shaders,p.pass.batchMode);
			p.shaders = shaders;
			var t = p.shader.fragment.textures;
			if(t == null) {
				p.texture = 0;
			} else {
				var _this = this.manager;
				var opt = true;
				if(opt == null) {
					opt = false;
				}
				var t1;
				if(t.perObjectGlobal != null) {
					var v = _this.globals.map.h[t.perObjectGlobal.gid];
					if(v == null) {
						throw haxe_Exception.thrown("Missing global value " + t.perObjectGlobal.path + " for shader " + _this.shaderInfo(shaders,t.perObjectGlobal.path));
					}
					var _g = t.type;
					var t2;
					if(_g._hx_index == 17) {
						var _g1 = _g.size;
						t2 = true;
					} else {
						t2 = false;
					}
					t1 = t2 ? v.texture : v;
				} else {
					var si = shaders;
					var n = t.instance;
					while(--n > 0) si = si.next;
					var v1 = si.s.getParamValue(t.index);
					if(v1 == null && !opt) {
						throw haxe_Exception.thrown("Missing param value " + Std.string(si.s) + "." + t.name);
					}
					t1 = v1;
				}
				p.texture = t1 == null ? 0 : t1.id;
			}
		}
	}
	,drawObject: function(p) {
		this.ctx.drawPass = p;
		this.ctx.engine.selectMaterial(p.pass);
		p.obj.draw(this.ctx);
	}
	,draw: function(passes,sort) {
		if(passes.current == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.ctx.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			this.manager.globals.map.h[g.gid] = g.value;
		}
		this.setGlobals();
		this.setupShaders(passes);
		if(sort == null) {
			this.defaultSort(passes);
		} else {
			sort(passes);
		}
		this.ctx.currentManager = this.manager;
		var buf = this.ctx.shaderBuffers;
		var prevShader = null;
		var _g2_o = passes.current;
		while(_g2_o != null) {
			var tmp = _g2_o;
			_g2_o = _g2_o.next;
			var p = tmp;
			var v = p.obj.absPos;
			this.manager.globals.map.h[this.globalModelView_id] = v;
			if(p.shader.globals.h.hasOwnProperty(this.globalModelViewInverse_id)) {
				var v1 = p.obj.getInvPos();
				this.manager.globals.map.h[this.globalModelViewInverse_id] = v1;
			}
			if(prevShader != p.shader) {
				prevShader = p.shader;
				this.ctx.engine.selectShader(p.shader);
				if(buf == null) {
					buf = this.ctx.shaderBuffers = new h3d_shader_Buffers(p.shader);
				} else {
					var s = p.shader;
					buf.vertex.grow(s.vertex);
					buf.fragment.grow(s.fragment);
				}
				this.manager.fillGlobals(buf,p.shader);
				this.ctx.engine.uploadShaderBuffers(buf,0);
			}
			if(!p.pass.dynamicParameters) {
				this.manager.fillParams(buf,p.shader,p.shaders);
				this.ctx.engine.uploadShaderBuffers(buf,1);
				this.ctx.engine.uploadShaderBuffers(buf,2);
				this.ctx.engine.uploadShaderBuffers(buf,3);
			}
			this.drawObject(p);
		}
		var _this = this.ctx;
		_this.cachedPos = 0;
		_this.drawPass = null;
	}
	,initGlobals: function() {
		var this1 = hxsl_Globals.allocID("camera.view");
		this.cameraView_id = this1;
		var this1 = hxsl_Globals.allocID("camera.zNear");
		this.cameraNear_id = this1;
		var this1 = hxsl_Globals.allocID("camera.zFar");
		this.cameraFar_id = this1;
		var this1 = hxsl_Globals.allocID("camera.proj");
		this.cameraProj_id = this1;
		var this1 = hxsl_Globals.allocID("camera.position");
		this.cameraPos_id = this1;
		var this1 = hxsl_Globals.allocID("camera.projDiag");
		this.cameraProjDiag_id = this1;
		var this1 = hxsl_Globals.allocID("camera.projFlip");
		this.cameraProjFlip_id = this1;
		var this1 = hxsl_Globals.allocID("camera.viewProj");
		this.cameraViewProj_id = this1;
		var this1 = hxsl_Globals.allocID("camera.inverseViewProj");
		this.cameraInverseViewProj_id = this1;
		var this1 = hxsl_Globals.allocID("global.time");
		this.globalTime_id = this1;
		var this1 = hxsl_Globals.allocID("global.pixelSize");
		this.pixelSize_id = this1;
		var this1 = hxsl_Globals.allocID("global.modelView");
		this.globalModelView_id = this1;
		var this1 = hxsl_Globals.allocID("global.modelViewInverse");
		this.globalModelViewInverse_id = this1;
	}
	,setGlobals: function() {
		var v = this.ctx.camera.mcam;
		this.manager.globals.map.h[this.cameraView_id] = v;
		var v = this.ctx.camera.zNear;
		this.manager.globals.map.h[this.cameraNear_id] = v;
		var v = this.ctx.camera.zFar;
		this.manager.globals.map.h[this.cameraFar_id] = v;
		var v = this.ctx.camera.mproj;
		this.manager.globals.map.h[this.cameraProj_id] = v;
		var v = this.ctx.camera.pos;
		this.manager.globals.map.h[this.cameraPos_id] = v;
		var v = new h3d_Vector(this.ctx.camera.mproj._11,this.ctx.camera.mproj._22,this.ctx.camera.mproj._33,this.ctx.camera.mproj._44);
		this.manager.globals.map.h[this.cameraProjDiag_id] = v;
		var v = this.ctx.engine.driver.hasFeature(h3d_impl_Feature.BottomLeftCoords) && this.ctx.engine.getCurrentTarget() != null ? -1 : 1;
		this.manager.globals.map.h[this.cameraProjFlip_id] = v;
		var v = this.ctx.camera.m;
		this.manager.globals.map.h[this.cameraViewProj_id] = v;
		var v = this.ctx.camera.getInverseViewProj();
		this.manager.globals.map.h[this.cameraInverseViewProj_id] = v;
		var v = this.ctx.time;
		this.manager.globals.map.h[this.globalTime_id] = v;
		var v = new h3d_Vector(2 / this.ctx.engine.width,2 / this.ctx.engine.height);
		this.manager.globals.map.h[this.pixelSize_id] = v;
	}
	,__class__: h3d_pass_Default
});
var h3d_pass_Shadows = function(light) {
	this.pcfScale = 1.0;
	this.pcfQuality = 1;
	this.bias = 0.01;
	this.power = 30.0;
	this.samplingKind = h3d_pass_ShadowSamplingKind.None;
	this.size = 1024;
	this.mode = h3d_pass_RenderMode.None;
	this.enabled = true;
	if(this.format == null) {
		this.format = hxd_PixelFormat.R16F;
	}
	if(!h3d_Engine.CURRENT.driver.isSupportedFormat(this.format)) {
		this.format = h3d_mat_Texture.nativeFormat;
	}
	h3d_pass_Default.call(this,"shadow");
	this.light = light;
	this.blur = new h3d_pass_Blur(5);
	this.blur.set_quality(0.5);
	var _this = this.blur.shader;
	_this.constModified = true;
	_this.isDepth__ = this.format == h3d_mat_Texture.nativeFormat;
};
$hxClasses["h3d.pass.Shadows"] = h3d_pass_Shadows;
h3d_pass_Shadows.__name__ = "h3d.pass.Shadows";
h3d_pass_Shadows.__super__ = h3d_pass_Default;
h3d_pass_Shadows.prototype = $extend(h3d_pass_Default.prototype,{
	set_size: function(s) {
		if(s != this.size && this.staticTexture != null) {
			this.staticTexture.dispose();
			this.staticTexture = null;
		}
		return this.size = s;
	}
	,getShadowProj: function() {
		return this.lightCamera.m;
	}
	,isUsingWorldDist: function() {
		return false;
	}
	,getOutputs: function() {
		if(this.isUsingWorldDist()) {
			return [hxsl_Output.Swiz(hxsl_Output.Value("output.worldDist",1),[hxsl_Component.X,hxsl_Component.X,hxsl_Component.X,hxsl_Component.X])];
		}
		if(this.format == h3d_mat_Texture.nativeFormat) {
			return [hxsl_Output.PackFloat(hxsl_Output.Value("output.depth"))];
		}
		return [hxsl_Output.Swiz(hxsl_Output.Value("output.depth",1),[hxsl_Component.X,hxsl_Component.X,hxsl_Component.X,hxsl_Component.X])];
	}
	,createDefaultShadowMap: function() {
		var tex = h3d_mat_Texture.fromColor(16777215);
		tex.name = "defaultShadowMap";
		return tex;
	}
	,syncShader: function(texture) {
	}
	,filterPasses: function(passes) {
		if(!this.ctx.computingStatic) {
			switch(this.mode._hx_index) {
			case 0:
				return false;
			case 1:
				var tmp;
				if(this.staticTexture != null) {
					var _this = this.staticTexture;
					tmp = _this.t == null && _this.realloc == null;
				} else {
					tmp = true;
				}
				if(tmp) {
					this.staticTexture = this.createDefaultShadowMap();
				}
				this.syncShader(this.staticTexture);
				return false;
			case 2:
				return true;
			case 3:
				var tmp;
				if(this.staticTexture != null) {
					var _this = this.staticTexture;
					tmp = _this.t == null && _this.realloc == null;
				} else {
					tmp = true;
				}
				if(tmp) {
					this.staticTexture = this.createDefaultShadowMap();
				}
				return true;
			}
		} else {
			switch(this.mode._hx_index) {
			case 0:
				return false;
			case 1:
				var head = null;
				var prev = null;
				var disc = passes.discarded;
				var discQueue = passes.lastDisc;
				var cur = passes.current;
				while(cur != null) {
					if(cur.pass.isStatic == true) {
						if(head == null) {
							prev = cur;
							head = prev;
						} else {
							prev.next = cur;
							prev = cur;
						}
					} else if(disc == null) {
						discQueue = cur;
						disc = discQueue;
					} else {
						discQueue.next = cur;
						discQueue = cur;
					}
					cur = cur.next;
				}
				if(prev != null) {
					prev.next = null;
				}
				if(discQueue != null) {
					discQueue.next = null;
				}
				passes.current = head;
				passes.discarded = disc;
				passes.lastDisc = discQueue;
				return true;
			case 2:
				return false;
			case 3:
				var head = null;
				var prev = null;
				var disc = passes.discarded;
				var discQueue = passes.lastDisc;
				var cur = passes.current;
				while(cur != null) {
					if(cur.pass.isStatic == true) {
						if(head == null) {
							prev = cur;
							head = prev;
						} else {
							prev.next = cur;
							prev = cur;
						}
					} else if(disc == null) {
						discQueue = cur;
						disc = discQueue;
					} else {
						discQueue.next = cur;
						discQueue = cur;
					}
					cur = cur.next;
				}
				if(prev != null) {
					prev.next = null;
				}
				if(discQueue != null) {
					discQueue.next = null;
				}
				passes.current = head;
				passes.discarded = disc;
				passes.lastDisc = discQueue;
				return true;
			}
		}
	}
	,__class__: h3d_pass_Shadows
});
var h3d_pass_DirShadowMap = function(light) {
	this.minDist = -1.0;
	this.maxDist = -1.0;
	this.autoShrink = true;
	this.mergePass = new h3d_pass_ScreenFx(new h3d_shader_MinMaxShader());
	h3d_pass_Shadows.call(this,light);
	this.lightCamera = new h3d_Camera();
	this.lightCamera.orthoBounds = new h3d_col_Bounds();
	this.shader = this.dshader = new h3d_shader_DirShadow();
	this.border = new h3d_pass_Border(this.size,this.size);
	this.customDepth = h3d_Engine.CURRENT.driver.hasFeature(h3d_impl_Feature.AllocDepthBuffer);
	if(!this.customDepth) {
		this.depth = h3d_mat_DepthBuffer.getDefault();
	}
};
$hxClasses["h3d.pass.DirShadowMap"] = h3d_pass_DirShadowMap;
h3d_pass_DirShadowMap.__name__ = "h3d.pass.DirShadowMap";
h3d_pass_DirShadowMap.__super__ = h3d_pass_Shadows;
h3d_pass_DirShadowMap.prototype = $extend(h3d_pass_Shadows.prototype,{
	set_mode: function(m) {
		var _this = this.dshader;
		_this.constModified = true;
		_this.enable__ = m != h3d_pass_RenderMode.None;
		return this.mode = m;
	}
	,set_size: function(s) {
		if(this.border != null && this.size != s) {
			this.border.dispose();
			this.border = new h3d_pass_Border(s,s);
		}
		return h3d_pass_Shadows.prototype.set_size.call(this,s);
	}
	,calcShadowBounds: function(camera) {
		var bounds = camera.orthoBounds;
		if(this.autoShrink) {
			var mtmp = new h3d_Matrix();
			this.ctx.scene.iterVisibleMeshes(function(m) {
				if(m.primitive == null || !m.material.castShadows) {
					return;
				}
				var b = m.primitive.getBounds();
				if(b.xMin > b.xMax) {
					return;
				}
				mtmp.multiply3x4(m.getAbsPos(),camera.mcam);
				var x = b.xMin;
				var y = b.yMin;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMin;
				var y = b.yMin;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMin;
				var y = b.yMax;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMin;
				var y = b.yMax;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMin;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMin;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMax;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMax;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
			});
		} else if(this.mode == h3d_pass_RenderMode.Dynamic) {
			bounds.xMin = -1e20;
			bounds.xMax = 1e20;
			bounds.yMin = -1e20;
			bounds.yMax = 1e20;
			bounds.zMin = -1e20;
			bounds.zMax = 1e20;
		}
		if(this.mode == h3d_pass_RenderMode.Dynamic) {
			var cameraBounds = new h3d_col_Bounds();
			var zMax = 1.0;
			var zMin = 0.0;
			var n = this.ctx.camera.zNear;
			var f = this.ctx.camera.zFar;
			if(this.maxDist > 0) {
				var f1 = this.maxDist;
				var min = n;
				var max = f;
				if(max == null) {
					max = 1.;
				}
				if(min == null) {
					min = 0.;
				}
				zMax = ((f + n - 2.0 * n * f / (f1 < min ? min : f1 > max ? max : f1)) / (f - n) + 1.0) / 2.0;
			}
			if(this.minDist > 0) {
				var f1 = this.minDist;
				var min = n;
				var max = f;
				if(max == null) {
					max = 1.;
				}
				if(min == null) {
					min = 0.;
				}
				zMin = ((f + n - 2.0 * n * f / (f1 < min ? min : f1 > max ? max : f1)) / (f - n) + 1.0) / 2.0;
			}
			var _g = 0;
			var _g1 = this.ctx.camera.getFrustumCorners(zMax,zMin);
			while(_g < _g1.length) {
				var pt = _g1[_g];
				++_g;
				var m = camera.mcam;
				var px = pt.x * m._11 + pt.y * m._21 + pt.z * m._31 + pt.w * m._41;
				var py = pt.x * m._12 + pt.y * m._22 + pt.z * m._32 + pt.w * m._42;
				var pz = pt.x * m._13 + pt.y * m._23 + pt.z * m._33 + pt.w * m._43;
				var pw = pt.x * m._14 + pt.y * m._24 + pt.z * m._34 + pt.w * m._44;
				pt.x = px;
				pt.y = py;
				pt.z = pz;
				pt.w = pw;
				var x = pt.x;
				var y = pt.y;
				var z = pt.z;
				if(x < cameraBounds.xMin) {
					cameraBounds.xMin = x;
				}
				if(x > cameraBounds.xMax) {
					cameraBounds.xMax = x;
				}
				if(y < cameraBounds.yMin) {
					cameraBounds.yMin = y;
				}
				if(y > cameraBounds.yMax) {
					cameraBounds.yMax = y;
				}
				if(z < cameraBounds.zMin) {
					cameraBounds.zMin = z;
				}
				if(z > cameraBounds.zMax) {
					cameraBounds.zMax = z;
				}
			}
			if(this.autoShrink) {
				cameraBounds.zMin = bounds.zMin;
				bounds.intersection(bounds,cameraBounds);
			} else {
				bounds.load(cameraBounds);
			}
		}
		bounds.scaleCenter(1.01);
	}
	,setGlobals: function() {
		h3d_pass_Shadows.prototype.setGlobals.call(this);
		if(this.mode != h3d_pass_RenderMode.Mixed || this.ctx.computingStatic) {
			var _this = this.lightCamera.orthoBounds;
			_this.xMin = 1e20;
			_this.xMax = -1e20;
			_this.yMin = 1e20;
			_this.yMax = -1e20;
			_this.zMin = 1e20;
			_this.zMax = -1e20;
			this.calcShadowBounds(this.lightCamera);
			this.lightCamera.update();
		}
		var v = this.getShadowProj();
		this.manager.globals.map.h[this.cameraViewProj_id] = v;
	}
	,syncShader: function(texture) {
		var _this = this.dshader;
		_this.constModified = true;
		_this.shadowMap__ = texture;
		var _this = this.dshader;
		_this.constModified = true;
		_this.shadowMapChannel__ = this.format == h3d_mat_Texture.nativeFormat ? hxsl_Channel.PackedFloat : hxsl_Channel.R;
		this.dshader.shadowBias__ = this.bias;
		this.dshader.shadowPower__ = this.power;
		this.dshader.shadowProj__ = this.getShadowProj();
		var _this = this.dshader;
		_this.constModified = true;
		_this.USE_ESM__ = this.samplingKind == h3d_pass_ShadowSamplingKind.ESM;
		this.dshader.shadowPower__ = this.power;
		var _this = this.dshader;
		_this.constModified = true;
		_this.USE_PCF__ = this.samplingKind == h3d_pass_ShadowSamplingKind.PCF;
		var _this = this.dshader.shadowRes__;
		var x = texture.width;
		var y = texture.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		this.dshader.pcfScale__ = this.pcfScale;
		var _this = this.dshader;
		_this.constModified = true;
		_this.pcfQuality__ = this.pcfQuality;
	}
	,draw: function(passes,sort) {
		var _gthis = this;
		if(!this.enabled) {
			return;
		}
		if(!this.filterPasses(passes)) {
			return;
		}
		var f = function(col) {
			return col.inFrustum(_gthis.lightCamera.frustum);
		};
		var prevCollider = null;
		var prevResult = true;
		var head = null;
		var prev = null;
		var disc = passes.discarded;
		var discQueue = passes.lastDisc;
		var cur = passes.current;
		while(cur != null) {
			var col = cur.obj.cullingCollider;
			var tmp;
			if(col == null) {
				tmp = true;
			} else {
				if(col != prevCollider) {
					prevCollider = col;
					prevResult = f(col);
				}
				tmp = prevResult;
			}
			if(tmp) {
				if(head == null) {
					prev = cur;
					head = prev;
				} else {
					prev.next = cur;
					prev = cur;
				}
			} else if(disc == null) {
				discQueue = cur;
				disc = discQueue;
			} else {
				discQueue.next = cur;
				discQueue = cur;
			}
			cur = cur.next;
		}
		if(prev != null) {
			prev.next = null;
		}
		if(discQueue != null) {
			discQueue.next = null;
		}
		passes.current = head;
		passes.discarded = disc;
		passes.lastDisc = discQueue;
		var texture = this.ctx.textures.allocTarget("dirShadowMap",this.size,this.size,false,this.format);
		if(this.customDepth && (this.depth == null || this.depth.width != this.size || this.depth.height != this.size || this.depth.isDisposed())) {
			if(this.depth != null) {
				this.depth.dispose();
			}
			this.depth = new h3d_mat_DepthBuffer(this.size,this.size);
		}
		texture.depthBuffer = this.depth;
		if(this.mode != h3d_pass_RenderMode.Mixed || this.ctx.computingStatic) {
			var ct = this.ctx.camera.target;
			var slight = this.light == null ? this.ctx.lightSystem.shadowLight : this.light;
			var ldir = slight == null ? null : slight.getShadowDirection();
			if(ldir == null) {
				var _this = this.lightCamera.target;
				var x = 0;
				var y = 0;
				var z = -1;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
			} else {
				var _this = this.lightCamera.target;
				var x = ldir.x;
				var y = ldir.y;
				var z = ldir.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
				var _this = this.lightCamera.target;
				var k = _this.x * _this.x + _this.y * _this.y + _this.z * _this.z;
				if(k < 1e-10) {
					k = 0;
				} else {
					k = 1. / Math.sqrt(k);
				}
				_this.x *= k;
				_this.y *= k;
				_this.z *= k;
			}
			this.lightCamera.target.x += ct.x;
			this.lightCamera.target.y += ct.y;
			this.lightCamera.target.z += ct.z;
			var _this = this.lightCamera.pos;
			_this.x = ct.x;
			_this.y = ct.y;
			_this.z = ct.z;
			_this.w = ct.w;
			this.lightCamera.update();
		}
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(16777215,1);
		h3d_pass_Shadows.prototype.draw.call(this,passes,sort);
		if(this.border != null) {
			this.border.render();
		}
		this.ctx.engine.popTarget();
		if(this.mode == h3d_pass_RenderMode.Mixed && !this.ctx.computingStatic) {
			var merge = this.ctx.textures.allocTarget("mergedDirShadowMap",this.size,this.size,false,this.format);
			this.mergePass.shader.texA__ = texture;
			this.mergePass.shader.texB__ = this.staticTexture;
			this.ctx.engine.pushTarget(merge);
			this.mergePass.render();
			this.ctx.engine.popTarget();
			texture = merge;
		}
		if(this.blur.radius > 0 && (this.mode != h3d_pass_RenderMode.Mixed || !this.ctx.computingStatic)) {
			this.blur.apply(this.ctx,texture);
		}
		this.syncShader(texture);
	}
	,__class__: h3d_pass_DirShadowMap
});
var h3d_pass_DefaultShadowMap = function(size,format) {
	if(size == null) {
		size = 1024;
	}
	if(format != null) {
		this.format = format;
	}
	h3d_pass_DirShadowMap.call(this,null);
	this.set_size(size);
	this.color = new h3d_Vector();
	this.set_mode(h3d_pass_RenderMode.Dynamic);
	this.shadowMapId = hxsl_Globals.allocID("shadow.map");
	this.shadowProjId = hxsl_Globals.allocID("shadow.proj");
	this.shadowColorId = hxsl_Globals.allocID("shadow.color");
	this.shadowPowerId = hxsl_Globals.allocID("shadow.power");
	this.shadowBiasId = hxsl_Globals.allocID("shadow.bias");
};
$hxClasses["h3d.pass.DefaultShadowMap"] = h3d_pass_DefaultShadowMap;
h3d_pass_DefaultShadowMap.__name__ = "h3d.pass.DefaultShadowMap";
h3d_pass_DefaultShadowMap.__super__ = h3d_pass_DirShadowMap;
h3d_pass_DefaultShadowMap.prototype = $extend(h3d_pass_DirShadowMap.prototype,{
	draw: function(passes,sort) {
		h3d_pass_DirShadowMap.prototype.draw.call(this,passes,sort);
		this.ctx.setGlobalID(this.shadowMapId,{ texture : this.dshader.shadowMap__, channel : this.format == h3d_mat_Texture.nativeFormat ? hxsl_Channel.PackedFloat : hxsl_Channel.R});
		this.ctx.setGlobalID(this.shadowProjId,this.getShadowProj());
		this.ctx.setGlobalID(this.shadowColorId,this.color);
		this.ctx.setGlobalID(this.shadowPowerId,this.power);
		this.ctx.setGlobalID(this.shadowBiasId,this.bias);
	}
	,__class__: h3d_pass_DefaultShadowMap
});
var h3d_pass__$HardwarePick_FixedColor = function() {
	this.viewport__ = new h3d_Vector();
	this.colorID__ = new h3d_Vector();
	hxsl_Shader.call(this);
};
$hxClasses["h3d.pass._HardwarePick.FixedColor"] = h3d_pass__$HardwarePick_FixedColor;
h3d_pass__$HardwarePick_FixedColor.__name__ = "h3d.pass._HardwarePick.FixedColor";
h3d_pass__$HardwarePick_FixedColor.__super__ = hxsl_Shader;
h3d_pass__$HardwarePick_FixedColor.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.colorID__;
		case 1:
			return this.viewport__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_pass__$HardwarePick_FixedColor
});
var h3d_pass_PassList = function(current) {
	this.current = current;
	this.discarded = this.lastDisc = null;
};
$hxClasses["h3d.pass.PassList"] = h3d_pass_PassList;
h3d_pass_PassList.__name__ = "h3d.pass.PassList";
h3d_pass_PassList.prototype = {
	__class__: h3d_pass_PassList
};
var h3d_pass_PassObject = function() {
	this.texture = 0;
};
$hxClasses["h3d.pass.PassObject"] = h3d_pass_PassObject;
h3d_pass_PassObject.__name__ = "h3d.pass.PassObject";
h3d_pass_PassObject.prototype = {
	__class__: h3d_pass_PassObject
};
var h3d_pass_ShaderManager = function(output) {
	this.shaderCache = hxsl_Cache.get();
	this.globals = new hxsl_Globals();
	this.currentOutput = new hxsl_ShaderList(null);
	this.setOutput(output);
};
$hxClasses["h3d.pass.ShaderManager"] = h3d_pass_ShaderManager;
h3d_pass_ShaderManager.__name__ = "h3d.pass.ShaderManager";
h3d_pass_ShaderManager.prototype = {
	setOutput: function(output) {
		if(output == null) {
			output = [hxsl_Output.Value("output.color")];
		}
		this.currentOutput.s = this.shaderCache.getLinkShader(output);
	}
	,fillRec: function(v,type,out,pos) {
		switch(type._hx_index) {
		case 1:
			out[pos] = v;
			return 1;
		case 3:
			out[pos] = v;
			return 1;
		case 5:
			var _g = type.t;
			var n = type.size;
			var v1 = v;
			out[pos++] = v1.x;
			out[pos++] = v1.y;
			switch(n) {
			case 3:
				out[pos++] = v1.z;
				break;
			case 4:
				out[pos++] = v1.z;
				out[pos++] = v1.w;
				break;
			}
			return n;
		case 6:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = 0;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = 0;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = 0;
			return 12;
		case 7:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = m._41;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = m._42;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = m._43;
			out[pos++] = m._14;
			out[pos++] = m._24;
			out[pos++] = m._34;
			out[pos++] = m._44;
			return 16;
		case 8:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = m._41;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = m._42;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = m._43;
			return 12;
		case 13:
			var vl = type.vl;
			var tot = 0;
			var _g = 0;
			while(_g < vl.length) {
				var vv = vl[_g];
				++_g;
				tot += this.fillRec(Reflect.field(v,vv.name),vv.type,out,pos + tot);
			}
			return tot;
		case 15:
			var _g = type.size;
			var _g1 = type.t;
			switch(_g1._hx_index) {
			case 3:
				if(_g._hx_index == 0) {
					var len = _g.v;
					var v1 = v;
					var size = 0;
					var count = v1.length < len ? v1.length : len;
					var _g2 = 0;
					var _g3 = count;
					while(_g2 < _g3) {
						var i = _g2++;
						out[pos++] = v1[i];
					}
					return len;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
				break;
			case 5:
				if(_g1.size == 4) {
					if(_g1.t._hx_index == 1) {
						if(_g._hx_index == 0) {
							var len = _g.v;
							var v1 = v;
							var _g2 = 0;
							var _g3 = len;
							while(_g2 < _g3) {
								var i = _g2++;
								var n = v1[i];
								if(n == null) {
									break;
								}
								out[pos++] = n.x;
								out[pos++] = n.y;
								out[pos++] = n.z;
								out[pos++] = n.w;
							}
							return len * 4;
						} else {
							throw haxe_Exception.thrown("assert " + Std.string(type));
						}
					} else if(_g._hx_index == 0) {
						var len = _g.v;
						var t = _g1;
						var v1 = v;
						var size = 0;
						var _g2 = 0;
						var _g3 = len;
						while(_g2 < _g3) {
							var i = _g2++;
							var n = v1[i];
							if(n == null) {
								break;
							}
							size = this.fillRec(n,t,out,pos);
							pos += size;
						}
						return len * size;
					} else {
						throw haxe_Exception.thrown("assert " + Std.string(type));
					}
				} else if(_g._hx_index == 0) {
					var len = _g.v;
					var t = _g1;
					var v1 = v;
					var size = 0;
					var _g2 = 0;
					var _g3 = len;
					while(_g2 < _g3) {
						var i = _g2++;
						var n = v1[i];
						if(n == null) {
							break;
						}
						size = this.fillRec(n,t,out,pos);
						pos += size;
					}
					return len * size;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
				break;
			case 8:
				if(_g._hx_index == 0) {
					var len = _g.v;
					var v1 = v;
					var _g2 = 0;
					var _g3 = len;
					while(_g2 < _g3) {
						var i = _g2++;
						var m = v1[i];
						if(m == null) {
							break;
						}
						out[pos++] = m._11;
						out[pos++] = m._21;
						out[pos++] = m._31;
						out[pos++] = m._41;
						out[pos++] = m._12;
						out[pos++] = m._22;
						out[pos++] = m._32;
						out[pos++] = m._42;
						out[pos++] = m._13;
						out[pos++] = m._23;
						out[pos++] = m._33;
						out[pos++] = m._43;
					}
					return len * 12;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
				break;
			default:
				if(_g._hx_index == 0) {
					var len = _g.v;
					var t = _g1;
					var v1 = v;
					var size = 0;
					var _g = 0;
					var _g1 = len;
					while(_g < _g1) {
						var i = _g++;
						var n = v1[i];
						if(n == null) {
							break;
						}
						size = this.fillRec(n,t,out,pos);
						pos += size;
					}
					return len * size;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
			}
			break;
		default:
			throw haxe_Exception.thrown("assert " + Std.string(type));
		}
	}
	,shaderInfo: function(shaders,path) {
		var name = path.split(".").pop();
		while(shaders != null) {
			var inst = shaders.s.instance;
			var _g = 0;
			var _g1 = inst.shader.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v.name == name) {
					return shaders.s.toString();
				}
			}
			shaders = shaders.next;
		}
		return "(not found)";
	}
	,fillGlobals: function(buf,s) {
		var _gthis = this;
		var s1 = s.vertex;
		var g = s1.globals;
		var ptr = buf.vertex.globals;
		while(g != null) {
			var v = _gthis.globals.map.h[g.gid];
			if(v == null) {
				if(g.path == "__consts__") {
					_gthis.fillRec(s1.consts,g.type,ptr,g.pos);
					g = g.next;
					continue;
				}
				throw haxe_Exception.thrown("Missing global value " + g.path);
			}
			_gthis.fillRec(v,g.type,ptr,g.pos);
			g = g.next;
		}
		var s1 = s.fragment;
		var g = s1.globals;
		var ptr = buf.fragment.globals;
		while(g != null) {
			var v = _gthis.globals.map.h[g.gid];
			if(v == null) {
				if(g.path == "__consts__") {
					_gthis.fillRec(s1.consts,g.type,ptr,g.pos);
					g = g.next;
					continue;
				}
				throw haxe_Exception.thrown("Missing global value " + g.path);
			}
			_gthis.fillRec(v,g.type,ptr,g.pos);
			g = g.next;
		}
	}
	,fillParams: function(buf,s,shaders) {
		var _gthis = this;
		var curInstance = -1;
		var curInstanceValue = null;
		var buf1 = buf.vertex;
		var s1 = s.vertex;
		var p = s1.params;
		var ptr = buf1.params;
		while(p != null) {
			var v;
			if(p.perObjectGlobal == null) {
				if(p.type == hxsl_Type.TFloat) {
					var index = p.instance;
					var i;
					if(curInstance == index) {
						i = curInstanceValue;
					} else {
						var si = shaders;
						curInstance = index;
						while(--index > 0) si = si.next;
						curInstanceValue = si.s;
						i = curInstanceValue;
					}
					ptr[p.pos] = i.getParamFloatValue(p.index);
					p = p.next;
					continue;
				}
				var index1 = p.instance;
				var v1;
				if(curInstance == index1) {
					v1 = curInstanceValue;
				} else {
					var si1 = shaders;
					curInstance = index1;
					while(--index1 > 0) si1 = si1.next;
					curInstanceValue = si1.s;
					v1 = curInstanceValue;
				}
				v = v1.getParamValue(p.index);
				if(v == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(curInstanceValue) + "." + p.name);
				}
			} else if(p.perObjectGlobal != null) {
				var v2 = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v2 == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var v3;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					v3 = true;
				} else {
					v3 = false;
				}
				v = v3 ? v2.texture : v2;
			} else {
				var si2 = shaders;
				var n = p.instance;
				while(--n > 0) si2 = si2.next;
				var v4 = si2.s.getParamValue(p.index);
				if(v4 == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(si2.s) + "." + p.name);
				}
				v = v4;
			}
			_gthis.fillRec(v,p.type,ptr,p.pos);
			p = p.next;
		}
		var tid = 0;
		var p = s1.textures;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var t;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var t1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					t1 = true;
				} else {
					t1 = false;
				}
				t = t1 ? v.texture : v;
			} else {
				var si = shaders;
				var n = p.instance;
				while(--n > 0) si = si.next;
				var v1 = si.s.getParamValue(p.index);
				if(v1 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(si.s) + "." + p.name);
				}
				t = v1;
			}
			if(p.pos < 0) {
				var arr = t;
				var _g2 = 0;
				var _g3 = -p.pos;
				while(_g2 < _g3) {
					var i = _g2++;
					buf1.tex[tid++] = arr[i];
				}
			} else {
				buf1.tex[tid++] = t;
			}
			p = p.next;
		}
		var p = s1.buffers;
		var bid = 0;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var b;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var b1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					b1 = true;
				} else {
					b1 = false;
				}
				b = b1 ? v.texture : v;
			} else {
				var si = shaders;
				var n = p.instance;
				while(--n > 0) si = si.next;
				var v1 = si.s.getParamValue(p.index);
				if(v1 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(si.s) + "." + p.name);
				}
				b = v1;
			}
			buf1.buffers[bid++] = b;
			p = p.next;
		}
		var buf1 = buf.fragment;
		var s1 = s.fragment;
		var p = s1.params;
		var ptr = buf1.params;
		while(p != null) {
			var v;
			if(p.perObjectGlobal == null) {
				if(p.type == hxsl_Type.TFloat) {
					var index = p.instance;
					var i;
					if(curInstance == index) {
						i = curInstanceValue;
					} else {
						var si = shaders;
						curInstance = index;
						while(--index > 0) si = si.next;
						curInstanceValue = si.s;
						i = curInstanceValue;
					}
					ptr[p.pos] = i.getParamFloatValue(p.index);
					p = p.next;
					continue;
				}
				var index1 = p.instance;
				var v1;
				if(curInstance == index1) {
					v1 = curInstanceValue;
				} else {
					var si1 = shaders;
					curInstance = index1;
					while(--index1 > 0) si1 = si1.next;
					curInstanceValue = si1.s;
					v1 = curInstanceValue;
				}
				v = v1.getParamValue(p.index);
				if(v == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(curInstanceValue) + "." + p.name);
				}
			} else if(p.perObjectGlobal != null) {
				var v2 = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v2 == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var v3;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					v3 = true;
				} else {
					v3 = false;
				}
				v = v3 ? v2.texture : v2;
			} else {
				var si2 = shaders;
				var n = p.instance;
				while(--n > 0) si2 = si2.next;
				var v4 = si2.s.getParamValue(p.index);
				if(v4 == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(si2.s) + "." + p.name);
				}
				v = v4;
			}
			_gthis.fillRec(v,p.type,ptr,p.pos);
			p = p.next;
		}
		var tid = 0;
		var p = s1.textures;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var t;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var t1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					t1 = true;
				} else {
					t1 = false;
				}
				t = t1 ? v.texture : v;
			} else {
				var si = shaders;
				var n = p.instance;
				while(--n > 0) si = si.next;
				var v1 = si.s.getParamValue(p.index);
				if(v1 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(si.s) + "." + p.name);
				}
				t = v1;
			}
			if(p.pos < 0) {
				var arr = t;
				var _g2 = 0;
				var _g3 = -p.pos;
				while(_g2 < _g3) {
					var i = _g2++;
					buf1.tex[tid++] = arr[i];
				}
			} else {
				buf1.tex[tid++] = t;
			}
			p = p.next;
		}
		var p = s1.buffers;
		var bid = 0;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var b;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var b1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					b1 = true;
				} else {
					b1 = false;
				}
				b = b1 ? v.texture : v;
			} else {
				var si = shaders;
				var n = p.instance;
				while(--n > 0) si = si.next;
				var v1 = si.s.getParamValue(p.index);
				if(v1 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(si.s) + "." + p.name);
				}
				b = v1;
			}
			buf1.buffers[bid++] = b;
			p = p.next;
		}
	}
	,compileShaders: function(shaders,batchMode) {
		if(batchMode == null) {
			batchMode = false;
		}
		this.globals.maxChannels = 0;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			s1.updateConstants(this.globals);
		}
		this.currentOutput.next = shaders;
		var s = this.shaderCache.link(this.currentOutput,batchMode);
		this.currentOutput.next = null;
		return s;
	}
	,__class__: h3d_pass_ShaderManager
};
var h3d_pass_RenderMode = $hxEnums["h3d.pass.RenderMode"] = { __ename__ : true, __constructs__ : ["None","Static","Dynamic","Mixed"]
	,None: {_hx_index:0,__enum__:"h3d.pass.RenderMode",toString:$estr}
	,Static: {_hx_index:1,__enum__:"h3d.pass.RenderMode",toString:$estr}
	,Dynamic: {_hx_index:2,__enum__:"h3d.pass.RenderMode",toString:$estr}
	,Mixed: {_hx_index:3,__enum__:"h3d.pass.RenderMode",toString:$estr}
};
h3d_pass_RenderMode.__empty_constructs__ = [h3d_pass_RenderMode.None,h3d_pass_RenderMode.Static,h3d_pass_RenderMode.Dynamic,h3d_pass_RenderMode.Mixed];
var h3d_pass_ShadowSamplingKind = $hxEnums["h3d.pass.ShadowSamplingKind"] = { __ename__ : true, __constructs__ : ["None","PCF","ESM"]
	,None: {_hx_index:0,__enum__:"h3d.pass.ShadowSamplingKind",toString:$estr}
	,PCF: {_hx_index:1,__enum__:"h3d.pass.ShadowSamplingKind",toString:$estr}
	,ESM: {_hx_index:2,__enum__:"h3d.pass.ShadowSamplingKind",toString:$estr}
};
h3d_pass_ShadowSamplingKind.__empty_constructs__ = [h3d_pass_ShadowSamplingKind.None,h3d_pass_ShadowSamplingKind.PCF,h3d_pass_ShadowSamplingKind.ESM];
var h3d_pass_SortByMaterial = function() {
	this.textureCount = 1;
	this.shaderCount = 1;
	this.shaderIdMap = [];
	this.textureIdMap = [];
};
$hxClasses["h3d.pass.SortByMaterial"] = h3d_pass_SortByMaterial;
h3d_pass_SortByMaterial.__name__ = "h3d.pass.SortByMaterial";
h3d_pass_SortByMaterial.prototype = {
	sort: function(passes) {
		var _gthis = this;
		var shaderStart = this.shaderCount;
		var textureStart = this.textureCount;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			if(this.shaderIdMap[p.shader.id] < shaderStart || this.shaderIdMap[p.shader.id] == null) {
				this.shaderIdMap[p.shader.id] = this.shaderCount++;
			}
			if(this.textureIdMap[p.texture] < textureStart || this.textureIdMap[p.shader.id] == null) {
				this.textureIdMap[p.texture] = this.textureCount++;
			}
		}
		var list = passes.current;
		var tmp;
		if(list == null) {
			tmp = null;
		} else {
			var insize = 1;
			var nmerges;
			var psize = 0;
			var qsize = 0;
			var p;
			var q;
			var e;
			var tail;
			while(true) {
				p = list;
				list = null;
				tail = null;
				nmerges = 0;
				while(p != null) {
					++nmerges;
					q = p;
					psize = 0;
					var _g = 0;
					var _g1 = insize;
					while(_g < _g1) {
						var i = _g++;
						++psize;
						q = q.next;
						if(q == null) {
							break;
						}
					}
					qsize = insize;
					while(psize > 0 || qsize > 0 && q != null) {
						if(psize == 0) {
							e = q;
							q = q.next;
							--qsize;
						} else {
							var tmp1;
							if(!(qsize == 0 || q == null)) {
								var d = _gthis.shaderIdMap[p.shader.id] - _gthis.shaderIdMap[q.shader.id];
								tmp1 = (d != 0 ? d : _gthis.textureIdMap[p.texture] - _gthis.textureIdMap[q.texture]) <= 0;
							} else {
								tmp1 = true;
							}
							if(tmp1) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
						}
						if(tail != null) {
							tail.next = e;
						} else {
							list = e;
						}
						tail = e;
					}
					p = q;
				}
				tail.next = null;
				if(nmerges <= 1) {
					break;
				}
				insize *= 2;
			}
			tmp = list;
		}
		passes.current = tmp;
	}
	,__class__: h3d_pass_SortByMaterial
};
var h3d_prim_Plane2D = function() {
	h3d_prim_Primitive.call(this);
};
$hxClasses["h3d.prim.Plane2D"] = h3d_prim_Plane2D;
h3d_prim_Plane2D.__name__ = "h3d.prim.Plane2D";
h3d_prim_Plane2D.get = function() {
	var engine = h3d_Engine.CURRENT;
	var inst = engine.resCache.h[h3d_prim_Plane2D.__id__];
	if(inst == null) {
		inst = new h3d_prim_Plane2D();
		engine.resCache.set(h3d_prim_Plane2D,inst);
	}
	return inst;
};
h3d_prim_Plane2D.__super__ = h3d_prim_Primitive;
h3d_prim_Plane2D.prototype = $extend(h3d_prim_Primitive.prototype,{
	alloc: function(engine) {
		var this1 = hxd__$FloatBuffer_Float32Expand._new(0);
		var v = this1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		this.buffer = h3d_Buffer.ofFloats(v,4,[h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat]);
	}
	,render: function(engine) {
		if(this.buffer == null || this.buffer.isDisposed()) {
			this.alloc(engine);
		}
		engine.renderBuffer(this.buffer,engine.mem.quadIndexes,2,0,-1);
	}
	,__class__: h3d_prim_Plane2D
});
var h3d_prim_RawPrimitive = function(inf,persist) {
	if(persist == null) {
		persist = false;
	}
	h3d_prim_Primitive.call(this);
	this.onContextLost = function() {
		return inf;
	};
	this.bounds = inf.bounds;
	this.alloc(null);
	if(!persist) {
		this.onContextLost = null;
	}
};
$hxClasses["h3d.prim.RawPrimitive"] = h3d_prim_RawPrimitive;
h3d_prim_RawPrimitive.__name__ = "h3d.prim.RawPrimitive";
h3d_prim_RawPrimitive.__super__ = h3d_prim_Primitive;
h3d_prim_RawPrimitive.prototype = $extend(h3d_prim_Primitive.prototype,{
	alloc: function(engine) {
		if(this.onContextLost == null) {
			throw haxe_Exception.thrown("Cannot realloc " + Std.string(this));
		}
		var inf = this.onContextLost();
		var flags = [];
		if(inf.ibuf == null) {
			flags.push(inf.quads ? h3d_BufferFlag.Quads : h3d_BufferFlag.Triangles);
		}
		if(inf.stride < 8) {
			flags.push(h3d_BufferFlag.RawFormat);
		}
		this.buffer = h3d_Buffer.ofFloats(inf.vbuf,inf.stride,flags);
		this.vcount = this.buffer.vertices;
		this.tcount = inf.ibuf != null ? inf.ibuf.length / 3 | 0 : inf.quads ? this.vcount >> 1 : this.vcount / 3 | 0;
		if(inf.ibuf != null) {
			this.indexes = h3d_Indexes.alloc(inf.ibuf);
		} else if(this.indexes != null) {
			this.indexes.dispose();
			this.indexes = null;
		}
	}
	,getBounds: function() {
		if(this.bounds == null) {
			throw haxe_Exception.thrown("Bounds not defined for " + Std.string(this));
		}
		return this.bounds;
	}
	,__class__: h3d_prim_RawPrimitive
});
var h3d_scene_Object = function(parent) {
	var this1 = 0;
	this.flags = this1;
	this.absPos = new h3d_Matrix();
	this.absPos.identity();
	this.x = 0;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.y = 0;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.z = 0;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.scaleX = 1;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.scaleY = 1;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.scaleZ = 1;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.qRot = new h3d_Quat();
	var f = 1;
	var b = this.follow != null;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	var f = 2;
	this.flags |= f;
	this.children = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["h3d.scene.Object"] = h3d_scene_Object;
h3d_scene_Object.__name__ = "h3d.scene.Object";
h3d_scene_Object.__interfaces__ = [hxd_impl__$Serializable_NoSerializeSupport];
h3d_scene_Object.prototype = {
	set_cullingCollider: function(c) {
		this.cullingCollider = c;
		var f = 4096;
		this.flags &= ~f;
		return c;
	}
	,localToGlobal: function(pt) {
		this.syncPos();
		if(pt == null) {
			pt = new h3d_Vector();
		}
		var m = this.absPos;
		var px = pt.x * m._11 + pt.y * m._21 + pt.z * m._31 + pt.w * m._41;
		var py = pt.x * m._12 + pt.y * m._22 + pt.z * m._32 + pt.w * m._42;
		var pz = pt.x * m._13 + pt.y * m._23 + pt.z * m._33 + pt.w * m._43;
		pt.x = px;
		pt.y = py;
		pt.z = pz;
		return pt;
	}
	,getInvPos: function() {
		this.syncPos();
		if(this.invPos == null) {
			this.invPos = new h3d_Matrix();
			this.invPos._44 = 0;
		}
		if(this.invPos._44 == 0) {
			this.invPos.inverse3x4(this.absPos);
		}
		return this.invPos;
	}
	,addChild: function(o) {
		this.addChildAt(o,this.children.length);
	}
	,addChildAt: function(o,pos) {
		if(pos < 0) {
			pos = 0;
		}
		if(pos > this.children.length) {
			pos = this.children.length;
		}
		var p = this;
		while(p != null) {
			if(p == o) {
				throw haxe_Exception.thrown("Recursive addChild");
			}
			p = p.parent;
		}
		if(o.parent != null) {
			var old = (o.flags & 32) != 0;
			var f = 32;
			o.flags &= ~f;
			o.parent.removeChild(o);
			var f = 32;
			if(old) {
				o.flags |= f;
			} else {
				o.flags &= ~f;
			}
		}
		this.children.splice(pos,0,o);
		if((this.flags & 32) == 0 && (o.flags & 32) != 0) {
			o.onRemove();
		}
		o.parent = this;
		var f = 1;
		var b = true;
		if(b) {
			o.flags |= f;
		} else {
			o.flags &= ~f;
		}
		if((this.flags & 32) != 0) {
			if((o.flags & 32) == 0) {
				o.onAdd();
			} else {
				o.onParentChanged();
			}
		}
	}
	,iterVisibleMeshes: function(callb) {
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0) {
			return;
		}
		if((this.flags & 4) == 0) {
			var m = ((this) instanceof h3d_scene_Mesh) ? this : null;
			if(m != null) {
				callb(m);
			}
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.iterVisibleMeshes(callb);
		}
	}
	,onParentChanged: function() {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onParentChanged();
		}
	}
	,onAdd: function() {
		var f = 32;
		this.flags |= f;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onAdd();
		}
	}
	,onRemove: function() {
		var f = 32;
		this.flags &= ~f;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onRemove();
		}
	}
	,removeChild: function(o) {
		if(HxOverrides.remove(this.children,o)) {
			if((o.flags & 32) != 0) {
				o.onRemove();
			}
			o.parent = null;
			var f = 1;
			var b = true;
			if(b) {
				o.flags |= f;
			} else {
				o.flags &= ~f;
			}
		}
	}
	,getScene: function() {
		var p = this;
		while(p.parent != null) p = p.parent;
		if(((p) instanceof h3d_scene_Scene)) {
			return p;
		} else {
			return null;
		}
	}
	,getAbsPos: function() {
		this.syncPos();
		return this.absPos;
	}
	,draw: function(ctx) {
	}
	,calcAbsPos: function() {
		this.qRot.toMatrix(this.absPos);
		this.absPos._11 *= this.scaleX;
		this.absPos._12 *= this.scaleX;
		this.absPos._13 *= this.scaleX;
		this.absPos._21 *= this.scaleY;
		this.absPos._22 *= this.scaleY;
		this.absPos._23 *= this.scaleY;
		this.absPos._31 *= this.scaleZ;
		this.absPos._32 *= this.scaleZ;
		this.absPos._33 *= this.scaleZ;
		this.absPos._41 = this.x;
		this.absPos._42 = this.y;
		this.absPos._43 = this.z;
		if(this.follow != null) {
			this.follow.syncPos();
			if((this.flags & 8) != 0) {
				var _this = this.absPos;
				var a = this.absPos;
				var b = this.parent.absPos;
				var m11 = a._11;
				var m12 = a._12;
				var m13 = a._13;
				var m21 = a._21;
				var m22 = a._22;
				var m23 = a._23;
				var a31 = a._31;
				var a32 = a._32;
				var a33 = a._33;
				var a41 = a._41;
				var a42 = a._42;
				var a43 = a._43;
				var b11 = b._11;
				var b12 = b._12;
				var b13 = b._13;
				var b21 = b._21;
				var b22 = b._22;
				var b23 = b._23;
				var b31 = b._31;
				var b32 = b._32;
				var b33 = b._33;
				var b41 = b._41;
				var b42 = b._42;
				var b43 = b._43;
				_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
				_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
				_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
				_this._14 = 0;
				_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
				_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
				_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
				_this._24 = 0;
				_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
				_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
				_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
				_this._34 = 0;
				_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
				_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
				_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
				_this._44 = 1;
				this.absPos._41 = this.x + this.follow.absPos._41;
				this.absPos._42 = this.y + this.follow.absPos._42;
				this.absPos._43 = this.z + this.follow.absPos._43;
			} else {
				this.absPos.multiply3x4(this.absPos,this.follow.absPos);
			}
		} else if(this.parent != null && (this.flags & 2048) == 0) {
			var _this = this.absPos;
			var a = this.absPos;
			var b = this.parent.absPos;
			var m11 = a._11;
			var m12 = a._12;
			var m13 = a._13;
			var m21 = a._21;
			var m22 = a._22;
			var m23 = a._23;
			var a31 = a._31;
			var a32 = a._32;
			var a33 = a._33;
			var a41 = a._41;
			var a42 = a._42;
			var a43 = a._43;
			var b11 = b._11;
			var b12 = b._12;
			var b13 = b._13;
			var b21 = b._21;
			var b22 = b._22;
			var b23 = b._23;
			var b31 = b._31;
			var b32 = b._32;
			var b33 = b._33;
			var b41 = b._41;
			var b42 = b._42;
			var b43 = b._43;
			_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
			_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
			_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
			_this._14 = 0;
			_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
			_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
			_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
			_this._24 = 0;
			_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
			_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
			_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
			_this._34 = 0;
			_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
			_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
			_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
			_this._44 = 1;
		}
		if(this.defaultTransform != null) {
			var _this = this.absPos;
			var a = this.defaultTransform;
			var b = this.absPos;
			var m11 = a._11;
			var m12 = a._12;
			var m13 = a._13;
			var m21 = a._21;
			var m22 = a._22;
			var m23 = a._23;
			var a31 = a._31;
			var a32 = a._32;
			var a33 = a._33;
			var a41 = a._41;
			var a42 = a._42;
			var a43 = a._43;
			var b11 = b._11;
			var b12 = b._12;
			var b13 = b._13;
			var b21 = b._21;
			var b22 = b._22;
			var b23 = b._23;
			var b31 = b._31;
			var b32 = b._32;
			var b33 = b._33;
			var b41 = b._41;
			var b42 = b._42;
			var b43 = b._43;
			_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
			_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
			_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
			_this._14 = 0;
			_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
			_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
			_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
			_this._24 = 0;
			_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
			_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
			_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
			_this._34 = 0;
			_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
			_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
			_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
			_this._44 = 1;
		}
		if(this.invPos != null) {
			this.invPos._44 = 0;
		}
	}
	,sync: function(ctx) {
	}
	,syncRec: function(ctx) {
		if(this.currentAnimation != null) {
			var old = this.parent;
			var dt = ctx.elapsedTime;
			while(dt > 0 && this.currentAnimation != null) dt = this.currentAnimation.update(dt);
			if(this.currentAnimation != null && (ctx.visibleFlag && (this.flags & 2) != 0 && (this.flags & 4) == 0 || (this.flags & 64) != 0)) {
				this.currentAnimation.sync();
			}
			if(this.parent == null && old != null) {
				return;
			}
		}
		var old = ctx.visibleFlag;
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0) {
			ctx.visibleFlag = false;
		}
		if(ctx.cullingCollider != null && (this.cullingCollider == null || (this.flags & 4096) != 0)) {
			this.set_cullingCollider(ctx.cullingCollider);
			var f = 4096;
			this.flags |= f;
		} else if((this.flags & 4096) != 0) {
			this.set_cullingCollider(null);
		}
		var prevCollider = ctx.cullingCollider;
		if((this.flags & 128) != 0) {
			ctx.cullingCollider = this.cullingCollider;
		}
		var changed = (this.flags & 1) != 0;
		if(changed) {
			this.calcAbsPos();
		}
		this.sync(ctx);
		var f = 1;
		var b = this.follow != null;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		this.lastFrame = ctx.frame;
		var p = 0;
		var len = this.children.length;
		while(p < len) {
			var c = this.children[p];
			if(c == null) {
				break;
			}
			if(c.lastFrame != ctx.frame) {
				if(changed) {
					var f = 1;
					var b = true;
					if(b) {
						c.flags |= f;
					} else {
						c.flags &= ~f;
					}
				}
				c.syncRec(ctx);
			}
			if(this.children[p] != c) {
				p = 0;
				len = this.children.length;
			} else {
				++p;
			}
		}
		ctx.visibleFlag = old;
		ctx.cullingCollider = prevCollider;
	}
	,syncPos: function() {
		if(this.parent != null) {
			this.parent.syncPos();
		}
		if((this.flags & 1) != 0) {
			var f = 1;
			var b = this.follow != null;
			if(b) {
				this.flags |= f;
			} else {
				this.flags &= ~f;
			}
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var f = 1;
				var b = true;
				if(b) {
					c.flags |= f;
				} else {
					c.flags &= ~f;
				}
			}
		}
	}
	,emit: function(ctx) {
	}
	,emitRec: function(ctx) {
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0 && !ctx.computingStatic) {
			return;
		}
		if((this.flags & 1) != 0) {
			if(this.currentAnimation != null) {
				this.currentAnimation.sync();
			}
			var f = 1;
			var b = this.follow != null;
			if(b) {
				this.flags |= f;
			} else {
				this.flags &= ~f;
			}
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var f = 1;
				var b = true;
				if(b) {
					c.flags |= f;
				} else {
					c.flags &= ~f;
				}
			}
		}
		if((this.flags & 4) == 0 || ctx.computingStatic) {
			this.emit(ctx);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.emitRec(ctx);
		}
	}
	,__class__: h3d_scene_Object
};
var h3d_scene_Mesh = function(primitive,material,parent) {
	h3d_scene_Object.call(this,parent);
	this.set_primitive(primitive);
	if(material == null) {
		material = h3d_mat_MaterialSetup.current.createMaterial();
		material.set_props(material.getDefaultProps());
	}
	this.material = material;
};
$hxClasses["h3d.scene.Mesh"] = h3d_scene_Mesh;
h3d_scene_Mesh.__name__ = "h3d.scene.Mesh";
h3d_scene_Mesh.__super__ = h3d_scene_Object;
h3d_scene_Mesh.prototype = $extend(h3d_scene_Object.prototype,{
	draw: function(ctx) {
		this.primitive.render(ctx.engine);
	}
	,emit: function(ctx) {
		var p = this.material.passes;
		while(p != null) {
			ctx.emitPass(p,this).index = 0;
			p = p.nextPass;
		}
	}
	,onAdd: function() {
		h3d_scene_Object.prototype.onAdd.call(this);
		if(this.primitive != null) {
			this.primitive.incref();
		}
	}
	,onRemove: function() {
		if(this.primitive != null) {
			this.primitive.decref();
		}
		h3d_scene_Object.prototype.onRemove.call(this);
	}
	,set_primitive: function(prim) {
		if(prim != this.primitive && (this.flags & 32) != 0) {
			if(this.primitive != null) {
				this.primitive.decref();
			}
			if(prim != null) {
				prim.incref();
			}
		}
		return this.primitive = prim;
	}
	,__class__: h3d_scene_Mesh
});
var h3d_scene_Interactive = function(shape,parent) {
	this.hitPoint = new h3d_Vector();
	this.mouseDownButton = -1;
	this.propagateEvents = false;
	this.cancelEvents = false;
	h3d_scene_Object.call(this,parent);
	this.shape = shape;
	this.set_cursor(hxd_Cursor.Button);
};
$hxClasses["h3d.scene.Interactive"] = h3d_scene_Interactive;
h3d_scene_Interactive.__name__ = "h3d.scene.Interactive";
h3d_scene_Interactive.__interfaces__ = [hxd_Interactive];
h3d_scene_Interactive.__super__ = h3d_scene_Object;
h3d_scene_Interactive.prototype = $extend(h3d_scene_Object.prototype,{
	onAdd: function() {
		this.scene = this.getScene();
		if(this.scene != null) {
			this.scene.addEventTarget(this);
		}
		h3d_scene_Object.prototype.onAdd.call(this);
	}
	,onRemove: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this);
			this.scene = null;
		}
		h3d_scene_Object.prototype.onRemove.call(this);
	}
	,getInteractiveScene: function() {
		return this.scene;
	}
	,handleEvent: function(e) {
		if(this.propagateEvents) {
			e.propagate = true;
		}
		if(this.cancelEvents) {
			e.cancel = true;
		}
		switch(e.kind._hx_index) {
		case 0:
			if(this.enableRightButton || e.button == 0) {
				this.mouseDownButton = e.button;
				this.onPush(e);
			}
			break;
		case 1:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onClick(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 2:
			this.onMove(e);
			break;
		case 3:
			this.onOver(e);
			break;
		case 4:
			this.onOut(e);
			break;
		case 5:
			this.onWheel(e);
			break;
		case 6:
			this.onFocus(e);
			break;
		case 7:
			this.onFocusLost(e);
			break;
		case 8:
			this.onKeyDown(e);
			break;
		case 9:
			this.onKeyUp(e);
			break;
		case 10:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onReleaseOutside(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 11:
			this.onTextInput(e);
			break;
		case 12:
			this.onCheck(e);
			break;
		}
	}
	,set_cursor: function(c) {
		this.cursor = c;
		if(this.scene != null && this.scene.events != null) {
			this.scene.events.updateCursor(this);
		}
		return c;
	}
	,onOver: function(e) {
	}
	,onOut: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onReleaseOutside: function(e) {
	}
	,onClick: function(e) {
	}
	,onMove: function(e) {
	}
	,onWheel: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,onCheck: function(e) {
	}
	,onTextInput: function(e) {
	}
	,__class__: h3d_scene_Interactive
});
var h3d_scene_Light = function(shader,parent) {
	this.priority = 0;
	this.cullingDistance = -1;
	h3d_scene_Object.call(this,parent);
	this.shader = shader;
};
$hxClasses["h3d.scene.Light"] = h3d_scene_Light;
h3d_scene_Light.__name__ = "h3d.scene.Light";
h3d_scene_Light.__super__ = h3d_scene_Object;
h3d_scene_Light.prototype = $extend(h3d_scene_Object.prototype,{
	emit: function(ctx) {
		ctx.emitLight(this);
	}
	,getShadowDirection: function() {
		return null;
	}
	,__class__: h3d_scene_Light
});
var h3d_scene_LightSystem = function() {
	this.ambientLight = new h3d_Vector(1,1,1);
};
$hxClasses["h3d.scene.LightSystem"] = h3d_scene_LightSystem;
h3d_scene_LightSystem.__name__ = "h3d.scene.LightSystem";
h3d_scene_LightSystem.prototype = {
	initGlobals: function(globals) {
	}
	,cullLights: function() {
		var l = this.ctx.lights;
		var prev = null;
		var s = new h3d_col_Sphere();
		while(l != null) {
			s.x = l.absPos._41;
			s.y = l.absPos._42;
			s.z = l.absPos._43;
			s.r = l.cullingDistance;
			if(l.cullingDistance > 0 && !this.ctx.computingStatic && !this.ctx.camera.frustum.hasSphere(s)) {
				if(prev == null) {
					this.ctx.lights = l.next;
				} else {
					prev.next = l.next;
				}
				l = l.next;
				continue;
			}
			this.lightCount++;
			l.objectDistance = 0.;
			prev = l;
			l = l.next;
		}
	}
	,initLights: function(ctx) {
		this.lightCount = 0;
		this.ctx = ctx;
		this.cullLights();
		if(this.shadowLight == null || (this.shadowLight.flags & 32) == 0) {
			var l = ctx.lights;
			while(l != null) {
				var dir = l.getShadowDirection();
				if(dir != null) {
					this.shadowLight = l;
					break;
				}
				l = l.next;
			}
		}
	}
	,computeLight: function(obj,shaders) {
		return shaders;
	}
	,__class__: h3d_scene_LightSystem
};
var h3d_scene__$RenderContext_SharedGlobal = function(gid,value) {
	this.gid = gid;
	this.value = value;
};
$hxClasses["h3d.scene._RenderContext.SharedGlobal"] = h3d_scene__$RenderContext_SharedGlobal;
h3d_scene__$RenderContext_SharedGlobal.__name__ = "h3d.scene._RenderContext.SharedGlobal";
h3d_scene__$RenderContext_SharedGlobal.prototype = {
	__class__: h3d_scene__$RenderContext_SharedGlobal
};
var h3d_scene_RenderContext = function() {
	h3d_impl_RenderContext.call(this);
	this.cachedShaderList = [];
	this.cachedPassObjects = [];
};
$hxClasses["h3d.scene.RenderContext"] = h3d_scene_RenderContext;
h3d_scene_RenderContext.__name__ = "h3d.scene.RenderContext";
h3d_scene_RenderContext.__super__ = h3d_impl_RenderContext;
h3d_scene_RenderContext.prototype = $extend(h3d_impl_RenderContext.prototype,{
	start: function() {
		this.sharedGlobals = [];
		this.lights = null;
		this.drawPass = null;
		this.passes = null;
		this.lights = null;
		this.cachedPos = 0;
		this.visibleFlag = true;
		this.time += this.elapsedTime;
		this.frame++;
	}
	,setGlobalID: function(gid,value) {
		var _g = 0;
		var _g1 = this.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.gid == gid) {
				g.value = value;
				return;
			}
		}
		this.sharedGlobals.push(new h3d_scene__$RenderContext_SharedGlobal(gid,value));
	}
	,emitPass: function(pass,obj) {
		var o = this.allocPool;
		if(o == null) {
			o = new h3d_pass_PassObject();
			o.nextAlloc = this.allocFirst;
			this.allocFirst = o;
		} else {
			this.allocPool = o.nextAlloc;
		}
		o.pass = pass;
		o.obj = obj;
		o.next = this.passes;
		this.passes = o;
		return o;
	}
	,allocShaderList: function(s,next) {
		var sl = this.cachedShaderList[this.cachedPos++];
		if(sl == null) {
			sl = new hxsl_ShaderList(null);
			this.cachedShaderList[this.cachedPos - 1] = sl;
		}
		sl.s = s;
		sl.next = next;
		return sl;
	}
	,emitLight: function(l) {
		l.next = this.lights;
		this.lights = l;
	}
	,done: function() {
		this.drawPass = null;
		var p = this.allocFirst;
		while(p != null && p != this.allocPool) {
			p.obj = null;
			p.pass = null;
			p.shader = null;
			p.shaders = null;
			p.next = null;
			p.index = 0;
			p.texture = 0;
			p = p.nextAlloc;
		}
		if(this.allocPool != null) {
			this.allocFirst = this.allocFirst.nextAlloc;
		}
		this.allocPool = this.allocFirst;
		var _g = 0;
		var _g1 = this.cachedShaderList;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.s = null;
			c.next = null;
		}
		this.passes = null;
		this.lights = null;
	}
	,__class__: h3d_scene_RenderContext
});
var h3d_scene_PassObjects = function() {
	this.passes = new h3d_pass_PassList();
};
$hxClasses["h3d.scene.PassObjects"] = h3d_scene_PassObjects;
h3d_scene_PassObjects.__name__ = "h3d.scene.PassObjects";
h3d_scene_PassObjects.prototype = {
	__class__: h3d_scene_PassObjects
};
var h3d_scene_Renderer = function() {
	this.hasSetTarget = false;
	this.emptyPasses = new h3d_pass_PassList();
	this.allPasses = [];
	this.passObjects = new haxe_ds_StringMap();
	this.set_props(this.getDefaultProps());
	var _g = $bind(this,this.depthSort);
	var frontToBack = true;
	this.frontToBack = function(passes) {
		_g(frontToBack,passes);
	};
	var _g1 = $bind(this,this.depthSort);
	var frontToBack1 = false;
	this.backToFront = function(passes) {
		_g1(frontToBack1,passes);
	};
};
$hxClasses["h3d.scene.Renderer"] = h3d_scene_Renderer;
h3d_scene_Renderer.__name__ = "h3d.scene.Renderer";
h3d_scene_Renderer.__super__ = hxd_impl_AnyProps;
h3d_scene_Renderer.prototype = $extend(hxd_impl_AnyProps.prototype,{
	depthSort: function(frontToBack,passes) {
		var cam = this.ctx.camera.m;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			var z = p.obj.absPos._41 * cam._13 + p.obj.absPos._42 * cam._23 + p.obj.absPos._43 * cam._33 + cam._43;
			var w = p.obj.absPos._41 * cam._14 + p.obj.absPos._42 * cam._24 + p.obj.absPos._43 * cam._34 + cam._44;
			p.depth = z / w;
		}
		if(frontToBack) {
			var list = passes.current;
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || (p.pass.layer == q.pass.layer ? p.depth > q.depth ? 1 : -1 : p.pass.layer - q.pass.layer) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			passes.current = tmp;
		} else {
			var list = passes.current;
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || (p.pass.layer == q.pass.layer ? p.depth > q.depth ? -1 : 1 : p.pass.layer - q.pass.layer) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			passes.current = tmp;
		}
	}
	,resetTarget: function() {
		if(this.hasSetTarget) {
			this.ctx.engine.popTarget();
			this.hasSetTarget = false;
		}
	}
	,has: function(name) {
		return this.passObjects.h[name] != null;
	}
	,get: function(name) {
		var p = this.passObjects.h[name];
		if(p == null) {
			return this.emptyPasses;
		}
		p.rendered = true;
		return p.passes;
	}
	,render: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,computeStatic: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,start: function() {
	}
	,process: function(passes) {
		this.hasSetTarget = false;
		var _g = 0;
		var _g1 = this.allPasses;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.setContext(this.ctx);
		}
		var _g = 0;
		while(_g < passes.length) {
			var p = passes[_g];
			++_g;
			this.passObjects.h[p.name] = p;
		}
		this.ctx.textures.begin();
		if(this.ctx.computingStatic) {
			this.computeStatic();
		} else {
			this.render();
		}
		this.resetTarget();
		var _g = 0;
		while(_g < passes.length) {
			var p = passes[_g];
			++_g;
			this.passObjects.h[p.name] = null;
		}
	}
	,__class__: h3d_scene_Renderer
});
var h3d_scene_Scene = function(createRenderer,createLightSystem) {
	if(createLightSystem == null) {
		createLightSystem = true;
	}
	if(createRenderer == null) {
		createRenderer = true;
	}
	h3d_scene_Object.call(this,null);
	this.window = hxd_Window.getInstance();
	this.eventListeners = [];
	this.hitInteractives = [];
	this.interactives = [];
	this.camera = new h3d_Camera();
	var engine = h3d_Engine.CURRENT;
	if(engine != null) {
		this.camera.screenRatio = engine.width / engine.height;
	}
	this.ctx = new h3d_scene_RenderContext();
	if(createRenderer) {
		this.set_renderer(h3d_mat_MaterialSetup.current.createRenderer());
	}
	if(createLightSystem) {
		this.lightSystem = h3d_mat_MaterialSetup.current.createLightSystem();
	}
};
$hxClasses["h3d.scene.Scene"] = h3d_scene_Scene;
h3d_scene_Scene.__name__ = "h3d.scene.Scene";
h3d_scene_Scene.__interfaces__ = [hxd_InteractiveScene,h3d_IDrawable];
h3d_scene_Scene.__super__ = h3d_scene_Object;
h3d_scene_Scene.prototype = $extend(h3d_scene_Object.prototype,{
	setEvents: function(events) {
		this.events = events;
	}
	,dispatchListeners: function(event) {
		var _g = 0;
		var _g1 = this.eventListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l(event);
			if(!event.propagate) {
				break;
			}
		}
	}
	,set_renderer: function(r) {
		this.renderer = r;
		if(r != null) {
			r.ctx = this.ctx;
		}
		return r;
	}
	,sortHitPointByCameraDistance: function(i1,i2) {
		var z1 = i1.hitPoint.w;
		var z2 = i2.hitPoint.w;
		if(z1 > z2) {
			return -1;
		}
		return 1;
	}
	,dispatchEvent: function(event,to) {
		var i = to;
		i.handleEvent(event);
	}
	,isInteractiveVisible: function(i) {
		var o = i;
		while(o != this) {
			if(o == null || (o.flags & 2) == 0) {
				return false;
			}
			o = o.parent;
		}
		return true;
	}
	,handleEvent: function(event,last) {
		if(this.interactives.length == 0) {
			return null;
		}
		if(this.hitInteractives.length == 0) {
			var screenX = (event.relX / this.window.get_width() - 0.5) * 2;
			var screenY = -(event.relY / this.window.get_height() - 0.5) * 2;
			var p0 = this.camera.unproject(screenX,screenY,0);
			var p1 = this.camera.unproject(screenX,screenY,1);
			var x = p0.x;
			var y = p0.y;
			var z = p0.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var p1_x = x;
			var p1_y = y;
			var p1_z = z;
			var x = p1.x;
			var y = p1.y;
			var z = p1.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var p2_x = x;
			var p2_y = y;
			var p2_z = z;
			var r = new h3d_col_Ray();
			r.px = p1_x;
			r.py = p1_y;
			r.pz = p1_z;
			r.lx = p2_x - p1_x;
			r.ly = p2_y - p1_y;
			r.lz = p2_z - p1_z;
			r.normalize();
			var r1 = r;
			var saveR_px = r1.px;
			var saveR_py = r1.py;
			var saveR_pz = r1.pz;
			var saveR_lx = r1.lx;
			var saveR_ly = r1.ly;
			var saveR_lz = r1.lz;
			var priority = -2147483648;
			var _g = 0;
			var _g1 = this.interactives;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.priority < priority) {
					continue;
				}
				var p = i;
				while(p != null && (p.flags & 2) != 0) p = p.parent;
				if(p != null) {
					continue;
				}
				var minv = i.getInvPos();
				var x = r1.px;
				var y = r1.py;
				var z = r1.pz;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var p_w = 1.;
				var px = p_x * minv._11 + p_y * minv._21 + p_z * minv._31 + p_w * minv._41;
				var py = p_x * minv._12 + p_y * minv._22 + p_z * minv._32 + p_w * minv._42;
				var pz = p_x * minv._13 + p_y * minv._23 + p_z * minv._33 + p_w * minv._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				r1.px = p_x;
				r1.py = p_y;
				r1.pz = p_z;
				var x1 = r1.lx;
				var y1 = r1.ly;
				var z1 = r1.lz;
				if(z1 == null) {
					z1 = 0.;
				}
				if(y1 == null) {
					y1 = 0.;
				}
				if(x1 == null) {
					x1 = 0.;
				}
				var l_x = x1;
				var l_y = y1;
				var l_z = z1;
				var l_w = 1.;
				var px1 = l_x * minv._11 + l_y * minv._21 + l_z * minv._31;
				var py1 = l_x * minv._12 + l_y * minv._22 + l_z * minv._32;
				var pz1 = l_x * minv._13 + l_y * minv._23 + l_z * minv._33;
				l_x = px1;
				l_y = py1;
				l_z = pz1;
				r1.lx = l_x;
				r1.ly = l_y;
				r1.lz = l_z;
				r1.normalize();
				if(r1.lx != r1.lx) {
					r1.px = saveR_px;
					r1.py = saveR_py;
					r1.pz = saveR_pz;
					r1.lx = saveR_lx;
					r1.ly = saveR_ly;
					r1.lz = saveR_lz;
					continue;
				}
				var hit = i.shape.rayIntersection(r1,i.bestMatch);
				if(hit < 0) {
					r1.px = saveR_px;
					r1.py = saveR_py;
					r1.pz = saveR_pz;
					r1.lx = saveR_lx;
					r1.ly = saveR_ly;
					r1.lz = saveR_lz;
					continue;
				}
				var x2 = r1.px + hit * r1.lx;
				var y2 = r1.py + hit * r1.ly;
				var z2 = r1.pz + hit * r1.lz;
				if(z2 == null) {
					z2 = 0.;
				}
				if(y2 == null) {
					y2 = 0.;
				}
				if(x2 == null) {
					x2 = 0.;
				}
				var hitPoint_x = x2;
				var hitPoint_y = y2;
				var hitPoint_z = z2;
				r1.px = saveR_px;
				r1.py = saveR_py;
				r1.pz = saveR_pz;
				r1.lx = saveR_lx;
				r1.ly = saveR_ly;
				r1.lz = saveR_lz;
				i.hitPoint.x = hitPoint_x;
				i.hitPoint.y = hitPoint_y;
				i.hitPoint.z = hitPoint_z;
				if(i.priority > priority) {
					while(this.hitInteractives.length > 0) this.hitInteractives.pop();
					priority = i.priority;
				}
				this.hitInteractives.push(i);
			}
			if(this.hitInteractives.length == 0) {
				return null;
			}
			if(this.hitInteractives.length > 1) {
				var _g = 0;
				var _g1 = this.hitInteractives;
				while(_g < _g1.length) {
					var i = _g1[_g];
					++_g;
					var m = i.invPos;
					var wfactor = 0.;
					if(i.preciseShape != null) {
						var x = r1.px;
						var y = r1.py;
						var z = r1.pz;
						if(z == null) {
							z = 0.;
						}
						if(y == null) {
							y = 0.;
						}
						if(x == null) {
							x = 0.;
						}
						var p_x = x;
						var p_y = y;
						var p_z = z;
						var p_w = 1.;
						var px = p_x * m._11 + p_y * m._21 + p_z * m._31 + p_w * m._41;
						var py = p_x * m._12 + p_y * m._22 + p_z * m._32 + p_w * m._42;
						var pz = p_x * m._13 + p_y * m._23 + p_z * m._33 + p_w * m._43;
						p_x = px;
						p_y = py;
						p_z = pz;
						r1.px = p_x;
						r1.py = p_y;
						r1.pz = p_z;
						var x1 = r1.lx;
						var y1 = r1.ly;
						var z1 = r1.lz;
						if(z1 == null) {
							z1 = 0.;
						}
						if(y1 == null) {
							y1 = 0.;
						}
						if(x1 == null) {
							x1 = 0.;
						}
						var l_x = x1;
						var l_y = y1;
						var l_z = z1;
						var l_w = 1.;
						var px1 = l_x * m._11 + l_y * m._21 + l_z * m._31;
						var py1 = l_x * m._12 + l_y * m._22 + l_z * m._32;
						var pz1 = l_x * m._13 + l_y * m._23 + l_z * m._33;
						l_x = px1;
						l_y = py1;
						l_z = pz1;
						r1.lx = l_x;
						r1.ly = l_y;
						r1.lz = l_z;
						r1.normalize();
						var hit = i.preciseShape.rayIntersection(r1,i.bestMatch);
						if(hit > 0) {
							var x2 = r1.px + hit * r1.lx;
							var y2 = r1.py + hit * r1.ly;
							var z2 = r1.pz + hit * r1.lz;
							if(z2 == null) {
								z2 = 0.;
							}
							if(y2 == null) {
								y2 = 0.;
							}
							if(x2 == null) {
								x2 = 0.;
							}
							var hitPoint_x = x2;
							var hitPoint_y = y2;
							var hitPoint_z = z2;
							i.hitPoint.x = hitPoint_x;
							i.hitPoint.y = hitPoint_y;
							i.hitPoint.z = hitPoint_z;
						} else {
							wfactor = 1.;
						}
						r1.px = saveR_px;
						r1.py = saveR_py;
						r1.pz = saveR_pz;
						r1.lx = saveR_lx;
						r1.ly = saveR_ly;
						r1.lz = saveR_lz;
					}
					var _this = i.hitPoint;
					var x3 = _this.x;
					var y3 = _this.y;
					var z3 = _this.z;
					var w = _this.w;
					if(w == null) {
						w = 1.;
					}
					if(z3 == null) {
						z3 = 0.;
					}
					if(y3 == null) {
						y3 = 0.;
					}
					if(x3 == null) {
						x3 = 0.;
					}
					var p_x1 = x3;
					var p_y1 = y3;
					var p_z1 = z3;
					var p_w1 = w;
					p_w1 = 1;
					var m1 = i.absPos;
					var px2 = p_x1 * m1._11 + p_y1 * m1._21 + p_z1 * m1._31 + p_w1 * m1._41;
					var py2 = p_x1 * m1._12 + p_y1 * m1._22 + p_z1 * m1._32 + p_w1 * m1._42;
					var pz2 = p_x1 * m1._13 + p_y1 * m1._23 + p_z1 * m1._33 + p_w1 * m1._43;
					p_x1 = px2;
					p_y1 = py2;
					p_z1 = pz2;
					var m2 = this.camera.m;
					var px3 = p_x1 * m2._11 + p_y1 * m2._21 + p_z1 * m2._31 + p_w1 * m2._41;
					var py3 = p_x1 * m2._12 + p_y1 * m2._22 + p_z1 * m2._32 + p_w1 * m2._42;
					var pz3 = p_x1 * m2._13 + p_y1 * m2._23 + p_z1 * m2._33 + p_w1 * m2._43;
					var iw = 1 / (p_x1 * m2._14 + p_y1 * m2._24 + p_z1 * m2._34 + p_w1 * m2._44);
					p_x1 = px3 * iw;
					p_y1 = py3 * iw;
					p_z1 = pz3 * iw;
					p_w1 = 1;
					i.hitPoint.w = p_z1 + wfactor;
				}
				this.hitInteractives.sort($bind(this,this.sortHitPointByCameraDistance));
			}
			this.hitInteractives.unshift(null);
		}
		while(this.hitInteractives.length > 0) {
			var i = this.hitInteractives.pop();
			if(i == null) {
				return null;
			}
			event.relX = i.hitPoint.x;
			event.relY = i.hitPoint.y;
			event.relZ = i.hitPoint.z;
			i.handleEvent(event);
			if(event.cancel) {
				event.cancel = false;
				event.propagate = false;
				continue;
			}
			if(!event.propagate) {
				while(this.hitInteractives.length > 0) this.hitInteractives.pop();
			}
			return i;
		}
		return null;
	}
	,addEventTarget: function(i) {
		if(this.interactives.indexOf(i) >= 0) {
			throw haxe_Exception.thrown("assert");
		}
		this.interactives.push(i);
	}
	,removeEventTarget: function(i) {
		if(HxOverrides.remove(this.interactives,i)) {
			if(this.events != null) {
				this.events.onRemove(i);
			}
			HxOverrides.remove(this.hitInteractives,i);
		}
	}
	,setElapsedTime: function(elapsedTime) {
		this.ctx.elapsedTime = elapsedTime;
	}
	,render: function(engine) {
		if((this.flags & 32) == 0) {
			this.onAdd();
		}
		var t = engine.getCurrentTarget();
		if(t == null) {
			this.camera.screenRatio = engine.width / engine.height;
		} else {
			this.camera.screenRatio = t.width / t.height;
		}
		this.camera.update();
		if(this.camera.rightHanded) {
			engine.driver.setRenderFlag(h3d_impl_RenderFlag.CameraHandness,1);
		}
		this.ctx.camera = this.camera;
		this.ctx.engine = engine;
		this.ctx.scene = this;
		this.ctx.start();
		this.renderer.start();
		this.syncRec(this.ctx);
		this.emitRec(this.ctx);
		var list = this.ctx.passes;
		var tmp;
		if(list == null) {
			tmp = null;
		} else {
			var insize = 1;
			var nmerges;
			var psize = 0;
			var qsize = 0;
			var p;
			var q;
			var e;
			var tail;
			while(true) {
				p = list;
				list = null;
				tail = null;
				nmerges = 0;
				while(p != null) {
					++nmerges;
					q = p;
					psize = 0;
					var _g = 0;
					var _g1 = insize;
					while(_g < _g1) {
						var i = _g++;
						++psize;
						q = q.next;
						if(q == null) {
							break;
						}
					}
					qsize = insize;
					while(psize > 0 || qsize > 0 && q != null) {
						if(psize == 0) {
							e = q;
							q = q.next;
							--qsize;
						} else if(qsize == 0 || q == null || p.pass.passId - q.pass.passId <= 0) {
							e = p;
							p = p.next;
							--psize;
						} else {
							e = q;
							q = q.next;
							--qsize;
						}
						if(tail != null) {
							tail.next = e;
						} else {
							list = e;
						}
						tail = e;
					}
					p = q;
				}
				tail.next = null;
				if(nmerges <= 1) {
					break;
				}
				insize *= 2;
			}
			tmp = list;
		}
		this.ctx.passes = tmp;
		var curPass = this.ctx.passes;
		var passes = [];
		var passIndex = -1;
		while(curPass != null) {
			var passId = curPass.pass.passId;
			var p = curPass;
			var prev = null;
			while(p != null && p.pass.passId == passId) {
				prev = p;
				p = p.next;
			}
			prev.next = null;
			var pobjs = this.ctx.cachedPassObjects[++passIndex];
			if(pobjs == null) {
				pobjs = new h3d_scene_PassObjects();
				this.ctx.cachedPassObjects[passIndex] = pobjs;
			}
			pobjs.name = curPass.pass.name;
			var _this = pobjs.passes;
			_this.current = curPass;
			_this.discarded = _this.lastDisc = null;
			passes.push(pobjs);
			curPass = p;
		}
		if(this.lightSystem != null) {
			this.ctx.lightSystem = this.lightSystem;
			this.lightSystem.initLights(this.ctx);
		}
		this.renderer.process(passes);
		if(this.camera.rightHanded) {
			engine.driver.setRenderFlag(h3d_impl_RenderFlag.CameraHandness,0);
		}
		this.ctx.done();
		this.ctx.scene = null;
		this.ctx.camera = null;
		this.ctx.engine = null;
		var _g = 0;
		var _g1 = passIndex;
		while(_g < _g1) {
			var i = _g++;
			var p = this.ctx.cachedPassObjects[i];
			p.name = null;
			var _this = p.passes;
			_this.current = null;
			_this.discarded = _this.lastDisc = null;
		}
	}
	,__class__: h3d_scene_Scene
});
var h3d_scene_fwd_LightSystem = function() {
	this.perPixelLighting = true;
	this.maxLightsPerObject = 6;
	h3d_scene_LightSystem.call(this);
	var _this = this.ambientLight;
	var x = 0.5;
	var y = 0.5;
	var z = 0.5;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	this.ambientShader = new h3d_shader_AmbientLight();
	this.set_additiveLighting(true);
};
$hxClasses["h3d.scene.fwd.LightSystem"] = h3d_scene_fwd_LightSystem;
h3d_scene_fwd_LightSystem.__name__ = "h3d.scene.fwd.LightSystem";
h3d_scene_fwd_LightSystem.__super__ = h3d_scene_LightSystem;
h3d_scene_fwd_LightSystem.prototype = $extend(h3d_scene_LightSystem.prototype,{
	set_additiveLighting: function(b) {
		var value = this.ambientShader;
		var _this = ((value) instanceof h3d_shader_AmbientLight) ? value : null;
		_this.constModified = true;
		return _this.additive__ = b;
	}
	,initLights: function(ctx) {
		h3d_scene_LightSystem.prototype.initLights.call(this,ctx);
		if(this.lightCount <= this.maxLightsPerObject) {
			var list = ctx.lights;
			var cmp = $bind(this,this.sortLight);
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || cmp(p,q) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			ctx.lights = tmp;
		}
	}
	,initGlobals: function(globals) {
		globals.set("global.ambientLight",this.ambientLight);
		globals.set("global.perPixelLighting",this.perPixelLighting);
	}
	,sortLight: function(l1,l2) {
		var p = l1.priority - l2.priority;
		if(p != 0) {
			return -p;
		}
		if(l1.objectDistance < l2.objectDistance) {
			return -1;
		} else {
			return 1;
		}
	}
	,computeLight: function(obj,shaders) {
		var _gthis = this;
		if(this.lightCount > this.maxLightsPerObject) {
			var l = this.ctx.lights;
			while(l != null) {
				if((obj.flags & 16) != 0) {
					var dx = l.absPos._41 - this.ctx.camera.target.x;
					var dy = l.absPos._42 - this.ctx.camera.target.y;
					var dz = l.absPos._43 - this.ctx.camera.target.z;
					if(dz == null) {
						dz = 0.;
					}
					l.objectDistance = dx * dx + dy * dy + dz * dz;
				} else {
					var dx1 = l.absPos._41 - obj.absPos._41;
					var dy1 = l.absPos._42 - obj.absPos._42;
					var dz1 = l.absPos._43 - obj.absPos._43;
					if(dz1 == null) {
						dz1 = 0.;
					}
					l.objectDistance = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;
				}
				l = l.next;
			}
			var list = this.ctx.lights;
			var cmp = $bind(this,this.sortLight);
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || cmp(p,q) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			this.ctx.lights = tmp;
		}
		shaders = _gthis.ctx.allocShaderList(this.ambientShader,shaders);
		var l = this.ctx.lights;
		var i = 0;
		while(l != null) {
			if(i++ == this.maxLightsPerObject) {
				break;
			}
			shaders = _gthis.ctx.allocShaderList(l.shader,shaders);
			l = l.next;
		}
		return shaders;
	}
	,__class__: h3d_scene_fwd_LightSystem
});
var h3d_scene_fwd_DepthPass = function() {
	this.enableSky = false;
	h3d_pass_Default.call(this,"depth");
	this.depthMapId = hxsl_Globals.allocID("depthMap");
};
$hxClasses["h3d.scene.fwd.DepthPass"] = h3d_scene_fwd_DepthPass;
h3d_scene_fwd_DepthPass.__name__ = "h3d.scene.fwd.DepthPass";
h3d_scene_fwd_DepthPass.__super__ = h3d_pass_Default;
h3d_scene_fwd_DepthPass.prototype = $extend(h3d_pass_Default.prototype,{
	getOutputs: function() {
		return [hxsl_Output.PackFloat(hxsl_Output.Value("output.depth"))];
	}
	,draw: function(passes,sort) {
		var texture = this.ctx.textures.allocTarget("depthMap",this.ctx.engine.width,this.ctx.engine.height,true);
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(this.enableSky ? 0 : 16711680,1);
		h3d_pass_Default.prototype.draw.call(this,passes,sort);
		this.ctx.engine.popTarget();
		this.ctx.setGlobalID(this.depthMapId,{ texture : texture});
	}
	,__class__: h3d_scene_fwd_DepthPass
});
var h3d_scene_fwd_NormalPass = function() {
	h3d_pass_Default.call(this,"normal");
	this.normalMapId = hxsl_Globals.allocID("normalMap");
};
$hxClasses["h3d.scene.fwd.NormalPass"] = h3d_scene_fwd_NormalPass;
h3d_scene_fwd_NormalPass.__name__ = "h3d.scene.fwd.NormalPass";
h3d_scene_fwd_NormalPass.__super__ = h3d_pass_Default;
h3d_scene_fwd_NormalPass.prototype = $extend(h3d_pass_Default.prototype,{
	getOutputs: function() {
		return [hxsl_Output.PackNormal(hxsl_Output.Value("output.normal"))];
	}
	,draw: function(passes,sort) {
		var texture = this.ctx.textures.allocTarget("normalMap",this.ctx.engine.width,this.ctx.engine.height);
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(8421504,1);
		h3d_pass_Default.prototype.draw.call(this,passes,sort);
		this.ctx.engine.popTarget();
		this.ctx.setGlobalID(this.normalMapId,texture);
	}
	,__class__: h3d_scene_fwd_NormalPass
});
var h3d_scene_fwd_Renderer = function() {
	this.shadow = new h3d_pass_DefaultShadowMap(1024);
	this.normal = new h3d_scene_fwd_NormalPass();
	this.depth = new h3d_scene_fwd_DepthPass();
	h3d_scene_Renderer.call(this);
	this.defaultPass = new h3d_pass_Default("default");
	this.allPasses = [this.defaultPass,this.depth,this.normal,this.shadow];
};
$hxClasses["h3d.scene.fwd.Renderer"] = h3d_scene_fwd_Renderer;
h3d_scene_fwd_Renderer.__name__ = "h3d.scene.fwd.Renderer";
h3d_scene_fwd_Renderer.__super__ = h3d_scene_Renderer;
h3d_scene_fwd_Renderer.prototype = $extend(h3d_scene_Renderer.prototype,{
	renderPass: function(p,passes,sort) {
		p.draw(passes,sort);
	}
	,render: function() {
		if(this.has("shadow")) {
			this.renderPass(this.shadow,this.get("shadow"));
		}
		if(this.has("depth")) {
			this.renderPass(this.depth,this.get("depth"));
		}
		if(this.has("normal")) {
			this.renderPass(this.normal,this.get("normal"));
		}
		this.renderPass(this.defaultPass,this.get("default"));
		this.renderPass(this.defaultPass,this.get("alpha"),this.backToFront);
		this.renderPass(this.defaultPass,this.get("additive"));
	}
	,__class__: h3d_scene_fwd_Renderer
});
var h3d_shader_AmbientLight = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.AmbientLight"] = h3d_shader_AmbientLight;
h3d_shader_AmbientLight.__name__ = "h3d.shader.AmbientLight";
h3d_shader_AmbientLight.__super__ = hxsl_Shader;
h3d_shader_AmbientLight.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 2;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.additive__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_AmbientLight
});
var h3d_shader_Base2d = function() {
	this.viewportB__ = new h3d_Vector();
	this.viewportA__ = new h3d_Vector();
	this.halfPixelInverse__ = new h3d_Vector();
	this.uvPos__ = new h3d_Vector();
	this.filterMatrixB__ = new h3d_Vector();
	this.filterMatrixA__ = new h3d_Vector();
	this.absoluteMatrixB__ = new h3d_Vector();
	this.absoluteMatrixA__ = new h3d_Vector();
	this.color__ = new h3d_Vector();
	this.zValue__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.Base2d"] = h3d_shader_Base2d;
h3d_shader_Base2d.__name__ = "h3d.shader.Base2d";
h3d_shader_Base2d.__super__ = hxsl_Shader;
h3d_shader_Base2d.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isRelative__) {
			this.constBits |= 1;
		}
		if(this.hasUVPos__) {
			this.constBits |= 2;
		}
		if(this.killAlpha__) {
			this.constBits |= 4;
		}
		if(this.pixelAlign__) {
			this.constBits |= 8;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.zValue__;
		case 1:
			return this.texture__;
		case 2:
			return this.isRelative__;
		case 3:
			return this.color__;
		case 4:
			return this.absoluteMatrixA__;
		case 5:
			return this.absoluteMatrixB__;
		case 6:
			return this.filterMatrixA__;
		case 7:
			return this.filterMatrixB__;
		case 8:
			return this.hasUVPos__;
		case 9:
			return this.uvPos__;
		case 10:
			return this.killAlpha__;
		case 11:
			return this.pixelAlign__;
		case 12:
			return this.halfPixelInverse__;
		case 13:
			return this.viewportA__;
		case 14:
			return this.viewportB__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.zValue__;
		}
		return 0.;
	}
	,__class__: h3d_shader_Base2d
});
var h3d_shader_BaseMesh = function() {
	this.specularColor__ = new h3d_Vector();
	this.specularAmount__ = 0;
	this.specularPower__ = 0;
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.color__;
	var x = 1;
	var y = 1;
	var z = 1;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	var _this = this.specularColor__;
	var x = 1;
	var y = 1;
	var z = 1;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	this.specularPower__ = 50;
	this.specularAmount__ = 1;
};
$hxClasses["h3d.shader.BaseMesh"] = h3d_shader_BaseMesh;
h3d_shader_BaseMesh.__name__ = "h3d.shader.BaseMesh";
h3d_shader_BaseMesh.__super__ = hxsl_Shader;
h3d_shader_BaseMesh.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.color__;
		case 1:
			return this.specularPower__;
		case 2:
			return this.specularAmount__;
		case 3:
			return this.specularColor__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 1:
			return this.specularPower__;
		case 2:
			return this.specularAmount__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_BaseMesh
});
var h3d_shader_Blur = function() {
	this.cubeDir__ = new h3d_Matrix();
	this.fixedColor__ = new h3d_Vector();
	this.pixel__ = new h3d_Vector();
	this.offsets__ = [];
	this.values__ = [];
	this.Quality__ = 0;
	this.cameraInverseViewProj__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.Blur"] = h3d_shader_Blur;
h3d_shader_Blur.__name__ = "h3d.shader.Blur";
h3d_shader_Blur.__super__ = h3d_shader_ScreenShader;
h3d_shader_Blur.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.Quality__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("Quality" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.isDepth__) {
			this.constBits |= 256;
		}
		if(this.hasFixedColor__) {
			this.constBits |= 512;
		}
		if(this.smoothFixedColor__) {
			this.constBits |= 1024;
		}
		if(this.isDepthDependant__) {
			this.constBits |= 2048;
		}
		if(this.hasNormal__) {
			this.constBits |= 4096;
		}
		if(this.isCube__) {
			this.constBits |= 8192;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.cameraInverseViewProj__;
		case 2:
			return this.texture__;
		case 3:
			return this.depthTexture__;
		case 4:
			return this.Quality__;
		case 5:
			return this.isDepth__;
		case 6:
			return this.values__;
		case 7:
			return this.offsets__;
		case 8:
			return this.pixel__;
		case 9:
			return this.hasFixedColor__;
		case 10:
			return this.smoothFixedColor__;
		case 11:
			return this.fixedColor__;
		case 12:
			return this.isDepthDependant__;
		case 13:
			return this.hasNormal__;
		case 14:
			return this.normalTexture__;
		case 15:
			return this.isCube__;
		case 16:
			return this.cubeTexture__;
		case 17:
			return this.cubeDir__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_Blur
});
var h3d_shader_ShaderBuffers = function(s) {
	this.globals = new Float32Array(s.globalsSize << 2);
	this.params = new Float32Array(s.paramsSize << 2);
	var this1 = new Array(s.texturesCount);
	this.tex = this1;
	var tmp;
	if(s.bufferCount > 0) {
		var this1 = new Array(s.bufferCount);
		tmp = this1;
	} else {
		tmp = null;
	}
	this.buffers = tmp;
};
$hxClasses["h3d.shader.ShaderBuffers"] = h3d_shader_ShaderBuffers;
h3d_shader_ShaderBuffers.__name__ = "h3d.shader.ShaderBuffers";
h3d_shader_ShaderBuffers.prototype = {
	grow: function(s) {
		var ng = s.globalsSize << 2;
		var np = s.paramsSize << 2;
		var nt = s.texturesCount;
		var nb = s.bufferCount;
		if(this.globals.length < ng) {
			this.globals = new Float32Array(ng);
		}
		if(this.params.length < np) {
			this.params = new Float32Array(np);
		}
		if(this.tex.length < nt) {
			var this1 = new Array(nt);
			this.tex = this1;
		}
		if(nb > 0 && (this.buffers == null || this.buffers.length < nb)) {
			var this1 = new Array(nb);
			this.buffers = this1;
		}
	}
	,__class__: h3d_shader_ShaderBuffers
};
var h3d_shader_Buffers = function(s) {
	this.vertex = new h3d_shader_ShaderBuffers(s.vertex);
	this.fragment = new h3d_shader_ShaderBuffers(s.fragment);
};
$hxClasses["h3d.shader.Buffers"] = h3d_shader_Buffers;
h3d_shader_Buffers.__name__ = "h3d.shader.Buffers";
h3d_shader_Buffers.prototype = {
	__class__: h3d_shader_Buffers
};
var h3d_shader_ColorAdd = function(color) {
	if(color == null) {
		color = 0;
	}
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.color__;
	_this.x = (color >> 16 & 255) / 255;
	_this.y = (color >> 8 & 255) / 255;
	_this.z = (color & 255) / 255;
	_this.w = (color >>> 24) / 255;
};
$hxClasses["h3d.shader.ColorAdd"] = h3d_shader_ColorAdd;
h3d_shader_ColorAdd.__name__ = "h3d.shader.ColorAdd";
h3d_shader_ColorAdd.__super__ = hxsl_Shader;
h3d_shader_ColorAdd.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.color__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_ColorAdd
});
var h3d_shader_ColorKey = function(v) {
	if(v == null) {
		v = 0;
	}
	this.colorKey__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.colorKey__;
	_this.x = (v >> 16 & 255) / 255;
	_this.y = (v >> 8 & 255) / 255;
	_this.z = (v & 255) / 255;
	_this.w = (v >>> 24) / 255;
};
$hxClasses["h3d.shader.ColorKey"] = h3d_shader_ColorKey;
h3d_shader_ColorKey.__name__ = "h3d.shader.ColorKey";
h3d_shader_ColorKey.__super__ = hxsl_Shader;
h3d_shader_ColorKey.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.colorKey__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_ColorKey
});
var h3d_shader_ColorMatrix = function(m) {
	this.matrix__ = new h3d_Matrix();
	hxsl_Shader.call(this);
	if(m != null) {
		this.matrix__.loadValues(m);
	} else {
		this.matrix__.identity();
	}
};
$hxClasses["h3d.shader.ColorMatrix"] = h3d_shader_ColorMatrix;
h3d_shader_ColorMatrix.__name__ = "h3d.shader.ColorMatrix";
h3d_shader_ColorMatrix.__super__ = hxsl_Shader;
h3d_shader_ColorMatrix.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.matrix__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_ColorMatrix
});
var h3d_shader_DirShadow = function() {
	this.poissonDiskVeryHigh__ = [];
	this.poissonDiskHigh__ = [];
	this.poissonDiskLow__ = [];
	this.shadowBias__ = 0;
	this.shadowProj__ = new h3d_Matrix();
	this.shadowMapChannel__ = hxsl_Channel.Unknown;
	this.shadowRes__ = new h3d_Vector();
	this.pcfScale__ = 0;
	this.pcfQuality__ = 0;
	this.shadowPower__ = 0;
	hxsl_Shader.call(this);
	this.poissonDiskLow__ = [new h3d_Vector(-0.942,-0.399),new h3d_Vector(0.945,-0.768),new h3d_Vector(-0.094,-0.929),new h3d_Vector(0.344,0.293)];
	this.poissonDiskHigh__ = [new h3d_Vector(-0.326,-0.406),new h3d_Vector(-0.840,-0.074),new h3d_Vector(-0.696,0.457),new h3d_Vector(-0.203,0.621),new h3d_Vector(0.962,-0.195),new h3d_Vector(0.473,-0.480),new h3d_Vector(0.519,0.767),new h3d_Vector(0.185,-0.893),new h3d_Vector(0.507,0.064),new h3d_Vector(0.896,0.412),new h3d_Vector(-0.322,-0.933),new h3d_Vector(-0.792,-0.598)];
	this.poissonDiskVeryHigh__ = [new h3d_Vector(-0.613392,0.617481),new h3d_Vector(0.170019,-0.040254),new h3d_Vector(-0.299417,0.791925),new h3d_Vector(0.645680,0.493210),new h3d_Vector(-0.651784,0.717887),new h3d_Vector(0.421003,0.027070),new h3d_Vector(-0.817194,-0.271096),new h3d_Vector(-0.705374,-0.668203),new h3d_Vector(0.977050,-0.108615),new h3d_Vector(0.063326,0.142369),new h3d_Vector(0.203528,0.214331),new h3d_Vector(-0.667531,0.326090),new h3d_Vector(-0.098422,-0.295755),new h3d_Vector(-0.885922,0.215369),new h3d_Vector(0.566637,0.605213),new h3d_Vector(0.039766,-0.396100),new h3d_Vector(0.751946,0.453352),new h3d_Vector(0.078707,-0.715323),new h3d_Vector(-0.075838,-0.529344),new h3d_Vector(0.724479,-0.580798),new h3d_Vector(0.222999,-0.215125),new h3d_Vector(-0.467574,-0.405438),new h3d_Vector(-0.248268,-0.814753),new h3d_Vector(0.354411,-0.887570),new h3d_Vector(0.175817,0.382366),new h3d_Vector(0.487472,-0.063082),new h3d_Vector(-0.084078,0.898312),new h3d_Vector(0.488876,-0.783441),new h3d_Vector(0.470016,0.217933),new h3d_Vector(-0.696890,-0.549791),new h3d_Vector(-0.149693,0.605762),new h3d_Vector(0.034211,0.979980),new h3d_Vector(0.503098,-0.308878),new h3d_Vector(-0.016205,-0.872921),new h3d_Vector(0.385784,-0.393902),new h3d_Vector(-0.146886,-0.859249),new h3d_Vector(0.643361,0.164098),new h3d_Vector(0.634388,-0.049471),new h3d_Vector(-0.688894,0.007843),new h3d_Vector(0.464034,-0.188818),new h3d_Vector(-0.440840,0.137486),new h3d_Vector(0.364483,0.511704),new h3d_Vector(0.034028,0.325968),new h3d_Vector(0.099094,-0.308023),new h3d_Vector(0.693960,-0.366253),new h3d_Vector(0.678884,-0.204688),new h3d_Vector(0.001801,0.780328),new h3d_Vector(0.145177,-0.898984),new h3d_Vector(0.062655,-0.611866),new h3d_Vector(0.315226,-0.604297),new h3d_Vector(-0.780145,0.486251),new h3d_Vector(-0.371868,0.882138),new h3d_Vector(0.200476,0.494430),new h3d_Vector(-0.494552,-0.711051),new h3d_Vector(0.612476,0.705252),new h3d_Vector(-0.578845,-0.768792),new h3d_Vector(-0.772454,-0.090976),new h3d_Vector(0.504440,0.372295),new h3d_Vector(0.155736,0.065157),new h3d_Vector(0.391522,0.849605),new h3d_Vector(-0.620106,-0.328104),new h3d_Vector(0.789239,-0.419965),new h3d_Vector(-0.545396,0.538133),new h3d_Vector(-0.178564,-0.596057)];
};
$hxClasses["h3d.shader.DirShadow"] = h3d_shader_DirShadow;
h3d_shader_DirShadow.__name__ = "h3d.shader.DirShadow";
h3d_shader_DirShadow.__super__ = hxsl_Shader;
h3d_shader_DirShadow.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.enable__) {
			this.constBits |= 1;
		}
		if(this.USE_ESM__) {
			this.constBits |= 2;
		}
		if(this.USE_PCF__) {
			this.constBits |= 4;
		}
		var v = this.pcfQuality__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("pcfQuality" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v << 3;
		if(this.shadowMap__ == null) {
			this.shadowMapChannel__ = hxsl_Channel.Unknown;
		} else if(this.shadowMapChannel__ == hxsl_Channel.Unknown) {
			if(this.shadowMap__.format == h3d_mat_Texture.nativeFormat) {
				this.shadowMapChannel__ = hxsl_Channel.PackedFloat;
			} else {
				throw haxe_Exception.thrown("shadowMap" + "Channel is not set");
			}
		}
		this.constBits |= (globals.allocChannelID(this.shadowMap__) << 3 | this.shadowMapChannel__._hx_index) << 11;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.enable__;
		case 1:
			return this.USE_ESM__;
		case 2:
			return this.shadowPower__;
		case 3:
			return this.USE_PCF__;
		case 4:
			return this.pcfQuality__;
		case 5:
			return this.pcfScale__;
		case 6:
			return this.shadowRes__;
		case 7:
			return this.shadowMap__;
		case 8:
			return this.shadowProj__;
		case 9:
			return this.shadowBias__;
		case 10:
			return this.poissonDiskLow__;
		case 11:
			return this.poissonDiskHigh__;
		case 12:
			return this.poissonDiskVeryHigh__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 2:
			return this.shadowPower__;
		case 5:
			return this.pcfScale__;
		case 9:
			return this.shadowBias__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_DirShadow
});
var h3d_shader_GenTexture = function() {
	this.color__ = new h3d_Vector();
	this.mode__ = 0;
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.GenTexture"] = h3d_shader_GenTexture;
h3d_shader_GenTexture.__name__ = "h3d.shader.GenTexture";
h3d_shader_GenTexture.__super__ = h3d_shader_ScreenShader;
h3d_shader_GenTexture.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.mode__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("mode" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.mode__;
		case 2:
			return this.color__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_GenTexture
});
var h3d_shader_LineShader = function(width,lengthScale) {
	if(lengthScale == null) {
		lengthScale = 1.;
	}
	if(width == null) {
		width = 1.5;
	}
	this.width__ = 0;
	this.lengthScale__ = 0;
	hxsl_Shader.call(this);
	this.width__ = width;
	this.lengthScale__ = lengthScale;
};
$hxClasses["h3d.shader.LineShader"] = h3d_shader_LineShader;
h3d_shader_LineShader.__name__ = "h3d.shader.LineShader";
h3d_shader_LineShader.__super__ = hxsl_Shader;
h3d_shader_LineShader.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.lengthScale__;
		case 1:
			return this.width__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 0:
			return this.lengthScale__;
		case 1:
			return this.width__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_LineShader
});
var h3d_shader_MinMaxShader = function() {
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.MinMaxShader"] = h3d_shader_MinMaxShader;
h3d_shader_MinMaxShader.__name__ = "h3d.shader.MinMaxShader";
h3d_shader_MinMaxShader.__super__ = h3d_shader_ScreenShader;
h3d_shader_MinMaxShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isMax__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texA__;
		case 2:
			return this.texB__;
		case 3:
			return this.isMax__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_MinMaxShader
});
var h3d_shader_CubeMinMaxShader = function() {
	this.mat__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.CubeMinMaxShader"] = h3d_shader_CubeMinMaxShader;
h3d_shader_CubeMinMaxShader.__name__ = "h3d.shader.CubeMinMaxShader";
h3d_shader_CubeMinMaxShader.__super__ = h3d_shader_ScreenShader;
h3d_shader_CubeMinMaxShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isMax__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texA__;
		case 2:
			return this.texB__;
		case 3:
			return this.isMax__;
		case 4:
			return this.mat__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_CubeMinMaxShader
});
var h3d_shader_NormalMap = function(texture) {
	hxsl_Shader.call(this);
	this.texture__ = texture;
};
$hxClasses["h3d.shader.NormalMap"] = h3d_shader_NormalMap;
h3d_shader_NormalMap.__name__ = "h3d.shader.NormalMap";
h3d_shader_NormalMap.__super__ = hxsl_Shader;
h3d_shader_NormalMap.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.texture__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_NormalMap
});
var h3d_shader_Shadow = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.Shadow"] = h3d_shader_Shadow;
h3d_shader_Shadow.__name__ = "h3d.shader.Shadow";
h3d_shader_Shadow.__super__ = hxsl_Shader;
h3d_shader_Shadow.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_Shadow
});
var h3d_shader_SignedDistanceField = function() {
	this.smoothing__ = 0.041666666666666664;
	this.alphaCutoff__ = 0.5;
	this.channel__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.SignedDistanceField"] = h3d_shader_SignedDistanceField;
h3d_shader_SignedDistanceField.__name__ = "h3d.shader.SignedDistanceField";
h3d_shader_SignedDistanceField.__super__ = hxsl_Shader;
h3d_shader_SignedDistanceField.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.channel__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("channel" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.channel__;
		case 1:
			return this.alphaCutoff__;
		case 2:
			return this.smoothing__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 1:
			return this.alphaCutoff__;
		case 2:
			return this.smoothing__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_SignedDistanceField
});
var h3d_shader_SkinBase = function() {
	this.bonesMatrixes__ = [];
	this.MaxBones__ = 0;
	hxsl_Shader.call(this);
	this.constModified = true;
	this.MaxBones__ = 34;
};
$hxClasses["h3d.shader.SkinBase"] = h3d_shader_SkinBase;
h3d_shader_SkinBase.__name__ = "h3d.shader.SkinBase";
h3d_shader_SkinBase.__super__ = hxsl_Shader;
h3d_shader_SkinBase.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.MaxBones__;
		case 1:
			return this.bonesMatrixes__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_SkinBase
});
var h3d_shader_Skin = function() {
	h3d_shader_SkinBase.call(this);
};
$hxClasses["h3d.shader.Skin"] = h3d_shader_Skin;
h3d_shader_Skin.__name__ = "h3d.shader.Skin";
h3d_shader_Skin.__super__ = h3d_shader_SkinBase;
h3d_shader_Skin.prototype = $extend(h3d_shader_SkinBase.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.MaxBones__;
		case 1:
			return this.bonesMatrixes__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_Skin
});
var h3d_shader_SkinTangent = function() {
	h3d_shader_SkinBase.call(this);
};
$hxClasses["h3d.shader.SkinTangent"] = h3d_shader_SkinTangent;
h3d_shader_SkinTangent.__name__ = "h3d.shader.SkinTangent";
h3d_shader_SkinTangent.__super__ = h3d_shader_SkinBase;
h3d_shader_SkinTangent.prototype = $extend(h3d_shader_SkinBase.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.MaxBones__;
		case 1:
			return this.bonesMatrixes__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_SkinTangent
});
var h3d_shader_SpecularTexture = function(tex) {
	hxsl_Shader.call(this);
	this.texture__ = tex;
};
$hxClasses["h3d.shader.SpecularTexture"] = h3d_shader_SpecularTexture;
h3d_shader_SpecularTexture.__name__ = "h3d.shader.SpecularTexture";
h3d_shader_SpecularTexture.__super__ = hxsl_Shader;
h3d_shader_SpecularTexture.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.texture__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_SpecularTexture
});
var h3d_shader_Texture = function(tex) {
	this.killAlphaThreshold__ = 0;
	hxsl_Shader.call(this);
	this.texture__ = tex;
	this.killAlphaThreshold__ = h3d_mat_Defaults.defaultKillAlphaThreshold;
};
$hxClasses["h3d.shader.Texture"] = h3d_shader_Texture;
h3d_shader_Texture.__name__ = "h3d.shader.Texture";
h3d_shader_Texture.__super__ = hxsl_Shader;
h3d_shader_Texture.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		if(this.killAlpha__) {
			this.constBits |= 2;
		}
		if(this.specularAlpha__) {
			this.constBits |= 4;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.additive__;
		case 1:
			return this.killAlpha__;
		case 2:
			return this.specularAlpha__;
		case 3:
			return this.killAlphaThreshold__;
		case 4:
			return this.texture__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 3) {
			return this.killAlphaThreshold__;
		}
		return 0.;
	}
	,__class__: h3d_shader_Texture
});
var h3d_shader_UVDelta = function(dx,dy,sx,sy) {
	if(sy == null) {
		sy = 1.;
	}
	if(sx == null) {
		sx = 1.;
	}
	if(dy == null) {
		dy = 0.;
	}
	if(dx == null) {
		dx = 0.;
	}
	this.uvScale__ = new h3d_Vector();
	this.uvDelta__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.uvDelta__;
	var x = dx;
	var y = dy;
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = 0.;
	_this.w = 1.;
	var _this = this.uvScale__;
	var x = sx;
	var y = sy;
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = 0.;
	_this.w = 1.;
};
$hxClasses["h3d.shader.UVDelta"] = h3d_shader_UVDelta;
h3d_shader_UVDelta.__name__ = "h3d.shader.UVDelta";
h3d_shader_UVDelta.__super__ = hxsl_Shader;
h3d_shader_UVDelta.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.uvDelta__;
		case 1:
			return this.uvScale__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_UVDelta
});
var h3d_shader_VertexColorAlpha = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.VertexColorAlpha"] = h3d_shader_VertexColorAlpha;
h3d_shader_VertexColorAlpha.__name__ = "h3d.shader.VertexColorAlpha";
h3d_shader_VertexColorAlpha.__super__ = hxsl_Shader;
h3d_shader_VertexColorAlpha.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.additive__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_VertexColorAlpha
});
var h3d_shader_VolumeDecal = function(objectWidth,objectHeight) {
	this.isCentered__ = true;
	this.tangent__ = new h3d_Vector();
	this.normal__ = new h3d_Vector();
	this.scale__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.normal__;
	var x = 0;
	var y = 0;
	var z = 1;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	var _this = this.tangent__;
	var x = 1;
	var y = 0;
	var z = 0;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	var _this = this.scale__;
	var x = 1 / objectWidth;
	var y = 1 / objectHeight;
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = 0.;
	_this.w = 1.;
};
$hxClasses["h3d.shader.VolumeDecal"] = h3d_shader_VolumeDecal;
h3d_shader_VolumeDecal.__name__ = "h3d.shader.VolumeDecal";
h3d_shader_VolumeDecal.__super__ = hxsl_Shader;
h3d_shader_VolumeDecal.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isCentered__) {
			this.constBits |= 64;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.scale__;
		case 1:
			return this.normal__;
		case 2:
			return this.tangent__;
		case 3:
			return this.isCentered__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_VolumeDecal
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
var haxe_EntryPoint = function() { };
$hxClasses["haxe.EntryPoint"] = haxe_EntryPoint;
haxe_EntryPoint.__name__ = "haxe.EntryPoint";
haxe_EntryPoint.processEvents = function() {
	while(true) {
		var f = haxe_EntryPoint.pending.shift();
		if(f == null) {
			break;
		}
		f();
	}
	var time = haxe_MainLoop.tick();
	if(!haxe_MainLoop.hasEvents() && haxe_EntryPoint.threadCount == 0) {
		return -1;
	}
	return time;
};
haxe_EntryPoint.run = function() {
	var nextTick = haxe_EntryPoint.processEvents();
	if(typeof(window) != "undefined") {
		var $window = window;
		var rqf = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
		if(rqf != null) {
			rqf(haxe_EntryPoint.run);
		} else if(nextTick >= 0) {
			setTimeout(haxe_EntryPoint.run,nextTick * 1000);
		}
	} else if(nextTick >= 0) {
		setTimeout(haxe_EntryPoint.run,nextTick * 1000);
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_MainEvent = function(f,p) {
	this.isBlocking = true;
	this.f = f;
	this.priority = p;
	this.nextRun = -Infinity;
};
$hxClasses["haxe.MainEvent"] = haxe_MainEvent;
haxe_MainEvent.__name__ = "haxe.MainEvent";
haxe_MainEvent.prototype = {
	__class__: haxe_MainEvent
};
var haxe_MainLoop = function() { };
$hxClasses["haxe.MainLoop"] = haxe_MainLoop;
haxe_MainLoop.__name__ = "haxe.MainLoop";
haxe_MainLoop.hasEvents = function() {
	var p = haxe_MainLoop.pending;
	while(p != null) {
		if(p.isBlocking) {
			return true;
		}
		p = p.next;
	}
	return false;
};
haxe_MainLoop.add = function(f,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(f == null) {
		throw haxe_Exception.thrown("Event function is null");
	}
	var e = new haxe_MainEvent(f,priority);
	var head = haxe_MainLoop.pending;
	if(head != null) {
		head.prev = e;
	}
	e.next = head;
	haxe_MainLoop.pending = e;
	return e;
};
haxe_MainLoop.sortEvents = function() {
	var list = haxe_MainLoop.pending;
	if(list == null) {
		return;
	}
	var insize = 1;
	var nmerges;
	var psize = 0;
	var qsize = 0;
	var p;
	var q;
	var e;
	var tail;
	while(true) {
		p = list;
		list = null;
		tail = null;
		nmerges = 0;
		while(p != null) {
			++nmerges;
			q = p;
			psize = 0;
			var _g = 0;
			var _g1 = insize;
			while(_g < _g1) {
				var i = _g++;
				++psize;
				q = q.next;
				if(q == null) {
					break;
				}
			}
			qsize = insize;
			while(psize > 0 || qsize > 0 && q != null) {
				if(psize == 0) {
					e = q;
					q = q.next;
					--qsize;
				} else if(qsize == 0 || q == null || (p.priority > q.priority || p.priority == q.priority && p.nextRun <= q.nextRun)) {
					e = p;
					p = p.next;
					--psize;
				} else {
					e = q;
					q = q.next;
					--qsize;
				}
				if(tail != null) {
					tail.next = e;
				} else {
					list = e;
				}
				e.prev = tail;
				tail = e;
			}
			p = q;
		}
		tail.next = null;
		if(nmerges <= 1) {
			break;
		}
		insize *= 2;
	}
	list.prev = null;
	haxe_MainLoop.pending = list;
};
haxe_MainLoop.tick = function() {
	haxe_MainLoop.sortEvents();
	var e = haxe_MainLoop.pending;
	var now = HxOverrides.now() / 1000;
	var wait = 1e9;
	while(e != null) {
		var next = e.next;
		var wt = e.nextRun - now;
		if(wt <= 0) {
			wait = 0;
			if(e.f != null) {
				e.f();
			}
		} else if(wait > wt) {
			wait = wt;
		}
		e = next;
	}
	return wait;
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = "haxe.crypto.Adler32";
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	var a1a = i.readByte();
	var a1b = i.readByte();
	a.a1 = a1a << 8 | a1b;
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			var p = _g++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,fill: function(pos,len,value) {
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			this.b[pos++] = value;
		}
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__empty_constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = "haxe.crypto.Md5";
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	var h = m.doEncode(haxe_crypto_Md5.str2blks(s));
	return m.hex(h);
};
haxe_crypto_Md5.str2blks = function(str) {
	var str1 = haxe_io_Bytes.ofString(str);
	var nblk = (str1.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	var _g1 = blksSize;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var i = 0;
	var max = str1.length;
	var l = max * 8;
	while(i < max) {
		blks[i >> 2] |= str1.b[i] << (l + i) % 4 * 8;
		++i;
	}
	blks[i >> 2] |= 128 << (l + i) % 4 * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var hex_chr = "0123456789abcdef";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			str += hex_chr.charAt(num >> 4 & 15) + hex_chr.charAt(num & 15);
			str += hex_chr.charAt(num >> 12 & 15) + hex_chr.charAt(num >> 8 & 15);
			str += hex_chr.charAt(num >> 20 & 15) + hex_chr.charAt(num >> 16 & 15);
			str += hex_chr.charAt(num >> 28 & 15) + hex_chr.charAt(num >> 24 & 15);
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.iteratorLoop = function(node,acc) {
	if(node != null) {
		haxe_ds_BalancedTree.iteratorLoop(node.left,acc);
		acc.push(node.value);
		haxe_ds_BalancedTree.iteratorLoop(node.right,acc);
	}
};
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,remove: function(key) {
		try {
			this.root = this.removeLoop(key,this.root);
			return true;
		} catch( _g ) {
			if(typeof(haxe_Exception.caught(_g).unwrap()) == "string") {
				return false;
			} else {
				throw _g;
			}
		}
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,iterator: function() {
		var ret = [];
		haxe_ds_BalancedTree.iteratorLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,keys: function() {
		var ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,removeLoop: function(k,node) {
		if(node == null) {
			throw haxe_Exception.thrown("Not_found");
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return this.merge(node.left,node.right);
		} else if(c < 0) {
			return this.balance(this.removeLoop(k,node.left),node.key,node.value,node.right);
		} else {
			return this.balance(node.left,node.key,node.value,this.removeLoop(k,node.right));
		}
	}
	,keysLoop: function(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	,merge: function(t1,t2) {
		if(t1 == null) {
			return t2;
		}
		if(t2 == null) {
			return t1;
		}
		var t = this.minBinding(t2);
		return this.balance(t1,t.key,t.value,this.removeMinBinding(t2));
	}
	,minBinding: function(t) {
		if(t == null) {
			throw haxe_Exception.thrown("Not_found");
		} else if(t.left == null) {
			return t;
		} else {
			return this.minBinding(t.left);
		}
	}
	,removeMinBinding: function(t) {
		if(t.left == null) {
			return t.right;
		} else {
			return this.balance(this.removeMinBinding(t.left),t.key,t.value,t.right);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.keysIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return keys[idx - 1];
	}};
};
haxe_ds_StringMap.valueIterator = function(h) {
	var keys = Object.keys(h);
	var len = keys.length;
	var idx = 0;
	return { hasNext : function() {
		return idx < len;
	}, next : function() {
		idx += 1;
		return h[keys[idx - 1]];
	}};
};
haxe_ds_StringMap.prototype = {
	iterator: function() {
		return haxe_ds_StringMap.valueIterator(this.h);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	readByte: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUntil: function(end) {
		var buf = new haxe_io_BytesBuffer();
		var last;
		while(true) {
			last = this.readByte();
			if(!(last != end)) {
				break;
			}
			buf.addByte(last);
		}
		return buf.getBytes().toString();
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readUInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		if(this.bigEndian) {
			return ch3 | ch2 << 8 | ch1 << 16;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	flush: function() {
	}
	,close: function() {
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	haxe_io_FPHelper.helper.setInt32(0,low,true);
	haxe_io_FPHelper.helper.setInt32(4,high,true);
	return haxe_io_FPHelper.helper.getFloat64(0,true);
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = "haxe.io.Path";
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.withExtension = function(path,ext) {
	var s = new haxe_io_Path(path);
	s.ext = ext;
	return s.toString();
};
haxe_io_Path.join = function(paths) {
	var _g = [];
	var _g1 = 0;
	var _g2 = paths;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v != null && v != "") {
			_g.push(v);
		}
	}
	var paths = _g;
	if(paths.length == 0) {
		return "";
	}
	var path = paths[0];
	var _g = 1;
	var _g1 = paths.length;
	while(_g < _g1) {
		var i = _g++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token == "") {
			if(target.length > 0 || HxOverrides.cca(path,0) == 47) {
				target.push(token);
			}
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g2_offset = 0;
	var _g2_s = tmp;
	while(_g2_offset < _g2_s.length) {
		var s = _g2_s;
		var index = _g2_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g2_offset;
		}
		var c2 = c1;
		switch(c2) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i = c2;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCodePoint(i);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i1 = c2;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCodePoint(i1);
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.prototype = {
	toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_macro_Binop = $hxEnums["haxe.macro.Binop"] = { __ename__ : true, __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval","OpArrow","OpIn"]
	,OpAdd: {_hx_index:0,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMult: {_hx_index:1,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpDiv: {_hx_index:2,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpSub: {_hx_index:3,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssign: {_hx_index:4,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpEq: {_hx_index:5,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNotEq: {_hx_index:6,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGt: {_hx_index:7,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGte: {_hx_index:8,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLt: {_hx_index:9,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLte: {_hx_index:10,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAnd: {_hx_index:11,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpOr: {_hx_index:12,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpXor: {_hx_index:13,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolAnd: {_hx_index:14,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolOr: {_hx_index:15,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShl: {_hx_index:16,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShr: {_hx_index:17,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpUShr: {_hx_index:18,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMod: {_hx_index:19,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssignOp: ($_=function(op) { return {_hx_index:20,op:op,__enum__:"haxe.macro.Binop",toString:$estr}; },$_.__params__ = ["op"],$_)
	,OpInterval: {_hx_index:21,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpArrow: {_hx_index:22,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpIn: {_hx_index:23,__enum__:"haxe.macro.Binop",toString:$estr}
};
haxe_macro_Binop.__empty_constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn];
var haxe_macro_Unop = $hxEnums["haxe.macro.Unop"] = { __ename__ : true, __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"]
	,OpIncrement: {_hx_index:0,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpDecrement: {_hx_index:1,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNot: {_hx_index:2,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNeg: {_hx_index:3,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNegBits: {_hx_index:4,__enum__:"haxe.macro.Unop",toString:$estr}
};
haxe_macro_Unop.__empty_constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits];
var haxe_rtti_Meta = function() { };
$hxClasses["haxe.rtti.Meta"] = haxe_rtti_Meta;
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getType = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.obj == null) {
		return { };
	} else {
		return meta.obj;
	}
};
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
var haxe_xml__$Access_NodeAccess = {};
haxe_xml__$Access_NodeAccess.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			xname = this1.nodeName;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	var this1 = x;
	return this1;
};
var haxe_xml__$Access_AttribAccess = {};
haxe_xml__$Access_AttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
		}
		throw haxe_Exception.thrown(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasNodeAccess = {};
haxe_xml__$Access_HasNodeAccess.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _g_current = 0;
				var _g_array = value.children;
				while(_g_current < _g_array.length) {
					var child = _g_array[_g_current++];
					this.writeNode(child,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input = StringTools.trim(commentContent);
			this.output.b += Std.string(input);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _g_current = 0;
			var _g_array = value.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.writeNode(child,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _g_current = 0;
		var _g_array = value.children;
		while(_g_current < _g_array.length) {
			var child = _g_array[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var haxe_zip_Huffman = $hxEnums["haxe.zip.Huffman"] = { __ename__ : true, __constructs__ : ["Found","NeedBit","NeedBits"]
	,Found: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["i"],$_)
	,NeedBit: ($_=function(left,right) { return {_hx_index:1,left:left,right:right,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["left","right"],$_)
	,NeedBits: ($_=function(n,table) { return {_hx_index:2,n:n,table:table,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_.__params__ = ["n","table"],$_)
};
haxe_zip_Huffman.__empty_constructs__ = [];
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = "haxe.zip.HuffTools";
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t._hx_index) {
		case 0:
			var _g = t.i;
			return 0;
		case 1:
			var b = t.right;
			var a = t.left;
			var da = this.treeDepth(a);
			var db = this.treeDepth(b);
			return 1 + (da < db ? da : db);
		case 2:
			var _g = t.table;
			var _g = t.n;
			throw haxe_Exception.thrown("assert");
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t._hx_index == 1) {
				var b = t.right;
				var a = t.left;
				return haxe_zip_Huffman.NeedBit(this.treeCompress(a),this.treeCompress(b));
			} else {
				throw haxe_Exception.thrown("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g = 0;
		var _g1 = size;
		while(_g < _g1) {
			var i = _g++;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t._hx_index == 1) {
			var b = t.right;
			var a = t.left;
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,a);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,b);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw haxe_Exception.thrown("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		if(nlengths == 1) {
			return haxe_zip_Huffman.NeedBit(haxe_zip_Huffman.Found(0),haxe_zip_Huffman.Found(0));
		}
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw haxe_Exception.thrown("Invalid huffman");
		}
		var _g = 0;
		var _g1 = maxbits;
		while(_g < _g1) {
			var i = _g++;
			counts.push(0);
			tmp.push(0);
		}
		var _g = 0;
		var _g1 = nlengths;
		while(_g < _g1) {
			var i = _g++;
			var p = lengths[i + pos];
			if(p >= maxbits) {
				throw haxe_Exception.thrown("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g = 1;
		var _g1 = maxbits - 1;
		while(_g < _g1) {
			var i = _g++;
			code = code + counts[i] << 1;
			tmp[i] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = nlengths;
		while(_g < _g1) {
			var i = _g++;
			var l = lengths[i + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = "haxe.zip._InflateImpl.Window";
haxe_zip__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxEnums["haxe.zip._InflateImpl.State"] = { __ename__ : true, __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"]
	,Head: {_hx_index:0,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Block: {_hx_index:1,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,CData: {_hx_index:2,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Flat: {_hx_index:3,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Crc: {_hx_index:4,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Dist: {_hx_index:5,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,DistOne: {_hx_index:6,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Done: {_hx_index:7,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
};
haxe_zip__$InflateImpl_State.__empty_constructs__ = [haxe_zip__$InflateImpl_State.Head,haxe_zip__$InflateImpl_State.Block,haxe_zip__$InflateImpl_State.CData,haxe_zip__$InflateImpl_State.Flat,haxe_zip__$InflateImpl_State.Crc,haxe_zip__$InflateImpl_State.Dist,haxe_zip__$InflateImpl_State.DistOne,haxe_zip__$InflateImpl_State.Done];
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this.isFinal = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = "haxe.zip.InflateImpl";
haxe_zip_InflateImpl.run = function(i,bufsize) {
	if(bufsize == null) {
		bufsize = 65536;
	}
	var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
	var output = new haxe_io_BytesBuffer();
	var inflate = new haxe_zip_InflateImpl(i);
	while(true) {
		var len = inflate.readBytes(buf,0,bufsize);
		output.addBytes(buf,0,len);
		if(len < bufsize) {
			break;
		}
	}
	return output.getBytes();
};
haxe_zip_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h._hx_index) {
		case 0:
			var n = h.i;
			return n;
		case 1:
			var b = h.right;
			var a = h.left;
			return this.applyHuffman(this.getBit() ? b : a);
		case 2:
			var tbl = h.table;
			var n = h.n;
			return this.applyHuffman(tbl[this.getBits(n)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		switch(this.state._hx_index) {
		case 0:
			var cmf = this.input.readByte();
			var cm = cmf & 15;
			var cinfo = cmf >> 4;
			if(cm != 8) {
				throw haxe_Exception.thrown("Invalid data");
			}
			var flg = this.input.readByte();
			var fdict = (flg & 32) != 0;
			if(((cmf << 8) + flg) % 31 != 0) {
				throw haxe_Exception.thrown("Invalid data");
			}
			if(fdict) {
				throw haxe_Exception.thrown("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this.isFinal = this.getBit();
			switch(this.getBits(2)) {
			case 0:
				this.len = this.input.readUInt16();
				var nlen = this.input.readUInt16();
				if(nlen != 65535 - this.len) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g = 0;
				var _g1 = hclen;
				while(_g < _g1) {
					var i = _g++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = this.getBits(3);
				}
				var _g = hclen;
				var _g1 = 19;
				while(_g < _g1) {
					var i = _g++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = 0;
				}
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g = 0;
				var _g1 = hlit + hdist;
				while(_g < _g1) {
					var i = _g++;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw haxe_Exception.thrown("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.state = this.dist == 1 ? haxe_zip__$InflateImpl_State.DistOne : haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed ? this.len : this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			var crc = haxe_crypto_Adler32.read(this.input);
			if(!calc.equals(crc)) {
				throw haxe_Exception.thrown("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist ? this.len : this.dist;
				var rlen = this.needed < rdist ? this.needed : rdist;
				this.addDist(this.dist,rlen);
				this.len -= rlen;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen = this.len < this.needed ? this.len : this.needed;
			this.addDistOne(rlen);
			this.len -= rlen;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Uncompress = function() { };
$hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress;
haxe_zip_Uncompress.__name__ = "haxe.zip.Uncompress";
haxe_zip_Uncompress.run = function(src,bufsize) {
	return haxe_zip_InflateImpl.run(new haxe_io_BytesInput(src),bufsize);
};
var hxd_BitmapData = function(width,height) {
	if(!(width == -101 && height == -102)) {
		var canvas = window.document.createElement("canvas");
		canvas.width = width;
		canvas.height = height;
		this.ctx = canvas.getContext("2d",null);
	}
};
$hxClasses["hxd.BitmapData"] = hxd_BitmapData;
hxd_BitmapData.__name__ = "hxd.BitmapData";
hxd_BitmapData.prototype = {
	getPixels: function() {
		var w = this.ctx.canvas.width;
		var h = this.ctx.canvas.height;
		var data = this.ctx.getImageData(0,0,w,h).data;
		var pixels = data.buffer;
		return new hxd_Pixels(w,h,haxe_io_Bytes.ofData(pixels),hxd_PixelFormat.RGBA);
	}
	,__class__: hxd_BitmapData
};
var hxd_Charset = function() {
	var _gthis = this;
	this.map = new haxe_ds_IntMap();
	var _g = 0;
	while(_g < 94) {
		var i = _g++;
		_gthis.map.h[65281 + i] = 33 + i;
	}
	var _g = 192;
	var _g1 = 199;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 65;
	}
	var _g = 224;
	var _g1 = 231;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 97;
	}
	var _g = 200;
	var _g1 = 204;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 69;
	}
	var _g = 232;
	var _g1 = 236;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 101;
	}
	var _g = 204;
	var _g1 = 208;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 73;
	}
	var _g = 236;
	var _g1 = 240;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 105;
	}
	var _g = 210;
	var _g1 = 215;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 79;
	}
	var _g = 242;
	var _g1 = 247;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 111;
	}
	var _g = 217;
	var _g1 = 221;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 85;
	}
	var _g = 249;
	var _g1 = 253;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 117;
	}
	_gthis.map.h[199] = 67;
	_gthis.map.h[231] = 67;
	_gthis.map.h[208] = 68;
	_gthis.map.h[222] = 100;
	_gthis.map.h[209] = 78;
	_gthis.map.h[241] = 110;
	_gthis.map.h[221] = 89;
	_gthis.map.h[253] = 121;
	_gthis.map.h[255] = 121;
	_gthis.map.h[8364] = 69;
	_gthis.map.h[12288] = 32;
	_gthis.map.h[160] = 32;
	_gthis.map.h[171] = 34;
	_gthis.map.h[187] = 34;
	_gthis.map.h[8220] = 34;
	_gthis.map.h[8221] = 34;
	_gthis.map.h[8216] = 39;
	_gthis.map.h[8217] = 39;
	_gthis.map.h[180] = 39;
	_gthis.map.h[8216] = 39;
	_gthis.map.h[8249] = 60;
	_gthis.map.h[8250] = 62;
	_gthis.map.h[8211] = 45;
};
$hxClasses["hxd.Charset"] = hxd_Charset;
hxd_Charset.__name__ = "hxd.Charset";
hxd_Charset.getDefault = function() {
	if(hxd_Charset.inst == null) {
		hxd_Charset.inst = new hxd_Charset();
	}
	return hxd_Charset.inst;
};
hxd_Charset.prototype = {
	resolveChar: function(code,glyphs) {
		var c = code;
		while(c != null) {
			var g = glyphs.h[c];
			if(g != null) {
				return g;
			}
			c = this.map.h[c];
		}
		return null;
	}
	,isCJK: function(code) {
		if(!(code >= 11904 && code <= 42191 || code >= 63744 && code <= 64255)) {
			if(code >= 131072) {
				return code <= 262141;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,isSpace: function(code) {
		if(code != 32) {
			return code == 12288;
		} else {
			return true;
		}
	}
	,isBreakChar: function(code) {
		if(!this.isSpace(code)) {
			return this.isCJK(code);
		} else {
			return true;
		}
	}
	,isComplementChar: function(code) {
		return hxd_Charset.complementChars.h.hasOwnProperty(code);
	}
	,__class__: hxd_Charset
};
var hxd_Cursor = $hxEnums["hxd.Cursor"] = { __ename__ : true, __constructs__ : ["Default","Button","Move","TextInput","Hide","Custom","Callback"]
	,Default: {_hx_index:0,__enum__:"hxd.Cursor",toString:$estr}
	,Button: {_hx_index:1,__enum__:"hxd.Cursor",toString:$estr}
	,Move: {_hx_index:2,__enum__:"hxd.Cursor",toString:$estr}
	,TextInput: {_hx_index:3,__enum__:"hxd.Cursor",toString:$estr}
	,Hide: {_hx_index:4,__enum__:"hxd.Cursor",toString:$estr}
	,Custom: ($_=function(custom) { return {_hx_index:5,custom:custom,__enum__:"hxd.Cursor",toString:$estr}; },$_.__params__ = ["custom"],$_)
	,Callback: ($_=function(f) { return {_hx_index:6,f:f,__enum__:"hxd.Cursor",toString:$estr}; },$_.__params__ = ["f"],$_)
};
hxd_Cursor.__empty_constructs__ = [hxd_Cursor.Default,hxd_Cursor.Button,hxd_Cursor.Move,hxd_Cursor.TextInput,hxd_Cursor.Hide];
var hxd_CustomCursor = function(frames,speed,offsetX,offsetY) {
	this.frames = frames;
	this.speed = speed;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.frameDelay = 1 / speed;
	this.frameTime = 0;
	this.frameIndex = 0;
};
$hxClasses["hxd.CustomCursor"] = hxd_CustomCursor;
hxd_CustomCursor.__name__ = "hxd.CustomCursor";
hxd_CustomCursor.prototype = {
	reset: function() {
		this.frameTime = 0;
		this.frameIndex = 0;
	}
	,update: function(dt) {
		var newTime = this.frameTime + dt;
		var delay = this.frameDelay;
		var index = this.frameIndex;
		while(newTime >= delay) {
			newTime -= delay;
			++index;
		}
		this.frameTime = newTime;
		if(index >= this.frames.length) {
			index %= this.frames.length;
		}
		if(index != this.frameIndex) {
			this.frameIndex = index;
			return index;
		}
		return -1;
	}
	,__class__: hxd_CustomCursor
};
var hxd_EventKind = $hxEnums["hxd.EventKind"] = { __ename__ : true, __constructs__ : ["EPush","ERelease","EMove","EOver","EOut","EWheel","EFocus","EFocusLost","EKeyDown","EKeyUp","EReleaseOutside","ETextInput","ECheck"]
	,EPush: {_hx_index:0,__enum__:"hxd.EventKind",toString:$estr}
	,ERelease: {_hx_index:1,__enum__:"hxd.EventKind",toString:$estr}
	,EMove: {_hx_index:2,__enum__:"hxd.EventKind",toString:$estr}
	,EOver: {_hx_index:3,__enum__:"hxd.EventKind",toString:$estr}
	,EOut: {_hx_index:4,__enum__:"hxd.EventKind",toString:$estr}
	,EWheel: {_hx_index:5,__enum__:"hxd.EventKind",toString:$estr}
	,EFocus: {_hx_index:6,__enum__:"hxd.EventKind",toString:$estr}
	,EFocusLost: {_hx_index:7,__enum__:"hxd.EventKind",toString:$estr}
	,EKeyDown: {_hx_index:8,__enum__:"hxd.EventKind",toString:$estr}
	,EKeyUp: {_hx_index:9,__enum__:"hxd.EventKind",toString:$estr}
	,EReleaseOutside: {_hx_index:10,__enum__:"hxd.EventKind",toString:$estr}
	,ETextInput: {_hx_index:11,__enum__:"hxd.EventKind",toString:$estr}
	,ECheck: {_hx_index:12,__enum__:"hxd.EventKind",toString:$estr}
};
hxd_EventKind.__empty_constructs__ = [hxd_EventKind.EPush,hxd_EventKind.ERelease,hxd_EventKind.EMove,hxd_EventKind.EOver,hxd_EventKind.EOut,hxd_EventKind.EWheel,hxd_EventKind.EFocus,hxd_EventKind.EFocusLost,hxd_EventKind.EKeyDown,hxd_EventKind.EKeyUp,hxd_EventKind.EReleaseOutside,hxd_EventKind.ETextInput,hxd_EventKind.ECheck];
var hxd_Event = function(k,x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.button = 0;
	this.kind = k;
	this.relX = x;
	this.relY = y;
};
$hxClasses["hxd.Event"] = hxd_Event;
hxd_Event.__name__ = "hxd.Event";
hxd_Event.prototype = {
	__class__: hxd_Event
};
var hxd__$FloatBuffer_Float32Expand = {};
hxd__$FloatBuffer_Float32Expand._new = function(length) {
	var this1 = { pos : length, array : new Float32Array(new ArrayBuffer(length << 2))};
	return this1;
};
var hxd_Key = function() { };
$hxClasses["hxd.Key"] = hxd_Key;
hxd_Key.__name__ = "hxd.Key";
hxd_Key.isDown = function(code) {
	return hxd_Key.keyPressed[code] > 0;
};
hxd_Key.isPressed = function(code) {
	return hxd_Key.keyPressed[code] == hxd_Timer.frameCount + 1 - 1;
};
hxd_Key.initialize = function() {
	if(hxd_Key.initDone) {
		hxd_Key.dispose();
	}
	hxd_Key.initDone = true;
	hxd_Key.keyPressed = [];
	hxd_Window.getInstance().addEventTarget(hxd_Key.onEvent);
};
hxd_Key.dispose = function() {
	if(hxd_Key.initDone) {
		hxd_Window.getInstance().removeEventTarget(hxd_Key.onEvent);
		hxd_Key.initDone = false;
		hxd_Key.keyPressed = [];
	}
};
hxd_Key.onEvent = function(e) {
	switch(e.kind._hx_index) {
	case 0:
		if(e.button < 5) {
			hxd_Key.keyPressed[e.button] = hxd_Timer.frameCount + 1;
		}
		break;
	case 1:
		if(e.button < 5) {
			hxd_Key.keyPressed[e.button] = -(hxd_Timer.frameCount + 1);
		}
		break;
	case 5:
		hxd_Key.keyPressed[e.wheelDelta > 0 ? 6 : 5] = hxd_Timer.frameCount + 1;
		break;
	case 8:
		if(!hxd_Key.ALLOW_KEY_REPEAT && hxd_Key.keyPressed[e.keyCode] > 0) {
			return;
		}
		hxd_Key.keyPressed[e.keyCode] = hxd_Timer.frameCount + 1;
		break;
	case 9:
		hxd_Key.keyPressed[e.keyCode] = -(hxd_Timer.frameCount + 1);
		break;
	default:
	}
};
var hxd_Flags = $hxEnums["hxd.Flags"] = { __ename__ : true, __constructs__ : ["ReadOnly","AlphaPremultiplied","FlipY"]
	,ReadOnly: {_hx_index:0,__enum__:"hxd.Flags",toString:$estr}
	,AlphaPremultiplied: {_hx_index:1,__enum__:"hxd.Flags",toString:$estr}
	,FlipY: {_hx_index:2,__enum__:"hxd.Flags",toString:$estr}
};
hxd_Flags.__empty_constructs__ = [hxd_Flags.ReadOnly,hxd_Flags.AlphaPremultiplied,hxd_Flags.FlipY];
var hxd_PixelsARGB = {};
hxd_PixelsARGB.fromPixels = function(p) {
	p.convert(hxd_PixelFormat.ARGB);
	p.setFlip(false);
	return p;
};
var hxd_Pixels = function(width,height,bytes,format,offset) {
	if(offset == null) {
		offset = 0;
	}
	this.width = width;
	this.height = height;
	this.bytes = bytes;
	this.set_innerFormat(format);
	this.offset = offset;
	var i = 0;
	if(i == null) {
		i = 0;
	}
	var this1 = i;
	this.flags = this1;
};
$hxClasses["hxd.Pixels"] = hxd_Pixels;
hxd_Pixels.__name__ = "hxd.Pixels";
hxd_Pixels.calcStride = function(width,format) {
	var tmp;
	switch(format._hx_index) {
	case 3:case 20:
		tmp = 8;
		break;
	case 4:
		tmp = 16;
		break;
	case 5:
		tmp = 1;
		break;
	case 6:case 18:
		tmp = 2;
		break;
	case 7:
		tmp = 4;
		break;
	case 8:
		tmp = 2;
		break;
	case 9:
		tmp = 4;
		break;
	case 10:
		tmp = 8;
		break;
	case 11:
		tmp = 3;
		break;
	case 13:
		tmp = 12;
		break;
	case 0:case 1:case 2:case 14:case 15:
		tmp = 4;
		break;
	case 16:
		tmp = 4;
		break;
	case 17:
		tmp = 4;
		break;
	case 12:case 19:
		tmp = 6;
		break;
	case 21:
		var n = format.v;
		if(n == 1 || n == 4) {
			return width >> 1;
		}
		tmp = 1;
		break;
	}
	return width * tmp;
};
hxd_Pixels.alloc = function(width,height,format) {
	return new hxd_Pixels(width,height,new haxe_io_Bytes(new ArrayBuffer(height * hxd_Pixels.calcStride(width,format))),format);
};
hxd_Pixels.prototype = {
	set_innerFormat: function(fmt) {
		this.innerFormat = fmt;
		this.stride = hxd_Pixels.calcStride(this.width,fmt);
		this.bytesPerPixel = hxd_Pixels.calcStride(1,fmt);
		return fmt;
	}
	,invalidFormat: function() {
		throw haxe_Exception.thrown("Unsupported format for this operation : " + Std.string(this.innerFormat));
	}
	,makeSquare: function(copy) {
		var w = this.width;
		var h = this.height;
		var tw = w == 0 ? 0 : 1;
		var th = h == 0 ? 0 : 1;
		while(tw < w) tw <<= 1;
		while(th < h) th <<= 1;
		if(w == tw && h == th) {
			return this;
		}
		var bpp = this.bytesPerPixel;
		var out = new haxe_io_Bytes(new ArrayBuffer(tw * th * bpp));
		var p = 0;
		var b = this.offset;
		var _g = 0;
		var _g1 = h;
		while(_g < _g1) {
			var y = _g++;
			out.blit(p,this.bytes,b,w * bpp);
			p += w * bpp;
			b += w * bpp;
			var _g2 = 0;
			var _g3 = (tw - w) * bpp >> 2;
			while(_g2 < _g3) {
				var i = _g2++;
				out.setInt32(p,0);
				p += 4;
			}
		}
		var _g = 0;
		var _g1 = (th - h) * tw * bpp >> 2;
		while(_g < _g1) {
			var i = _g++;
			out.setInt32(p,0);
			p += 4;
		}
		if(copy) {
			return new hxd_Pixels(tw,th,out,this.innerFormat);
		}
		this.bytes = out;
		this.width = tw;
		this.height = th;
		return this;
	}
	,copyInner: function() {
		var old = this.bytes;
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.height * this.stride));
		this.bytes.blit(0,old,this.offset,this.height * this.stride);
		this.offset = 0;
		this.flags &= -1 - (1 << hxd_Flags.ReadOnly._hx_index);
	}
	,setFlip: function(b) {
		if(b == null) {
			b = false;
		}
		if((this.flags & 1 << hxd_Flags.FlipY._hx_index) != 0 == b) {
			return;
		}
		if((this.flags & 1 << hxd_Flags.ReadOnly._hx_index) != 0) {
			this.copyInner();
		}
		if(b) {
			this.flags |= 1 << hxd_Flags.FlipY._hx_index;
		} else {
			this.flags &= -1 - (1 << hxd_Flags.FlipY._hx_index);
		}
		if(this.stride % 4 != 0) {
			this.invalidFormat();
		}
		var _g = 0;
		var _g1 = this.height >> 1;
		while(_g < _g1) {
			var y = _g++;
			var p1 = y * this.stride + this.offset;
			var p2 = (this.height - 1 - y) * this.stride + this.offset;
			var _g2 = 0;
			var _g3 = this.stride >> 2;
			while(_g2 < _g3) {
				var x = _g2++;
				var a = this.bytes.getInt32(p1);
				var b = this.bytes.getInt32(p2);
				this.bytes.setInt32(p1,b);
				this.bytes.setInt32(p2,a);
				p1 += 4;
				p2 += 4;
			}
		}
	}
	,convert: function(target) {
		if(this.innerFormat == target) {
			return;
		}
		if((this.flags & 1 << hxd_Flags.ReadOnly._hx_index) != 0) {
			this.copyInner();
		}
		var this1 = this.bytes.b;
		var bytes = this1;
		var _g = this.innerFormat;
		switch(_g._hx_index) {
		case 0:
			switch(target._hx_index) {
			case 1:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p];
					var r = bytes[p + 1];
					var g = bytes[p + 2];
					var b = bytes[p + 3];
					bytes[p++] = b;
					bytes[p++] = g;
					bytes[p++] = r;
					bytes[p] = a;
				}
				break;
			case 2:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p];
					var v = bytes[p + 1];
					bytes[p] = v;
					var v1 = bytes[p + 2];
					bytes[p + 1] = v1;
					var v2 = bytes[p + 3];
					bytes[p + 2] = v2;
					bytes[p + 3] = a;
				}
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 1:
			switch(target._hx_index) {
			case 0:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p];
					var r = bytes[p + 1];
					var g = bytes[p + 2];
					var b = bytes[p + 3];
					bytes[p++] = b;
					bytes[p++] = g;
					bytes[p++] = r;
					bytes[p] = a;
				}
				break;
			case 2:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var b = bytes[p];
					var r = bytes[p + 2];
					bytes[p] = r;
					bytes[p + 2] = b;
				}
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 2:
			switch(target._hx_index) {
			case 0:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p + 3];
					var v = bytes[p + 2];
					bytes[p + 3] = v;
					var v1 = bytes[p + 1];
					bytes[p + 2] = v1;
					var v2 = bytes[p];
					bytes[p + 1] = v2;
					bytes[p] = a;
				}
				break;
			case 1:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var b = bytes[p];
					var r = bytes[p + 2];
					bytes[p] = r;
					bytes[p + 2] = b;
				}
				break;
			case 5:
				var nbytes = new haxe_io_Bytes(new ArrayBuffer(this.width * this.height));
				var this1 = nbytes.b;
				var out = this1;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var v = bytes[i << 2];
					out[i] = v;
				}
				this.bytes = nbytes;
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 7:
			switch(target._hx_index) {
			case 1:case 2:
				var fbytes = this.bytes;
				var p = 0;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var v = fbytes.getFloat(p) * 255 | 0;
					if(v < 0) {
						v = 0;
					} else if(v > 255) {
						v = 255;
					}
					bytes[p++] = v;
					bytes[p++] = v;
					bytes[p++] = v;
					bytes[p++] = 255;
				}
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 18:
			if(target._hx_index == 7) {
				var nbytes = new haxe_io_Bytes(new ArrayBuffer(this.width * this.height * 4));
				var fbytes = this.bytes;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var nv = fbytes.getUInt16(i << 1);
					nbytes.setFloat(i << 2,nv / 65535.0);
				}
				this.bytes = nbytes;
			} else {
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 21:
			if(target._hx_index == 21) {
				var a = _g.v;
				var b = target.v;
				if(a != b) {
					throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
				}
			} else {
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		default:
			throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
		}
		this.set_innerFormat(target);
	}
	,dispose: function() {
		this.bytes = null;
	}
	,__class__: hxd_Pixels
};
var hxd_Res = function() { };
$hxClasses["hxd.Res"] = hxd_Res;
hxd_Res.__name__ = "hxd.Res";
hxd_Res.load = function(name) {
	return hxd_Res.get_loader().load(name);
};
hxd_Res.get_loader = function() {
	var l = hxd_res_Loader.currentInstance;
	if(l == null) {
		throw haxe_Exception.thrown("Resource loader not initialized: call to hxd.Res.initXXX() required");
	}
	return l;
};
hxd_Res.set_loader = function(l) {
	return hxd_res_Loader.currentInstance = l;
};
var hxd_SceneEvents = function($window) {
	this.defaultCursor = hxd_Cursor.Default;
	this.mouseCheckMove = true;
	this.enablePhysicalMouse = true;
	this.isOut = false;
	this.onOver = new hxd_Event(hxd_EventKind.EOver);
	this.onOut = new hxd_Event(hxd_EventKind.EOut);
	this.checkPos = new hxd_Event(hxd_EventKind.ECheck);
	this.focusLost = new hxd_Event(hxd_EventKind.EFocusLost);
	this.lastTouch = 0;
	this.mouseY = -1.;
	this.mouseX = -1.;
	this.overIndex = -1;
	this.scenes = [];
	this.pendingEvents = [];
	this.pushList = [];
	this.overList = [];
	this.overCandidates = [];
	if($window == null) {
		$window = hxd_Window.getInstance();
	}
	this.window = $window;
	$window.addEventTarget($bind(this,this.onEvent));
};
$hxClasses["hxd.SceneEvents"] = hxd_SceneEvents;
hxd_SceneEvents.__name__ = "hxd.SceneEvents";
hxd_SceneEvents.prototype = {
	onRemove: function(i) {
		if(i == this.currentFocus) {
			this.currentFocus = null;
		}
		if(this.overIndex >= 0) {
			var index = this.overList.indexOf(i);
			if(index >= 0) {
				HxOverrides.remove(this.overList,i);
				if(index < this.overIndex) {
					this.overIndex--;
				}
			}
		} else {
			HxOverrides.remove(this.overList,i);
			this.selectCursor();
		}
		HxOverrides.remove(this.pushList,i);
	}
	,addScene: function(s,index) {
		s.setEvents(this);
		if(index == null) {
			this.scenes.push(s);
		} else {
			this.scenes.splice(index,0,s);
		}
	}
	,focus: function(i) {
		if(this.currentFocus == i) {
			return;
		}
		if(i == null) {
			this.blur();
			return;
		}
		if(this.currentFocus != null) {
			this.blur();
			if(this.currentFocus != null) {
				return;
			}
		}
		var e = new hxd_Event(hxd_EventKind.EFocus);
		i.handleEvent(e);
		if(!e.cancel) {
			this.currentFocus = i;
		}
	}
	,blur: function() {
		if(this.currentFocus == null) {
			return;
		}
		this.focusLost.cancel = false;
		this.currentFocus.handleEvent(this.focusLost);
		if(!this.focusLost.cancel) {
			this.currentFocus = null;
		}
	}
	,checkFocus: function() {
		if(this.currentFocus == null) {
			return;
		}
		var s = this.currentFocus.getInteractiveScene();
		if(s == null) {
			this.currentFocus = null;
			return;
		}
		if(!s.isInteractiveVisible(this.currentFocus)) {
			this.blur();
		}
	}
	,emitEvent: function(event) {
		var oldX = event.relX;
		var oldY = event.relY;
		var overCandidateCount = 0;
		var handled = false;
		var checkOver = false;
		var fillOver = false;
		var checkPush = false;
		var cancelFocus = false;
		var updateCursor = false;
		this.overIndex = 0;
		switch(event.kind._hx_index) {
		case 0:
			cancelFocus = true;
			checkPush = true;
			break;
		case 1:
			checkPush = true;
			break;
		case 5:case 8:case 9:case 11:
			if(this.currentFocus != null) {
				event.relX = event.relY = 0;
				this.currentFocus.handleEvent(event);
				event.relX = oldX;
				event.relY = oldY;
				if(!event.propagate) {
					return;
				}
			}
			break;
		case 2:case 12:
			checkOver = true;
			fillOver = true;
			break;
		default:
		}
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var last = null;
			while(true) {
				var i = s.handleEvent(event,last);
				if(i == null) {
					event.relX = oldX;
					event.relY = oldY;
					break;
				}
				if(checkOver) {
					if(fillOver) {
						var idx = this.overList.indexOf(i);
						if(idx == -1) {
							if(this.overCandidates.length == overCandidateCount) {
								this.overCandidates[overCandidateCount] = { i : i, s : s, x : event.relX, y : event.relY, z : event.relZ};
							} else {
								var info = this.overCandidates[overCandidateCount];
								info.i = i;
								info.s = s;
								info.x = event.relX;
								info.y = event.relY;
								info.z = event.relZ;
							}
							++overCandidateCount;
							this.overList.splice(this.overIndex++,0,i);
							updateCursor = true;
						} else {
							if(idx < this.overIndex) {
								while(true) {
									this.overList[idx] = this.overList[idx + 1];
									++idx;
									if(!(idx < this.overIndex)) {
										break;
									}
								}
								this.overList[this.overIndex] = i;
								updateCursor = true;
							} else if(idx > this.overIndex) {
								while(true) {
									this.overList[idx] = this.overList[idx - 1];
									--idx;
									if(!(idx > this.overIndex)) {
										break;
									}
								}
								this.overList[this.overIndex] = i;
								updateCursor = true;
							}
							this.overIndex++;
						}
						fillOver = event.propagate;
					}
				} else {
					if(checkPush) {
						if(event.kind == hxd_EventKind.EPush) {
							this.pushList.push(i);
						} else {
							HxOverrides.remove(this.pushList,i);
						}
					}
					if(cancelFocus && i == this.currentFocus) {
						cancelFocus = false;
					}
				}
				event.relX = oldX;
				event.relY = oldY;
				if(!event.propagate) {
					handled = true;
					break;
				}
				last = i;
				event.propagate = false;
			}
			if(handled) {
				break;
			}
		}
		if(cancelFocus && this.currentFocus != null) {
			this.blur();
		}
		if(checkOver) {
			if(this.overIndex < this.overList.length) {
				while(this.overIndex < this.overList.length) {
					var e = this.overList.pop();
					e.handleEvent(this.onOut);
				}
				updateCursor = true;
			}
			if(overCandidateCount != 0) {
				var i = 0;
				var ev = this.onOver;
				while(true) {
					var info = this.overCandidates[i++];
					ev.relX = info.x;
					ev.relY = info.y;
					ev.relZ = info.z;
					if(info.s.isInteractiveVisible(info.i)) {
						info.i.handleEvent(ev);
					} else {
						HxOverrides.remove(this.overList,info.i);
					}
					info.i = null;
					info.s = null;
					if(!(i < overCandidateCount)) {
						break;
					}
				}
			}
		}
		this.overIndex = -1;
		if(updateCursor) {
			this.selectCursor();
		}
		if(!handled && event != this.checkPos) {
			if(event.kind == hxd_EventKind.EPush) {
				this.pushList.push(null);
			} else if(event.kind == hxd_EventKind.ERelease) {
				HxOverrides.remove(this.pushList,null);
			}
			this.dispatchListeners(event);
		}
		if(event.kind == hxd_EventKind.ERelease && this.pushList.length > 0) {
			var _g = 0;
			var _g1 = this.pushList;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i == null) {
					event.kind = hxd_EventKind.EReleaseOutside;
					this.dispatchListeners(event);
					event.kind = hxd_EventKind.ERelease;
				} else {
					var s = i.getInteractiveScene();
					if(s == null) {
						continue;
					}
					event.kind = hxd_EventKind.EReleaseOutside;
					s.dispatchEvent(event,i);
					event.kind = hxd_EventKind.ERelease;
					event.relX = oldX;
					event.relY = oldY;
				}
			}
			this.pushList = [];
		}
	}
	,checkEvents: function() {
		var old = this.pendingEvents;
		var checkMoved = !this.mouseCheckMove;
		var checkFocused = this.currentFocus == null;
		if(old.length > 0) {
			this.pendingEvents = [];
			var _g = 0;
			while(_g < old.length) {
				var e = old[_g];
				++_g;
				var ox = e.relX;
				var oy = e.relY;
				switch(e.kind._hx_index) {
				case 0:case 1:
					this.mouseX = e.relX;
					this.mouseY = e.relY;
					this.lastTouch = e.touchId;
					break;
				case 2:
					checkMoved = true;
					this.mouseX = e.relX;
					this.mouseY = e.relY;
					this.lastTouch = e.touchId;
					break;
				case 3:
					this.isOut = false;
					this.selectCursor();
					continue;
				case 4:
					this.isOut = true;
					if(this.overList.length > 0) {
						var i = this.overList.length - 1;
						while(i >= 0) {
							this.onOut.cancel = false;
							this.overList[i].handleEvent(this.onOut);
							HxOverrides.remove(this.overList,this.overList[i]);
							--i;
						}
						this.selectCursor();
					}
					continue;
				case 5:case 8:case 9:case 11:
					if(!checkFocused) {
						checkFocused = true;
						this.checkFocus();
					}
					break;
				default:
				}
				if(this.currentDrag != null && (this.currentDrag.ref == null || this.currentDrag.ref == e.touchId)) {
					e.propagate = true;
					e.cancel = false;
					this.currentDrag.f(e);
					e.relX = ox;
					e.relY = oy;
					if(!e.propagate) {
						continue;
					}
				}
				this.emitEvent(e);
			}
		}
		if(!checkFocused) {
			this.checkFocus();
		}
		if(!checkMoved && !this.isOut && this.currentDrag == null) {
			this.checkPos.relX = this.mouseX;
			this.checkPos.relY = this.mouseY;
			this.checkPos.touchId = this.lastTouch;
			this.checkPos.cancel = false;
			this.checkPos.propagate = false;
			this.emitEvent(this.checkPos);
		}
	}
	,startDrag: function(f,onCancel,refEvent) {
		if(this.currentDrag != null && this.currentDrag.onCancel != null) {
			this.currentDrag.onCancel();
		}
		this.currentDrag = { f : f, ref : refEvent == null ? null : refEvent.touchId, onCancel : onCancel};
	}
	,stopDrag: function() {
		if(this.currentDrag != null && this.currentDrag.onCancel != null) {
			this.currentDrag.onCancel();
		}
		this.currentDrag = null;
	}
	,updateCursor: function(i) {
		if(this.overList.indexOf(i) != -1) {
			this.selectCursor();
		}
	}
	,selectCursor: function() {
		var cur = this.defaultCursor;
		var _g = 0;
		var _g1 = this.overList;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.cursor != null) {
				cur = o.cursor;
				break;
			}
		}
		if(cur._hx_index == 6) {
			var f = cur.f;
			f();
		} else {
			hxd_System.setCursor(cur);
		}
	}
	,onEvent: function(e) {
		if(!this.enablePhysicalMouse && e.kind == hxd_EventKind.EMove) {
			return;
		}
		this.pendingEvents.push(e);
	}
	,dispatchListeners: function(event) {
		var ox = event.relX;
		var oy = event.relY;
		event.propagate = true;
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			event.cancel = false;
			s.dispatchListeners(event);
			event.relX = ox;
			event.relY = oy;
			if(!event.propagate) {
				break;
			}
		}
	}
	,__class__: hxd_SceneEvents
};
var hxd_Platform = $hxEnums["hxd.Platform"] = { __ename__ : true, __constructs__ : ["IOS","Android","WebGL","PC","Console","FlashPlayer"]
	,IOS: {_hx_index:0,__enum__:"hxd.Platform",toString:$estr}
	,Android: {_hx_index:1,__enum__:"hxd.Platform",toString:$estr}
	,WebGL: {_hx_index:2,__enum__:"hxd.Platform",toString:$estr}
	,PC: {_hx_index:3,__enum__:"hxd.Platform",toString:$estr}
	,Console: {_hx_index:4,__enum__:"hxd.Platform",toString:$estr}
	,FlashPlayer: {_hx_index:5,__enum__:"hxd.Platform",toString:$estr}
};
hxd_Platform.__empty_constructs__ = [hxd_Platform.IOS,hxd_Platform.Android,hxd_Platform.WebGL,hxd_Platform.PC,hxd_Platform.Console,hxd_Platform.FlashPlayer];
var hxd_SystemValue = $hxEnums["hxd.SystemValue"] = { __ename__ : true, __constructs__ : ["IsTouch","IsWindowed","IsMobile"]
	,IsTouch: {_hx_index:0,__enum__:"hxd.SystemValue",toString:$estr}
	,IsWindowed: {_hx_index:1,__enum__:"hxd.SystemValue",toString:$estr}
	,IsMobile: {_hx_index:2,__enum__:"hxd.SystemValue",toString:$estr}
};
hxd_SystemValue.__empty_constructs__ = [hxd_SystemValue.IsTouch,hxd_SystemValue.IsWindowed,hxd_SystemValue.IsMobile];
var hxd_Timer = function() { };
$hxClasses["hxd.Timer"] = hxd_Timer;
hxd_Timer.__name__ = "hxd.Timer";
hxd_Timer.update = function() {
	hxd_Timer.frameCount++;
	var newTime = HxOverrides.now() / 1000;
	hxd_Timer.elapsedTime = newTime - hxd_Timer.lastTimeStamp;
	hxd_Timer.lastTimeStamp = newTime;
	if(hxd_Timer.elapsedTime < hxd_Timer.maxDeltaTime) {
		var a = hxd_Timer.elapsedTime;
		hxd_Timer.currentDT = a + hxd_Timer.smoothFactor * (hxd_Timer.currentDT - a);
	} else {
		hxd_Timer.elapsedTime = 1 / hxd_Timer.wantedFPS;
	}
	hxd_Timer.dt = hxd_Timer.currentDT;
};
hxd_Timer.skip = function() {
	hxd_Timer.lastTimeStamp = HxOverrides.now() / 1000;
};
var hxd_Window = function(canvas,globalEvents) {
	this.useScreenPixels = true;
	this.curMouseY = 0.;
	this.curMouseX = 0.;
	var _gthis = this;
	var customCanvas = canvas != null;
	this.eventTargets = new haxe_ds_List();
	this.resizeEvents = new haxe_ds_List();
	if(canvas == null) {
		canvas = window.document.getElementById("webgl");
		if(canvas == null) {
			throw haxe_Exception.thrown("Missing canvas #webgl");
		}
		if(canvas.getAttribute("globalEvents") == "1") {
			globalEvents = true;
		}
	}
	this.canvas = canvas;
	this.propagateKeyEvents = globalEvents;
	var propagate = canvas.getAttribute("propagateKeyEvents");
	if(propagate != null) {
		this.propagateKeyEvents = propagate != "0" && propagate != "false";
	}
	this.focused = globalEvents;
	this.element = globalEvents ? window : canvas;
	this.canvasPos = canvas.getBoundingClientRect();
	if(customCanvas) {
		canvas.addEventListener("mousemove",$bind(this,this.onMouseMove));
	} else {
		window.addEventListener("mousemove",$bind(this,this.onMouseMove));
	}
	this.element.addEventListener("mousedown",$bind(this,this.onMouseDown));
	this.element.addEventListener("mouseup",$bind(this,this.onMouseUp));
	this.element.addEventListener("wheel",$bind(this,this.onMouseWheel));
	this.element.addEventListener("touchstart",$bind(this,this.onTouchStart));
	this.element.addEventListener("touchmove",$bind(this,this.onTouchMove));
	this.element.addEventListener("touchend",$bind(this,this.onTouchEnd));
	this.element.addEventListener("keydown",$bind(this,this.onKeyDown));
	this.element.addEventListener("keyup",$bind(this,this.onKeyUp));
	this.element.addEventListener("keypress",$bind(this,this.onKeyPress));
	var _g = $bind(this,this.onFocus);
	var b = false;
	var tmp = function() {
		_g(b);
	};
	this.element.addEventListener("blur",tmp);
	var _g1 = $bind(this,this.onFocus);
	var b1 = true;
	var tmp = function() {
		_g1(b1);
	};
	this.element.addEventListener("focus",tmp);
	canvas.oncontextmenu = function(e) {
		e.stopPropagation();
		e.preventDefault();
		return false;
	};
	if(globalEvents) {
		canvas.addEventListener("mousedown",function(e) {
			_gthis.onMouseDown(e);
			e.stopPropagation();
			e.preventDefault();
		});
		this.element.addEventListener("contextmenu",function(e) {
			e.stopPropagation();
			e.preventDefault();
			return false;
		});
	} else {
		if(canvas.getAttribute("tabindex") == null) {
			canvas.setAttribute("tabindex","1");
		}
		canvas.style.outline = "none";
	}
	this.curW = this.get_width();
	this.curH = this.get_height();
	this.timer = new haxe_Timer(100);
	this.timer.run = $bind(this,this.checkResize);
};
$hxClasses["hxd.Window"] = hxd_Window;
hxd_Window.__name__ = "hxd.Window";
hxd_Window.getInstance = function() {
	if(hxd_Window.inst == null) {
		hxd_Window.inst = new hxd_Window();
	}
	return hxd_Window.inst;
};
hxd_Window.prototype = {
	checkResize: function() {
		this.canvasPos = this.canvas.getBoundingClientRect();
		var cw = this.get_width();
		var ch = this.get_height();
		if(this.curW != cw || this.curH != ch) {
			this.curW = cw;
			this.curH = ch;
			this.onResize(null);
		}
	}
	,event: function(e) {
		var _g_head = this.eventTargets.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var et = val;
			et(e);
		}
	}
	,addEventTarget: function(et) {
		this.eventTargets.add(et);
	}
	,removeEventTarget: function(et) {
		var _g_head = this.eventTargets.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var e = val;
			if(Reflect.compareMethods(e,et)) {
				this.eventTargets.remove(e);
				break;
			}
		}
	}
	,addResizeEvent: function(f) {
		this.resizeEvents.push(f);
	}
	,removeResizeEvent: function(f) {
		var _g_head = this.resizeEvents.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var e = val;
			if(Reflect.compareMethods(e,f)) {
				this.resizeEvents.remove(f);
				break;
			}
		}
	}
	,onResize: function(e) {
		var _g_head = this.resizeEvents.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var r = val;
			r();
		}
	}
	,getPixelRatio: function() {
		if(this.useScreenPixels) {
			return window.devicePixelRatio;
		} else {
			return 1;
		}
	}
	,get_width: function() {
		return Math.round(this.canvasPos.width * this.getPixelRatio());
	}
	,get_height: function() {
		return Math.round(this.canvasPos.height * this.getPixelRatio());
	}
	,get_mouseX: function() {
		return Math.round((this.curMouseX - this.canvasPos.left) * this.getPixelRatio());
	}
	,get_mouseY: function() {
		return Math.round((this.curMouseY - this.canvasPos.top) * this.getPixelRatio());
	}
	,onMouseDown: function(e) {
		if(e.clientX != this.curMouseX || e.clientY != this.curMouseY) {
			this.onMouseMove(e);
		}
		var ev = new hxd_Event(hxd_EventKind.EPush,this.get_mouseX(),this.get_mouseY());
		var _g = e.button;
		var tmp;
		switch(_g) {
		case 1:
			tmp = 2;
			break;
		case 2:
			tmp = 1;
			break;
		default:
			var x = _g;
			tmp = x;
		}
		ev.button = tmp;
		this.event(ev);
	}
	,onMouseUp: function(e) {
		if(e.clientX != this.curMouseX || e.clientY != this.curMouseY) {
			this.onMouseMove(e);
		}
		var ev = new hxd_Event(hxd_EventKind.ERelease,this.get_mouseX(),this.get_mouseY());
		var _g = e.button;
		var tmp;
		switch(_g) {
		case 1:
			tmp = 2;
			break;
		case 2:
			tmp = 1;
			break;
		default:
			var x = _g;
			tmp = x;
		}
		ev.button = tmp;
		this.event(ev);
	}
	,onMouseMove: function(e) {
		this.curMouseX = e.clientX;
		this.curMouseY = e.clientY;
		this.event(new hxd_Event(hxd_EventKind.EMove,this.get_mouseX(),this.get_mouseY()));
	}
	,onMouseWheel: function(e) {
		e.preventDefault();
		var ev = new hxd_Event(hxd_EventKind.EWheel,this.get_mouseX(),this.get_mouseY());
		ev.wheelDelta = e.deltaY / 120;
		this.event(ev);
	}
	,onTouchStart: function(e) {
		e.preventDefault();
		var x;
		var y;
		var ev;
		var _g = 0;
		var _g1 = e.changedTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			x = Math.round((touch.clientX - this.canvasPos.left) * this.getPixelRatio());
			y = Math.round((touch.clientY - this.canvasPos.top) * this.getPixelRatio());
			ev = new hxd_Event(hxd_EventKind.EPush,x,y);
			ev.touchId = touch.identifier;
			this.event(ev);
		}
	}
	,onTouchMove: function(e) {
		e.preventDefault();
		var x;
		var y;
		var ev;
		var _g = 0;
		var _g1 = e.changedTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			x = Math.round((touch.clientX - this.canvasPos.left) * this.getPixelRatio());
			y = Math.round((touch.clientY - this.canvasPos.top) * this.getPixelRatio());
			ev = new hxd_Event(hxd_EventKind.EMove,x,y);
			ev.touchId = touch.identifier;
			this.event(ev);
		}
	}
	,onTouchEnd: function(e) {
		e.preventDefault();
		var x;
		var y;
		var ev;
		var _g = 0;
		var _g1 = e.changedTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			x = Math.round((touch.clientX - this.canvasPos.left) * this.getPixelRatio());
			y = Math.round((touch.clientY - this.canvasPos.top) * this.getPixelRatio());
			ev = new hxd_Event(hxd_EventKind.ERelease,x,y);
			ev.touchId = touch.identifier;
			this.event(ev);
		}
	}
	,onKeyUp: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EKeyUp,this.get_mouseX(),this.get_mouseY());
		ev.keyCode = e.keyCode;
		this.event(ev);
		if(!this.propagateKeyEvents) {
			e.preventDefault();
			e.stopPropagation();
		}
	}
	,onKeyDown: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EKeyDown,this.get_mouseX(),this.get_mouseY());
		ev.keyCode = e.keyCode;
		this.event(ev);
		if(!this.propagateKeyEvents) {
			switch(ev.keyCode) {
			case 8:case 9:case 16:case 17:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:
				e.preventDefault();
				break;
			default:
			}
			e.stopPropagation();
		}
	}
	,onKeyPress: function(e) {
		var ev = new hxd_Event(hxd_EventKind.ETextInput,this.get_mouseX(),this.get_mouseY());
		ev.charCode = e.charCode;
		this.event(ev);
		if(!this.propagateKeyEvents) {
			e.preventDefault();
			e.stopPropagation();
		}
	}
	,onFocus: function(b) {
		this.event(new hxd_Event(b ? hxd_EventKind.EFocus : hxd_EventKind.EFocusLost));
		this.focused = b;
	}
	,get_isFocused: function() {
		return this.focused;
	}
	,set_displayMode: function(m) {
		var doc = window.document;
		var elt = doc.documentElement;
		var fullscreen = m != hxd_DisplayMode.Windowed;
		if(doc.fullscreenElement == elt == fullscreen) {
			return hxd_DisplayMode.Windowed;
		}
		if(m != hxd_DisplayMode.Windowed) {
			elt.requestFullscreen();
		} else {
			doc.exitFullscreen();
		}
		return m;
	}
	,__class__: hxd_Window
};
var hxd_System = function() { };
$hxClasses["hxd.System"] = hxd_System;
hxd_System.__name__ = "hxd.System";
hxd_System.setLoop = function(f) {
	if(!hxd_System.loopInit) {
		hxd_System.loopInit = true;
		hxd_System.browserLoop();
	}
	hxd_System.loopFunc = f;
};
hxd_System.browserLoop = function() {
	var $window = window;
	var rqf = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
	rqf(hxd_System.browserLoop);
	if(hxd_System.loopFunc != null) {
		hxd_System.loopFunc();
	}
};
hxd_System.start = function(callb) {
	callb();
};
hxd_System.setNativeCursor = function(c) {
	if(hxd_System.currentNativeCursor != null && Type.enumEq(c,hxd_System.currentNativeCursor)) {
		return;
	}
	hxd_System.currentNativeCursor = c;
	hxd_System.currentCustomCursor = null;
	var canvas = hxd_Window.getInstance().canvas;
	if(canvas != null) {
		var tmp;
		switch(c._hx_index) {
		case 0:
			tmp = "default";
			break;
		case 1:
			tmp = "pointer";
			break;
		case 2:
			tmp = "move";
			break;
		case 3:
			tmp = "text";
			break;
		case 4:
			tmp = "none";
			break;
		case 5:
			var cur = c.custom;
			if(cur.alloc == null) {
				cur.alloc = [];
				var _g = 0;
				var _g1 = cur.frames;
				while(_g < _g1.length) {
					var frame = _g1[_g];
					++_g;
					cur.alloc.push("url(\"" + frame.ctx.canvas.toDataURL("image/png") + "\") " + cur.offsetX + " " + cur.offsetY + ", default");
				}
			}
			if(cur.frames.length > 1) {
				hxd_System.currentCustomCursor = cur;
				cur.reset();
			}
			tmp = cur.alloc[cur.frameIndex];
			break;
		case 6:
			var _g = c.f;
			throw haxe_Exception.thrown("assert");
		}
		canvas.style.cursor = tmp;
	}
};
hxd_System.getDefaultFrameRate = function() {
	return 60.;
};
hxd_System.getValue = function(s) {
	switch(s._hx_index) {
	case 0:
		if(hxd_System.get_platform() != hxd_Platform.Android) {
			return hxd_System.get_platform() == hxd_Platform.IOS;
		} else {
			return true;
		}
		break;
	case 1:
		return true;
	case 2:
		if(hxd_System.get_platform() != hxd_Platform.Android) {
			return hxd_System.get_platform() == hxd_Platform.IOS;
		} else {
			return true;
		}
		break;
	}
};
hxd_System.updateCursor = function() {
	if(hxd_System.currentCustomCursor != null) {
		var change = hxd_System.currentCustomCursor.update(hxd_Timer.elapsedTime);
		if(change != -1) {
			var canvas = hxd_Window.getInstance().canvas;
			if(canvas != null) {
				canvas.style.cursor = hxd_System.currentCustomCursor.alloc[change];
			}
		}
	}
};
hxd_System.get_platform = function() {
	var ua = $global.navigator.userAgent.toLowerCase();
	if(ua.indexOf("android") >= 0) {
		return hxd_Platform.Android;
	} else if(ua.indexOf("ipad") >= 0 || ua.indexOf("iphone") >= 0 || ua.indexOf("ipod") >= 0) {
		return hxd_Platform.IOS;
	} else {
		return hxd_Platform.PC;
	}
};
var hxd_DisplayMode = $hxEnums["hxd.DisplayMode"] = { __ename__ : true, __constructs__ : ["Windowed","Borderless","Fullscreen","FullscreenResize"]
	,Windowed: {_hx_index:0,__enum__:"hxd.DisplayMode",toString:$estr}
	,Borderless: {_hx_index:1,__enum__:"hxd.DisplayMode",toString:$estr}
	,Fullscreen: {_hx_index:2,__enum__:"hxd.DisplayMode",toString:$estr}
	,FullscreenResize: {_hx_index:3,__enum__:"hxd.DisplayMode",toString:$estr}
};
hxd_DisplayMode.__empty_constructs__ = [hxd_DisplayMode.Windowed,hxd_DisplayMode.Borderless,hxd_DisplayMode.Fullscreen,hxd_DisplayMode.FullscreenResize];
var hxd_earcut_EarNode = function() {
};
$hxClasses["hxd.earcut.EarNode"] = hxd_earcut_EarNode;
hxd_earcut_EarNode.__name__ = "hxd.earcut.EarNode";
hxd_earcut_EarNode.prototype = {
	__class__: hxd_earcut_EarNode
};
var hxd_earcut_Earcut = function() {
};
$hxClasses["hxd.earcut.Earcut"] = hxd_earcut_Earcut;
hxd_earcut_Earcut.__name__ = "hxd.earcut.Earcut";
hxd_earcut_Earcut.prototype = {
	triangulate_h2d_GPoint: function(points,holes) {
		var hasHoles = holes != null && holes.length > 0;
		var outerLen = hasHoles ? holes[0] : points.length;
		if(outerLen < 3) {
			return [];
		}
		var root = this.setLinkedList_triangulate_T(points,0,outerLen,true);
		if(holes != null) {
			root = this.eliminateHoles_triangulate_T(points,holes,root);
		}
		return this.triangulateNode(root,points.length > 80);
	}
	,eliminateHoles_triangulate_T: function(points,holes,root) {
		var queue = [];
		var _g = 0;
		var _g1 = holes.length;
		while(_g < _g1) {
			var i = _g++;
			var s = holes[i];
			var e = i == holes.length - 1 ? points.length : holes[i + 1];
			var node = this.setLinkedList_eliminateHoles_T(points,s,e,false);
			if(node == node.next) {
				node.steiner = true;
			}
			queue.push(this.getLeftmost(node));
		}
		queue.sort($bind(this,this.compareX));
		var _g = 0;
		while(_g < queue.length) {
			var q = queue[_g];
			++_g;
			this.eliminateHole(q,root);
			root = this.filterPoints(root,root.next);
		}
		return root;
	}
	,setLinkedList_eliminateHoles_T: function(points,start,end,clockwise) {
		var sum = 0.;
		var j = end - 1;
		var _g = start;
		var _g1 = end;
		while(_g < _g1) {
			var i = _g++;
			sum += (points[j].x - points[i].x) * (points[i].y + points[j].y);
			j = i;
		}
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = -1;
		n.z = -1;
		n.x = 0;
		n.y = 0;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var node = n;
		var first = node;
		if(clockwise == sum > 0) {
			var _g = start;
			var _g1 = end;
			while(_g < _g1) {
				var i = _g++;
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
			}
		} else {
			var i = end - 1;
			while(i >= start) {
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
				--i;
			}
		}
		node.next = first.next;
		node.next.prev = node;
		return node;
	}
	,setLinkedList_triangulate_T: function(points,start,end,clockwise) {
		var sum = 0.;
		var j = end - 1;
		var _g = start;
		var _g1 = end;
		while(_g < _g1) {
			var i = _g++;
			sum += (points[j].x - points[i].x) * (points[i].y + points[j].y);
			j = i;
		}
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = -1;
		n.z = -1;
		n.x = 0;
		n.y = 0;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var node = n;
		var first = node;
		if(clockwise == sum > 0) {
			var _g = start;
			var _g1 = end;
			while(_g < _g1) {
				var i = _g++;
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
			}
		} else {
			var i = end - 1;
			while(i >= start) {
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
				--i;
			}
		}
		node.next = first.next;
		node.next.prev = node;
		return node;
	}
	,triangulateNode: function(root,useZOrder) {
		this.triangles = [];
		root = this.filterPoints(root);
		if(useZOrder && root != null) {
			var maxX = root.x;
			this.minX = maxX;
			var maxY = root.y;
			this.minY = maxY;
			var p = root.next;
			while(p != root) {
				var x = p.x;
				var y = p.y;
				if(x < this.minX) {
					this.minX = x;
				}
				if(y < this.minY) {
					this.minY = y;
				}
				if(x > maxX) {
					maxX = x;
				}
				if(y > maxY) {
					maxY = y;
				}
				p = p.next;
			}
			var a = maxX - this.minX;
			var b = maxY - this.minY;
			this.size = a < b ? b : a;
			this.hasSize = true;
		} else {
			this.hasSize = false;
		}
		this.earcutLinked(root);
		var result = this.triangles;
		this.triangles = null;
		var n = this.allocated;
		if(this.cache != null) {
			while(n != this.cache) n = n.allocNext;
			n = n.allocNext;
		}
		while(n != null) {
			n.next = this.cache;
			this.cache = n;
			n = n.allocNext;
		}
		return result;
	}
	,eliminateHole: function(hole,root) {
		root = this.findHoleBridge(hole,root);
		if(root != null) {
			var b = this.splitPolygon(root,hole);
			this.filterPoints(b,b.next);
		}
	}
	,findHoleBridge: function(hole,root) {
		var p = root;
		var hx = hole.x;
		var hy = hole.y;
		var qx = -Infinity;
		var m = null;
		while(true) {
			if(hy <= p.y && hy >= p.next.y) {
				var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
				if(x <= hx && x > qx) {
					qx = x;
					m = p.x < p.next.x ? p : p.next;
				}
			}
			p = p.next;
			if(!(p != root)) {
				break;
			}
		}
		if(m == null) {
			return null;
		}
		var stop = m;
		var tanMin = Infinity;
		var tan;
		p = m.next;
		while(p != stop) {
			var tmp;
			if(hx >= p.x && p.x >= m.x) {
				var ax = hy < m.y ? hx : qx;
				var bx = m.x;
				var by = m.y;
				var cx = hy < m.y ? qx : hx;
				var px = p.x;
				var py = p.y;
				tmp = (cx - px) * (hy - py) - (ax - px) * (hy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (hy - py) >= 0 && (bx - px) * (hy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				var f = hy - p.y;
				tan = (f < 0 ? -f : f) / (hx - p.x);
				var tmp1;
				if(tan < tanMin || tan == tanMin && p.x > m.x) {
					var p1 = p.prev;
					var r = p.next;
					if((p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) < 0) {
						var r1 = p.next;
						if((hole.y - p.y) * (r1.x - hole.x) - (hole.x - p.x) * (r1.y - hole.y) >= 0) {
							var q = p.prev;
							tmp1 = (q.y - p.y) * (hole.x - q.x) - (q.x - p.x) * (hole.y - q.y) >= 0;
						} else {
							tmp1 = false;
						}
					} else {
						var r2 = p.prev;
						if(!((hole.y - p.y) * (r2.x - hole.x) - (hole.x - p.x) * (r2.y - hole.y) < 0)) {
							var q1 = p.next;
							tmp1 = (q1.y - p.y) * (hole.x - q1.x) - (q1.x - p.x) * (hole.y - q1.y) < 0;
						} else {
							tmp1 = true;
						}
					}
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					m = p;
					tanMin = tan;
				}
			}
			p = p.next;
		}
		return m;
	}
	,getLeftmost: function(node) {
		var p = node;
		var leftmost = node;
		while(true) {
			if(p.x < leftmost.x) {
				leftmost = p;
			}
			p = p.next;
			if(!(p != node)) {
				break;
			}
		}
		return leftmost;
	}
	,compareX: function(a,b) {
		if(a.x - b.x > 0) {
			return 1;
		} else {
			return -1;
		}
	}
	,filterPoints: function(start,end) {
		if(start == null) {
			return start;
		}
		if(end == null) {
			end = start;
		}
		var p = start;
		var again;
		while(true) {
			again = false;
			var tmp;
			if(!p.steiner) {
				var p2 = p.next;
				if(!(p.x == p2.x && p.y == p2.y)) {
					var p1 = p.prev;
					var r = p.next;
					tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) == 0;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				p.next.prev = p.prev;
				p.prev.next = p.next;
				if(p.prevZ != null) {
					p.prevZ.nextZ = p.nextZ;
				}
				if(p.nextZ != null) {
					p.nextZ.prevZ = p.prevZ;
				}
				end = p.prev;
				p = end;
				if(p == p.next) {
					return null;
				}
				again = true;
			} else {
				p = p.next;
			}
			if(!(again || p != end)) {
				break;
			}
		}
		return end;
	}
	,earcutLinked: function(ear,pass) {
		if(pass == null) {
			pass = 0;
		}
		if(ear == null) {
			return;
		}
		if(pass == 0 && this.hasSize) {
			this.indexCurve(ear);
		}
		var stop = ear;
		var prev;
		var next;
		while(ear.prev != ear.next) {
			prev = ear.prev;
			next = ear.next;
			if(this.hasSize ? this.isEarHashed(ear) : this.isEar(ear)) {
				this.triangles.push(prev.i);
				this.triangles.push(ear.i);
				this.triangles.push(next.i);
				ear.next.prev = ear.prev;
				ear.prev.next = ear.next;
				if(ear.prevZ != null) {
					ear.prevZ.nextZ = ear.nextZ;
				}
				if(ear.nextZ != null) {
					ear.nextZ.prevZ = ear.prevZ;
				}
				ear = next.next;
				stop = next.next;
				continue;
			}
			ear = next;
			if(ear == stop) {
				switch(pass) {
				case 0:
					this.earcutLinked(this.filterPoints(ear),1);
					break;
				case 1:
					ear = this.cureLocalIntersections(ear);
					this.earcutLinked(ear,2);
					break;
				case 2:
					this.splitEarcut(ear);
					break;
				}
				break;
			}
		}
	}
	,isEar: function(ear) {
		var a = ear.prev;
		var b = ear;
		var c = ear.next;
		if((b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y) >= 0) {
			return false;
		}
		var p = ear.next.next;
		while(p != ear.prev) {
			var tmp;
			var ax = a.x;
			var ay = a.y;
			var bx = b.x;
			var by = b.y;
			var cx = c.x;
			var cy = c.y;
			var px = p.x;
			var py = p.y;
			if((cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.next;
		}
		return true;
	}
	,isEarHashed: function(ear) {
		var a = ear.prev;
		var b = ear;
		var c = ear.next;
		if((b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y) >= 0) {
			return false;
		}
		var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x;
		var minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y;
		var maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x;
		var maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;
		var x = 32767 * (minTX - this.minX) / this.size | 0;
		var y = 32767 * (minTY - this.minY) / this.size | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var minZ = x | y << 1;
		var x = 32767 * (maxTX - this.minX) / this.size | 0;
		var y = 32767 * (maxTY - this.minY) / this.size | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var maxZ = x | y << 1;
		var p = ear.nextZ;
		while(p != null && p.z <= maxZ) {
			var tmp;
			var tmp1;
			if(p != ear.prev && p != ear.next) {
				var ax = a.x;
				var ay = a.y;
				var bx = b.x;
				var by = b.y;
				var cx = c.x;
				var cy = c.y;
				var px = p.x;
				var py = p.y;
				tmp1 = (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.nextZ;
		}
		p = ear.prevZ;
		while(p != null && p.z >= minZ) {
			var tmp;
			var tmp1;
			if(p != ear.prev && p != ear.next) {
				var ax = a.x;
				var ay = a.y;
				var bx = b.x;
				var by = b.y;
				var cx = c.x;
				var cy = c.y;
				var px = p.x;
				var py = p.y;
				tmp1 = (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.prevZ;
		}
		return true;
	}
	,cureLocalIntersections: function(start) {
		var p = start;
		while(true) {
			var a = p.prev;
			var b = p.next.next;
			var tmp;
			var tmp1;
			var p2 = p.next;
			if((p.y - a.y) * (p2.x - p.x) - (p.x - a.x) * (p2.y - p.y) > 0 != (p.y - a.y) * (b.x - p.x) - (p.x - a.x) * (b.y - p.y) > 0 && (b.y - p2.y) * (a.x - b.x) - (b.x - p2.x) * (a.y - b.y) > 0 != (b.y - p2.y) * (p.x - b.x) - (b.x - p2.x) * (p.y - b.y) > 0) {
				var p1 = a.prev;
				var r = a.next;
				if((a.y - p1.y) * (r.x - a.x) - (a.x - p1.x) * (r.y - a.y) < 0) {
					var r1 = a.next;
					if((b.y - a.y) * (r1.x - b.x) - (b.x - a.x) * (r1.y - b.y) >= 0) {
						var q = a.prev;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r2 = a.prev;
					if(!((b.y - a.y) * (r2.x - b.x) - (b.x - a.x) * (r2.y - b.y) < 0)) {
						var q1 = a.next;
						tmp1 = (q1.y - a.y) * (b.x - q1.x) - (q1.x - a.x) * (b.y - q1.y) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p3 = b.prev;
				var r3 = b.next;
				if((b.y - p3.y) * (r3.x - b.x) - (b.x - p3.x) * (r3.y - b.y) < 0) {
					var r4 = b.next;
					if((a.y - b.y) * (r4.x - a.x) - (a.x - b.x) * (r4.y - a.y) >= 0) {
						var q2 = b.prev;
						tmp = (q2.y - b.y) * (a.x - q2.x) - (q2.x - b.x) * (a.y - q2.y) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r5 = b.prev;
					if(!((a.y - b.y) * (r5.x - a.x) - (a.x - b.x) * (r5.y - a.y) < 0)) {
						var q3 = b.next;
						tmp = (q3.y - b.y) * (a.x - q3.x) - (q3.x - b.x) * (a.y - q3.y) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				this.triangles.push(a.i);
				this.triangles.push(p.i);
				this.triangles.push(b.i);
				p.next.prev = p.prev;
				p.prev.next = p.next;
				if(p.prevZ != null) {
					p.prevZ.nextZ = p.nextZ;
				}
				if(p.nextZ != null) {
					p.nextZ.prevZ = p.prevZ;
				}
				var p4 = p.next;
				p4.next.prev = p4.prev;
				p4.prev.next = p4.next;
				if(p4.prevZ != null) {
					p4.prevZ.nextZ = p4.nextZ;
				}
				if(p4.nextZ != null) {
					p4.nextZ.prevZ = p4.prevZ;
				}
				start = b;
				p = start;
			}
			p = p.next;
			if(!(p != start)) {
				break;
			}
		}
		return p;
	}
	,splitEarcut: function(start) {
		var a = start;
		while(true) {
			var b = a.next.next;
			while(b != a.prev) {
				if(a.i != b.i && this.isValidDiagonal(a,b)) {
					var c = this.splitPolygon(a,b);
					a = this.filterPoints(a,a.next);
					c = this.filterPoints(c,c.next);
					this.earcutLinked(a);
					this.earcutLinked(c);
					return;
				}
				b = b.next;
			}
			a = a.next;
			if(!(a != start)) {
				break;
			}
		}
	}
	,splitPolygon: function(a,b) {
		var i = a.i;
		var x = a.x;
		var y = a.y;
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = i;
		n.z = -1;
		n.x = x;
		n.y = y;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var a2 = n;
		var i = b.i;
		var x = b.x;
		var y = b.y;
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = i;
		n.z = -1;
		n.x = x;
		n.y = y;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var b2 = n;
		var an = a.next;
		var bp = b.prev;
		a.next = b;
		b.prev = a;
		a2.next = an;
		an.prev = a2;
		b2.next = a2;
		a2.prev = b2;
		bp.next = b2;
		b2.prev = bp;
		return b2;
	}
	,isValidDiagonal: function(a,b) {
		if(!(a.x == b.x && a.y == b.y)) {
			var tmp;
			var tmp1;
			if(a.next.i != b.i && a.prev.i != b.i && !this.intersectsPolygon(a,b)) {
				var p = a.prev;
				var r = a.next;
				if((a.y - p.y) * (r.x - a.x) - (a.x - p.x) * (r.y - a.y) < 0) {
					var r = a.next;
					if((b.y - a.y) * (r.x - b.x) - (b.x - a.x) * (r.y - b.y) >= 0) {
						var q = a.prev;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r = a.prev;
					if(!((b.y - a.y) * (r.x - b.x) - (b.x - a.x) * (r.y - b.y) < 0)) {
						var q = a.next;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p = b.prev;
				var r = b.next;
				if((b.y - p.y) * (r.x - b.x) - (b.x - p.x) * (r.y - b.y) < 0) {
					var r = b.next;
					if((a.y - b.y) * (r.x - a.x) - (a.x - b.x) * (r.y - a.y) >= 0) {
						var q = b.prev;
						tmp = (q.y - b.y) * (a.x - q.x) - (q.x - b.x) * (a.y - q.y) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r = b.prev;
					if(!((a.y - b.y) * (r.x - a.x) - (a.x - b.x) * (r.y - a.y) < 0)) {
						var q = b.next;
						tmp = (q.y - b.y) * (a.x - q.x) - (q.x - b.x) * (a.y - q.y) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				return this.middleInside(a,b);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,middleInside: function(a,b) {
		var p = a;
		var inside = false;
		var px = (a.x + b.x) / 2;
		var py = (a.y + b.y) / 2;
		while(true) {
			if(p.y > py != p.next.y > py && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {
				inside = !inside;
			}
			p = p.next;
			if(!(p != a)) {
				break;
			}
		}
		return inside;
	}
	,intersectsPolygon: function(a,b) {
		var p = a;
		while(true) {
			var tmp;
			if(p.i != a.i && p.next.i != a.i && p.i != b.i && p.next.i != b.i) {
				var q1 = p.next;
				tmp = (q1.y - p.y) * (a.x - q1.x) - (q1.x - p.x) * (a.y - q1.y) > 0 != (q1.y - p.y) * (b.x - q1.x) - (q1.x - p.x) * (b.y - q1.y) > 0 && (b.y - a.y) * (p.x - b.x) - (b.x - a.x) * (p.y - b.y) > 0 != (b.y - a.y) * (q1.x - b.x) - (b.x - a.x) * (q1.y - b.y) > 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return true;
			}
			p = p.next;
			if(!(p != a)) {
				break;
			}
		}
		return false;
	}
	,indexCurve: function(start) {
		var p = start;
		while(true) {
			if(p.z < 0) {
				var x = 32767 * (p.x - this.minX) / this.size | 0;
				var y = 32767 * (p.y - this.minY) / this.size | 0;
				x = (x | x << 8) & 16711935;
				x = (x | x << 4) & 252645135;
				x = (x | x << 2) & 858993459;
				x = (x | x << 1) & 1431655765;
				y = (y | y << 8) & 16711935;
				y = (y | y << 4) & 252645135;
				y = (y | y << 2) & 858993459;
				y = (y | y << 1) & 1431655765;
				p.z = x | y << 1;
			}
			p.prevZ = p.prev;
			p.nextZ = p.next;
			p = p.next;
			if(!(p != start)) {
				break;
			}
		}
		p.prevZ.nextZ = null;
		p.prevZ = null;
		this.sortLinked(p);
	}
	,sortLinked: function(list) {
		var p;
		var q;
		var e;
		var tail;
		var numMerges;
		var pSize;
		var qSize;
		var inSize = 1;
		while(true) {
			p = list;
			list = null;
			tail = null;
			numMerges = 0;
			while(p != null) {
				++numMerges;
				q = p;
				pSize = 0;
				var _g = 0;
				var _g1 = inSize;
				while(_g < _g1) {
					var i = _g++;
					++pSize;
					q = q.nextZ;
					if(q == null) {
						break;
					}
				}
				qSize = inSize;
				while(pSize > 0 || qSize > 0 && q != null) {
					if(pSize == 0) {
						e = q;
						q = q.nextZ;
						--qSize;
					} else if(qSize == 0 || q == null) {
						e = p;
						p = p.nextZ;
						--pSize;
					} else if(p.z <= q.z) {
						e = p;
						p = p.nextZ;
						--pSize;
					} else {
						e = q;
						q = q.nextZ;
						--qSize;
					}
					if(tail != null) {
						tail.nextZ = e;
					} else {
						list = e;
					}
					e.prevZ = tail;
					tail = e;
				}
				p = q;
			}
			tail.nextZ = null;
			inSize *= 2;
			if(!(numMerges > 1)) {
				break;
			}
		}
		return list;
	}
	,__class__: hxd_earcut_Earcut
};
var hxd_fmt_bfnt_FontParser = function() { };
$hxClasses["hxd.fmt.bfnt.FontParser"] = hxd_fmt_bfnt_FontParser;
hxd_fmt_bfnt_FontParser.__name__ = "hxd.fmt.bfnt.FontParser";
hxd_fmt_bfnt_FontParser.parse = function(bytes,path,resolveTile) {
	var tile = null;
	var font = new h2d_Font(null,0);
	var glyphs = font.glyphs;
	font.baseLine = 0;
	var _g = bytes.getInt32(0);
	switch(_g) {
	case 54938946:
		var bytes1 = new haxe_io_BytesInput(bytes);
		var _g1 = bytes1;
		_g1.set_position(_g1.pos + 4);
		var pageCount = 0;
		while(bytes1.pos < bytes1.totlen) {
			var id = bytes1.readByte();
			var length = bytes1.readInt32();
			var pos = bytes1.pos;
			switch(id) {
			case 1:
				font.size = font.initSize = bytes1.readInt16();
				var _g1 = bytes1;
				_g1.set_position(_g1.pos + 12);
				font.name = bytes1.readUntil(0);
				break;
			case 2:
				font.lineHeight = bytes1.readUInt16();
				font.baseLine = bytes1.readUInt16();
				var _g2 = bytes1;
				_g2.set_position(_g2.pos + 4);
				pageCount = bytes1.readUInt16();
				if(pageCount != 1) {
					haxe_Log.trace("Warning: BMF format only supports one page at the moment.",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 224, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
				}
				break;
			case 3:
				var name = bytes1.readUntil(0);
				try {
					font.tilePath = name;
					tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),name]));
				} catch( _g3 ) {
					haxe_Log.trace("Warning: Could not find referenced font texture at \"" + name + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
					font.tilePath = new haxe_io_Path(path).file + ".png";
					tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
				}
				break;
			case 4:
				var count = length / 20 | 0;
				while(count > 0) {
					var cid = bytes1.readInt32();
					var t = tile.sub(bytes1.readUInt16(),bytes1.readUInt16(),bytes1.readUInt16(),bytes1.readUInt16(),bytes1.readInt16(),bytes1.readInt16());
					var fc = new h2d_FontChar(t,bytes1.readInt16());
					glyphs.h[cid] = fc;
					var _g4 = bytes1;
					_g4.set_position(_g4.pos + 2);
					--count;
				}
				break;
			case 5:
				var count1 = length / 10 | 0;
				while(count1 > 0) {
					var first = bytes1.readInt32();
					var key = bytes1.readInt32();
					var fc1 = glyphs.h[key];
					if(fc1 != null) {
						fc1.addKerning(first,bytes1.readInt16());
					} else {
						var _g5 = bytes1;
						_g5.set_position(_g5.pos + 2);
					}
					--count1;
				}
				break;
			}
			bytes1.set_position(pos + length);
		}
		break;
	case 1414415938:
		return new hxd_fmt_bfnt_Reader(new haxe_io_BytesInput(bytes)).read(function(tp) {
			try {
				font.tilePath = tp;
				tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),tp]));
			} catch( _g ) {
				haxe_Log.trace("Warning: Could not find referenced font texture at \"" + tp + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
				font.tilePath = new haxe_io_Path(path).file + ".png";
				tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
			}
			return tile;
		});
	case 1836597052:case 1852794428:
		var xml = Xml.parse(bytes.toString());
		var x = xml.firstElement();
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		var this1 = x;
		var xml = this1;
		if(haxe_xml__$Access_HasNodeAccess.resolve(xml,"info")) {
			var tmp = haxe_xml__$Access_NodeAccess.resolve(xml,"info");
			font.name = haxe_xml__$Access_AttribAccess.resolve(tmp,"face");
			var tmp = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"info"),"size");
			font.size = font.initSize = Std.parseInt(tmp);
			var tmp = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"common"),"lineHeight");
			font.lineHeight = Std.parseInt(tmp);
			var tmp = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"common"),"base");
			font.baseLine = Std.parseInt(tmp);
			var p = haxe_xml__$Access_NodeAccess.resolve(xml,"pages").elements();
			while(p.hasNext()) {
				var p1 = p.next();
				if(haxe_xml__$Access_AttribAccess.resolve(p1,"id") == "0") {
					var tilePath = haxe_xml__$Access_AttribAccess.resolve(p1,"file");
					try {
						font.tilePath = tilePath;
						tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),tilePath]));
					} catch( _g1 ) {
						haxe_Log.trace("Warning: Could not find referenced font texture at \"" + tilePath + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
						font.tilePath = new haxe_io_Path(path).file + ".png";
						tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
					}
				} else {
					haxe_Log.trace("Warning: BMF format only supports one page at the moment.",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 66, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
				}
			}
			var chars = haxe_xml__$Access_NodeAccess.resolve(xml,"chars").elements();
			var c = chars;
			while(c.hasNext()) {
				var c1 = c.next();
				var t = tile.sub(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"x")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"y")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"width")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"height")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"xoffset")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"yoffset")));
				var fc = new h2d_FontChar(t,Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"xadvance")));
				var kerns = haxe_xml__$Access_NodeAccess.resolve(xml,"kernings").elements();
				var k = kerns;
				while(k.hasNext()) {
					var k1 = k.next();
					if(haxe_xml__$Access_AttribAccess.resolve(k1,"second") == haxe_xml__$Access_AttribAccess.resolve(c1,"id")) {
						fc.addKerning(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(k1,"first")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(k1,"amount")));
					}
				}
				var key = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"id"));
				glyphs.h[key] = fc;
			}
		} else {
			font.tilePath = new haxe_io_Path(path).file + ".png";
			tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
			font.name = haxe_xml__$Access_AttribAccess.resolve(xml,"family");
			var tmp = haxe_xml__$Access_AttribAccess.resolve(xml,"size");
			font.size = font.initSize = Std.parseInt(tmp);
			var tmp = haxe_xml__$Access_AttribAccess.resolve(xml,"height");
			font.lineHeight = Std.parseInt(tmp);
			var kernings = [];
			var c = xml.elements();
			while(c.hasNext()) {
				var c1 = c.next();
				var r = haxe_xml__$Access_AttribAccess.resolve(c1,"rect").split(" ");
				var o = haxe_xml__$Access_AttribAccess.resolve(c1,"offset").split(" ");
				var t = tile.sub(Std.parseInt(r[0]),Std.parseInt(r[1]),Std.parseInt(r[2]),Std.parseInt(r[3]),Std.parseInt(o[0]),Std.parseInt(o[1]));
				var fc = new h2d_FontChar(t,Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"width")));
				var code = haxe_xml__$Access_AttribAccess.resolve(c1,"code");
				var code1 = StringTools.startsWith(code,"&#") ? Std.parseInt(HxOverrides.substr(code,2,code.length - 3)) : HxOverrides.cca(code,0);
				var k = c1.elements();
				while(k.hasNext()) {
					var k1 = k.next();
					var code2 = haxe_xml__$Access_AttribAccess.resolve(k1,"id");
					var next = StringTools.startsWith(code2,"&#") ? Std.parseInt(HxOverrides.substr(code2,2,code2.length - 3)) : HxOverrides.cca(code2,0);
					var adv = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(k1,"advance"));
					if(glyphs.h.hasOwnProperty(next)) {
						glyphs.h[next].addKerning(code1,adv);
					} else {
						kernings.push({ prev : code1, next : next, adv : adv});
					}
				}
				glyphs.h[code1] = fc;
			}
			var _g1 = 0;
			while(_g1 < kernings.length) {
				var k = kernings[_g1];
				++_g1;
				var g = glyphs.h[k.next];
				if(g == null) {
					continue;
				}
				g.addKerning(k.prev,k.adv);
			}
		}
		break;
	case 1868983913:
		var lines = bytes.toString().split("\n");
		var reg = new EReg(" *?([0-9a-zA-Z]+)=(\"[^\"]+\"|.+?)(?:[ \r]|$)","");
		var idx;
		var pageCount = 0;
		var _g1 = 0;
		while(_g1 < lines.length) {
			var line = lines[_g1];
			++_g1;
			idx = line.indexOf(" ");
			switch(HxOverrides.substr(line,0,idx)) {
			case "char":
				var id = 0;
				var x = 0;
				var y = 0;
				var width = 0;
				var height = 0;
				var xoffset = 0;
				var yoffset = 0;
				var xadvance = 0;
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "height":
						var v = reg.matched(2);
						height = Std.parseInt(HxOverrides.cca(v,0) == 34 ? v.substring(1,v.length - 1) : v);
						break;
					case "id":
						var v1 = reg.matched(2);
						id = Std.parseInt(HxOverrides.cca(v1,0) == 34 ? v1.substring(1,v1.length - 1) : v1);
						break;
					case "width":
						var v2 = reg.matched(2);
						width = Std.parseInt(HxOverrides.cca(v2,0) == 34 ? v2.substring(1,v2.length - 1) : v2);
						break;
					case "x":
						var v3 = reg.matched(2);
						x = Std.parseInt(HxOverrides.cca(v3,0) == 34 ? v3.substring(1,v3.length - 1) : v3);
						break;
					case "xadvance":
						var v4 = reg.matched(2);
						xadvance = Std.parseInt(HxOverrides.cca(v4,0) == 34 ? v4.substring(1,v4.length - 1) : v4);
						break;
					case "xoffset":
						var v5 = reg.matched(2);
						xoffset = Std.parseInt(HxOverrides.cca(v5,0) == 34 ? v5.substring(1,v5.length - 1) : v5);
						break;
					case "y":
						var v6 = reg.matched(2);
						y = Std.parseInt(HxOverrides.cca(v6,0) == 34 ? v6.substring(1,v6.length - 1) : v6);
						break;
					case "yoffset":
						var v7 = reg.matched(2);
						yoffset = Std.parseInt(HxOverrides.cca(v7,0) == 34 ? v7.substring(1,v7.length - 1) : v7);
						break;
					}
					var pos = reg.matchedPos();
					idx = pos.pos + pos.len;
				}
				var t = tile.sub(x,y,width,height,xoffset,yoffset);
				var fc = new h2d_FontChar(t,xadvance);
				glyphs.h[id] = fc;
				break;
			case "common":
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "base":
						var v8 = reg.matched(2);
						font.baseLine = Std.parseInt(HxOverrides.cca(v8,0) == 34 ? v8.substring(1,v8.length - 1) : v8);
						break;
					case "lineHeight":
						var v9 = reg.matched(2);
						font.lineHeight = Std.parseInt(HxOverrides.cca(v9,0) == 34 ? v9.substring(1,v9.length - 1) : v9);
						break;
					case "pages":
						var v10 = reg.matched(2);
						pageCount = Std.parseInt(HxOverrides.cca(v10,0) == 34 ? v10.substring(1,v10.length - 1) : v10);
						if(pageCount != 1) {
							haxe_Log.trace("Warning: BMF format only supports one page at the moment.",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 157, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
						}
						break;
					}
					var pos1 = reg.matchedPos();
					idx = pos1.pos + pos1.len;
				}
				break;
			case "info":
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "face":
						var v11 = reg.matched(2);
						font.name = HxOverrides.cca(v11,0) == 34 ? v11.substring(1,v11.length - 1) : v11;
						break;
					case "size":
						var v12 = reg.matched(2);
						font.size = font.initSize = Std.parseInt(HxOverrides.cca(v12,0) == 34 ? v12.substring(1,v12.length - 1) : v12);
						break;
					}
					var pos2 = reg.matchedPos();
					idx = pos2.pos + pos2.len;
				}
				break;
			case "kerning":
				var first = 0;
				var second = 0;
				var advance = 0;
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "amount":
						var v13 = reg.matched(2);
						advance = Std.parseInt(HxOverrides.cca(v13,0) == 34 ? v13.substring(1,v13.length - 1) : v13);
						break;
					case "first":
						var v14 = reg.matched(2);
						first = Std.parseInt(HxOverrides.cca(v14,0) == 34 ? v14.substring(1,v14.length - 1) : v14);
						break;
					case "second":
						var v15 = reg.matched(2);
						second = Std.parseInt(HxOverrides.cca(v15,0) == 34 ? v15.substring(1,v15.length - 1) : v15);
						break;
					}
					var pos3 = reg.matchedPos();
					idx = pos3.pos + pos3.len;
				}
				var fc1 = glyphs.h[second];
				if(fc1 != null) {
					fc1.addKerning(first,advance);
				}
				break;
			case "page":
				while(idx < line.length && reg.matchSub(line,idx)) {
					if(reg.matched(1) == "file") {
						var v16 = reg.matched(2);
						var tilePath = HxOverrides.cca(v16,0) == 34 ? v16.substring(1,v16.length - 1) : v16;
						try {
							font.tilePath = tilePath;
							tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),tilePath]));
						} catch( _g2 ) {
							haxe_Log.trace("Warning: Could not find referenced font texture at \"" + tilePath + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
							font.tilePath = new haxe_io_Path(path).file + ".png";
							tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
						}
					}
					var pos4 = reg.matchedPos();
					idx = pos4.pos + pos4.len;
				}
				break;
			}
		}
		break;
	default:
		var sign = _g;
		throw haxe_Exception.thrown("Unknown font signature " + StringTools.hex(sign,8));
	}
	if(glyphs.h[32] == null) {
		var value = new h2d_FontChar(tile.sub(0,0,0,0),font.size >> 1);
		glyphs.h[32] = value;
	}
	font.tile = tile;
	if(font.baseLine == 0) {
		var padding = 0;
		var space = glyphs.h[32];
		if(space != null) {
			padding = space.t.height * .5;
		}
		var a = glyphs.h[65];
		if(a == null) {
			a = glyphs.h[97];
		}
		if(a == null) {
			a = glyphs.h[48];
		}
		if(a == null) {
			font.baseLine = font.lineHeight - 2 - padding;
		} else {
			font.baseLine = a.t.dy + a.t.height - padding;
		}
	}
	var fallback = glyphs.h[65533];
	if(fallback == null) {
		fallback = glyphs.h[9633];
	}
	if(fallback == null) {
		fallback = glyphs.h[63];
	}
	if(fallback != null) {
		font.defaultChar = fallback;
	}
	return font;
};
var hxd_fmt_bfnt_Reader = function(i) {
	this.i = i;
};
$hxClasses["hxd.fmt.bfnt.Reader"] = hxd_fmt_bfnt_Reader;
hxd_fmt_bfnt_Reader.__name__ = "hxd.fmt.bfnt.Reader";
hxd_fmt_bfnt_Reader.prototype = {
	read: function(resolveTile) {
		if(this.i.readString(4) != "BFNT" || this.i.readByte() != 0) {
			throw haxe_Exception.thrown("Not a BFNT file!");
		}
		var font = null;
		var _g = this.i.readByte();
		if(_g == 1) {
			font = new h2d_Font(this.i.readString(this.i.readUInt16()),this.i.readInt16());
			font.tilePath = this.i.readString(this.i.readUInt16());
			var tile = font.tile = resolveTile(font.tilePath);
			font.lineHeight = this.i.readInt16();
			font.baseLine = this.i.readInt16();
			var defaultChar = this.i.readInt32();
			var id;
			while(true) {
				id = this.i.readInt32();
				if(!(id != 0)) {
					break;
				}
				var t = tile.sub(this.i.readUInt16(),this.i.readUInt16(),this.i.readUInt16(),this.i.readUInt16(),this.i.readInt16(),this.i.readInt16());
				var glyph = new h2d_FontChar(t,this.i.readInt16());
				font.glyphs.h[id] = glyph;
				if(id == defaultChar) {
					font.defaultChar = glyph;
				}
				var prevChar;
				while(true) {
					prevChar = this.i.readInt32();
					if(!(prevChar != 0)) {
						break;
					}
					glyph.addKerning(prevChar,this.i.readInt16());
				}
			}
		} else {
			var ver = _g;
			throw haxe_Exception.thrown("Unknown BFNT version: " + ver);
		}
		return font;
	}
	,__class__: hxd_fmt_bfnt_Reader
};
var hxd_fs_FileEntry = function() { };
$hxClasses["hxd.fs.FileEntry"] = hxd_fs_FileEntry;
hxd_fs_FileEntry.__name__ = "hxd.fs.FileEntry";
hxd_fs_FileEntry.prototype = {
	getBytes: function() {
		return null;
	}
	,getText: function() {
		return this.getBytes().toString();
	}
	,open: function() {
	}
	,skip: function(nbytes) {
	}
	,readByte: function() {
		return 0;
	}
	,read: function(out,pos,size) {
	}
	,close: function() {
	}
	,load: function(onReady) {
		if(!this.get_isAvailable()) {
			throw haxe_Exception.thrown("load() not implemented");
		} else if(onReady != null) {
			onReady();
		}
	}
	,loadBitmap: function(onLoaded) {
		throw haxe_Exception.thrown("loadBitmap() not implemented");
	}
	,watch: function(onChanged) {
	}
	,get_isAvailable: function() {
		return true;
	}
	,get_size: function() {
		return 0;
	}
	,get_path: function() {
		throw haxe_Exception.thrown("path() not implemented");
	}
	,get_extension: function() {
		var idx = this.name.lastIndexOf(".");
		if(idx < 0) {
			return "";
		}
		return HxOverrides.substr(this.name,idx + 1,null).toLowerCase();
	}
	,__class__: hxd_fs_FileEntry
};
var hxd_fs_FileSystem = function() { };
$hxClasses["hxd.fs.FileSystem"] = hxd_fs_FileSystem;
hxd_fs_FileSystem.__name__ = "hxd.fs.FileSystem";
hxd_fs_FileSystem.__isInterface__ = true;
hxd_fs_FileSystem.prototype = {
	__class__: hxd_fs_FileSystem
};
var hxd_fs__$EmbedFileSystem_EmbedEntry = function(fs,name,relPath,data) {
	this.fs = fs;
	this.name = name;
	this.relPath = relPath;
	this.data = data;
};
$hxClasses["hxd.fs._EmbedFileSystem.EmbedEntry"] = hxd_fs__$EmbedFileSystem_EmbedEntry;
hxd_fs__$EmbedFileSystem_EmbedEntry.__name__ = "hxd.fs._EmbedFileSystem.EmbedEntry";
hxd_fs__$EmbedFileSystem_EmbedEntry.__super__ = hxd_fs_FileEntry;
hxd_fs__$EmbedFileSystem_EmbedEntry.prototype = $extend(hxd_fs_FileEntry.prototype,{
	getBytes: function() {
		if(this.bytes == null) {
			this.open();
		}
		return this.bytes;
	}
	,open: function() {
		if(this.bytes == null) {
			this.bytes = haxe_Resource.getBytes(this.data);
			if(this.bytes == null) {
				throw haxe_Exception.thrown("Missing resource " + this.data);
			}
		}
		this.readPos = 0;
	}
	,skip: function(nbytes) {
		this.readPos += nbytes;
	}
	,readByte: function() {
		return this.bytes.b[this.readPos++];
	}
	,read: function(out,pos,size) {
		out.blit(pos,this.bytes,this.readPos,size);
		this.readPos += size;
	}
	,close: function() {
		this.bytes = null;
		this.readPos = 0;
	}
	,load: function(onReady) {
		if(onReady != null) {
			haxe_Timer.delay(onReady,1);
		}
	}
	,loadBitmap: function(onLoaded) {
		var rawData = null;
		var _g = 0;
		var _g1 = haxe_Resource.content;
		while(_g < _g1.length) {
			var res = _g1[_g];
			++_g;
			if(res.name == this.data) {
				rawData = res.data;
				break;
			}
		}
		if(rawData == null) {
			throw haxe_Exception.thrown("Missing resource " + this.data);
		}
		var image = new Image();
		image.onload = function(_) {
			var this1 = image;
			onLoaded(this1);
		};
		var extra = "";
		var bytes = rawData.length * 6 >> 3;
		var _g = 0;
		var _g1 = (3 - bytes * 4 % 3) % 3;
		while(_g < _g1) {
			var i = _g++;
			extra += "=";
		}
		var tmp = "data:image/" + this.get_extension() + ";base64," + rawData;
		image.src = tmp + extra;
	}
	,get_path: function() {
		if(this.relPath == ".") {
			return "<root>";
		} else {
			return this.relPath;
		}
	}
	,get_size: function() {
		this.open();
		return this.bytes.length;
	}
	,__class__: hxd_fs__$EmbedFileSystem_EmbedEntry
});
var hxd_fs_EmbedFileSystem = function(root) {
	this.root = root;
};
$hxClasses["hxd.fs.EmbedFileSystem"] = hxd_fs_EmbedFileSystem;
hxd_fs_EmbedFileSystem.__name__ = "hxd.fs.EmbedFileSystem";
hxd_fs_EmbedFileSystem.__interfaces__ = [hxd_fs_FileSystem];
hxd_fs_EmbedFileSystem.resolve = function(path) {
	return "R_" + path.replace(hxd_fs_EmbedFileSystem.invalidChars.r,"_");
};
hxd_fs_EmbedFileSystem.prototype = {
	splitPath: function(path) {
		if(path == ".") {
			return [];
		} else {
			return path.split("/");
		}
	}
	,exists: function(path) {
		var r = this.root;
		var _g = 0;
		var _g1 = this.splitPath(path);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			r = Reflect.field(r,p);
			if(r == null) {
				return false;
			}
		}
		return true;
	}
	,get: function(path) {
		if(!this.exists(path)) {
			throw haxe_Exception.thrown(new hxd_fs_NotFound(path));
		}
		var id = hxd_fs_EmbedFileSystem.resolve(path);
		return new hxd_fs__$EmbedFileSystem_EmbedEntry(this,path.split("/").pop(),path,id);
	}
	,__class__: hxd_fs_EmbedFileSystem
};
var hxd_fs_FileInput = function(f) {
	this.f = f;
	f.open();
};
$hxClasses["hxd.fs.FileInput"] = hxd_fs_FileInput;
hxd_fs_FileInput.__name__ = "hxd.fs.FileInput";
hxd_fs_FileInput.__super__ = haxe_io_Input;
hxd_fs_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	skip: function(nbytes) {
		this.f.skip(nbytes);
	}
	,readByte: function() {
		return this.f.readByte();
	}
	,readBytes: function(b,pos,len) {
		this.f.read(b,pos,len);
		return len;
	}
	,close: function() {
		this.f.close();
	}
	,__class__: hxd_fs_FileInput
});
var hxd_fs_LoadedBitmap = {};
hxd_fs_LoadedBitmap.toBitmap = function(this1) {
	var bmp = new hxd_BitmapData(this1.width,this1.height);
	bmp.ctx.drawImage(this1,0,0);
	return bmp;
};
var hxd_fs_NotFound = function(path) {
	this.path = path;
};
$hxClasses["hxd.fs.NotFound"] = hxd_fs_NotFound;
hxd_fs_NotFound.__name__ = "hxd.fs.NotFound";
hxd_fs_NotFound.prototype = {
	toString: function() {
		return "Resource file not found '" + this.path + "'";
	}
	,__class__: hxd_fs_NotFound
};
var hxd_impl_Allocator = function() {
};
$hxClasses["hxd.impl.Allocator"] = hxd_impl_Allocator;
hxd_impl_Allocator.__name__ = "hxd.impl.Allocator";
hxd_impl_Allocator.get = function() {
	if(hxd_impl_Allocator.inst == null) {
		hxd_impl_Allocator.inst = new hxd_impl_Allocator();
	}
	return hxd_impl_Allocator.inst;
};
hxd_impl_Allocator.prototype = {
	allocBuffer: function(vertices,stride,flags) {
		var tmp;
		switch(flags) {
		case 0:
			tmp = [h3d_BufferFlag.Dynamic];
			break;
		case 1:
			tmp = [h3d_BufferFlag.UniformBuffer,h3d_BufferFlag.Dynamic];
			break;
		case 2:
			tmp = [h3d_BufferFlag.RawFormat];
			break;
		case 3:
			tmp = [h3d_BufferFlag.Quads,h3d_BufferFlag.RawFormat];
			break;
		}
		return new h3d_Buffer(vertices,stride,tmp);
	}
	,ofFloats: function(v,stride,flags) {
		var nvert = v.pos / stride | 0;
		var b = this.allocBuffer(nvert,stride,flags);
		b.uploadVector(v,0,nvert);
		return b;
	}
	,disposeBuffer: function(b) {
		b.dispose();
	}
	,allocIndexBuffer: function(count) {
		return new h3d_Indexes(count);
	}
	,ofIndexes: function(ib,length) {
		if(length == null) {
			length = -1;
		}
		if(length < 0 && ib != null) {
			length = ib.length;
		}
		var idx = this.allocIndexBuffer(length);
		idx.upload(ib,0,length);
		return idx;
	}
	,disposeIndexBuffer: function(i) {
		i.dispose();
	}
	,onContextLost: function() {
	}
	,__class__: hxd_impl_Allocator
};
var hxd_res_Resource = function(entry) {
	this.entry = entry;
};
$hxClasses["hxd.res.Resource"] = hxd_res_Resource;
hxd_res_Resource.__name__ = "hxd.res.Resource";
hxd_res_Resource.prototype = {
	toString: function() {
		return this.entry.get_path();
	}
	,watch: function(onChanged) {
		if(hxd_res_Resource.LIVE_UPDATE) {
			this.entry.watch(onChanged);
		}
	}
	,__class__: hxd_res_Resource
};
var hxd_res_Any = function(loader,entry) {
	hxd_res_Resource.call(this,entry);
	this.loader = loader;
};
$hxClasses["hxd.res.Any"] = hxd_res_Any;
hxd_res_Any.__name__ = "hxd.res.Any";
hxd_res_Any.__super__ = hxd_res_Resource;
hxd_res_Any.prototype = $extend(hxd_res_Resource.prototype,{
	toTexture: function() {
		return this.toImage().toTexture();
	}
	,toTile: function() {
		return this.toImage().toTile();
	}
	,toImage: function() {
		return this.loader.loadCache(this.entry.get_path(),hxd_res_Image);
	}
	,to: function(c) {
		return this.loader.loadCache(this.entry.get_path(),c);
	}
	,__class__: hxd_res_Any
});
var hxd_res_Atlas = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Atlas"] = hxd_res_Atlas;
hxd_res_Atlas.__name__ = "hxd.res.Atlas";
hxd_res_Atlas.__super__ = hxd_res_Resource;
hxd_res_Atlas.prototype = $extend(hxd_res_Resource.prototype,{
	getContents: function() {
		if(this.contents != null) {
			return this.contents;
		}
		this.contents = new haxe_ds_StringMap();
		var lines = this.entry.getBytes().toString().split("\n");
		var basePath = this.entry.get_path().split("/");
		basePath.pop();
		var basePath1 = basePath.join("/");
		if(basePath1.length > 0) {
			basePath1 += "/";
		}
		while(lines.length > 0) {
			var line = StringTools.trim(lines.shift());
			if(line == "") {
				continue;
			}
			var scale = 1.;
			var file = hxd_res_Loader.currentInstance.load(basePath1 + line).toTile();
			while(lines.length > 0) {
				if(lines[0].indexOf(":") < 0) {
					break;
				}
				var line1 = StringTools.trim(lines.shift()).split(": ");
				if(line1[0] == "size") {
					var wh = line1[1].split(",");
					var w = Std.parseInt(wh[0]);
					scale = file.width / w;
				}
			}
			while(lines.length > 0) {
				var line2 = StringTools.trim(lines.shift());
				if(line2 == "") {
					break;
				}
				var prop = line2.split(": ");
				if(prop.length > 1) {
					continue;
				}
				var key = line2;
				var tileX = 0;
				var tileY = 0;
				var tileW = 0;
				var tileH = 0;
				var tileDX = 0;
				var tileDY = 0;
				var origW = 0;
				var origH = 0;
				var index = 0;
				while(lines.length > 0) {
					var line3 = StringTools.trim(lines.shift());
					var prop1 = line3.split(": ");
					if(prop1.length == 1) {
						lines.unshift(line3);
						break;
					}
					var v = prop1[1];
					switch(prop1[0]) {
					case "index":
						index = Std.parseInt(v);
						if(index < 0) {
							index = 0;
						}
						break;
					case "offset":
						var vals = v.split(", ");
						tileDX = Std.parseInt(vals[0]);
						tileDY = Std.parseInt(vals[1]);
						break;
					case "orig":
						var vals1 = v.split(", ");
						origW = Std.parseInt(vals1[0]);
						origH = Std.parseInt(vals1[1]);
						break;
					case "rotate":
						if(v == "true") {
							throw haxe_Exception.thrown("Rotation not supported in atlas");
						}
						break;
					case "size":
						var vals2 = v.split(", ");
						tileW = Std.parseInt(vals2[0]);
						tileH = Std.parseInt(vals2[1]);
						break;
					case "xy":
						var vals3 = v.split(", ");
						tileX = Std.parseInt(vals3[0]);
						tileY = Std.parseInt(vals3[1]);
						break;
					default:
						haxe_Log.trace("Unknown prop " + prop1[0],{ fileName : "hxd/res/Atlas.hx", lineNumber : 116, className : "hxd.res.Atlas", methodName : "getContents"});
					}
				}
				tileDY = origH - (tileH + tileDY);
				var t = file.sub(tileX * scale | 0,tileY * scale | 0,tileW * scale | 0,tileH * scale | 0,tileDX,tileDY);
				if(scale != 1) {
					t.scaleToSize(tileW,tileH);
				}
				var tl = this.contents.h[key];
				if(tl == null) {
					tl = [];
					this.contents.h[key] = tl;
				}
				tl[index] = { t : t, width : origW, height : origH};
			}
			var tl1 = haxe_ds_StringMap.valueIterator(this.contents.h);
			while(tl1.hasNext()) {
				var tl2 = tl1.next();
				if(tl2.length > 1 && tl2[0] == null) {
					tl2.shift();
				}
			}
		}
		return this.contents;
	}
	,__class__: hxd_res_Atlas
});
var hxd_res_BitmapFont = function(entry) {
	hxd_res_Resource.call(this,entry);
	this.loader = hxd_res_Loader.currentInstance;
};
$hxClasses["hxd.res.BitmapFont"] = hxd_res_BitmapFont;
hxd_res_BitmapFont.__name__ = "hxd.res.BitmapFont";
hxd_res_BitmapFont.__super__ = hxd_res_Resource;
hxd_res_BitmapFont.prototype = $extend(hxd_res_Resource.prototype,{
	toFont: function() {
		if(this.font == null) {
			this.font = hxd_fmt_bfnt_FontParser.parse(this.entry.getBytes(),this.entry.get_path(),$bind(this,this.resolveTile));
		}
		return this.font;
	}
	,resolveTile: function(path) {
		return this.loader.load(path).toTile();
	}
	,__class__: hxd_res_BitmapFont
});
var hxd_res_Image = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Image"] = hxd_res_Image;
hxd_res_Image.__name__ = "hxd.res.Image";
hxd_res_Image.setupTextureFlags = function(tex) {
};
hxd_res_Image.__super__ = hxd_res_Resource;
hxd_res_Image.prototype = $extend(hxd_res_Resource.prototype,{
	getFormat: function() {
		this.getSize();
		return this.inf.format;
	}
	,getSize: function() {
		if(this.inf != null) {
			return this.inf;
		}
		var f = new hxd_fs_FileInput(this.entry);
		var width = 0;
		var height = 0;
		var format;
		var bc = 0;
		var head;
		try {
			head = f.readUInt16();
		} catch( _g ) {
			if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				head = 0;
			} else {
				throw _g;
			}
		}
		switch(head) {
		case 17476:
			format = 4;
			f.skip(10);
			height = f.readInt32();
			width = f.readInt32();
			f.skip(64);
			var fourCC = f.readInt32();
			switch(fourCC & 16777215) {
			case 4805697:
				var v = (fourCC >>> 24) - 48;
				switch(v) {
				case 1:
					bc = 4;
					break;
				case 2:
					bc = 5;
					break;
				default:
					bc = 0;
				}
				break;
			case 5527620:
				var dxt = (fourCC >>> 24) - 48;
				switch(dxt) {
				case 1:
					bc = 1;
					break;
				case 2:case 3:
					bc = 2;
					break;
				case 4:case 5:
					bc = 3;
					break;
				default:
					bc = 0;
				}
				break;
			default:
				if(fourCC == 808540228) {
					f.skip(40);
					var dxgi = f.readInt32();
					switch(dxgi) {
					case 95:
						bc = 6;
						break;
					case 98:
						bc = 7;
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
				}
			}
			if(bc == 0) {
				throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported 4CC " + String.fromCodePoint((fourCC & 255)) + String.fromCodePoint((fourCC >> 8 & 255)) + String.fromCodePoint((fourCC >> 16 & 255)) + String.fromCodePoint((fourCC >>> 24)));
			}
			break;
		case 18759:
			format = 2;
			f.readInt32();
			width = f.readUInt16();
			height = f.readUInt16();
			break;
		case 20617:
			format = 1;
			f.set_bigEndian(true);
			f.skip(6);
			while(true) {
				var dataLen = f.readInt32();
				if(f.readInt32() == 1229472850) {
					width = f.readInt32();
					height = f.readInt32();
					bc = f.readByte();
					break;
				}
				f.skip(dataLen + 4);
			}
			break;
		case 55551:
			format = 0;
			f.set_bigEndian(true);
			_hx_loop2: while(true) switch(f.readUInt16()) {
			case 65472:case 65473:case 65474:
				var len = f.readUInt16();
				var prec = f.readByte();
				height = f.readUInt16();
				width = f.readUInt16();
				break _hx_loop2;
			default:
				f.skip(f.readUInt16() - 2);
			}
			break;
		default:
			if(this.entry.get_extension() == "tga") {
				format = 3;
				f.skip(10);
				width = f.readUInt16();
				height = f.readUInt16();
			} else if(this.entry.get_extension() == "raw") {
				format = 5;
				var size = Math.sqrt(this.entry.get_size() >> 2) | 0;
				if(this.entry.get_size() != size * size * 4) {
					throw haxe_Exception.thrown("RAW format does not match 32 bit per components on " + size + "x" + size);
				}
				height = size;
				width = height;
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + this.entry.get_path());
			}
		}
		f.close();
		this.inf = { width : width, height : height, format : format, bc : bc};
		return this.inf;
	}
	,getPixels: function(fmt,flipY) {
		this.getSize();
		var pixels;
		switch(this.inf.format) {
		case 0:
			var bytes = this.entry.getBytes();
			var p;
			try {
				p = hxd_res_NanoJpeg.decode(bytes);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				throw haxe_Exception.thrown("Failed to decode JPG " + this.entry.get_path() + " (" + Std.string(e) + ")");
			}
			pixels = new hxd_Pixels(p.width,p.height,p.pixels,hxd_PixelFormat.BGRA);
			break;
		case 1:
			var bytes = this.entry.getBytes();
			var png = new format_png_Reader(new haxe_io_BytesInput(bytes));
			png.checkCRC = false;
			pixels = hxd_Pixels.alloc(this.inf.width,this.inf.height,hxd_PixelFormat.BGRA);
			var pdata = png.read();
			format_png_Tools.extract32(pdata,pixels.bytes,flipY);
			if(flipY) {
				pixels.flags |= 1 << hxd_Flags.FlipY._hx_index;
			}
			break;
		case 2:
			var bytes = this.entry.getBytes();
			var gif = new format_gif_Reader(new haxe_io_BytesInput(bytes)).read();
			pixels = new hxd_Pixels(this.inf.width,this.inf.height,format_gif_Tools.extractFullBGRA(gif,0),hxd_PixelFormat.BGRA);
			break;
		case 3:
			var bytes = this.entry.getBytes();
			var r = new format_tga_Reader(new haxe_io_BytesInput(bytes)).read();
			if(r.header.imageType != format_tga_ImageType.UncompressedTrueColor || r.header.bitsPerPixel != 32) {
				throw haxe_Exception.thrown("Not supported " + Std.string(r.header.imageType) + "/" + r.header.bitsPerPixel);
			}
			var w = r.header.width;
			var h = r.header.height;
			pixels = hxd_Pixels.alloc(w,h,hxd_PixelFormat.ARGB);
			var access = hxd_PixelsARGB.fromPixels(pixels);
			var p = 0;
			var _g = 0;
			var _g1 = h;
			while(_g < _g1) {
				var y = _g++;
				var _g2 = 0;
				var _g3 = w;
				while(_g2 < _g3) {
					var x = _g2++;
					var c = r.imageData[x + y * w];
					access.bytes.setInt32((x + y * access.width << 2) + access.offset,c >>> 24 | c >> 8 & 65280 | c << 8 & 16711680 | c << 24);
				}
			}
			switch(r.header.imageOrigin._hx_index) {
			case 0:
				pixels.flags |= 1 << hxd_Flags.FlipY._hx_index;
				break;
			case 2:
				break;
			default:
				throw haxe_Exception.thrown("Not supported " + Std.string(r.header.imageOrigin));
			}
			break;
		case 4:
			var bytes = this.entry.getBytes();
			pixels = new hxd_Pixels(this.inf.width,this.inf.height,bytes,hxd_PixelFormat.S3TC(this.inf.bc),128 + (this.inf.bc >= 6 ? 20 : 0));
			break;
		case 5:
			var bytes = this.entry.getBytes();
			pixels = new hxd_Pixels(this.inf.width,this.inf.height,bytes,hxd_PixelFormat.R32F);
			break;
		}
		if(fmt != null) {
			pixels.convert(fmt);
		}
		if(flipY != null) {
			pixels.setFlip(flipY);
		}
		return pixels;
	}
	,watchCallb: function() {
		var w = this.inf.width;
		var h = this.inf.height;
		this.inf = null;
		var s = this.getSize();
		if(w != s.width || h != s.height) {
			this.tex.resize(s.width,s.height);
		}
		this.tex.realloc = null;
		this.loadTexture();
	}
	,loadTexture: function() {
		var _gthis = this;
		if(this.getFormat() != 0 && !hxd_res_Image.DEFAULT_ASYNC) {
			var load = function() {
				_gthis.tex.alloc();
				var pixels = _gthis.getPixels(_gthis.tex.format);
				if(pixels.width != _gthis.tex.width || pixels.height != _gthis.tex.height) {
					pixels.makeSquare();
				}
				_gthis.tex.uploadPixels(pixels);
				pixels.dispose();
				_gthis.tex.realloc = $bind(_gthis,_gthis.loadTexture);
				if(hxd_res_Image.ENABLE_AUTO_WATCH) {
					_gthis.watch($bind(_gthis,_gthis.watchCallb));
				}
			};
			if(this.entry.get_isAvailable()) {
				load();
			} else {
				this.entry.load(load);
			}
		} else {
			this.tex.flags |= 1 << h3d_mat_TextureFlags.Loading._hx_index;
			this.entry.loadBitmap(function(bmp) {
				var bmp1 = hxd_fs_LoadedBitmap.toBitmap(bmp);
				_gthis.tex.alloc();
				if(bmp1.ctx.canvas.width != _gthis.tex.width || bmp1.ctx.canvas.height != _gthis.tex.height) {
					var pixels = bmp1.getPixels();
					pixels.makeSquare();
					_gthis.tex.uploadPixels(pixels);
					pixels.dispose();
				} else {
					_gthis.tex.uploadBitmap(bmp1);
				}
				bmp1.ctx = null;
				bmp1.pixel = null;
				_gthis.tex.realloc = $bind(_gthis,_gthis.loadTexture);
				_gthis.tex.flags &= -1 - (1 << h3d_mat_TextureFlags.Loading._hx_index);
				if(_gthis.tex.waitLoads != null) {
					var arr = _gthis.tex.waitLoads;
					_gthis.tex.waitLoads = null;
					var _g = 0;
					while(_g < arr.length) {
						var f = arr[_g];
						++_g;
						f();
					}
				}
				if(hxd_res_Image.ENABLE_AUTO_WATCH) {
					_gthis.watch($bind(_gthis,_gthis.watchCallb));
				}
			});
		}
	}
	,toTexture: function() {
		if(this.tex != null) {
			return this.tex;
		}
		this.getSize();
		var width = this.inf.width;
		var height = this.inf.height;
		if(!hxd_res_Image.ALLOW_NPOT) {
			var tw = 1;
			var th = 1;
			while(tw < width) tw <<= 1;
			while(th < height) th <<= 1;
			width = tw;
			height = th;
		}
		var format = h3d_mat_Texture.nativeFormat;
		switch(this.inf.format) {
		case 4:
			format = hxd_PixelFormat.S3TC(this.inf.bc);
			break;
		case 5:
			format = hxd_PixelFormat.R32F;
			break;
		default:
		}
		var flags = [h3d_mat_TextureFlags.NoAlloc];
		this.tex = new h3d_mat_Texture(width,height,flags,format);
		if(hxd_res_Image.DEFAULT_FILTER != h3d_mat_Filter.Linear) {
			this.tex.set_filter(hxd_res_Image.DEFAULT_FILTER);
		}
		this.tex.setName(this.entry.get_path());
		hxd_res_Image.setupTextureFlags(this.tex);
		this.loadTexture();
		return this.tex;
	}
	,toTile: function() {
		var size = this.getSize();
		return h2d_Tile.fromTexture(this.toTexture()).sub(0,0,size.width,size.height);
	}
	,__class__: hxd_res_Image
});
var hxd_res_Loader = function(fs) {
	this.fs = fs;
	this.cache = new haxe_ds_StringMap();
};
$hxClasses["hxd.res.Loader"] = hxd_res_Loader;
hxd_res_Loader.__name__ = "hxd.res.Loader";
hxd_res_Loader.prototype = {
	exists: function(path) {
		return this.fs.exists(path);
	}
	,load: function(path) {
		return new hxd_res_Any(this,this.fs.get(path));
	}
	,loadCache: function(path,c) {
		var res = this.cache.h[path];
		if(res == null) {
			var entry = this.fs.get(path);
			var old = hxd_res_Loader.currentInstance;
			hxd_res_Loader.currentInstance = this;
			res = Type.createInstance(c,[entry]);
			hxd_res_Loader.currentInstance = old;
			this.cache.h[path] = res;
		} else if((js_Boot.__downcastCheck(res,c) ? res : null) == null) {
			throw haxe_Exception.thrown(path + " has been reintrepreted from " + Std.string(js_Boot.getClass(res)) + " to " + Std.string(c));
		}
		return res;
	}
	,__class__: hxd_res_Loader
};
var hxd_res_Filter = $hxEnums["hxd.res.Filter"] = { __ename__ : true, __constructs__ : ["Fast","Chromatic"]
	,Fast: {_hx_index:0,__enum__:"hxd.res.Filter",toString:$estr}
	,Chromatic: {_hx_index:1,__enum__:"hxd.res.Filter",toString:$estr}
};
hxd_res_Filter.__empty_constructs__ = [hxd_res_Filter.Fast,hxd_res_Filter.Chromatic];
var hxd_res__$NanoJpeg_Component = function() {
};
$hxClasses["hxd.res._NanoJpeg.Component"] = hxd_res__$NanoJpeg_Component;
hxd_res__$NanoJpeg_Component.__name__ = "hxd.res._NanoJpeg.Component";
hxd_res__$NanoJpeg_Component.prototype = {
	__class__: hxd_res__$NanoJpeg_Component
};
var hxd_res_NanoJpeg = function() {
	this.comps = [new hxd_res__$NanoJpeg_Component(),new hxd_res__$NanoJpeg_Component(),new hxd_res__$NanoJpeg_Component()].slice(0);
	var this1 = new Array(64);
	var this2 = new Array(64);
	var this3 = new Array(64);
	var this4 = new Array(64);
	this.qtab = [this1,this2,this3,this4].slice(0);
	var this1 = new Array(16);
	this.counts = this1;
	var this1 = new Array(64);
	this.block = this1;
	this.njZZ = [0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63].slice(0);
	this.vlctab = [null,null,null,null,null,null,null,null].slice(0);
};
$hxClasses["hxd.res.NanoJpeg"] = hxd_res_NanoJpeg;
hxd_res_NanoJpeg.__name__ = "hxd.res.NanoJpeg";
hxd_res_NanoJpeg.decode = function(bytes,filter,position,size) {
	if(size == null) {
		size = -1;
	}
	if(position == null) {
		position = 0;
	}
	if(hxd_res_NanoJpeg.inst == null) {
		hxd_res_NanoJpeg.inst = new hxd_res_NanoJpeg();
	}
	hxd_res_NanoJpeg.inst.njInit(bytes,position,size,filter);
	return hxd_res_NanoJpeg.inst.njDecode();
};
hxd_res_NanoJpeg.prototype = {
	njInit: function(bytes,pos,size,filter) {
		this.bytes = bytes;
		this.pos = pos;
		this.filter = filter == null ? hxd_res_Filter.Chromatic : filter;
		if(size < 0) {
			size = bytes.length - pos;
		}
		if(this.vlctab[0] == null) {
			this.vlctab[0] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		if(this.vlctab[1] == null) {
			this.vlctab[1] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		if(this.vlctab[2] == null) {
			this.vlctab[2] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		if(this.vlctab[3] == null) {
			this.vlctab[3] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		this.size = size;
		this.qtused = 0;
		this.qtavail = 0;
		this.rstinterval = 0;
		this.length = 0;
		this.buf = 0;
		this.bufbits = 0;
		this.progressive = false;
		this.comps[0].dcpred = 0;
		this.comps[1].dcpred = 0;
		this.comps[2].dcpred = 0;
	}
	,cleanup: function() {
		this.bytes = null;
		var _g = 0;
		var _g1 = this.comps;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.pixels != null) {
				c.pixels = null;
			}
		}
		if(this.vlctab[0] != null) {
			this.vlctab[0] = null;
		}
		if(this.vlctab[1] != null) {
			this.vlctab[1] = null;
		}
		if(this.vlctab[2] != null) {
			this.vlctab[2] = null;
		}
		if(this.vlctab[3] != null) {
			this.vlctab[3] = null;
		}
		if(this.vlctab[4] != null) {
			this.vlctab[4] = null;
		}
		if(this.vlctab[5] != null) {
			this.vlctab[5] = null;
		}
		if(this.vlctab[6] != null) {
			this.vlctab[6] = null;
		}
		if(this.vlctab[7] != null) {
			this.vlctab[7] = null;
		}
	}
	,njShowBits: function(bits) {
		if(bits == 0) {
			return 0;
		}
		while(this.bufbits < bits) {
			if(this.size <= 0) {
				this.buf = this.buf << 8 | 255;
				this.bufbits += 8;
				continue;
			}
			var newbyte = this.bytes.b[this.pos];
			this.pos++;
			this.size--;
			this.bufbits += 8;
			this.buf = this.buf << 8 | newbyte;
			if(newbyte == 255) {
				var marker = this.bytes.b[this.pos];
				this.pos++;
				this.size--;
				switch(marker) {
				case 217:
					this.size = 0;
					break;
				case 0:case 255:
					break;
				default:
					this.buf = this.buf << 8 | marker;
					this.bufbits += 8;
				}
			}
		}
		return this.buf >> this.bufbits - bits & (1 << bits) - 1;
	}
	,njDecodeSOF: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.bytes.b[this.pos] != 8) {
			this.notSupported();
		}
		this.height = this.bytes.b[this.pos + 1] << 8 | this.bytes.b[this.pos + 2];
		this.width = this.bytes.b[this.pos + 3] << 8 | this.bytes.b[this.pos + 4];
		this.ncomp = this.bytes.b[this.pos + 5];
		this.pos += 6;
		this.size -= 6;
		this.length -= 6;
		switch(this.ncomp) {
		case 1:case 3:
			break;
		default:
			this.notSupported();
		}
		var ssxmax = 0;
		var ssymax = 0;
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			c.cid = this.bytes.b[this.pos];
			c.ssx = this.bytes.b[this.pos + 1] >> 4;
			if((c.ssx & c.ssx - 1) != 0) {
				this.notSupported();
			}
			c.ssy = this.bytes.b[this.pos + 1] & 15;
			if((c.ssy & c.ssy - 1) != 0) {
				this.notSupported();
			}
			c.qtsel = this.bytes.b[this.pos + 2];
			this.pos += 3;
			this.size -= 3;
			this.length -= 3;
			this.qtused |= 1 << c.qtsel;
			if(c.ssx > ssxmax) {
				ssxmax = c.ssx;
			}
			if(c.ssy > ssymax) {
				ssymax = c.ssy;
			}
		}
		if(this.ncomp == 1) {
			var c = this.comps[0];
			ssymax = 1;
			ssxmax = ssymax;
			c.ssx = c.ssy = ssxmax;
		}
		this.mbsizex = ssxmax << 3;
		this.mbsizey = ssymax << 3;
		this.mbwidth = (this.width + this.mbsizex - 1) / this.mbsizex | 0;
		this.mbheight = (this.height + this.mbsizey - 1) / this.mbsizey | 0;
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			c.width = (this.width * c.ssx + ssxmax - 1) / ssxmax | 0;
			c.stride = c.width + 7 & 2147483640;
			c.height = (this.height * c.ssy + ssymax - 1) / ssymax | 0;
			c.stride = this.mbwidth * this.mbsizex * c.ssx / ssxmax | 0;
			if(c.width < 3 && c.ssx != ssxmax || c.height < 3 && c.ssy != ssymax) {
				this.notSupported();
			}
			c.pixels = new haxe_io_Bytes(new ArrayBuffer(c.stride * (this.mbheight * this.mbsizey * c.ssy / ssymax | 0)));
		}
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
	}
	,njDecodeDQT: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		while(this.length >= 65) {
			var i = this.bytes.b[this.pos];
			this.qtavail |= 1 << i;
			var t = this.qtab[i];
			var _g = 0;
			while(_g < 64) {
				var k = _g++;
				t[k] = this.bytes.b[this.pos + (k + 1)];
			}
			this.pos += 65;
			this.size -= 65;
			this.length -= 65;
		}
	}
	,njDecodeDHT: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		while(this.length >= 17) {
			var i = this.bytes.b[this.pos];
			i = i >> 4 & 1 | (i & 3) << 1;
			this.counts[0] = this.bytes.b[this.pos + 1];
			this.counts[1] = this.bytes.b[this.pos + 2];
			this.counts[2] = this.bytes.b[this.pos + 3];
			this.counts[3] = this.bytes.b[this.pos + 4];
			this.counts[4] = this.bytes.b[this.pos + 5];
			this.counts[5] = this.bytes.b[this.pos + 6];
			this.counts[6] = this.bytes.b[this.pos + 7];
			this.counts[7] = this.bytes.b[this.pos + 8];
			this.counts[8] = this.bytes.b[this.pos + 9];
			this.counts[9] = this.bytes.b[this.pos + 10];
			this.counts[10] = this.bytes.b[this.pos + 11];
			this.counts[11] = this.bytes.b[this.pos + 12];
			this.counts[12] = this.bytes.b[this.pos + 13];
			this.counts[13] = this.bytes.b[this.pos + 14];
			this.counts[14] = this.bytes.b[this.pos + 15];
			this.counts[15] = this.bytes.b[this.pos + 16];
			this.pos += 17;
			this.size -= 17;
			this.length -= 17;
			var vlc = this.vlctab[i];
			var vpos = 0;
			var remain = 65536;
			var spread = 65536;
			var _g = 1;
			while(_g < 17) {
				var codelen = _g++;
				spread >>= 1;
				var currcnt = this.counts[codelen - 1];
				if(currcnt == 0) {
					continue;
				}
				remain -= currcnt << 16 - codelen;
				var _g1 = 0;
				var _g2 = currcnt;
				while(_g1 < _g2) {
					var i1 = _g1++;
					var code = this.bytes.b[this.pos + i1];
					var _g3 = 0;
					var _g4 = spread;
					while(_g3 < _g4) {
						var j = _g3++;
						vlc.b[vpos++] = codelen;
						vlc.b[vpos++] = code;
					}
				}
				this.pos += currcnt;
				this.size -= currcnt;
				this.length -= currcnt;
			}
			while(remain-- != 0) {
				vlc.b[vpos] = 0;
				vpos += 2;
			}
		}
	}
	,njDecodeDRI: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		this.rstinterval = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
	}
	,njDecodeBlock: function(c,po) {
		var this1 = c.pixels;
		var out = this1;
		var value;
		var coef = 0;
		var _g = 0;
		while(_g < 64) {
			var i = _g++;
			this.block[i] = 0;
		}
		var c1 = c;
		var c2 = c1.dcpred;
		var vlc = this.vlctab[c.dctabsel];
		var value1 = this.njShowBits(16);
		var bits = vlc.b[value1 << 1];
		if(this.bufbits < bits) {
			this.njShowBits(bits);
		}
		this.bufbits -= bits;
		value1 = vlc.b[value1 << 1 | 1];
		this.vlcCode = value1;
		bits = value1 & 15;
		var tmp;
		if(bits == 0) {
			tmp = 0;
		} else {
			var r = this.njShowBits(bits);
			this.bufbits -= bits;
			value1 = r;
			if(value1 < 1 << bits - 1) {
				value1 += (-1 << bits) + 1;
			}
			tmp = value1;
		}
		c1.dcpred = c2 + tmp;
		var qt = this.qtab[c.qtsel];
		var at = this.vlctab[c.actabsel];
		this.block[0] = c.dcpred * qt[0];
		while(true) {
			var value1 = this.njShowBits(16);
			var bits = at.b[value1 << 1];
			if(this.bufbits < bits) {
				this.njShowBits(bits);
			}
			this.bufbits -= bits;
			value1 = at.b[value1 << 1 | 1];
			this.vlcCode = value1;
			bits = value1 & 15;
			if(bits == 0) {
				value = 0;
			} else {
				var r = this.njShowBits(bits);
				this.bufbits -= bits;
				value1 = r;
				if(value1 < 1 << bits - 1) {
					value1 += (-1 << bits) + 1;
				}
				value = value1;
			}
			if(this.vlcCode == 0) {
				break;
			}
			coef += (this.vlcCode >> 4) + 1;
			this.block[this.njZZ[coef]] = value * qt[coef];
			if(!(coef < 63)) {
				break;
			}
		}
		var bp = 0;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 8;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 16;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 24;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 32;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 40;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 48;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 56;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var po1 = po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[32] << 8;
		var x2 = this.block[48];
		var x3 = this.block[16];
		var x4 = this.block[8];
		var x5 = this.block[56];
		var x6 = this.block[40];
		var x7 = this.block[24];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[0] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[0] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 1 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[33] << 8;
		var x2 = this.block[49];
		var x3 = this.block[17];
		var x4 = this.block[9];
		var x5 = this.block[57];
		var x6 = this.block[41];
		var x7 = this.block[25];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[1] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[1] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 2 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[34] << 8;
		var x2 = this.block[50];
		var x3 = this.block[18];
		var x4 = this.block[10];
		var x5 = this.block[58];
		var x6 = this.block[42];
		var x7 = this.block[26];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[2] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[2] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 3 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[35] << 8;
		var x2 = this.block[51];
		var x3 = this.block[19];
		var x4 = this.block[11];
		var x5 = this.block[59];
		var x6 = this.block[43];
		var x7 = this.block[27];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[3] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[3] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 4 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[36] << 8;
		var x2 = this.block[52];
		var x3 = this.block[20];
		var x4 = this.block[12];
		var x5 = this.block[60];
		var x6 = this.block[44];
		var x7 = this.block[28];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[4] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[4] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 5 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[37] << 8;
		var x2 = this.block[53];
		var x3 = this.block[21];
		var x4 = this.block[13];
		var x5 = this.block[61];
		var x6 = this.block[45];
		var x7 = this.block[29];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[5] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[5] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 6 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[38] << 8;
		var x2 = this.block[54];
		var x3 = this.block[22];
		var x4 = this.block[14];
		var x5 = this.block[62];
		var x6 = this.block[46];
		var x7 = this.block[30];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[6] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[6] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 7 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[39] << 8;
		var x2 = this.block[55];
		var x3 = this.block[23];
		var x4 = this.block[15];
		var x5 = this.block[63];
		var x6 = this.block[47];
		var x7 = this.block[31];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[7] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[7] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
	}
	,notSupported: function() {
		throw haxe_Exception.thrown("This JPG file is not supported");
	}
	,njDecodeScan: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.bytes.b[this.pos] != this.ncomp) {
			this.notSupported();
		}
		this.pos += 1;
		this.size -= 1;
		this.length -= 1;
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			c.dctabsel = this.bytes.b[this.pos + 1] >> 4 << 1;
			c.actabsel = (this.bytes.b[this.pos + 1] & 3) << 1 | 1;
			this.pos += 2;
			this.size -= 2;
			this.length -= 2;
		}
		var start = this.bytes.b[this.pos];
		var count = this.bytes.b[this.pos + 1];
		var other = this.bytes.b[this.pos + 2];
		if(!this.progressive && start != 0 || count != 63 - start || other != 0) {
			this.notSupported();
		}
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
		var mbx = 0;
		var mby = 0;
		var rstcount = this.rstinterval;
		var nextrst = 0;
		while(true) {
			var _g = 0;
			var _g1 = this.ncomp;
			while(_g < _g1) {
				var i = _g++;
				var c = this.comps[i];
				var _g2 = 0;
				var _g3 = c.ssy;
				while(_g2 < _g3) {
					var sby = _g2++;
					var _g4 = 0;
					var _g5 = c.ssx;
					while(_g4 < _g5) {
						var sbx = _g4++;
						this.njDecodeBlock(c,(mby * c.ssy + sby) * c.stride + mbx * c.ssx + sbx << 3);
					}
				}
			}
			if(++mbx >= this.mbwidth) {
				mbx = 0;
				if(++mby >= this.mbheight) {
					break;
				}
			}
			if(this.rstinterval != 0 && --rstcount == 0) {
				this.bufbits &= 248;
				var r = this.njShowBits(16);
				this.bufbits -= 16;
				var i1 = r;
				nextrst = nextrst + 1 & 7;
				rstcount = this.rstinterval;
				this.comps[0].dcpred = 0;
				this.comps[1].dcpred = 0;
				this.comps[2].dcpred = 0;
			}
		}
	}
	,njUpsampleH: function(c) {
		var xmax = c.width - 3;
		var cout = new haxe_io_Bytes(new ArrayBuffer(c.width * c.height << 1));
		var this1 = cout;
		var lout = this1;
		var this1 = c.pixels;
		var lin = this1;
		var pi = 0;
		var po = 0;
		var _g = 0;
		var _g1 = c.height;
		while(_g < _g1) {
			var y = _g++;
			var x = 139 * lin.b[pi] + -11 * lin.b[pi + 1] + 64 >> 7;
			lout.b[po] = x < 0 ? 0 : x > 255 ? 255 : x;
			var x1 = 104 * lin.b[pi] + 27 * lin.b[pi + 1] + -3 * lin.b[pi + 2] + 64 >> 7;
			lout.b[po + 1] = x1 < 0 ? 0 : x1 > 255 ? 255 : x1;
			var x2 = 28 * lin.b[pi] + 109 * lin.b[pi + 1] + -9 * lin.b[pi + 2] + 64 >> 7;
			lout.b[po + 2] = x2 < 0 ? 0 : x2 > 255 ? 255 : x2;
			var _g2 = 0;
			var _g3 = xmax;
			while(_g2 < _g3) {
				var x3 = _g2++;
				var x4 = -9 * lin.b[pi + x3] + 111 * lin.b[pi + x3 + 1] + 29 * lin.b[pi + x3 + 2] + -3 * lin.b[pi + x3 + 3] + 64 >> 7;
				lout.b[po + (x3 << 1) + 3] = x4 < 0 ? 0 : x4 > 255 ? 255 : x4;
				var x5 = -3 * lin.b[pi + x3] + 29 * lin.b[pi + x3 + 1] + 111 * lin.b[pi + x3 + 2] + -9 * lin.b[pi + x3 + 3] + 64 >> 7;
				lout.b[po + (x3 << 1) + 4] = x5 < 0 ? 0 : x5 > 255 ? 255 : x5;
			}
			pi += c.stride;
			po += c.width << 1;
			var x6 = 28 * lin.b[pi - 1] + 109 * lin.b[pi - 2] + -9 * lin.b[pi - 3] + 64 >> 7;
			lout.b[po - 3] = x6 < 0 ? 0 : x6 > 255 ? 255 : x6;
			var x7 = 104 * lin.b[pi - 1] + 27 * lin.b[pi - 2] + -3 * lin.b[pi - 3] + 64 >> 7;
			lout.b[po - 2] = x7 < 0 ? 0 : x7 > 255 ? 255 : x7;
			var x8 = 139 * lin.b[pi - 1] + -11 * lin.b[pi - 2] + 64 >> 7;
			lout.b[po - 1] = x8 < 0 ? 0 : x8 > 255 ? 255 : x8;
		}
		c.width <<= 1;
		c.stride = c.width;
		c.pixels = cout;
	}
	,njUpsampleV: function(c) {
		var w = c.width;
		var s1 = c.stride;
		var s2 = s1 + s1;
		var out = new haxe_io_Bytes(new ArrayBuffer(c.width * c.height << 1));
		var pi = 0;
		var po = 0;
		var this1 = out;
		var cout = this1;
		var this1 = c.pixels;
		var cin = this1;
		var _g = 0;
		var _g1 = w;
		while(_g < _g1) {
			var x = _g++;
			po = x;
			pi = po;
			var x1 = 139 * cin.b[pi] + -11 * cin.b[pi + s1] + 64 >> 7;
			cout.b[po] = x1 < 0 ? 0 : x1 > 255 ? 255 : x1;
			po += w;
			var x2 = 104 * cin.b[pi] + 27 * cin.b[pi + s1] + -3 * cin.b[pi + s2] + 64 >> 7;
			cout.b[po] = x2 < 0 ? 0 : x2 > 255 ? 255 : x2;
			po += w;
			var x3 = 28 * cin.b[pi] + 109 * cin.b[pi + s1] + -9 * cin.b[pi + s2] + 64 >> 7;
			cout.b[po] = x3 < 0 ? 0 : x3 > 255 ? 255 : x3;
			po += w;
			pi += s1;
			var _g2 = 0;
			var _g3 = c.height - 2;
			while(_g2 < _g3) {
				var y = _g2++;
				var x4 = -9 * cin.b[pi - s1] + 111 * cin.b[pi] + 29 * cin.b[pi + s1] + -3 * cin.b[pi + s2] + 64 >> 7;
				cout.b[po] = x4 < 0 ? 0 : x4 > 255 ? 255 : x4;
				po += w;
				var x5 = -3 * cin.b[pi - s1] + 29 * cin.b[pi] + 111 * cin.b[pi + s1] + -9 * cin.b[pi + s2] + 64 >> 7;
				cout.b[po] = x5 < 0 ? 0 : x5 > 255 ? 255 : x5;
				po += w;
				pi += s1;
			}
			pi += s1;
			var x6 = 28 * cin.b[pi] + 109 * cin.b[pi - s1] + -9 * cin.b[pi - s2] + 64 >> 7;
			cout.b[po] = x6 < 0 ? 0 : x6 > 255 ? 255 : x6;
			po += w;
			var x7 = 104 * cin.b[pi] + 27 * cin.b[pi - s1] + -3 * cin.b[pi - s2] + 64 >> 7;
			cout.b[po] = x7 < 0 ? 0 : x7 > 255 ? 255 : x7;
			po += w;
			var x8 = 139 * cin.b[pi] + -11 * cin.b[pi - s1] + 64 >> 7;
			cout.b[po] = x8 < 0 ? 0 : x8 > 255 ? 255 : x8;
		}
		c.height <<= 1;
		c.stride = c.width;
		c.pixels = out;
	}
	,njUpsample: function(c) {
		var xshift = 0;
		var yshift = 0;
		while(c.width < this.width) {
			c.width <<= 1;
			++xshift;
		}
		while(c.height < this.height) {
			c.height <<= 1;
			++yshift;
		}
		var out = new haxe_io_Bytes(new ArrayBuffer(c.width * c.height));
		var this1 = c.pixels;
		var lin = this1;
		var pout = 0;
		var this1 = out;
		var lout = this1;
		var _g = 0;
		var _g1 = c.height;
		while(_g < _g1) {
			var y = _g++;
			var pin = (y >> yshift) * c.stride;
			var _g2 = 0;
			var _g3 = c.width;
			while(_g2 < _g3) {
				var x = _g2++;
				lout.b[pout++] = lin.b[(x >> xshift) + pin];
			}
		}
		c.stride = c.width;
		c.pixels = out;
	}
	,njConvert: function() {
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			switch(this.filter._hx_index) {
			case 0:
				if(c.width < this.width || c.height < this.height) {
					this.njUpsample(c);
				}
				break;
			case 1:
				while(c.width < this.width || c.height < this.height) {
					if(c.width < this.width) {
						this.njUpsampleH(c);
					}
					if(c.height < this.height) {
						this.njUpsampleV(c);
					}
				}
				break;
			}
			if(c.width < this.width || c.height < this.height) {
				throw haxe_Exception.thrown("assert");
			}
		}
		var pixels = new haxe_io_Bytes(new ArrayBuffer(this.width * this.height * 4));
		if(this.ncomp == 3) {
			var this1 = this.comps[0].pixels;
			var py = this1;
			var this1 = this.comps[1].pixels;
			var pcb = this1;
			var this1 = this.comps[2].pixels;
			var pcr = this1;
			var this1 = pixels;
			var pix = this1;
			var k1 = 0;
			var k2 = 0;
			var k3 = 0;
			var out = 0;
			var _g = 0;
			var _g1 = this.height;
			while(_g < _g1) {
				var yy = _g++;
				var _g2 = 0;
				var _g3 = this.width;
				while(_g2 < _g3) {
					var x = _g2++;
					var y = py.b[k1++] << 8;
					var cb = pcb.b[k2++] - 128;
					var cr = pcr.b[k3++] - 128;
					var x1 = y + 359 * cr + 128 >> 8;
					var r = x1 < 0 ? 0 : x1 > 255 ? 255 : x1;
					var x2 = y - 88 * cb - 183 * cr + 128 >> 8;
					var g = x2 < 0 ? 0 : x2 > 255 ? 255 : x2;
					var x3 = y + 454 * cb + 128 >> 8;
					var b = x3 < 0 ? 0 : x3 > 255 ? 255 : x3;
					pix.b[out++] = b;
					pix.b[out++] = g;
					pix.b[out++] = r;
					pix.b[out++] = 255;
				}
				k1 += this.comps[0].stride - this.width;
				k2 += this.comps[1].stride - this.width;
				k3 += this.comps[2].stride - this.width;
			}
		} else {
			throw haxe_Exception.thrown("TODO");
		}
		return pixels;
	}
	,njDecode: function() {
		if(this.size < 2 || this.bytes.b[this.pos] != 255 || this.bytes.b[this.pos + 1] != 216) {
			throw haxe_Exception.thrown("This file is not a JPEG");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		_hx_loop1: while(true) {
			this.pos += 2;
			this.size -= 2;
			this.length -= 2;
			switch(this.bytes.b[this.pos + (-1)]) {
			case 192:
				this.njDecodeSOF();
				break;
			case 194:
				this.progressive = true;
				if(this.progressive) {
					throw haxe_Exception.thrown("Unsupported progressive JPG");
				}
				if(this.vlctab[4] == null) {
					this.vlctab[4] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				if(this.vlctab[5] == null) {
					this.vlctab[5] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				if(this.vlctab[6] == null) {
					this.vlctab[6] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				if(this.vlctab[7] == null) {
					this.vlctab[7] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				this.njDecodeSOF();
				break;
			case 195:
				throw haxe_Exception.thrown("Unsupported lossless JPG");
			case 196:
				this.njDecodeDHT();
				break;
			case 218:
				this.njDecodeScan();
				break _hx_loop1;
			case 219:
				this.njDecodeDQT();
				break;
			case 221:
				this.njDecodeDRI();
				break;
			case 254:
				this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
				this.pos += 2;
				this.size -= 2;
				this.length -= 2;
				var count = this.length;
				this.pos += count;
				this.size -= count;
				this.length -= count;
				break;
			default:
				switch(this.bytes.b[this.pos + (-1)] & 240) {
				case 192:
					throw haxe_Exception.thrown("Unsupported jpeg type " + (this.bytes.b[this.pos + (-1)] & 15));
				case 224:
					this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
					this.pos += 2;
					this.size -= 2;
					this.length -= 2;
					var count1 = this.length;
					this.pos += count1;
					this.size -= count1;
					this.length -= count1;
					break;
				default:
					throw haxe_Exception.thrown("Unsupported jpeg tag 0x" + StringTools.hex(this.bytes.b[this.pos + (-1)],2));
				}
			}
		}
		var pixels = this.njConvert();
		this.cleanup();
		return { pixels : pixels, width : this.width, height : this.height};
	}
	,__class__: hxd_res_NanoJpeg
};
var hxsl_Type = $hxEnums["hxsl.Type"] = { __ename__ : true, __constructs__ : ["TVoid","TInt","TBool","TFloat","TString","TVec","TMat3","TMat4","TMat3x4","TBytes","TSampler2D","TSampler2DArray","TSamplerCube","TStruct","TFun","TArray","TBuffer","TChannel","TMat2"]
	,TVoid: {_hx_index:0,__enum__:"hxsl.Type",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"hxsl.Type",toString:$estr}
	,TBool: {_hx_index:2,__enum__:"hxsl.Type",toString:$estr}
	,TFloat: {_hx_index:3,__enum__:"hxsl.Type",toString:$estr}
	,TString: {_hx_index:4,__enum__:"hxsl.Type",toString:$estr}
	,TVec: ($_=function(size,t) { return {_hx_index:5,size:size,t:t,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["size","t"],$_)
	,TMat3: {_hx_index:6,__enum__:"hxsl.Type",toString:$estr}
	,TMat4: {_hx_index:7,__enum__:"hxsl.Type",toString:$estr}
	,TMat3x4: {_hx_index:8,__enum__:"hxsl.Type",toString:$estr}
	,TBytes: ($_=function(size) { return {_hx_index:9,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["size"],$_)
	,TSampler2D: {_hx_index:10,__enum__:"hxsl.Type",toString:$estr}
	,TSampler2DArray: {_hx_index:11,__enum__:"hxsl.Type",toString:$estr}
	,TSamplerCube: {_hx_index:12,__enum__:"hxsl.Type",toString:$estr}
	,TStruct: ($_=function(vl) { return {_hx_index:13,vl:vl,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["vl"],$_)
	,TFun: ($_=function(variants) { return {_hx_index:14,variants:variants,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["variants"],$_)
	,TArray: ($_=function(t,size) { return {_hx_index:15,t:t,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["t","size"],$_)
	,TBuffer: ($_=function(t,size) { return {_hx_index:16,t:t,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["t","size"],$_)
	,TChannel: ($_=function(size) { return {_hx_index:17,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_.__params__ = ["size"],$_)
	,TMat2: {_hx_index:18,__enum__:"hxsl.Type",toString:$estr}
};
hxsl_Type.__empty_constructs__ = [hxsl_Type.TVoid,hxsl_Type.TInt,hxsl_Type.TBool,hxsl_Type.TFloat,hxsl_Type.TString,hxsl_Type.TMat3,hxsl_Type.TMat4,hxsl_Type.TMat3x4,hxsl_Type.TSampler2D,hxsl_Type.TSampler2DArray,hxsl_Type.TSamplerCube,hxsl_Type.TMat2];
var hxsl_VecType = $hxEnums["hxsl.VecType"] = { __ename__ : true, __constructs__ : ["VInt","VFloat","VBool"]
	,VInt: {_hx_index:0,__enum__:"hxsl.VecType",toString:$estr}
	,VFloat: {_hx_index:1,__enum__:"hxsl.VecType",toString:$estr}
	,VBool: {_hx_index:2,__enum__:"hxsl.VecType",toString:$estr}
};
hxsl_VecType.__empty_constructs__ = [hxsl_VecType.VInt,hxsl_VecType.VFloat,hxsl_VecType.VBool];
var hxsl_SizeDecl = $hxEnums["hxsl.SizeDecl"] = { __ename__ : true, __constructs__ : ["SConst","SVar"]
	,SConst: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hxsl.SizeDecl",toString:$estr}; },$_.__params__ = ["v"],$_)
	,SVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hxsl.SizeDecl",toString:$estr}; },$_.__params__ = ["v"],$_)
};
hxsl_SizeDecl.__empty_constructs__ = [];
var hxsl_Error = function(msg,pos) {
	this.msg = msg;
	this.pos = pos;
};
$hxClasses["hxsl.Error"] = hxsl_Error;
hxsl_Error.__name__ = "hxsl.Error";
hxsl_Error.t = function(msg,pos) {
	throw haxe_Exception.thrown(new hxsl_Error(msg,pos));
};
hxsl_Error.prototype = {
	toString: function() {
		return "Error(" + this.msg + ")@" + Std.string(this.pos);
	}
	,__class__: hxsl_Error
};
var hxsl_VarKind = $hxEnums["hxsl.VarKind"] = { __ename__ : true, __constructs__ : ["Global","Input","Param","Var","Local","Output","Function"]
	,Global: {_hx_index:0,__enum__:"hxsl.VarKind",toString:$estr}
	,Input: {_hx_index:1,__enum__:"hxsl.VarKind",toString:$estr}
	,Param: {_hx_index:2,__enum__:"hxsl.VarKind",toString:$estr}
	,Var: {_hx_index:3,__enum__:"hxsl.VarKind",toString:$estr}
	,Local: {_hx_index:4,__enum__:"hxsl.VarKind",toString:$estr}
	,Output: {_hx_index:5,__enum__:"hxsl.VarKind",toString:$estr}
	,Function: {_hx_index:6,__enum__:"hxsl.VarKind",toString:$estr}
};
hxsl_VarKind.__empty_constructs__ = [hxsl_VarKind.Global,hxsl_VarKind.Input,hxsl_VarKind.Param,hxsl_VarKind.Var,hxsl_VarKind.Local,hxsl_VarKind.Output,hxsl_VarKind.Function];
var hxsl_VarQualifier = $hxEnums["hxsl.VarQualifier"] = { __ename__ : true, __constructs__ : ["Const","Private","Nullable","PerObject","Name","Shared","Precision","Range","Ignore","PerInstance"]
	,Const: ($_=function(max) { return {_hx_index:0,max:max,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_.__params__ = ["max"],$_)
	,Private: {_hx_index:1,__enum__:"hxsl.VarQualifier",toString:$estr}
	,Nullable: {_hx_index:2,__enum__:"hxsl.VarQualifier",toString:$estr}
	,PerObject: {_hx_index:3,__enum__:"hxsl.VarQualifier",toString:$estr}
	,Name: ($_=function(n) { return {_hx_index:4,n:n,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_.__params__ = ["n"],$_)
	,Shared: {_hx_index:5,__enum__:"hxsl.VarQualifier",toString:$estr}
	,Precision: ($_=function(p) { return {_hx_index:6,p:p,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_.__params__ = ["p"],$_)
	,Range: ($_=function(min,max) { return {_hx_index:7,min:min,max:max,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_.__params__ = ["min","max"],$_)
	,Ignore: {_hx_index:8,__enum__:"hxsl.VarQualifier",toString:$estr}
	,PerInstance: ($_=function(v) { return {_hx_index:9,v:v,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_.__params__ = ["v"],$_)
};
hxsl_VarQualifier.__empty_constructs__ = [hxsl_VarQualifier.Private,hxsl_VarQualifier.Nullable,hxsl_VarQualifier.PerObject,hxsl_VarQualifier.Shared,hxsl_VarQualifier.Ignore];
var hxsl_Prec = $hxEnums["hxsl.Prec"] = { __ename__ : true, __constructs__ : ["Low","Medium","High"]
	,Low: {_hx_index:0,__enum__:"hxsl.Prec",toString:$estr}
	,Medium: {_hx_index:1,__enum__:"hxsl.Prec",toString:$estr}
	,High: {_hx_index:2,__enum__:"hxsl.Prec",toString:$estr}
};
hxsl_Prec.__empty_constructs__ = [hxsl_Prec.Low,hxsl_Prec.Medium,hxsl_Prec.High];
var hxsl_Const = $hxEnums["hxsl.Const"] = { __ename__ : true, __constructs__ : ["CNull","CBool","CInt","CFloat","CString"]
	,CNull: {_hx_index:0,__enum__:"hxsl.Const",toString:$estr}
	,CBool: ($_=function(b) { return {_hx_index:1,b:b,__enum__:"hxsl.Const",toString:$estr}; },$_.__params__ = ["b"],$_)
	,CInt: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hxsl.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"hxsl.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CString: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"hxsl.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
};
hxsl_Const.__empty_constructs__ = [hxsl_Const.CNull];
var hxsl_FunctionKind = $hxEnums["hxsl.FunctionKind"] = { __ename__ : true, __constructs__ : ["Vertex","Fragment","Init","Helper"]
	,Vertex: {_hx_index:0,__enum__:"hxsl.FunctionKind",toString:$estr}
	,Fragment: {_hx_index:1,__enum__:"hxsl.FunctionKind",toString:$estr}
	,Init: {_hx_index:2,__enum__:"hxsl.FunctionKind",toString:$estr}
	,Helper: {_hx_index:3,__enum__:"hxsl.FunctionKind",toString:$estr}
};
hxsl_FunctionKind.__empty_constructs__ = [hxsl_FunctionKind.Vertex,hxsl_FunctionKind.Fragment,hxsl_FunctionKind.Init,hxsl_FunctionKind.Helper];
var hxsl_TGlobal = $hxEnums["hxsl.TGlobal"] = { __ename__ : true, __constructs__ : ["Radians","Degrees","Sin","Cos","Tan","Asin","Acos","Atan","Pow","Exp","Log","Exp2","Log2","Sqrt","Inversesqrt","Abs","Sign","Floor","Ceil","Fract","Mod","Min","Max","Clamp","Mix","Step","Smoothstep","Length","Distance","Dot","Cross","Normalize","LReflect","Texture","TextureLod","Texel","TexelLod","ToInt","ToFloat","ToBool","Vec2","Vec3","Vec4","IVec2","IVec3","IVec4","BVec2","BVec3","BVec4","Mat2","Mat3","Mat4","Mat3x4","Saturate","Pack","Unpack","PackNormal","UnpackNormal","ScreenToUv","UvToScreen","DFdx","DFdy","Fwidth","ChannelRead","ChannelReadLod","ChannelFetch","ChannelFetchLod","Trace","VertexID","InstanceID","FragCoord"]
	,Radians: {_hx_index:0,__enum__:"hxsl.TGlobal",toString:$estr}
	,Degrees: {_hx_index:1,__enum__:"hxsl.TGlobal",toString:$estr}
	,Sin: {_hx_index:2,__enum__:"hxsl.TGlobal",toString:$estr}
	,Cos: {_hx_index:3,__enum__:"hxsl.TGlobal",toString:$estr}
	,Tan: {_hx_index:4,__enum__:"hxsl.TGlobal",toString:$estr}
	,Asin: {_hx_index:5,__enum__:"hxsl.TGlobal",toString:$estr}
	,Acos: {_hx_index:6,__enum__:"hxsl.TGlobal",toString:$estr}
	,Atan: {_hx_index:7,__enum__:"hxsl.TGlobal",toString:$estr}
	,Pow: {_hx_index:8,__enum__:"hxsl.TGlobal",toString:$estr}
	,Exp: {_hx_index:9,__enum__:"hxsl.TGlobal",toString:$estr}
	,Log: {_hx_index:10,__enum__:"hxsl.TGlobal",toString:$estr}
	,Exp2: {_hx_index:11,__enum__:"hxsl.TGlobal",toString:$estr}
	,Log2: {_hx_index:12,__enum__:"hxsl.TGlobal",toString:$estr}
	,Sqrt: {_hx_index:13,__enum__:"hxsl.TGlobal",toString:$estr}
	,Inversesqrt: {_hx_index:14,__enum__:"hxsl.TGlobal",toString:$estr}
	,Abs: {_hx_index:15,__enum__:"hxsl.TGlobal",toString:$estr}
	,Sign: {_hx_index:16,__enum__:"hxsl.TGlobal",toString:$estr}
	,Floor: {_hx_index:17,__enum__:"hxsl.TGlobal",toString:$estr}
	,Ceil: {_hx_index:18,__enum__:"hxsl.TGlobal",toString:$estr}
	,Fract: {_hx_index:19,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mod: {_hx_index:20,__enum__:"hxsl.TGlobal",toString:$estr}
	,Min: {_hx_index:21,__enum__:"hxsl.TGlobal",toString:$estr}
	,Max: {_hx_index:22,__enum__:"hxsl.TGlobal",toString:$estr}
	,Clamp: {_hx_index:23,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mix: {_hx_index:24,__enum__:"hxsl.TGlobal",toString:$estr}
	,Step: {_hx_index:25,__enum__:"hxsl.TGlobal",toString:$estr}
	,Smoothstep: {_hx_index:26,__enum__:"hxsl.TGlobal",toString:$estr}
	,Length: {_hx_index:27,__enum__:"hxsl.TGlobal",toString:$estr}
	,Distance: {_hx_index:28,__enum__:"hxsl.TGlobal",toString:$estr}
	,Dot: {_hx_index:29,__enum__:"hxsl.TGlobal",toString:$estr}
	,Cross: {_hx_index:30,__enum__:"hxsl.TGlobal",toString:$estr}
	,Normalize: {_hx_index:31,__enum__:"hxsl.TGlobal",toString:$estr}
	,LReflect: {_hx_index:32,__enum__:"hxsl.TGlobal",toString:$estr}
	,Texture: {_hx_index:33,__enum__:"hxsl.TGlobal",toString:$estr}
	,TextureLod: {_hx_index:34,__enum__:"hxsl.TGlobal",toString:$estr}
	,Texel: {_hx_index:35,__enum__:"hxsl.TGlobal",toString:$estr}
	,TexelLod: {_hx_index:36,__enum__:"hxsl.TGlobal",toString:$estr}
	,ToInt: {_hx_index:37,__enum__:"hxsl.TGlobal",toString:$estr}
	,ToFloat: {_hx_index:38,__enum__:"hxsl.TGlobal",toString:$estr}
	,ToBool: {_hx_index:39,__enum__:"hxsl.TGlobal",toString:$estr}
	,Vec2: {_hx_index:40,__enum__:"hxsl.TGlobal",toString:$estr}
	,Vec3: {_hx_index:41,__enum__:"hxsl.TGlobal",toString:$estr}
	,Vec4: {_hx_index:42,__enum__:"hxsl.TGlobal",toString:$estr}
	,IVec2: {_hx_index:43,__enum__:"hxsl.TGlobal",toString:$estr}
	,IVec3: {_hx_index:44,__enum__:"hxsl.TGlobal",toString:$estr}
	,IVec4: {_hx_index:45,__enum__:"hxsl.TGlobal",toString:$estr}
	,BVec2: {_hx_index:46,__enum__:"hxsl.TGlobal",toString:$estr}
	,BVec3: {_hx_index:47,__enum__:"hxsl.TGlobal",toString:$estr}
	,BVec4: {_hx_index:48,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat2: {_hx_index:49,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat3: {_hx_index:50,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat4: {_hx_index:51,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat3x4: {_hx_index:52,__enum__:"hxsl.TGlobal",toString:$estr}
	,Saturate: {_hx_index:53,__enum__:"hxsl.TGlobal",toString:$estr}
	,Pack: {_hx_index:54,__enum__:"hxsl.TGlobal",toString:$estr}
	,Unpack: {_hx_index:55,__enum__:"hxsl.TGlobal",toString:$estr}
	,PackNormal: {_hx_index:56,__enum__:"hxsl.TGlobal",toString:$estr}
	,UnpackNormal: {_hx_index:57,__enum__:"hxsl.TGlobal",toString:$estr}
	,ScreenToUv: {_hx_index:58,__enum__:"hxsl.TGlobal",toString:$estr}
	,UvToScreen: {_hx_index:59,__enum__:"hxsl.TGlobal",toString:$estr}
	,DFdx: {_hx_index:60,__enum__:"hxsl.TGlobal",toString:$estr}
	,DFdy: {_hx_index:61,__enum__:"hxsl.TGlobal",toString:$estr}
	,Fwidth: {_hx_index:62,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelRead: {_hx_index:63,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelReadLod: {_hx_index:64,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelFetch: {_hx_index:65,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelFetchLod: {_hx_index:66,__enum__:"hxsl.TGlobal",toString:$estr}
	,Trace: {_hx_index:67,__enum__:"hxsl.TGlobal",toString:$estr}
	,VertexID: {_hx_index:68,__enum__:"hxsl.TGlobal",toString:$estr}
	,InstanceID: {_hx_index:69,__enum__:"hxsl.TGlobal",toString:$estr}
	,FragCoord: {_hx_index:70,__enum__:"hxsl.TGlobal",toString:$estr}
};
hxsl_TGlobal.__empty_constructs__ = [hxsl_TGlobal.Radians,hxsl_TGlobal.Degrees,hxsl_TGlobal.Sin,hxsl_TGlobal.Cos,hxsl_TGlobal.Tan,hxsl_TGlobal.Asin,hxsl_TGlobal.Acos,hxsl_TGlobal.Atan,hxsl_TGlobal.Pow,hxsl_TGlobal.Exp,hxsl_TGlobal.Log,hxsl_TGlobal.Exp2,hxsl_TGlobal.Log2,hxsl_TGlobal.Sqrt,hxsl_TGlobal.Inversesqrt,hxsl_TGlobal.Abs,hxsl_TGlobal.Sign,hxsl_TGlobal.Floor,hxsl_TGlobal.Ceil,hxsl_TGlobal.Fract,hxsl_TGlobal.Mod,hxsl_TGlobal.Min,hxsl_TGlobal.Max,hxsl_TGlobal.Clamp,hxsl_TGlobal.Mix,hxsl_TGlobal.Step,hxsl_TGlobal.Smoothstep,hxsl_TGlobal.Length,hxsl_TGlobal.Distance,hxsl_TGlobal.Dot,hxsl_TGlobal.Cross,hxsl_TGlobal.Normalize,hxsl_TGlobal.LReflect,hxsl_TGlobal.Texture,hxsl_TGlobal.TextureLod,hxsl_TGlobal.Texel,hxsl_TGlobal.TexelLod,hxsl_TGlobal.ToInt,hxsl_TGlobal.ToFloat,hxsl_TGlobal.ToBool,hxsl_TGlobal.Vec2,hxsl_TGlobal.Vec3,hxsl_TGlobal.Vec4,hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4,hxsl_TGlobal.BVec2,hxsl_TGlobal.BVec3,hxsl_TGlobal.BVec4,hxsl_TGlobal.Mat2,hxsl_TGlobal.Mat3,hxsl_TGlobal.Mat4,hxsl_TGlobal.Mat3x4,hxsl_TGlobal.Saturate,hxsl_TGlobal.Pack,hxsl_TGlobal.Unpack,hxsl_TGlobal.PackNormal,hxsl_TGlobal.UnpackNormal,hxsl_TGlobal.ScreenToUv,hxsl_TGlobal.UvToScreen,hxsl_TGlobal.DFdx,hxsl_TGlobal.DFdy,hxsl_TGlobal.Fwidth,hxsl_TGlobal.ChannelRead,hxsl_TGlobal.ChannelReadLod,hxsl_TGlobal.ChannelFetch,hxsl_TGlobal.ChannelFetchLod,hxsl_TGlobal.Trace,hxsl_TGlobal.VertexID,hxsl_TGlobal.InstanceID,hxsl_TGlobal.FragCoord];
var hxsl_Component = $hxEnums["hxsl.Component"] = { __ename__ : true, __constructs__ : ["X","Y","Z","W"]
	,X: {_hx_index:0,__enum__:"hxsl.Component",toString:$estr}
	,Y: {_hx_index:1,__enum__:"hxsl.Component",toString:$estr}
	,Z: {_hx_index:2,__enum__:"hxsl.Component",toString:$estr}
	,W: {_hx_index:3,__enum__:"hxsl.Component",toString:$estr}
};
hxsl_Component.__empty_constructs__ = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
var hxsl_TExprDef = $hxEnums["hxsl.TExprDef"] = { __ename__ : true, __constructs__ : ["TConst","TVar","TGlobal","TParenthesis","TBlock","TBinop","TUnop","TVarDecl","TCall","TSwiz","TIf","TDiscard","TReturn","TFor","TContinue","TBreak","TArray","TArrayDecl","TSwitch","TWhile","TMeta"]
	,TConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["v"],$_)
	,TGlobal: ($_=function(g) { return {_hx_index:2,g:g,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["g"],$_)
	,TParenthesis: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TBlock: ($_=function(el) { return {_hx_index:4,el:el,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["el"],$_)
	,TBinop: ($_=function(op,e1,e2) { return {_hx_index:5,op:op,e1:e1,e2:e2,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,TUnop: ($_=function(op,e1) { return {_hx_index:6,op:op,e1:e1,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["op","e1"],$_)
	,TVarDecl: ($_=function(v,init) { return {_hx_index:7,v:v,init:init,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["v","init"],$_)
	,TCall: ($_=function(e,args) { return {_hx_index:8,e:e,args:args,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e","args"],$_)
	,TSwiz: ($_=function(e,regs) { return {_hx_index:9,e:e,regs:regs,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e","regs"],$_)
	,TIf: ($_=function(econd,eif,eelse) { return {_hx_index:10,econd:econd,eif:eif,eelse:eelse,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["econd","eif","eelse"],$_)
	,TDiscard: {_hx_index:11,__enum__:"hxsl.TExprDef",toString:$estr}
	,TReturn: ($_=function(e) { return {_hx_index:12,e:e,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TFor: ($_=function(v,it,loop) { return {_hx_index:13,v:v,it:it,loop:loop,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["v","it","loop"],$_)
	,TContinue: {_hx_index:14,__enum__:"hxsl.TExprDef",toString:$estr}
	,TBreak: {_hx_index:15,__enum__:"hxsl.TExprDef",toString:$estr}
	,TArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,TArrayDecl: ($_=function(el) { return {_hx_index:17,el:el,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["el"],$_)
	,TSwitch: ($_=function(e,cases,def) { return {_hx_index:18,e:e,cases:cases,def:def,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e","cases","def"],$_)
	,TWhile: ($_=function(e,loop,normalWhile) { return {_hx_index:19,e:e,loop:loop,normalWhile:normalWhile,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["e","loop","normalWhile"],$_)
	,TMeta: ($_=function(m,args,e) { return {_hx_index:20,m:m,args:args,e:e,__enum__:"hxsl.TExprDef",toString:$estr}; },$_.__params__ = ["m","args","e"],$_)
};
hxsl_TExprDef.__empty_constructs__ = [hxsl_TExprDef.TDiscard,hxsl_TExprDef.TContinue,hxsl_TExprDef.TBreak];
var hxsl_Tools = function() { };
$hxClasses["hxsl.Tools"] = hxsl_Tools;
hxsl_Tools.__name__ = "hxsl.Tools";
hxsl_Tools.allocVarId = function() {
	return ++hxsl_Tools.UID;
};
hxsl_Tools.getName = function(v) {
	if(v.qualifiers == null) {
		return v.name;
	}
	var _g = 0;
	var _g1 = v.qualifiers;
	while(_g < _g1.length) {
		var q = _g1[_g];
		++_g;
		if(q._hx_index == 4) {
			var n = q.n;
			return n;
		}
	}
	return v.name;
};
hxsl_Tools.getConstBits = function(v) {
	var _g = v.type;
	switch(_g._hx_index) {
	case 1:
		var _g1 = 0;
		var _g2 = v.qualifiers;
		while(_g1 < _g2.length) {
			var q = _g2[_g1];
			++_g1;
			if(q._hx_index == 0) {
				var n = q.max;
				if(n != null) {
					var bits = 0;
					while(n >= 1 << bits) ++bits;
					return bits;
				}
				return 8;
			}
		}
		break;
	case 2:
		return 1;
	case 17:
		var _g1 = _g.size;
		return 3 + hxsl_Tools.MAX_CHANNELS_BITS;
	default:
	}
	return 0;
};
hxsl_Tools.isConst = function(v) {
	var _g = v.type;
	var tmp;
	if(_g._hx_index == 17) {
		var _g1 = _g.size;
		tmp = true;
	} else {
		tmp = false;
	}
	if(tmp) {
		return true;
	}
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q = _g1[_g];
			++_g;
			if(q._hx_index == 0) {
				var _g2 = q.max;
				return true;
			}
		}
	}
	return false;
};
hxsl_Tools.hasQualifier = function(v,q) {
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q2 = _g1[_g];
			++_g;
			if(q2 == q) {
				return true;
			}
		}
	}
	return false;
};
hxsl_Tools.isSampler = function(t) {
	switch(t._hx_index) {
	case 10:case 11:case 12:
		return true;
	case 17:
		var _g = t.size;
		return true;
	default:
		return false;
	}
};
hxsl_Tools.toString = function(t) {
	switch(t._hx_index) {
	case 5:
		var t1 = t.t;
		var size = t.size;
		var prefix;
		switch(t1._hx_index) {
		case 0:
			prefix = "I";
			break;
		case 1:
			prefix = "";
			break;
		case 2:
			prefix = "B";
			break;
		}
		return prefix + "Vec" + size;
	case 9:
		var n = t.size;
		return "Bytes" + n;
	case 13:
		var vl = t.vl;
		var _g = [];
		var _g1 = 0;
		while(_g1 < vl.length) {
			var v = vl[_g1];
			++_g1;
			_g.push(v.name + " : " + hxsl_Tools.toString(v.type));
		}
		return "{" + _g.join(",") + "}";
	case 15:
		var s = t.size;
		var t1 = t.t;
		var tmp = hxsl_Tools.toString(t1) + "[";
		var tmp1;
		switch(s._hx_index) {
		case 0:
			var i = s.v;
			tmp1 = "" + i;
			break;
		case 1:
			var v = s.v;
			tmp1 = v.name;
			break;
		}
		return tmp + tmp1 + "]";
	case 16:
		var s = t.size;
		var t1 = t.t;
		var tmp = "buffer " + hxsl_Tools.toString(t1) + "[";
		var tmp1;
		switch(s._hx_index) {
		case 0:
			var i = s.v;
			tmp1 = "" + i;
			break;
		case 1:
			var v = s.v;
			tmp1 = v.name;
			break;
		}
		return tmp + tmp1 + "]";
	default:
		return HxOverrides.substr($hxEnums[t.__enum__].__constructs__[t._hx_index],1,null);
	}
};
hxsl_Tools.hasSideEffect = function(e) {
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		return false;
	case 1:
		var _g1 = _g.v;
		return false;
	case 2:
		var _g1 = _g.g;
		return false;
	case 3:
		var e = _g.e;
		return hxsl_Tools.hasSideEffect(e);
	case 4:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			if(hxsl_Tools.hasSideEffect(e)) {
				return true;
			}
		}
		return false;
	case 5:
		var _g1 = _g.e2;
		var _g2 = _g.e1;
		var _g3 = _g.op;
		switch(_g3._hx_index) {
		case 4:
			return true;
		case 20:
			var _g4 = _g3.op;
			return true;
		default:
			var e2 = _g1;
			var e1 = _g2;
			if(!hxsl_Tools.hasSideEffect(e1)) {
				return hxsl_Tools.hasSideEffect(e2);
			} else {
				return true;
			}
		}
		break;
	case 6:
		var _g1 = _g.op;
		var e1 = _g.e1;
		return hxsl_Tools.hasSideEffect(e1);
	case 7:
		var _g1 = _g.init;
		var _g1 = _g.v;
		return true;
	case 8:
		var pl = _g.args;
		var e = _g.e;
		var _g1 = e.e;
		var tmp;
		if(_g1._hx_index == 2) {
			var _g2 = _g1.g;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			return true;
		}
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			if(hxsl_Tools.hasSideEffect(p)) {
				return true;
			}
		}
		return false;
	case 9:
		var _g1 = _g.regs;
		var e = _g.e;
		return hxsl_Tools.hasSideEffect(e);
	case 10:
		var eelse = _g.eelse;
		var eif = _g.eif;
		var econd = _g.econd;
		if(!(hxsl_Tools.hasSideEffect(econd) || hxsl_Tools.hasSideEffect(eif))) {
			if(eelse != null) {
				return hxsl_Tools.hasSideEffect(eelse);
			} else {
				return false;
			}
		} else {
			return true;
		}
		break;
	case 12:
		var _g1 = _g.e;
		return true;
	case 13:
		var _g1 = _g.v;
		var loop = _g.loop;
		var it = _g.it;
		if(!hxsl_Tools.hasSideEffect(it)) {
			return hxsl_Tools.hasSideEffect(loop);
		} else {
			return true;
		}
		break;
	case 11:case 14:case 15:
		return true;
	case 16:
		var index = _g.index;
		var e = _g.e;
		if(!hxsl_Tools.hasSideEffect(e)) {
			return hxsl_Tools.hasSideEffect(index);
		} else {
			return true;
		}
		break;
	case 17:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			if(hxsl_Tools.hasSideEffect(e)) {
				return true;
			}
		}
		return false;
	case 18:
		var def = _g.def;
		var cases = _g.cases;
		var e = _g.e;
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = c.values;
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				if(hxsl_Tools.hasSideEffect(v)) {
					return true;
				}
			}
			if(hxsl_Tools.hasSideEffect(c.expr)) {
				return true;
			}
		}
		if(!hxsl_Tools.hasSideEffect(e)) {
			if(def != null) {
				return hxsl_Tools.hasSideEffect(def);
			} else {
				return false;
			}
		} else {
			return true;
		}
		break;
	case 19:
		var _g1 = _g.normalWhile;
		var loop = _g.loop;
		var e = _g.e;
		if(!hxsl_Tools.hasSideEffect(e)) {
			return hxsl_Tools.hasSideEffect(loop);
		} else {
			return true;
		}
		break;
	case 20:
		var _g1 = _g.args;
		var _g1 = _g.m;
		var e = _g.e;
		return hxsl_Tools.hasSideEffect(e);
	}
};
hxsl_Tools.iter = function(e,f) {
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		break;
	case 1:
		var _g1 = _g.v;
		break;
	case 2:
		var _g1 = _g.g;
		break;
	case 3:
		var e = _g.e;
		f(e);
		break;
	case 4:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 5:
		var _g1 = _g.op;
		var e2 = _g.e2;
		var e1 = _g.e1;
		f(e1);
		f(e2);
		break;
	case 6:
		var _g1 = _g.op;
		var e1 = _g.e1;
		f(e1);
		break;
	case 7:
		var _g1 = _g.v;
		var init = _g.init;
		if(init != null) {
			f(init);
		}
		break;
	case 8:
		var args = _g.args;
		var e = _g.e;
		f(e);
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			f(a);
		}
		break;
	case 9:
		var _g1 = _g.regs;
		var e = _g.e;
		f(e);
		break;
	case 10:
		var eelse = _g.eelse;
		var eif = _g.eif;
		var econd = _g.econd;
		f(econd);
		f(eif);
		if(eelse != null) {
			f(eelse);
		}
		break;
	case 12:
		var e = _g.e;
		if(e != null) {
			f(e);
		}
		break;
	case 13:
		var _g1 = _g.v;
		var loop = _g.loop;
		var it = _g.it;
		f(it);
		f(loop);
		break;
	case 11:case 14:case 15:
		break;
	case 16:
		var index = _g.index;
		var e = _g.e;
		f(e);
		f(index);
		break;
	case 17:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 18:
		var def = _g.def;
		var cases = _g.cases;
		var e = _g.e;
		f(e);
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = c.values;
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				f(v);
			}
			f(c.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 19:
		var _g1 = _g.normalWhile;
		var loop = _g.loop;
		var e = _g.e;
		f(e);
		f(loop);
		break;
	case 20:
		var _g1 = _g.args;
		var _g1 = _g.m;
		var e = _g.e;
		f(e);
		break;
	}
};
hxsl_Tools.map = function(e,f) {
	var ed;
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		ed = e.e;
		break;
	case 1:
		var _g1 = _g.v;
		ed = e.e;
		break;
	case 2:
		var _g1 = _g.g;
		ed = e.e;
		break;
	case 3:
		var e1 = _g.e;
		ed = hxsl_TExprDef.TParenthesis(f(e1));
		break;
	case 4:
		var el = _g.el;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		ed = hxsl_TExprDef.TBlock(_g1);
		break;
	case 5:
		var e2 = _g.e2;
		var e1 = _g.e1;
		var op = _g.op;
		ed = hxsl_TExprDef.TBinop(op,f(e1),f(e2));
		break;
	case 6:
		var e1 = _g.e1;
		var op = _g.op;
		ed = hxsl_TExprDef.TUnop(op,f(e1));
		break;
	case 7:
		var init = _g.init;
		var v = _g.v;
		ed = hxsl_TExprDef.TVarDecl(v,init != null ? f(init) : null);
		break;
	case 8:
		var args = _g.args;
		var e1 = _g.e;
		var ed1 = f(e1);
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < args.length) {
			var a = args[_g2];
			++_g2;
			_g1.push(f(a));
		}
		ed = hxsl_TExprDef.TCall(ed1,_g1);
		break;
	case 9:
		var c = _g.regs;
		var e1 = _g.e;
		ed = hxsl_TExprDef.TSwiz(f(e1),c);
		break;
	case 10:
		var eelse = _g.eelse;
		var eif = _g.eif;
		var econd = _g.econd;
		ed = hxsl_TExprDef.TIf(f(econd),f(eif),eelse != null ? f(eelse) : null);
		break;
	case 12:
		var e1 = _g.e;
		ed = hxsl_TExprDef.TReturn(e1 != null ? f(e1) : null);
		break;
	case 13:
		var loop = _g.loop;
		var it = _g.it;
		var v = _g.v;
		ed = hxsl_TExprDef.TFor(v,f(it),f(loop));
		break;
	case 11:case 14:case 15:
		ed = e.e;
		break;
	case 16:
		var index = _g.index;
		var e1 = _g.e;
		ed = hxsl_TExprDef.TArray(f(e1),f(index));
		break;
	case 17:
		var el = _g.el;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		ed = hxsl_TExprDef.TArrayDecl(_g1);
		break;
	case 18:
		var def = _g.def;
		var cases = _g.cases;
		var e1 = _g.e;
		var ed1 = f(e1);
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < cases.length) {
			var c = cases[_g2];
			++_g2;
			var _g3 = [];
			var _g4 = 0;
			var _g5 = c.values;
			while(_g4 < _g5.length) {
				var v = _g5[_g4];
				++_g4;
				_g3.push(f(v));
			}
			_g1.push({ values : _g3, expr : f(c.expr)});
		}
		ed = hxsl_TExprDef.TSwitch(ed1,_g1,def == null ? null : f(def));
		break;
	case 19:
		var normalWhile = _g.normalWhile;
		var loop = _g.loop;
		var e1 = _g.e;
		ed = hxsl_TExprDef.TWhile(f(e1),f(loop),normalWhile);
		break;
	case 20:
		var e1 = _g.e;
		var args = _g.args;
		var m = _g.m;
		ed = hxsl_TExprDef.TMeta(m,args,f(e1));
		break;
	}
	return { e : ed, t : e.t, p : e.p};
};
hxsl_Tools.size = function(t) {
	switch(t._hx_index) {
	case 0:
		return 0;
	case 1:case 3:
		return 1;
	case 2:case 4:case 10:case 11:case 12:
		return 0;
	case 5:
		var _g = t.t;
		var n = t.size;
		return n;
	case 6:
		return 9;
	case 7:
		return 16;
	case 8:
		return 12;
	case 9:
		var s = t.size;
		return s;
	case 13:
		var vl = t.vl;
		var s = 0;
		var _g = 0;
		while(_g < vl.length) {
			var v = vl[_g];
			++_g;
			s += hxsl_Tools.size(v.type);
		}
		return s;
	case 14:
		var _g = t.variants;
		return 0;
	case 15:
		var _g = t.size;
		var _g1 = t.t;
		switch(_g._hx_index) {
		case 0:
			var t1 = _g1;
			var v = _g.v;
			return hxsl_Tools.size(t1) * v;
		case 1:
			var _g1 = _g.v;
			return 0;
		}
		break;
	case 16:
		var _g = t.size;
		if(_g._hx_index == 0) {
			var t1 = t.t;
			var v = _g.v;
			return hxsl_Tools.size(t1) * v;
		} else {
			return 0;
		}
		break;
	case 17:
		var n = t.size;
		return n;
	case 18:
		return 4;
	}
};
var hxsl_Tools2 = function() { };
$hxClasses["hxsl.Tools2"] = hxsl_Tools2;
hxsl_Tools2.__name__ = "hxsl.Tools2";
hxsl_Tools2.toString = function(g) {
	var n = $hxEnums[g.__enum__].__constructs__[g._hx_index];
	return n.charAt(0).toLowerCase() + HxOverrides.substr(n,1,null);
};
var hxsl_BatchShader = function() {
	this.Batch_Count__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["hxsl.BatchShader"] = hxsl_BatchShader;
hxsl_BatchShader.__name__ = "hxsl.BatchShader";
hxsl_BatchShader.__super__ = hxsl_Shader;
hxsl_BatchShader.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.Batch_Count__;
		if(v >>> 17 != 0) {
			throw haxe_Exception.thrown("Batch_Count" + " is out of range " + v + ">" + 131071);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.Batch_Count__;
		case 1:
			return this.Batch_Buffer__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: hxsl_BatchShader
});
var hxsl_SearchMap = function() {
};
$hxClasses["hxsl.SearchMap"] = hxsl_SearchMap;
hxsl_SearchMap.__name__ = "hxsl.SearchMap";
hxsl_SearchMap.prototype = {
	__class__: hxsl_SearchMap
};
var hxsl_Cache = function() {
	this.constsToGlobal = false;
	this.linkCache = new hxsl_SearchMap();
	this.linkShaders = new haxe_ds_StringMap();
	this.batchShaders = new haxe_ds_IntMap();
	this.byID = new haxe_ds_StringMap();
};
$hxClasses["hxsl.Cache"] = hxsl_Cache;
hxsl_Cache.__name__ = "hxsl.Cache";
hxsl_Cache.get = function() {
	var c = hxsl_Cache.INST;
	if(c == null) {
		c = new hxsl_Cache();
		hxsl_Cache.INST = c;
	}
	return c;
};
hxsl_Cache.prototype = {
	getLinkShader: function(vars) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < vars.length) {
			var v = vars[_g1];
			++_g1;
			_g.push(Std.string(v));
		}
		var key = _g.join(",");
		var shader = this.linkShaders.h[key];
		if(shader != null) {
			return shader;
		}
		var s = new hxsl_SharedShader("");
		var id = HxOverrides.substr(haxe_crypto_Md5.encode(key),0,8);
		s.data = { name : "shaderLinker_" + id, vars : [], funs : []};
		var pos = null;
		var outVars_h = Object.create(null);
		var outputCount = 0;
		var tvec4 = hxsl_Type.TVec(4,hxsl_VecType.VFloat);
		var makeVec = function(g,size,args,makeOutExpr) {
			var out = [];
			var rem = size;
			var _g = 0;
			var _g1 = args.length;
			while(_g < _g1) {
				var i = _g++;
				var e = makeOutExpr(args[args.length - 1 - i],rem - (args.length - 1 - i));
				rem -= hxsl_Tools.size(e.t);
				out.unshift(e);
			}
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(g), t : hxsl_Type.TVoid, p : pos},out), t : hxsl_Type.TVec(size,hxsl_VecType.VFloat), p : pos};
		};
		var makeVar = function(name,t,parent) {
			var path = parent == null ? name : hxsl_Tools.getName(parent) + "." + name;
			var v = outVars_h[path];
			if(v != null) {
				return v;
			}
			v = { id : hxsl_Tools.allocVarId(), name : name, type : t, kind : hxsl_VarKind.Var, parent : parent};
			if(parent == null) {
				s.data.vars.push(v);
			} else {
				var _g = parent.type;
				if(_g._hx_index == 13) {
					var vl = _g.vl;
					vl.push(v);
				} else {
					throw haxe_Exception.thrown("assert");
				}
			}
			outVars_h[path] = v;
			return v;
		};
		var makeOutExpr = null;
		makeOutExpr = function(v,rem) {
			switch(v._hx_index) {
			case 0:
				var v1 = v.v;
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CFloat(v1)), t : hxsl_Type.TFloat, p : pos};
			case 1:
				var size = v.size;
				var vname = v.v;
				var v1 = outVars_h[vname];
				if(v1 != null) {
					return { e : hxsl_TExprDef.TVar(v1), t : v1.type, p : pos};
				}
				var path = vname.split(".");
				var parent = null;
				while(path.length > 1) parent = makeVar(path.shift(),hxsl_Type.TStruct([]),parent);
				if(size != null) {
					rem = size;
				}
				v1 = makeVar(path.shift(),rem == 1 ? hxsl_Type.TFloat : hxsl_Type.TVec(rem,hxsl_VecType.VFloat),parent);
				return { e : hxsl_TExprDef.TVar(v1), t : v1.type, p : pos};
			case 2:
				var v1 = v.v;
				return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.PackNormal), t : hxsl_Type.TVoid, p : pos},[makeOutExpr(v1,3)]), t : tvec4, p : pos};
			case 3:
				var v1 = v.v;
				return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Pack), t : hxsl_Type.TVoid, p : pos},[makeOutExpr(v1,1)]), t : tvec4, p : pos};
			case 4:
				var args = v.a;
				return makeVec(hxsl_TGlobal.Vec2,2,args,makeOutExpr);
			case 5:
				var args = v.a;
				return makeVec(hxsl_TGlobal.Vec3,3,args,makeOutExpr);
			case 6:
				var args = v.a;
				return makeVec(hxsl_TGlobal.Vec4,4,args,makeOutExpr);
			case 7:
				var comps = v.swiz;
				var v1 = v.a;
				return { e : hxsl_TExprDef.TSwiz(makeOutExpr(v1,4),comps), t : hxsl_Type.TVec(comps.length,hxsl_VecType.VFloat), p : pos};
			}
		};
		var makeOutput = function(v) {
			outputCount += 1;
			var ov = { id : hxsl_Tools.allocVarId(), type : tvec4, name : "OUTPUT" + (outputCount - 1), kind : hxsl_VarKind.Output};
			s.data.vars.push(ov);
			return { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(ov), t : tvec4, p : pos},makeOutExpr(v,4)), t : hxsl_Type.TVoid, p : pos};
		};
		var defineFun = function(kind,vars) {
			var fv = { id : hxsl_Tools.allocVarId(), type : hxsl_Type.TFun([]), name : ("" + Std.string(kind)).toLowerCase(), kind : hxsl_VarKind.Function};
			var _g = [];
			var _g1 = 0;
			while(_g1 < vars.length) {
				var v = vars[_g1];
				++_g1;
				_g.push(makeOutput(v));
			}
			var f = { kind : kind, ref : fv, args : [], ret : hxsl_Type.TVoid, expr : { e : hxsl_TExprDef.TBlock(_g), p : pos, t : hxsl_Type.TVoid}};
			s.data.funs.push(f);
		};
		defineFun(hxsl_FunctionKind.Vertex,[hxsl_Output.Value("output.position")]);
		defineFun(hxsl_FunctionKind.Fragment,vars);
		shader = Object.create(hxsl_Shader.prototype);
		shader.shader = s;
		this.linkShaders.h[key] = shader;
		shader.updateConstantsFinal(null);
		return shader;
	}
	,link: function(shaders,batchMode) {
		var c = this.linkCache;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			var i = s1.instance;
			if(c.next == null) {
				c.next = new haxe_ds_IntMap();
			}
			var cs = c.next.h[i.id];
			if(cs == null) {
				cs = new hxsl_SearchMap();
				c.next.h[i.id] = cs;
			}
			c = cs;
		}
		if(c.linked == null) {
			c.linked = this.compileRuntimeShader(shaders,batchMode);
		}
		return c.linked;
	}
	,compileRuntimeShader: function(shaders,batchMode) {
		var shaderDatas = [];
		var index = 0;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			var i = s1.instance;
			shaderDatas.push({ inst : i, p : s1.priority, index : index++});
		}
		shaderDatas.reverse();
		haxe_ds_ArraySort.sort(shaderDatas,function(s1,s2) {
			return s2.p - s1.p;
		});
		var linker = new hxsl_Linker(batchMode);
		var s;
		try {
			var _g = [];
			var _g1 = 0;
			while(_g1 < shaderDatas.length) {
				var s1 = shaderDatas[_g1];
				++_g1;
				_g.push(s1.inst.shader);
			}
			s = linker.link(_g);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof hxsl_Error)) {
				var e = _g1;
				var _g1 = [];
				var _g2 = 0;
				while(_g2 < shaderDatas.length) {
					var s1 = shaderDatas[_g2];
					++_g2;
					_g1.push(hxsl_Printer.shaderToString(s1.inst.shader));
				}
				var shaders1 = _g1;
				e.msg += "\n\nin\n\n" + shaders1.join("\n-----\n");
				throw haxe_Exception.thrown(e);
			} else {
				throw _g;
			}
		}
		if(batchMode) {
			var checkRec = null;
			checkRec = function(v) {
				if(v.qualifiers != null && v.qualifiers.indexOf(hxsl_VarQualifier.PerObject) >= 0) {
					if(v.qualifiers.length == 1) {
						v.qualifiers = null;
					} else {
						v.qualifiers = v.qualifiers.slice();
						HxOverrides.remove(v.qualifiers,hxsl_VarQualifier.PerObject);
					}
					if(v.kind != hxsl_VarKind.Var) {
						v.kind = hxsl_VarKind.Local;
					}
				}
				var _g = v.type;
				if(_g._hx_index == 13) {
					var vl = _g.vl;
					var _g = 0;
					while(_g < vl.length) {
						var v = vl[_g];
						++_g;
						checkRec(v);
					}
				}
			};
			var _g = 0;
			var _g1 = s.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				checkRec(v);
			}
		}
		var paramVars = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = linker.allVars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			if(v.v.kind == hxsl_VarKind.Param) {
				var _g2 = v.v.type;
				if(_g2._hx_index == 13) {
					var _g3 = _g2.vl;
					continue;
				}
				var inf = shaderDatas[v.instanceIndex];
				paramVars.h[v.id] = { instance : inf.index, index : inf.inst.params.h[v.merged[0].id]};
			}
		}
		var prev = s;
		var s1;
		try {
			s1 = new hxsl_Splitter().split(s);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof hxsl_Error)) {
				var e = _g1;
				e.msg += "\n\nin\n\n" + hxsl_Printer.shaderToString(s);
				throw haxe_Exception.thrown(e);
			} else {
				throw _g;
			}
		}
		var prev = s1;
		var s = new hxsl_Dce().dce(s1.vertex,s1.fragment);
		var r = this.buildRuntimeShader(s.vertex,s.fragment,paramVars);
		var _g = [];
		var _g4_l = shaders;
		var _g4_last = null;
		while(_g4_l != _g4_last) {
			var s = _g4_l.s;
			_g4_l = _g4_l.next;
			var s1 = s;
			_g.push(new hxsl_ShaderInstanceDesc(s1.shader,s1.constBits));
		}
		r.spec = { instances : _g, signature : null};
		var _g = 0;
		var _g1 = shaderDatas.length;
		while(_g < _g1) {
			var i = _g++;
			var s = shaderDatas[shaderDatas.length - 1 - i];
			r.spec.instances[s.index].index = i;
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = r.spec.instances;
		while(_g1 < _g2.length) {
			var i = _g2[_g1];
			++_g1;
			_g.push(i.shader.data.name + "_" + i.bits + "_" + i.index);
		}
		var signParts = _g;
		var tmp = signParts.join(":");
		r.spec.signature = haxe_crypto_Md5.encode(tmp);
		r.signature = haxe_crypto_Md5.encode(hxsl_Printer.shaderToString(r.vertex.data) + hxsl_Printer.shaderToString(r.fragment.data));
		r.batchMode = batchMode;
		var r2 = this.byID.h[r.signature];
		if(r2 != null) {
			r.id = r2.id;
		} else {
			this.byID.h[r.signature] = r;
		}
		return r;
	}
	,buildRuntimeShader: function(vertex,fragment,paramVars) {
		var r = new hxsl_RuntimeShader();
		r.vertex = this.flattenShader(vertex,hxsl_FunctionKind.Vertex,paramVars);
		r.vertex.vertex = true;
		r.fragment = this.flattenShader(fragment,hxsl_FunctionKind.Fragment,paramVars);
		r.globals = new haxe_ds_IntMap();
		this.initGlobals(r,r.vertex);
		this.initGlobals(r,r.fragment);
		return r;
	}
	,initGlobals: function(r,s) {
		var p = s.globals;
		while(p != null) {
			r.globals.h[p.gid] = true;
			p = p.next;
		}
		var p = s.params;
		while(p != null) {
			if(p.perObjectGlobal != null) {
				r.globals.h[p.perObjectGlobal.gid] = true;
			}
			p = p.next;
		}
	}
	,getPath: function(v) {
		if(v.parent == null) {
			return v.name;
		}
		return this.getPath(v.parent) + "." + v.name;
	}
	,flattenShader: function(s,kind,params) {
		var flat = new hxsl_Flatten();
		var c = new hxsl_RuntimeShaderData();
		var data = flat.flatten(s,kind,this.constsToGlobal);
		var textures = [];
		c.consts = flat.consts;
		c.texturesCount = 0;
		var g = flat.allocData.keys();
		while(g.hasNext()) {
			var g1 = g.next();
			var alloc = flat.allocData.h[g1.__id__];
			switch(g1.kind._hx_index) {
			case 0:
				var _g = [];
				var _g1 = 0;
				while(_g1 < alloc.length) {
					var a = alloc[_g1];
					++_g1;
					if(a.v != null) {
						_g.push(new hxsl_AllocGlobal(a.pos,this.getPath(a.v),a.v.type));
					}
				}
				var out = _g;
				var _g2 = 0;
				var _g3 = out.length - 1;
				while(_g2 < _g3) {
					var i = _g2++;
					out[i].next = out[i + 1];
				}
				var _g4 = g1.type;
				if(_g4._hx_index == 15) {
					var _g5 = _g4.size;
					var _g6 = _g4.t;
					if(_g6._hx_index == 5) {
						if(_g6.size == 4) {
							if(_g6.t._hx_index == 1) {
								if(_g5._hx_index == 0) {
									var size = _g5.v;
									c.globals = out[0];
									c.globalsSize = size;
								} else {
									throw haxe_Exception.thrown("assert");
								}
							} else {
								throw haxe_Exception.thrown("assert");
							}
						} else {
							throw haxe_Exception.thrown("assert");
						}
					} else {
						throw haxe_Exception.thrown("assert");
					}
				} else {
					throw haxe_Exception.thrown("assert");
				}
				break;
			case 2:
				var out1 = [];
				var count = 0;
				var _g7 = 0;
				while(_g7 < alloc.length) {
					var a1 = alloc[_g7];
					++_g7;
					if(a1.v == null) {
						continue;
					}
					var p = params.h[a1.v.id];
					if(p == null) {
						var ap = new hxsl_AllocParam(a1.v.name,a1.pos,-1,-1,a1.v.type);
						ap.perObjectGlobal = new hxsl_AllocGlobal(-1,this.getPath(a1.v),a1.v.type);
						out1.push(ap);
						++count;
						continue;
					}
					var ap1 = new hxsl_AllocParam(a1.v.name,a1.pos,p.instance,p.index,a1.v.type);
					var _g8 = a1.v.type;
					if(_g8._hx_index == 15) {
						var _g9 = _g8.size;
						var t = _g8.t;
						if(hxsl_Tools.isSampler(t)) {
							ap1.pos = -a1.size;
							count += a1.size;
						} else {
							++count;
						}
					} else {
						++count;
					}
					out1.push(ap1);
				}
				var _g10 = 0;
				var _g11 = out1.length - 1;
				while(_g10 < _g11) {
					var i1 = _g10++;
					out1[i1].next = out1[i1 + 1];
				}
				var _g12 = g1.type;
				if(_g12._hx_index == 15) {
					var _g13 = _g12.size;
					var _g14 = _g12.t;
					var t1 = _g14;
					if(hxsl_Tools.isSampler(t1)) {
						textures.push({ t : t1, all : out1});
						c.texturesCount += count;
					} else {
						switch(_g14._hx_index) {
						case 5:
							if(_g14.size == 4) {
								if(_g14.t._hx_index == 1) {
									if(_g13._hx_index == 0) {
										var size1 = _g13.v;
										c.params = out1[0];
										c.paramsSize = size1;
									} else {
										throw haxe_Exception.thrown("assert");
									}
								} else {
									throw haxe_Exception.thrown("assert");
								}
							} else {
								throw haxe_Exception.thrown("assert");
							}
							break;
						case 16:
							var _g15 = _g14.size;
							var _g16 = _g14.t;
							c.buffers = out1[0];
							c.bufferCount = out1.length;
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
					}
				} else {
					throw haxe_Exception.thrown("assert");
				}
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
		}
		if(textures.length > 0) {
			textures.sort(function(t1,t2) {
				return t1.t._hx_index - t2.t._hx_index;
			});
			c.textures = textures[0].all[0];
			var _g = 1;
			var _g1 = textures.length;
			while(_g < _g1) {
				var i = _g++;
				var prevAll = textures[i - 1].all;
				var prev = prevAll[prevAll.length - 1];
				prev.next = textures[i].all[0];
			}
		}
		if(c.globals == null) {
			c.globalsSize = 0;
		}
		if(c.params == null) {
			c.paramsSize = 0;
		}
		if(c.buffers == null) {
			c.bufferCount = 0;
		}
		c.data = data;
		return c;
	}
	,__class__: hxsl_Cache
};
var hxsl_Channel = $hxEnums["hxsl.Channel"] = { __ename__ : true, __constructs__ : ["Unknown","R","G","B","A","PackedFloat","PackedNormal"]
	,Unknown: {_hx_index:0,__enum__:"hxsl.Channel",toString:$estr}
	,R: {_hx_index:1,__enum__:"hxsl.Channel",toString:$estr}
	,G: {_hx_index:2,__enum__:"hxsl.Channel",toString:$estr}
	,B: {_hx_index:3,__enum__:"hxsl.Channel",toString:$estr}
	,A: {_hx_index:4,__enum__:"hxsl.Channel",toString:$estr}
	,PackedFloat: {_hx_index:5,__enum__:"hxsl.Channel",toString:$estr}
	,PackedNormal: {_hx_index:6,__enum__:"hxsl.Channel",toString:$estr}
};
hxsl_Channel.__empty_constructs__ = [hxsl_Channel.Unknown,hxsl_Channel.R,hxsl_Channel.G,hxsl_Channel.B,hxsl_Channel.A,hxsl_Channel.PackedFloat,hxsl_Channel.PackedNormal];
var hxsl_Clone = function() {
	this.varMap = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Clone"] = hxsl_Clone;
hxsl_Clone.__name__ = "hxsl.Clone";
hxsl_Clone.shaderData = function(s) {
	return new hxsl_Clone().shader(s);
};
hxsl_Clone.prototype = {
	tvar: function(v) {
		var v2 = this.varMap.h[v.id];
		if(v2 != null) {
			return v2;
		}
		v2 = { id : hxsl_Tools.allocVarId(), type : v.type, name : v.name, kind : v.kind};
		this.varMap.h[v.id] = v2;
		if(v.parent != null) {
			v2.parent = this.tvar(v.parent);
		}
		if(v.qualifiers != null) {
			v2.qualifiers = v.qualifiers.slice();
		}
		v2.type = this.ttype(v.type);
		return v2;
	}
	,tfun: function(f) {
		var tmp = this.ttype(f.ret);
		var f1 = f.kind;
		var tmp1 = this.tvar(f.ref);
		var _g = [];
		var _g1 = 0;
		var _g2 = f.args;
		while(_g1 < _g2.length) {
			var a = _g2[_g1];
			++_g1;
			_g.push(this.tvar(a));
		}
		return { ret : tmp, kind : f1, ref : tmp1, args : _g, expr : this.texpr(f.expr)};
	}
	,ttype: function(t) {
		switch(t._hx_index) {
		case 13:
			var vl = t.vl;
			var _g = [];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v = vl[_g1];
				++_g1;
				_g.push(this.tvar(v));
			}
			return hxsl_Type.TStruct(_g);
		case 14:
			var vars = t.variants;
			return hxsl_Type.TFun(vars);
		case 15:
			var size = t.size;
			var t1 = t.t;
			var tmp = this.ttype(t1);
			var tmp1;
			switch(size._hx_index) {
			case 0:
				var _g = size.v;
				tmp1 = size;
				break;
			case 1:
				var v = size.v;
				tmp1 = hxsl_SizeDecl.SVar(this.tvar(v));
				break;
			}
			return hxsl_Type.TArray(tmp,tmp1);
		default:
			return t;
		}
	}
	,texpr: function(e) {
		var e2 = hxsl_Tools.map(e,$bind(this,this.texpr));
		e2.t = this.ttype(e.t);
		var _g = e2.e;
		var tmp;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			tmp = hxsl_TExprDef.TVar(this.tvar(v));
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			tmp = hxsl_TExprDef.TVarDecl(this.tvar(v),init);
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			tmp = hxsl_TExprDef.TFor(this.tvar(v),it,loop);
			break;
		default:
			tmp = e2.e;
		}
		e2.e = tmp;
		return e2;
	}
	,shader: function(s) {
		var s1 = s.name;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.vars;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			_g.push(this.tvar(v));
		}
		var tmp = _g;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.funs;
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(this.tfun(f));
		}
		return { name : s1, vars : tmp, funs : _g};
	}
	,__class__: hxsl_Clone
};
var hxsl__$Dce_VarDeps = function(v) {
	this.v = v;
	this.used = false;
	this.deps = new haxe_ds_IntMap();
};
$hxClasses["hxsl._Dce.VarDeps"] = hxsl__$Dce_VarDeps;
hxsl__$Dce_VarDeps.__name__ = "hxsl._Dce.VarDeps";
hxsl__$Dce_VarDeps.prototype = {
	__class__: hxsl__$Dce_VarDeps
};
var hxsl_Dce = function() {
};
$hxClasses["hxsl.Dce"] = hxsl_Dce;
hxsl_Dce.__name__ = "hxsl.Dce";
hxsl_Dce.prototype = {
	dce: function(vertex,fragment) {
		this.used = new haxe_ds_IntMap();
		this.channelVars = [];
		var inputs = [];
		var _g = 0;
		var _g1 = vertex.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var i = this.get(v);
			if(v.kind == hxsl_VarKind.Input) {
				inputs.push(i);
			}
			if(v.kind == hxsl_VarKind.Output) {
				i.keep = true;
			}
		}
		var _g = 0;
		var _g1 = fragment.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var i = this.get(v);
			if(v.kind == hxsl_VarKind.Output) {
				i.keep = true;
			}
		}
		var _g = 0;
		var _g1 = vertex.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.check(f.expr,[],[]);
		}
		var _g = 0;
		var _g1 = fragment.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.check(f.expr,[],[]);
		}
		var outExprs = [];
		while(true) {
			var v = this.used.iterator();
			while(v.hasNext()) {
				var v1 = v.next();
				if(v1.keep) {
					this.markRec(v1);
				}
			}
			while(inputs.length > 1 && !inputs[inputs.length - 1].used) inputs.pop();
			var _g = 0;
			while(_g < inputs.length) {
				var v2 = inputs[_g];
				++_g;
				this.markRec(v2);
			}
			outExprs = [];
			var _g1 = 0;
			var _g2 = vertex.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				outExprs.push(this.mapExpr(f.expr,false));
			}
			var _g3 = 0;
			var _g4 = fragment.funs;
			while(_g3 < _g4.length) {
				var f1 = _g4[_g3];
				++_g3;
				outExprs.push(this.mapExpr(f1.expr,false));
			}
			this.markAsKeep = false;
			var _g5 = 0;
			while(_g5 < outExprs.length) {
				var e = outExprs[_g5];
				++_g5;
				this.checkBranches(e);
			}
			if(!this.markAsKeep) {
				break;
			}
		}
		var _g = 0;
		var _g1 = vertex.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f.expr = outExprs.shift();
		}
		var _g = 0;
		var _g1 = fragment.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f.expr = outExprs.shift();
		}
		var v = this.used.iterator();
		while(v.hasNext()) {
			var v1 = v.next();
			if(v1.used) {
				continue;
			}
			if(v1.v.kind == hxsl_VarKind.Input) {
				continue;
			}
			HxOverrides.remove(vertex.vars,v1.v);
			HxOverrides.remove(fragment.vars,v1.v);
		}
		return { fragment : fragment, vertex : vertex};
	}
	,get: function(v) {
		var vd = this.used.h[v.id];
		if(vd == null) {
			vd = new hxsl__$Dce_VarDeps(v);
			this.used.h[v.id] = vd;
		}
		return vd;
	}
	,markRec: function(v) {
		if(v.used) {
			return;
		}
		v.used = true;
		var d = v.deps.iterator();
		while(d.hasNext()) {
			var d1 = d.next();
			this.markRec(d1);
		}
	}
	,link: function(v,writeTo) {
		var vd = this.get(v);
		var _g = 0;
		while(_g < writeTo.length) {
			var w = writeTo[_g];
			++_g;
			if(w == null) {
				if(!vd.keep) {
					vd.keep = true;
					this.markAsKeep = true;
				}
				continue;
			}
			w.deps.h[v.id] = vd;
		}
	}
	,check: function(e,writeTo,isAffected) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			this.link(v,writeTo);
			break;
		case 4:
			var el = _g.el;
			var noWrite = [];
			var _g1 = 0;
			var _g2 = el.length;
			while(_g1 < _g2) {
				var i = _g1++;
				this.check(el[i],i < el.length - 1 ? noWrite : writeTo,isAffected);
			}
			break;
		case 5:
			var _g1 = _g.e2;
			var _g2 = _g.e1;
			var _g3 = _g.op;
			switch(_g3._hx_index) {
			case 4:
				var _g4 = _g2.t;
				var _g4 = _g2.p;
				var _g4 = _g2.e;
				switch(_g4._hx_index) {
				case 1:
					var e1 = _g1;
					var v = _g4.v;
					var v1 = this.get(v);
					writeTo.push(v1);
					this.check(e1,writeTo,isAffected);
					writeTo.pop();
					if(isAffected.indexOf(v1) < 0) {
						isAffected.push(v1);
					}
					break;
				case 9:
					var _g5 = _g4.regs;
					var _g5 = _g4.e;
					var _g4 = _g5.t;
					var _g4 = _g5.p;
					var _g4 = _g5.e;
					if(_g4._hx_index == 1) {
						var e1 = _g1;
						var v = _g4.v;
						var v1 = this.get(v);
						writeTo.push(v1);
						this.check(e1,writeTo,isAffected);
						writeTo.pop();
						if(isAffected.indexOf(v1) < 0) {
							isAffected.push(v1);
						}
					} else {
						var _g4 = $bind(this,this.check);
						var writeTo1 = writeTo;
						var isAffected1 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g4(e,writeTo1,isAffected1);
						});
					}
					break;
				default:
					var _g5 = $bind(this,this.check);
					var writeTo2 = writeTo;
					var isAffected2 = isAffected;
					hxsl_Tools.iter(e,function(e) {
						_g5(e,writeTo2,isAffected2);
					});
				}
				break;
			case 20:
				var _g6 = _g3.op;
				var _g3 = _g2.t;
				var _g3 = _g2.p;
				var _g3 = _g2.e;
				switch(_g3._hx_index) {
				case 1:
					var e1 = _g1;
					var v = _g3.v;
					var v1 = this.get(v);
					writeTo.push(v1);
					this.check(e1,writeTo,isAffected);
					writeTo.pop();
					if(isAffected.indexOf(v1) < 0) {
						isAffected.push(v1);
					}
					break;
				case 9:
					var _g2 = _g3.regs;
					var _g2 = _g3.e;
					var _g3 = _g2.t;
					var _g3 = _g2.p;
					var _g3 = _g2.e;
					if(_g3._hx_index == 1) {
						var e1 = _g1;
						var v = _g3.v;
						var v1 = this.get(v);
						writeTo.push(v1);
						this.check(e1,writeTo,isAffected);
						writeTo.pop();
						if(isAffected.indexOf(v1) < 0) {
							isAffected.push(v1);
						}
					} else {
						var _g1 = $bind(this,this.check);
						var writeTo3 = writeTo;
						var isAffected3 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g1(e,writeTo3,isAffected3);
						});
					}
					break;
				default:
					var _g2 = $bind(this,this.check);
					var writeTo4 = writeTo;
					var isAffected4 = isAffected;
					hxsl_Tools.iter(e,function(e) {
						_g2(e,writeTo4,isAffected4);
					});
				}
				break;
			default:
				var _g3 = $bind(this,this.check);
				var writeTo5 = writeTo;
				var isAffected5 = isAffected;
				hxsl_Tools.iter(e,function(e) {
					_g3(e,writeTo5,isAffected5);
				});
			}
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			if(init != null) {
				writeTo.push(this.get(v));
				this.check(init,writeTo,isAffected);
				writeTo.pop();
			} else {
				var _g6 = $bind(this,this.check);
				var writeTo6 = writeTo;
				var isAffected6 = isAffected;
				hxsl_Tools.iter(e,function(e) {
					_g6(e,writeTo6,isAffected6);
				});
			}
			break;
		case 8:
			var _g7 = _g.args;
			var _g8 = _g.e;
			var _g9 = _g8.t;
			var _g9 = _g8.p;
			var _g9 = _g8.e;
			if(_g9._hx_index == 2) {
				switch(_g9.g._hx_index) {
				case 63:
					if(_g7.length == 3) {
						var _g8 = _g7[2];
						var _g9 = _g7[0];
						var _g10 = _g9.t;
						var _g10 = _g9.p;
						var _g10 = _g9.e;
						if(_g10._hx_index == 1) {
							var _g9 = _g8.t;
							var _g9 = _g8.p;
							var _g9 = _g8.e;
							if(_g9._hx_index == 0) {
								var _g8 = _g9.c;
								if(_g8._hx_index == 2) {
									var c = _g10.v;
									var uv = _g7[1];
									var cid = _g8.v;
									this.check(uv,writeTo,isAffected);
									if(this.channelVars[cid] == null) {
										this.channelVars[cid] = c;
										this.link(c,writeTo);
									} else {
										this.link(this.channelVars[cid],writeTo);
									}
								} else {
									var _g8 = $bind(this,this.check);
									var writeTo7 = writeTo;
									var isAffected7 = isAffected;
									hxsl_Tools.iter(e,function(e) {
										_g8(e,writeTo7,isAffected7);
									});
								}
							} else {
								var _g9 = $bind(this,this.check);
								var writeTo8 = writeTo;
								var isAffected8 = isAffected;
								hxsl_Tools.iter(e,function(e) {
									_g9(e,writeTo8,isAffected8);
								});
							}
						} else {
							var _g10 = $bind(this,this.check);
							var writeTo9 = writeTo;
							var isAffected9 = isAffected;
							hxsl_Tools.iter(e,function(e) {
								_g10(e,writeTo9,isAffected9);
							});
						}
					} else {
						var _g11 = $bind(this,this.check);
						var writeTo10 = writeTo;
						var isAffected10 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g11(e,writeTo10,isAffected10);
						});
					}
					break;
				case 64:
					if(_g7.length == 4) {
						var _g12 = _g7[3];
						var _g13 = _g7[0];
						var _g14 = _g13.t;
						var _g14 = _g13.p;
						var _g14 = _g13.e;
						if(_g14._hx_index == 1) {
							var _g13 = _g12.t;
							var _g13 = _g12.p;
							var _g13 = _g12.e;
							if(_g13._hx_index == 0) {
								var _g12 = _g13.c;
								if(_g12._hx_index == 2) {
									var c = _g14.v;
									var uv = _g7[1];
									var lod = _g7[2];
									var cid = _g12.v;
									this.check(uv,writeTo,isAffected);
									this.check(lod,writeTo,isAffected);
									if(this.channelVars[cid] == null) {
										this.channelVars[cid] = c;
										this.link(c,writeTo);
									} else {
										this.link(this.channelVars[cid],writeTo);
									}
								} else {
									var _g7 = $bind(this,this.check);
									var writeTo11 = writeTo;
									var isAffected11 = isAffected;
									hxsl_Tools.iter(e,function(e) {
										_g7(e,writeTo11,isAffected11);
									});
								}
							} else {
								var _g12 = $bind(this,this.check);
								var writeTo12 = writeTo;
								var isAffected12 = isAffected;
								hxsl_Tools.iter(e,function(e) {
									_g12(e,writeTo12,isAffected12);
								});
							}
						} else {
							var _g13 = $bind(this,this.check);
							var writeTo13 = writeTo;
							var isAffected13 = isAffected;
							hxsl_Tools.iter(e,function(e) {
								_g13(e,writeTo13,isAffected13);
							});
						}
					} else {
						var _g14 = $bind(this,this.check);
						var writeTo14 = writeTo;
						var isAffected14 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g14(e,writeTo14,isAffected14);
						});
					}
					break;
				default:
					var _g15 = $bind(this,this.check);
					var writeTo15 = writeTo;
					var isAffected15 = isAffected;
					hxsl_Tools.iter(e,function(e) {
						_g15(e,writeTo15,isAffected15);
					});
				}
			} else {
				var _g16 = $bind(this,this.check);
				var writeTo16 = writeTo;
				var isAffected16 = isAffected;
				hxsl_Tools.iter(e,function(e) {
					_g16(e,writeTo16,isAffected16);
				});
			}
			break;
		case 10:
			var eelse = _g.eelse;
			var eif = _g.eif;
			var e1 = _g.econd;
			var affect = [];
			this.check(eif,writeTo,affect);
			if(eelse != null) {
				this.check(eelse,writeTo,affect);
			}
			var len = affect.length;
			var _g17 = 0;
			while(_g17 < writeTo.length) {
				var v = writeTo[_g17];
				++_g17;
				if(affect.indexOf(v) < 0) {
					affect.push(v);
				}
			}
			this.check(e1,affect,isAffected);
			var _g17 = 0;
			var _g18 = len;
			while(_g17 < _g18) {
				var i = _g17++;
				var v = affect[i];
				if(isAffected.indexOf(v) < 0) {
					isAffected.push(v);
				}
			}
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			var affect = [];
			this.check(loop,writeTo,affect);
			this.check(it,affect,isAffected);
			var _g = 0;
			while(_g < affect.length) {
				var v = affect[_g];
				++_g;
				if(isAffected.indexOf(v) < 0) {
					isAffected.push(v);
				}
			}
			break;
		default:
			var _g = $bind(this,this.check);
			var writeTo17 = writeTo;
			var isAffected17 = isAffected;
			hxsl_Tools.iter(e,function(e) {
				_g(e,writeTo17,isAffected17);
			});
		}
	}
	,checkBranches: function(e) {
		var _g = e.e;
		if(_g._hx_index == 10) {
			var _g1 = _g.eelse;
			var _g1 = _g.eif;
			var cond = _g.econd;
			var writeTo = [null];
			this.check(cond,writeTo,[]);
		}
		hxsl_Tools.iter(e,$bind(this,this.checkBranches));
	}
	,mapExpr: function(e,isVar) {
		var _gthis = this;
		var _g = e.e;
		switch(_g._hx_index) {
		case 4:
			var el = _g.el;
			var out = [];
			var count = 0;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				var isVar1 = isVar && count == el.length - 1;
				var e2 = this.mapExpr(e1,isVar1);
				if(hxsl_Tools.hasSideEffect(e2) || isVar1) {
					out.push(e2);
				}
				++count;
			}
			return { e : hxsl_TExprDef.TBlock(out), p : e.p, t : e.t};
		case 5:
			var _g1 = _g.e2;
			var _g1 = _g.e1;
			var _g2 = _g.op;
			switch(_g2._hx_index) {
			case 4:
				var _g3 = _g1.t;
				var _g3 = _g1.p;
				var _g3 = _g1.e;
				switch(_g3._hx_index) {
				case 1:
					var v = _g3.v;
					if(!this.get(v).used) {
						return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 9:
					var _g4 = _g3.regs;
					var _g4 = _g3.e;
					var _g3 = _g4.t;
					var _g3 = _g4.p;
					var _g3 = _g4.e;
					if(_g3._hx_index == 1) {
						var v = _g3.v;
						if(!this.get(v).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				default:
					return hxsl_Tools.map(e,function(e) {
						return _gthis.mapExpr(e,true);
					});
				}
				break;
			case 20:
				var _g3 = _g2.op;
				var _g2 = _g1.t;
				var _g2 = _g1.p;
				var _g2 = _g1.e;
				switch(_g2._hx_index) {
				case 1:
					var v = _g2.v;
					if(!this.get(v).used) {
						return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 9:
					var _g1 = _g2.regs;
					var _g1 = _g2.e;
					var _g2 = _g1.t;
					var _g2 = _g1.p;
					var _g2 = _g1.e;
					if(_g2._hx_index == 1) {
						var v = _g2.v;
						if(!this.get(v).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				default:
					return hxsl_Tools.map(e,function(e) {
						return _gthis.mapExpr(e,true);
					});
				}
				break;
			default:
				return hxsl_Tools.map(e,function(e) {
					return _gthis.mapExpr(e,true);
				});
			}
			break;
		case 7:
			var _g1 = _g.init;
			var v = _g.v;
			if(!this.get(v).used) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
			} else {
				return hxsl_Tools.map(e,function(e) {
					return _gthis.mapExpr(e,true);
				});
			}
			break;
		case 8:
			var _g1 = _g.args;
			var _g2 = _g.e;
			var _g3 = _g2.t;
			var _g3 = _g2.p;
			var _g3 = _g2.e;
			if(_g3._hx_index == 2) {
				switch(_g3.g._hx_index) {
				case 63:
					if(_g1.length == 3) {
						var _g2 = _g1[2];
						var _g3 = _g1[0];
						var _g3 = _g2.t;
						var _g3 = _g2.p;
						var _g3 = _g2.e;
						if(_g3._hx_index == 0) {
							var _g2 = _g3.c;
							if(_g2._hx_index == 2) {
								var uv = _g1[1];
								var cid = _g2.v;
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Texture), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(uv,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 64:
					if(_g1.length == 4) {
						var _g2 = _g1[3];
						var _g3 = _g1[0];
						var _g3 = _g2.t;
						var _g3 = _g2.p;
						var _g3 = _g2.e;
						if(_g3._hx_index == 0) {
							var _g2 = _g3.c;
							if(_g2._hx_index == 2) {
								var uv = _g1[1];
								var lod = _g1[2];
								var cid = _g2.v;
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.TextureLod), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(uv,true),this.mapExpr(lod,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 65:
					if(_g1.length == 3) {
						var _g2 = _g1[2];
						var _g3 = _g1[0];
						var _g3 = _g2.t;
						var _g3 = _g2.p;
						var _g3 = _g2.e;
						if(_g3._hx_index == 0) {
							var _g2 = _g3.c;
							if(_g2._hx_index == 2) {
								var pos = _g1[1];
								var cid = _g2.v;
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Texel), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(pos,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 66:
					if(_g1.length == 4) {
						var _g2 = _g1[3];
						var _g3 = _g1[0];
						var _g3 = _g2.t;
						var _g3 = _g2.p;
						var _g3 = _g2.e;
						if(_g3._hx_index == 0) {
							var _g2 = _g3.c;
							if(_g2._hx_index == 2) {
								var pos = _g1[1];
								var lod = _g1[2];
								var cid = _g2.v;
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Texel), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(pos,true),this.mapExpr(lod,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				default:
					return hxsl_Tools.map(e,function(e) {
						return _gthis.mapExpr(e,true);
					});
				}
			} else {
				return hxsl_Tools.map(e,function(e) {
					return _gthis.mapExpr(e,true);
				});
			}
			break;
		case 10:
			var eelse = _g.eelse;
			var econd = _g.eif;
			var e1 = _g.econd;
			var e2 = this.mapExpr(e1,true);
			var econd1 = this.mapExpr(econd,isVar);
			var eelse1 = eelse == null ? null : this.mapExpr(eelse,isVar);
			if(!isVar && !hxsl_Tools.hasSideEffect(econd1) && (eelse1 == null || !hxsl_Tools.hasSideEffect(eelse1))) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e2.t, p : e2.p};
			}
			return { e : hxsl_TExprDef.TIf(e2,econd1,eelse1), p : e2.p, t : e2.t};
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			var it1 = this.mapExpr(it,true);
			var loop1 = this.mapExpr(loop,false);
			if(!hxsl_Tools.hasSideEffect(loop1)) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
			}
			return { e : hxsl_TExprDef.TFor(v,it1,loop1), p : e.p, t : e.t};
		default:
			return hxsl_Tools.map(e,function(e) {
				return _gthis.mapExpr(e,true);
			});
		}
	}
	,__class__: hxsl_Dce
};
var hxsl_Eval = function() {
	this.varMap = new haxe_ds_ObjectMap();
	this.funMap = new haxe_ds_ObjectMap();
	this.constants = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Eval"] = hxsl_Eval;
hxsl_Eval.__name__ = "hxsl.Eval";
hxsl_Eval.prototype = {
	setConstant: function(v,c) {
		this.constants.h[v.id] = hxsl_TExprDef.TConst(c);
	}
	,mapVar: function(v) {
		var v2 = this.varMap.h[v.__id__];
		if(v2 != null) {
			if(v == v2) {
				return v2;
			} else {
				return this.mapVar(v2);
			}
		}
		if(v.parent != null) {
			this.mapVar(v.parent);
			v2 = this.varMap.h[v.__id__];
			if(v2 != null) {
				if(v == v2) {
					return v2;
				} else {
					return this.mapVar(v2);
				}
			}
		}
		var _g = v.type;
		var v21;
		if(_g._hx_index == 17) {
			var _g1 = _g.size;
			v21 = true;
		} else {
			v21 = false;
		}
		v2 = { id : v21 ? v.id : hxsl_Tools.allocVarId(), name : v.name, type : v.type, kind : v.kind};
		if(v.parent != null) {
			v2.parent = this.mapVar(v.parent);
		}
		if(v.qualifiers != null) {
			v2.qualifiers = v.qualifiers.slice();
		}
		this.varMap.set(v,v2);
		this.varMap.set(v2,v2);
		var _g = v2.type;
		switch(_g._hx_index) {
		case 13:
			var vl = _g.vl;
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < vl.length) {
				var v = vl[_g2];
				++_g2;
				_g1.push(this.mapVar(v));
			}
			v2.type = hxsl_Type.TStruct(_g1);
			break;
		case 15:
			var _g1 = _g.size;
			if(_g1._hx_index == 1) {
				var t = _g.t;
				var vs = _g1.v;
				var c = this.constants.h[vs.id];
				if(c != null) {
					if(c == null) {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					} else if(c._hx_index == 0) {
						var _g1 = c.c;
						if(_g1._hx_index == 2) {
							var v = _g1.v;
							var _g1 = v2.type;
							var tmp;
							if(_g1._hx_index == 15) {
								var _g2 = _g1.size;
								var _g2 = _g1.t;
								tmp = true;
							} else {
								tmp = false;
							}
							v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(v)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SConst(v));
						} else {
							hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
						}
					} else {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					}
				} else {
					var vs2 = this.mapVar(vs);
					var _g1 = v2.type;
					var tmp;
					if(_g1._hx_index == 15) {
						var _g2 = _g1.size;
						var _g2 = _g1.t;
						tmp = true;
					} else {
						tmp = false;
					}
					v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SVar(vs2)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SVar(vs2));
				}
			}
			break;
		case 16:
			var _g1 = _g.size;
			if(_g1._hx_index == 1) {
				var t = _g.t;
				var vs = _g1.v;
				var c = this.constants.h[vs.id];
				if(c != null) {
					if(c == null) {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					} else if(c._hx_index == 0) {
						var _g = c.c;
						if(_g._hx_index == 2) {
							var v = _g.v;
							var _g = v2.type;
							var tmp;
							if(_g._hx_index == 15) {
								var _g1 = _g.size;
								var _g1 = _g.t;
								tmp = true;
							} else {
								tmp = false;
							}
							v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(v)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SConst(v));
						} else {
							hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
						}
					} else {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					}
				} else {
					var vs2 = this.mapVar(vs);
					var _g = v2.type;
					var tmp;
					if(_g._hx_index == 15) {
						var _g1 = _g.size;
						var _g1 = _g.t;
						tmp = true;
					} else {
						tmp = false;
					}
					v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SVar(vs2)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SVar(vs2));
				}
			}
			break;
		default:
		}
		return v2;
	}
	,'eval': function(s) {
		var funs = [];
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var f1 = f.kind;
			var f2 = this.mapVar(f.ref);
			var _g2 = [];
			var _g3 = 0;
			var _g4 = f.args;
			while(_g3 < _g4.length) {
				var a = _g4[_g3];
				++_g3;
				_g2.push(this.mapVar(a));
			}
			var f21 = { kind : f1, ref : f2, args : _g2, ret : f.ret, expr : f.expr};
			if(!this.inlineCalls || f.kind != hxsl_FunctionKind.Helper) {
				funs.push(f21);
			}
			this.funMap.set(f21.ref,f);
		}
		var _g = 0;
		var _g1 = funs.length;
		while(_g < _g1) {
			var i = _g++;
			this.curFun = funs[i];
			this.curFun.expr = this.evalExpr(this.curFun.expr,false);
		}
		var s1 = s.name;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.vars;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			_g.push(this.mapVar(v));
		}
		return { name : s1, vars : _g, funs : funs};
	}
	,hasReturn: function(e) {
		this.markReturn = false;
		this.hasReturnLoop(e);
		return this.markReturn;
	}
	,hasReturnLoop: function(e) {
		var _g = e.e;
		if(_g._hx_index == 12) {
			var _g1 = _g.e;
			this.markReturn = true;
		} else if(!this.markReturn) {
			hxsl_Tools.iter(e,$bind(this,this.hasReturnLoop));
		}
	}
	,handleReturn: function(e,isFinal) {
		if(isFinal == null) {
			isFinal = false;
		}
		var _g = e.e;
		switch(_g._hx_index) {
		case 3:
			var v = _g.e;
			var v1 = this.handleReturn(v,isFinal);
			return { e : hxsl_TExprDef.TParenthesis(v1), t : v1.t, p : e.p};
		case 4:
			var el = _g.el;
			var i = 0;
			var last = el.length;
			var out = [];
			_hx_loop1: while(i < last) {
				var e1 = el[i++];
				if(i == last) {
					out.push(this.handleReturn(e1,isFinal));
				} else {
					var _g1 = e1.e;
					switch(_g1._hx_index) {
					case 10:
						if(_g1.eelse == null) {
							var econd = _g1.econd;
							var eif = _g1.eif;
							if(isFinal && this.hasReturn(eif)) {
								out.push(this.handleReturn({ e : hxsl_TExprDef.TIf(econd,eif,{ e : hxsl_TExprDef.TBlock(el.slice(i)), t : e1.t, p : e1.p}), t : e1.t, p : e1.p}));
								break _hx_loop1;
							} else {
								out.push(this.handleReturn(e1));
							}
						} else {
							out.push(this.handleReturn(e1));
						}
						break;
					case 12:
						var e2 = _g1.e;
						out.push(this.handleReturn(e2,isFinal));
						break _hx_loop1;
					default:
						out.push(this.handleReturn(e1));
					}
				}
			}
			var t = isFinal ? out[out.length - 1].t : e.t;
			return { e : hxsl_TExprDef.TBlock(out), t : t, p : e.p};
		case 10:
			var eelse = _g.eelse;
			var eif = _g.eif;
			var cond = _g.econd;
			if(eelse != null && isFinal) {
				var cond1 = this.handleReturn(cond);
				var eif1 = this.handleReturn(eif,isFinal);
				return { e : hxsl_TExprDef.TIf(cond1,eif1,this.handleReturn(eelse,isFinal)), t : eif1.t, p : e.p};
			} else {
				return hxsl_Tools.map(e,$bind(this,this.handleReturnDef));
			}
			break;
		case 12:
			var v = _g.e;
			if(!isFinal) {
				hxsl_Error.t("Cannot inline not final return",e.p);
			}
			if(v == null) {
				return { e : hxsl_TExprDef.TBlock([]), t : hxsl_Type.TVoid, p : e.p};
			}
			return this.handleReturn(v,true);
		default:
			return hxsl_Tools.map(e,$bind(this,this.handleReturnDef));
		}
	}
	,handleReturnDef: function(e) {
		return this.handleReturn(e);
	}
	,evalCall: function(g,args,oldArgs,pos) {
		switch(g._hx_index) {
		case 38:
			if(args.length == 1) {
				var _g = args[0];
				var _g1 = _g.t;
				var _g1 = _g.p;
				var _g1 = _g.e;
				if(_g1._hx_index == 0) {
					var _g = _g1.c;
					if(_g._hx_index == 2) {
						var i = _g.v;
						return hxsl_TExprDef.TConst(hxsl_Const.CFloat(i));
					} else {
						return null;
					}
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		case 63:case 64:
			var i;
			var _g = args[0].e;
			if(_g._hx_index == 0) {
				var _g1 = _g.c;
				if(_g1._hx_index == 2) {
					var i1 = _g1.v;
					i = i1;
				} else {
					hxsl_Error.t("Cannot eval complex channel " + hxsl_Printer.toString(args[0],true) + " " + this.constantsToString(),pos);
					throw haxe_Exception.thrown("assert");
				}
			} else {
				hxsl_Error.t("Cannot eval complex channel " + hxsl_Printer.toString(args[0],true) + " " + this.constantsToString(),pos);
				throw haxe_Exception.thrown("assert");
			}
			var channel = oldArgs[0];
			var _g = channel.e;
			var channel1;
			if(_g._hx_index == 1) {
				var v = _g.v;
				channel1 = hxsl_TExprDef.TVar(this.mapVar(v));
			} else {
				throw haxe_Exception.thrown("assert");
			}
			channel = { e : channel1, t : channel.t, p : channel.p};
			var count;
			var _g = channel.t;
			if(_g._hx_index == 17) {
				var i1 = _g.size;
				count = i1;
			} else {
				throw haxe_Exception.thrown("assert");
			}
			var channelMode = Type.createEnumIndex(hxsl_Channel,i & 7,null);
			var targs = [channel];
			var _g = 1;
			var _g1 = args.length;
			while(_g < _g1) {
				var i1 = _g++;
				targs.push(args[i1]);
			}
			targs.push({ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(i >> 3)), t : hxsl_Type.TInt, p : pos});
			var tget = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(g), t : hxsl_Type.TVoid, p : pos},targs), t : hxsl_Type.TVoid, p : pos};
			switch(channelMode._hx_index) {
			case 0:
				var zero = { e : hxsl_TExprDef.TConst(hxsl_Const.CFloat(0.)), t : hxsl_Type.TFloat, p : pos};
				if(count == 1) {
					return zero.e;
				}
				return hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal([hxsl_TGlobal.Vec2,hxsl_TGlobal.Vec3,hxsl_TGlobal.Vec4][count - 2]), t : hxsl_Type.TVoid, p : pos},[zero]);
			case 1:case 2:case 3:case 4:
				var tmp;
				switch(count) {
				case 1:
					switch(channelMode._hx_index) {
					case 1:
						tmp = [hxsl_Component.X];
						break;
					case 2:
						tmp = [hxsl_Component.Y];
						break;
					case 3:
						tmp = [hxsl_Component.Z];
						break;
					case 4:
						tmp = [hxsl_Component.W];
						break;
					default:
						throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
					}
					break;
				case 2:
					switch(channelMode._hx_index) {
					case 1:
						tmp = [hxsl_Component.X,hxsl_Component.Y];
						break;
					case 2:
						tmp = [hxsl_Component.Y,hxsl_Component.Z];
						break;
					case 3:
						tmp = [hxsl_Component.Z,hxsl_Component.W];
						break;
					default:
						throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
					}
					break;
				case 3:
					switch(channelMode._hx_index) {
					case 1:
						tmp = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z];
						break;
					case 2:
						tmp = [hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
						break;
					default:
						throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
					}
					break;
				default:
					throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
				}
				return hxsl_TExprDef.TSwiz(tget,tmp);
			case 5:
				return hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Unpack), t : hxsl_Type.TVoid, p : pos},[tget]);
			case 6:
				return hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.UnpackNormal), t : hxsl_Type.TVoid, p : pos},[tget]);
			}
			break;
		case 67:
			var args1 = args;
			var _g = 0;
			while(_g < args1.length) {
				var a = args1[_g];
				++_g;
				haxe_Log.trace(hxsl_Printer.toString(a),{ fileName : a.p.file, lineNumber : 0, className : null, methodName : null});
			}
			return hxsl_TExprDef.TBlock([]);
		default:
			return null;
		}
	}
	,constantsToString: function() {
		var _g = [];
		var c = this.constants.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			_g.push(c1 + " => " + hxsl_Printer.toString({ e : this.constants.h[c1], t : hxsl_Type.TVoid, p : null},true));
		}
		return _g.toString();
	}
	,ifBlock: function(e) {
		var tmp;
		if(e != null) {
			var _g = e.e;
			var tmp1;
			if(_g._hx_index == 10) {
				var _g1 = _g.eelse;
				var _g1 = _g.eif;
				var _g1 = _g.econd;
				tmp1 = true;
			} else {
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = true;
		}
		if(tmp) {
			return e;
		}
		return { e : hxsl_TExprDef.TBlock([e]), t : e.t, p : e.p};
	}
	,evalExpr: function(e,isVal) {
		if(isVal == null) {
			isVal = true;
		}
		var _gthis = this;
		var d;
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			d = e.e;
			break;
		case 1:
			var v = _g.v;
			var c = this.constants.h[v.id];
			if(c != null) {
				d = c;
			} else {
				var v2 = this.mapVar(v);
				d = hxsl_TExprDef.TVar(v2);
			}
			break;
		case 2:
			var _g1 = _g.g;
			d = e.e;
			break;
		case 3:
			var e1 = _g.e;
			var e2 = this.evalExpr(e1,isVal);
			var _g1 = e2.e;
			if(_g1._hx_index == 0) {
				var _g2 = _g1.c;
				d = e2.e;
			} else {
				d = hxsl_TExprDef.TParenthesis(e2);
			}
			break;
		case 4:
			var el = _g.el;
			var out = [];
			var last = el.length - 1;
			var _g1 = 0;
			var _g2 = el.length;
			while(_g1 < _g2) {
				var i = _g1++;
				var isVal1 = isVal && i == last;
				var e1 = this.evalExpr(el[i],isVal1);
				var _g3 = e1.e;
				switch(_g3._hx_index) {
				case 0:
					var _g4 = _g3.c;
					if(isVal1) {
						out.push(e1);
					}
					break;
				case 1:
					var _g5 = _g3.v;
					if(isVal1) {
						out.push(e1);
					}
					break;
				default:
					out.push(e1);
				}
			}
			d = out.length == 1 && this.curFun.kind != hxsl_FunctionKind.Init ? out[0].e : hxsl_TExprDef.TBlock(out);
			break;
		case 5:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var op = _g.op;
			var e11 = this.evalExpr(e1);
			var e21 = this.evalExpr(e2);
			switch(op._hx_index) {
			case 0:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a + b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 3) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a + b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 1:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a * b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 3) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a * b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 2:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a / b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 3) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a / b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 3:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a - b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 3) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a - b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 4:case 21:
				d = hxsl_TExprDef.TBinop(op,e11,e21);
				break;
			case 5:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g1._hx_index == 0 ? _g1.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								var a = _g2;
								var b = _g4.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var a = _g2;
								var b = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 6:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g1._hx_index == 0 ? _g1.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								var a = _g2;
								var b = _g4.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var a = _g2;
								var b = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 7:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g1._hx_index == 0 ? _g1.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								var a = _g2;
								var b = _g4.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var a = _g2;
								var b = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 8:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g1._hx_index == 0 ? _g1.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								var a = _g2;
								var b = _g4.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var a = _g2;
								var b = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 9:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g1._hx_index == 0 ? _g1.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								var a = _g2;
								var b = _g4.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var a = _g2;
								var b = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 10:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g1._hx_index == 0 ? _g1.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								var a = _g2;
								var b = _g4.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g4 = _g1.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var a = _g2;
								var b = _g4.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g2 = _g3.v;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var a = _g2;
								var b = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 11:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a & b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 12:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a | b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 13:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a ^ b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 14:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 1) {
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							if(_g3._hx_index == 1) {
								var a = _g2;
								var b = _g3.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a && b));
							} else {
								var a = _g2;
								d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
							}
						} else {
							var a = _g2;
							d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
						}
					} else if(_g1._hx_index == 0) {
						var _g2 = _g1.c;
						if(_g2._hx_index == 1) {
							var a = _g2.b;
							d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else if(_g1._hx_index == 0) {
					var _g2 = _g1.c;
					if(_g2._hx_index == 1) {
						var a = _g2.b;
						d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 15:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 1) {
						var _g2 = _g3.b;
						if(_g1._hx_index == 0) {
							var _g3 = _g1.c;
							if(_g3._hx_index == 1) {
								var a = _g2;
								var b = _g3.b;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a || b));
							} else {
								var a = _g2;
								d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
							}
						} else {
							var a = _g2;
							d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
						}
					} else if(_g1._hx_index == 0) {
						var _g2 = _g1.c;
						if(_g2._hx_index == 1) {
							var a = _g2.b;
							d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else if(_g1._hx_index == 0) {
					var _g2 = _g1.c;
					if(_g2._hx_index == 1) {
						var a = _g2.b;
						d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 16:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a << b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 17:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a >> b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 18:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a >>> b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 19:
				var _g1 = e21.e;
				var _g2 = e11.e;
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 2) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a % b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g1._hx_index == 0) {
							var _g2 = _g1.c;
							if(_g2._hx_index == 3) {
								var a = _g3.v;
								var b = _g2.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a % b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 20:
				var _g1 = op.op;
				d = hxsl_TExprDef.TBinop(op,e11,e21);
				break;
			case 22:
				throw haxe_Exception.thrown("assert");
			case 23:
				throw haxe_Exception.thrown("assert");
			}
			break;
		case 6:
			var e1 = _g.e1;
			var op = _g.op;
			var e2 = this.evalExpr(e1);
			var _g1 = e2.e;
			if(_g1._hx_index == 0) {
				var c = _g1.c;
				switch(op._hx_index) {
				case 2:
					if(c._hx_index == 1) {
						var b = c.b;
						d = hxsl_TExprDef.TConst(hxsl_Const.CBool(!b));
					} else {
						d = hxsl_TExprDef.TUnop(op,e2);
					}
					break;
				case 3:
					switch(c._hx_index) {
					case 2:
						var i = c.v;
						d = hxsl_TExprDef.TConst(hxsl_Const.CInt(-i));
						break;
					case 3:
						var f = c.v;
						d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(-f));
						break;
					default:
						d = hxsl_TExprDef.TUnop(op,e2);
					}
					break;
				default:
					d = hxsl_TExprDef.TUnop(op,e2);
				}
			} else {
				d = hxsl_TExprDef.TUnop(op,e2);
			}
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			d = hxsl_TExprDef.TVarDecl(this.mapVar(v),init == null ? null : this.evalExpr(init));
			break;
		case 8:
			var eargs = _g.args;
			var c = _g.e;
			var c1 = this.evalExpr(c);
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < eargs.length) {
				var a = eargs[_g2];
				++_g2;
				_g1.push(this.evalExpr(a));
			}
			var args = _g1;
			var _g1 = c1.e;
			switch(_g1._hx_index) {
			case 1:
				if(!this.inlineCalls) {
					d = hxsl_TExprDef.TCall(c1,args);
				} else {
					var v = _g1.v;
					if(this.funMap.h.__keys__[v.__id__] != null) {
						var f = this.funMap.h[v.__id__];
						var outExprs = [];
						var undo = [];
						var _g2 = 0;
						var _g3 = f.args.length;
						while(_g2 < _g3) {
							var i = _g2++;
							var v = [f.args[i]];
							var e1 = args[i];
							var _g4 = e1.e;
							switch(_g4._hx_index) {
							case 0:
								var _g5 = _g4.c;
								var old = [this.constants.h[v[0].id]];
								undo.push((function(old,v) {
									return function() {
										if(old[0] == null) {
											_gthis.constants.remove(v[0].id);
										} else {
											_gthis.constants.h[v[0].id] = old[0];
										}
									};
								})(old,v));
								this.constants.h[v[0].id] = e1.e;
								break;
							case 1:
								var _g6 = _g4.v;
								var _g7 = _g6.type;
								var _g8 = _g6.qualifiers;
								var _g9 = _g6.parent;
								var _g10 = _g6.name;
								var _g11 = _g6.id;
								switch(_g6.kind._hx_index) {
								case 0:case 1:case 2:
									var old1 = [this.constants.h[v[0].id]];
									undo.push((function(old,v) {
										return function() {
											if(old[0] == null) {
												_gthis.constants.remove(v[0].id);
											} else {
												_gthis.constants.h[v[0].id] = old[0];
											}
										};
									})(old1,v));
									this.constants.h[v[0].id] = e1.e;
									break;
								default:
									var old2 = [this.varMap.h[v[0].__id__]];
									if(old2[0] == null) {
										undo.push((function(v) {
											return function() {
												_gthis.varMap.remove(v[0]);
											};
										})(v));
									} else {
										this.varMap.remove(v[0]);
										undo.push((function(old,v) {
											return function() {
												_gthis.varMap.set(v[0],old[0]);
											};
										})(old2,v));
									}
									var v2 = this.mapVar(v[0]);
									outExprs.push({ e : hxsl_TExprDef.TVarDecl(v2,e1), t : hxsl_Type.TVoid, p : e1.p});
								}
								break;
							default:
								var old3 = [this.varMap.h[v[0].__id__]];
								if(old3[0] == null) {
									undo.push((function(v) {
										return function() {
											_gthis.varMap.remove(v[0]);
										};
									})(v));
								} else {
									this.varMap.remove(v[0]);
									undo.push((function(old,v) {
										return function() {
											_gthis.varMap.set(v[0],old[0]);
										};
									})(old3,v));
								}
								var v21 = this.mapVar(v[0]);
								outExprs.push({ e : hxsl_TExprDef.TVarDecl(v21,e1), t : hxsl_Type.TVoid, p : e1.p});
							}
						}
						var e1 = this.handleReturn(this.evalExpr(f.expr,false),true);
						var _g2 = 0;
						while(_g2 < undo.length) {
							var u = undo[_g2];
							++_g2;
							u();
						}
						var _g2 = e1.e;
						if(_g2._hx_index == 4) {
							var el = _g2.el;
							var _g2 = 0;
							while(_g2 < el.length) {
								var e2 = el[_g2];
								++_g2;
								outExprs.push(e2);
							}
						} else {
							outExprs.push(e1);
						}
						d = hxsl_TExprDef.TBlock(outExprs);
					} else {
						d = hxsl_Error.t("Cannot eval non-static call expresssion '" + new hxsl_Printer().exprString(c1) + "'",c1.p);
					}
				}
				break;
			case 2:
				var g = _g1.g;
				var v1 = this.evalCall(g,args,eargs,e.p);
				d = v1 != null ? v1 : hxsl_TExprDef.TCall(c1,args);
				break;
			default:
				d = hxsl_Error.t("Cannot eval non-static call expresssion '" + new hxsl_Printer().exprString(c1) + "'",c1.p);
			}
			break;
		case 9:
			var r = _g.regs;
			var e1 = _g.e;
			d = hxsl_TExprDef.TSwiz(this.evalExpr(e1),r.slice());
			break;
		case 10:
			var eelse = _g.eelse;
			var eif = _g.eif;
			var econd = _g.econd;
			var econd1 = this.evalExpr(econd);
			var _g1 = econd1.e;
			if(_g1._hx_index == 0) {
				var _g2 = _g1.c;
				if(_g2._hx_index == 1) {
					var b = _g2.b;
					d = b ? this.evalExpr(eif,isVal).e : eelse == null ? hxsl_TExprDef.TConst(hxsl_Const.CNull) : this.evalExpr(eelse,isVal).e;
				} else if(isVal && eelse != null && this.eliminateConditionals) {
					d = hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mix), t : e.t, p : e.p},[this.evalExpr(eelse,true),this.evalExpr(eif,true),{ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToFloat), t : hxsl_Type.TFun([]), p : econd1.p},[econd1]), t : hxsl_Type.TFloat, p : e.p}]);
				} else {
					eif = this.evalExpr(eif,isVal);
					if(eelse != null) {
						eelse = this.evalExpr(eelse,isVal);
						var _g1 = eelse.e;
						if(_g1._hx_index == 0 && _g1.c._hx_index == 0) {
							eelse = null;
						}
					}
					eif = this.ifBlock(eif);
					eelse = this.ifBlock(eelse);
					d = hxsl_TExprDef.TIf(econd1,eif,eelse);
				}
			} else if(isVal && eelse != null && this.eliminateConditionals) {
				d = hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mix), t : e.t, p : e.p},[this.evalExpr(eelse,true),this.evalExpr(eif,true),{ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToFloat), t : hxsl_Type.TFun([]), p : econd1.p},[econd1]), t : hxsl_Type.TFloat, p : e.p}]);
			} else {
				eif = this.evalExpr(eif,isVal);
				if(eelse != null) {
					eelse = this.evalExpr(eelse,isVal);
					var _g1 = eelse.e;
					if(_g1._hx_index == 0 && _g1.c._hx_index == 0) {
						eelse = null;
					}
				}
				eif = this.ifBlock(eif);
				eelse = this.ifBlock(eelse);
				d = hxsl_TExprDef.TIf(econd1,eif,eelse);
			}
			break;
		case 11:
			d = hxsl_TExprDef.TDiscard;
			break;
		case 12:
			var e1 = _g.e;
			d = hxsl_TExprDef.TReturn(e1 == null ? null : this.evalExpr(e1));
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v1 = _g.v;
			var v2 = this.mapVar(v1);
			var it1 = this.evalExpr(it);
			var e1;
			var _g1 = it1.e;
			if(_g1._hx_index == 5) {
				var _g2 = _g1.e2;
				var _g3 = _g1.e1;
				if(_g1.op._hx_index == 21) {
					var _g1 = _g3.t;
					var _g1 = _g3.p;
					var _g1 = _g3.e;
					if(_g1._hx_index == 0) {
						var _g3 = _g1.c;
						if(_g3._hx_index == 2) {
							var _g1 = _g2.t;
							var _g1 = _g2.p;
							var _g1 = _g2.e;
							if(_g1._hx_index == 0) {
								var _g2 = _g1.c;
								if(_g2._hx_index == 2) {
									var start = _g3.v;
									var len = _g2.v;
									if(this.unrollLoops) {
										var out = [];
										var _g1 = start;
										var _g2 = len;
										while(_g1 < _g2) {
											var i = _g1++;
											this.constants.h[v1.id] = hxsl_TExprDef.TConst(hxsl_Const.CInt(i));
											out.push(this.evalExpr(loop,false));
										}
										this.constants.remove(v1.id);
										e1 = hxsl_TExprDef.TBlock(out);
									} else {
										e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
									}
								} else {
									e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
								}
							} else {
								e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
							}
						} else {
							e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
						}
					} else {
						e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
					}
				} else {
					e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
				}
			} else {
				e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
			}
			this.varMap.remove(v1);
			d = e1;
			break;
		case 14:
			d = hxsl_TExprDef.TContinue;
			break;
		case 15:
			d = hxsl_TExprDef.TBreak;
			break;
		case 16:
			var e2 = _g.index;
			var e1 = _g.e;
			var e11 = this.evalExpr(e1);
			var e21 = this.evalExpr(e2);
			var _g1 = e21.e;
			var _g2 = e11.e;
			if(_g2._hx_index == 17) {
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						var el = _g2.el;
						var i = _g3.v;
						d = i >= 0 && i < el.length ? el[i].e : hxsl_TExprDef.TArray(e11,e21);
					} else {
						d = hxsl_TExprDef.TArray(e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TArray(e11,e21);
				}
			} else {
				d = hxsl_TExprDef.TArray(e11,e21);
			}
			break;
		case 17:
			var el = _g.el;
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < el.length) {
				var e1 = el[_g2];
				++_g2;
				_g1.push(this.evalExpr(e1));
			}
			d = hxsl_TExprDef.TArrayDecl(_g1);
			break;
		case 18:
			var def = _g.def;
			var cases = _g.cases;
			var e1 = _g.e;
			var e2 = this.evalExpr(e1);
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < cases.length) {
				var c = cases[_g2];
				++_g2;
				var _g3 = [];
				var _g4 = 0;
				var _g5 = c.values;
				while(_g4 < _g5.length) {
					var v1 = _g5[_g4];
					++_g4;
					_g3.push(this.evalExpr(v1));
				}
				_g1.push({ values : _g3, expr : this.evalExpr(c.expr,isVal)});
			}
			var cases = _g1;
			var def1 = def == null ? null : this.evalExpr(def,isVal);
			var hasCase = false;
			var _g1 = e2.e;
			if(_g1._hx_index == 0) {
				var c = _g1.c;
				if(c._hx_index == 2) {
					var val = c.v;
					var _g1 = 0;
					while(_g1 < cases.length) {
						var c1 = cases[_g1];
						++_g1;
						var _g2 = 0;
						var _g3 = c1.values;
						while(_g2 < _g3.length) {
							var v1 = _g3[_g2];
							++_g2;
							var _g4 = v1.e;
							if(_g4._hx_index == 0) {
								var cst = _g4.c;
								switch(cst._hx_index) {
								case 2:
									var k = cst.v;
									if(k == val) {
										return c1.expr;
									}
									break;
								case 3:
									var k1 = cst.v;
									if(k1 == val) {
										return c1.expr;
									}
									break;
								default:
								}
							} else {
								hasCase = true;
							}
						}
					}
				} else {
					throw haxe_Exception.thrown("Unsupported switch constant " + Std.string(c));
				}
			} else {
				hasCase = true;
			}
			d = hasCase ? hxsl_TExprDef.TSwitch(e2,cases,def1) : def1 == null ? hxsl_TExprDef.TBlock([]) : def1.e;
			break;
		case 19:
			var normalWhile = _g.normalWhile;
			var loop = _g.loop;
			var cond = _g.e;
			var cond1 = this.evalExpr(cond);
			var loop1 = this.evalExpr(loop,false);
			d = hxsl_TExprDef.TWhile(cond1,this.ifBlock(loop1),normalWhile);
			break;
		case 20:
			var e1 = _g.e;
			var args = _g.args;
			var name = _g.m;
			var e2;
			if(name == "unroll") {
				var old4 = this.unrollLoops;
				this.unrollLoops = true;
				e2 = this.evalExpr(e1,isVal);
				this.unrollLoops = false;
			} else {
				e2 = this.evalExpr(e1,isVal);
			}
			d = hxsl_TExprDef.TMeta(name,args,e2);
			break;
		}
		return { e : d, t : e.t, p : e.p};
	}
	,__class__: hxsl_Eval
};
var hxsl__$Flatten_Alloc = function(g,t,pos,size) {
	this.g = g;
	this.t = t;
	this.pos = pos;
	this.size = size;
};
$hxClasses["hxsl._Flatten.Alloc"] = hxsl__$Flatten_Alloc;
hxsl__$Flatten_Alloc.__name__ = "hxsl._Flatten.Alloc";
hxsl__$Flatten_Alloc.prototype = {
	__class__: hxsl__$Flatten_Alloc
};
var hxsl_ARead = $hxEnums["hxsl.ARead"] = { __ename__ : true, __constructs__ : ["AIndex","AOffset"]
	,AIndex: ($_=function(a) { return {_hx_index:0,a:a,__enum__:"hxsl.ARead",toString:$estr}; },$_.__params__ = ["a"],$_)
	,AOffset: ($_=function(a,stride,delta) { return {_hx_index:1,a:a,stride:stride,delta:delta,__enum__:"hxsl.ARead",toString:$estr}; },$_.__params__ = ["a","stride","delta"],$_)
};
hxsl_ARead.__empty_constructs__ = [];
var hxsl_Flatten = function() {
};
$hxClasses["hxsl.Flatten"] = hxsl_Flatten;
hxsl_Flatten.__name__ = "hxsl.Flatten";
hxsl_Flatten.prototype = {
	flatten: function(s,kind,constsToGlobal) {
		this.globals = [];
		this.params = [];
		this.outVars = [];
		if(constsToGlobal) {
			this.consts = [];
			var p = s.funs[0].expr.p;
			var gc = { id : hxsl_Tools.allocVarId(), name : "__consts__", kind : hxsl_VarKind.Global, type : null};
			this.econsts = { e : hxsl_TExprDef.TVar(gc), t : null, p : p};
			var s1 = s.name;
			var s2 = s.vars.slice();
			var _g = [];
			var _g1 = 0;
			var _g2 = s.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				_g.push(this.mapFun(f,$bind(this,this.mapConsts)));
			}
			s = { name : s1, vars : s2, funs : _g};
			var _g = 0;
			var _g1 = s.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				var _g2 = v.type;
				if(_g2._hx_index == 9) {
					var _g3 = _g2.size;
					this.allocConst(255,p);
				}
			}
			if(this.consts.length > 0) {
				gc.type = this.econsts.t = hxsl_Type.TArray(hxsl_Type.TFloat,hxsl_SizeDecl.SConst(this.consts.length));
				s.vars.push(gc);
			}
		}
		this.varMap = new haxe_ds_ObjectMap();
		this.allocData = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.gatherVar(v);
		}
		var prefix;
		switch(kind._hx_index) {
		case 0:
			prefix = "vertex";
			break;
		case 1:
			prefix = "fragment";
			break;
		default:
			throw haxe_Exception.thrown("assert");
		}
		this.pack(prefix + "Globals",hxsl_VarKind.Global,this.globals,hxsl_VecType.VFloat);
		this.pack(prefix + "Params",hxsl_VarKind.Param,this.params,hxsl_VecType.VFloat);
		var allVars = this.globals.concat(this.params);
		var textures = this.packTextures(prefix + "Textures",allVars,hxsl_Type.TSampler2D).concat(this.packTextures(prefix + "TexturesCube",allVars,hxsl_Type.TSamplerCube)).concat(this.packTextures(prefix + "TexturesArray",allVars,hxsl_Type.TSampler2DArray));
		this.packBuffers(allVars);
		var _g = [];
		var _g1 = 0;
		var _g2 = s.funs;
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(this.mapFun(f,$bind(this,this.mapExpr)));
		}
		var funs = _g;
		return { name : s.name, vars : this.outVars, funs : funs};
	}
	,mapFun: function(f,mapExpr) {
		return { kind : f.kind, ret : f.ret, args : f.args, ref : f.ref, expr : mapExpr(f.expr)};
	}
	,mapExpr: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			var a = this.varMap.h[v.__id__];
			if(a != null) {
				e = this.access(a,v.type,e.p,hxsl_ARead.AIndex(a));
			}
			break;
		case 16:
			var _g1 = _g.e;
			var _g2 = _g1.t;
			var _g2 = _g1.e;
			if(_g2._hx_index == 1) {
				var eindex = _g.index;
				var vp = _g1.p;
				var v = _g2.v;
				var _g = eindex.e;
				var e1;
				if(_g._hx_index == 0) {
					var _g1 = _g.c;
					if(_g1._hx_index == 2) {
						var _g = _g1.v;
						e1 = true;
					} else {
						e1 = false;
					}
				} else {
					e1 = false;
				}
				if(!e1) {
					var a = this.varMap.h[v.__id__];
					if(a != null) {
						var _g = v.type;
						if(_g._hx_index == 15) {
							var _g1 = _g.size;
							var _g1 = _g.t;
							var t = _g1;
							if(hxsl_Tools.isSampler(t)) {
								eindex = this.mapExpr(eindex);
								var toInt = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToInt), t : hxsl_Type.TFun([]), p : vp},[eindex]), t : hxsl_Type.TInt, p : vp};
								e = this.access(a,t,vp,hxsl_ARead.AOffset(a,1,toInt));
							} else {
								var t = _g1;
								var stride = this.varSize(t,a.t);
								if(stride == 0 || (stride & 3) != 0) {
									throw haxe_Exception.thrown(new hxsl_Error("Dynamic access to an Array which size is not 4 components-aligned is not allowed",e.p));
								}
								stride >>= 2;
								eindex = this.mapExpr(eindex);
								var toInt = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToInt), t : hxsl_Type.TFun([]), p : vp},[eindex]), t : hxsl_Type.TInt, p : vp};
								e = this.access(a,t,vp,hxsl_ARead.AOffset(a,stride,stride == 1 ? toInt : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpMult,toInt,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(stride)), t : hxsl_Type.TInt, p : vp}), t : hxsl_Type.TInt, p : vp}));
							}
						} else {
							throw haxe_Exception.thrown("assert");
						}
					}
				} else {
					e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
				}
			} else {
				e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
			}
			break;
		default:
			e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
		}
		return this.optimize(e);
	}
	,mapConsts: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			switch(c._hx_index) {
			case 2:
				var v = c.v;
				return this.allocConst(v,e.p);
			case 3:
				var v = c.v;
				return this.allocConst(v,e.p);
			default:
				return e;
			}
			break;
		case 2:
			var g = _g.g;
			switch(g._hx_index) {
			case 0:
				this.allocConst(Math.PI / 180,e.p);
				break;
			case 1:
				this.allocConst(180 / Math.PI,e.p);
				break;
			case 9:
				this.allocConst(1.4426950408889634,e.p);
				break;
			case 10:
				this.allocConst(0.6931471805599453,e.p);
				break;
			case 24:
				this.allocConst(1,e.p);
				break;
			case 26:
				this.allocConst(2.0,e.p);
				this.allocConst(3.0,e.p);
				break;
			case 54:
				this.allocConsts([1,255,65025,16581375],e.p);
				this.allocConsts([0.00392156862745098,0.00392156862745098,0.00392156862745098,0],e.p);
				break;
			case 55:
				this.allocConsts([1,0.00392156862745098,1.5378700499807768e-005,6.0308629411010845e-008],e.p);
				break;
			case 56:
				this.allocConst(1,e.p);
				this.allocConst(0.5,e.p);
				break;
			case 57:
				this.allocConst(0.5,e.p);
				break;
			case 58:
				this.allocConsts([0.5,0.5],e.p);
				this.allocConsts([0.5,-0.5],e.p);
				break;
			case 59:
				this.allocConsts([2,-2],e.p);
				this.allocConsts([-1,1],e.p);
				break;
			default:
			}
			break;
		case 5:
			var _g1 = _g.e2;
			var _g2 = _g.e1;
			if(_g.op._hx_index == 1) {
				var _g2 = _g1.p;
				var _g2 = _g1.e;
				if(_g1.t._hx_index == 8) {
					this.allocConst(1,e.p);
				}
			}
			break;
		case 8:
			var _g1 = _g.args;
			var _g2 = _g.e;
			var _g3 = _g2.t;
			var _g3 = _g2.p;
			var _g3 = _g2.e;
			if(_g3._hx_index == 2) {
				if(_g3.g._hx_index == 42) {
					if(_g1.length == 2) {
						var _g2 = _g1[1];
						var _g3 = _g1[0];
						var _g1 = _g3.t;
						var _g4 = _g3.p;
						var _g4 = _g3.e;
						if(_g4._hx_index == 1) {
							var _g3 = _g4.v;
							var _g4 = _g3.type;
							var _g4 = _g3.qualifiers;
							var _g4 = _g3.parent;
							var _g4 = _g3.name;
							var _g4 = _g3.id;
							switch(_g3.kind._hx_index) {
							case 0:
								if(_g1._hx_index == 5) {
									if(_g1.size == 3) {
										if(_g1.t._hx_index == 1) {
											var _g3 = _g2.t;
											var _g3 = _g2.p;
											var _g3 = _g2.e;
											if(_g3._hx_index == 0) {
												var _g4 = _g3.c;
												if(_g4._hx_index == 2) {
													if(_g4.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 1:
								if(_g1._hx_index == 5) {
									if(_g1.size == 3) {
										if(_g1.t._hx_index == 1) {
											var _g3 = _g2.t;
											var _g3 = _g2.p;
											var _g3 = _g2.e;
											if(_g3._hx_index == 0) {
												var _g4 = _g3.c;
												if(_g4._hx_index == 2) {
													if(_g4.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 2:
								if(_g1._hx_index == 5) {
									if(_g1.size == 3) {
										if(_g1.t._hx_index == 1) {
											var _g3 = _g2.t;
											var _g3 = _g2.p;
											var _g3 = _g2.e;
											if(_g3._hx_index == 0) {
												var _g4 = _g3.c;
												if(_g4._hx_index == 2) {
													if(_g4.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 3:
								if(_g1._hx_index == 5) {
									if(_g1.size == 3) {
										if(_g1.t._hx_index == 1) {
											var _g1 = _g2.t;
											var _g1 = _g2.p;
											var _g1 = _g2.e;
											if(_g1._hx_index == 0) {
												var _g2 = _g1.c;
												if(_g2._hx_index == 2) {
													if(_g2.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							default:
							}
						}
					}
				}
			}
			break;
		case 16:
			var _g1 = _g.index;
			var _g2 = _g.e;
			var _g = _g1.t;
			var _g = _g1.p;
			var _g = _g1.e;
			if(_g._hx_index == 0) {
				var _g3 = _g.c;
				if(_g3._hx_index == 2) {
					var _g = _g3.v;
					var ea = _g2;
					var eindex = _g1;
					return { e : hxsl_TExprDef.TArray(this.mapConsts(ea),eindex), t : e.t, p : e.p};
				} else {
					var ea = _g2;
					var eindex = _g1;
					var _g = ea.t;
					if(_g._hx_index == 15) {
						var _g3 = _g.size;
						var t = _g.t;
						var stride = this.varSize(t,hxsl_VecType.VFloat) >> 2;
						this.allocConst(stride,e.p);
					}
				}
			} else {
				var ea = _g2;
				var eindex = _g1;
				var _g = ea.t;
				if(_g._hx_index == 15) {
					var _g1 = _g.size;
					var t = _g.t;
					var stride = this.varSize(t,hxsl_VecType.VFloat) >> 2;
					this.allocConst(stride,e.p);
				}
			}
			break;
		default:
		}
		return hxsl_Tools.map(e,$bind(this,this.mapConsts));
	}
	,allocConst: function(v,p) {
		var index = this.consts.indexOf(v);
		if(index < 0) {
			index = this.consts.length;
			this.consts.push(v);
		}
		return { e : hxsl_TExprDef.TArray(this.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p};
	}
	,allocConsts: function(va,p) {
		var _gthis = this;
		var pad = va.length - 1 & 3;
		var index = -1;
		var _g = 0;
		var _g1 = this.consts.length - (va.length - 1);
		while(_g < _g1) {
			var i = _g++;
			if(i >> 2 != i + pad >> 2) {
				continue;
			}
			var found = true;
			var _g2 = 0;
			var _g3 = va.length;
			while(_g2 < _g3) {
				var j = _g2++;
				if(this.consts[i + j] != va[j]) {
					found = false;
					break;
				}
			}
			if(found) {
				index = i;
				break;
			}
		}
		if(index < 0) {
			while(this.consts.length >> 2 != this.consts.length + pad >> 2) this.consts.push(0);
			index = this.consts.length;
			var _g = 0;
			while(_g < va.length) {
				var v = va[_g];
				++_g;
				this.consts.push(v);
			}
		}
		switch(va.length) {
		case 1:
			return { e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p};
		case 2:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec2), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(2,hxsl_VecType.VFloat), p : p};
		case 3:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec3), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 2)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(3,hxsl_VecType.VFloat), p : p};
		case 4:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec4), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 3)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 4)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(4,hxsl_VecType.VFloat), p : p};
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,access: function(a,t,pos,acc) {
		var _gthis = this;
		switch(t._hx_index) {
		case 6:
			var tmp = this.access(a,hxsl_Type.TMat3x4,pos,acc);
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat3), t : hxsl_Type.TFun([]), p : pos},[tmp]), t : hxsl_Type.TMat3, p : pos};
		case 7:
			var tmp = hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat4);
			var tmp1 = hxsl_Type.TFun([]);
			var tmp2;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = a1.t == null ? a1.pos : a1.pos >> 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp3;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 1;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp4;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp5;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp5 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 3)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 3;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp5 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			return { e : hxsl_TExprDef.TCall({ e : tmp, t : tmp1, p : pos},[tmp2,tmp3,tmp4,tmp5]), t : hxsl_Type.TMat4, p : pos};
		case 8:
			var tmp = hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat3x4);
			var tmp1 = hxsl_Type.TFun([]);
			var tmp2;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = a1.t == null ? a1.pos : a1.pos >> 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp3;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 1;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp4;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			return { e : hxsl_TExprDef.TCall({ e : tmp, t : tmp1, p : pos},[tmp2,tmp3,tmp4]), t : hxsl_Type.TMat3x4, p : pos};
		case 15:
			var _g = t.size;
			if(_g._hx_index == 0) {
				var t1 = t.t;
				var len = _g.v;
				var stride = a.size / len | 0;
				var _g = [];
				var _g1 = 0;
				var _g2 = len;
				while(_g1 < _g2) {
					var i = _g1++;
					var a1 = new hxsl__$Flatten_Alloc(a.g,a.t,a.pos + stride * i,stride);
					_g.push(this.access(a1,t1,pos,hxsl_ARead.AIndex(a1)));
				}
				var earr = _g;
				return { e : hxsl_TExprDef.TArrayDecl(earr), t : t1, p : pos};
			} else {
				if(hxsl_Tools.isSampler(t)) {
					var e;
					switch(acc._hx_index) {
					case 0:
						var a1 = acc.a;
						var offs = a1.t == null ? a1.pos : a1.pos >> 2;
						e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
						break;
					case 1:
						var delta = acc.delta;
						var stride = acc.stride;
						var a1 = acc.a;
						var index = a1.t == null ? a1.pos : a1.pos >> 2;
						var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
						e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
						break;
					}
					e.t = t;
					return e;
				}
				var size = this.varSize(t,a.t);
				if(size > 4) {
					return hxsl_Error.t("Access not supported for " + hxsl_Tools.toString(t),null);
				}
				var e;
				switch(acc._hx_index) {
				case 0:
					var a1 = acc.a;
					var offs = a1.t == null ? a1.pos : a1.pos >> 2;
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				case 1:
					var delta = acc.delta;
					var stride = acc.stride;
					var a1 = acc.a;
					var index = a1.t == null ? a1.pos : a1.pos >> 2;
					var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				}
				if(size == 4) {
					if((a.pos & 3) != 0) {
						throw haxe_Exception.thrown("assert");
					}
				} else {
					var sw = [];
					var _g = 0;
					var _g1 = size;
					while(_g < _g1) {
						var i = _g++;
						sw.push(hxsl_Tools.SWIZ[i + (a.pos & 3)]);
					}
					e = { e : hxsl_TExprDef.TSwiz(e,sw), t : t, p : pos};
				}
				switch(t._hx_index) {
				case 1:
					e.t = hxsl_Type.TFloat;
					e = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToInt), t : hxsl_Type.TFun([]), p : pos},[e]), t : t, p : pos};
					break;
				case 5:
					if(t.t._hx_index == 0) {
						var size = t.size;
						e.t = hxsl_Type.TVec(size,hxsl_VecType.VFloat);
						e = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal([hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4][size - 2]), t : hxsl_Type.TFun([]), p : pos},[e]), t : t, p : pos};
					}
					break;
				default:
				}
				return e;
			}
			break;
		default:
			if(hxsl_Tools.isSampler(t)) {
				var e;
				switch(acc._hx_index) {
				case 0:
					var a1 = acc.a;
					var offs = a1.t == null ? a1.pos : a1.pos >> 2;
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				case 1:
					var delta = acc.delta;
					var stride = acc.stride;
					var a1 = acc.a;
					var index = a1.t == null ? a1.pos : a1.pos >> 2;
					var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				}
				e.t = t;
				return e;
			}
			var size = this.varSize(t,a.t);
			if(size > 4) {
				return hxsl_Error.t("Access not supported for " + hxsl_Tools.toString(t),null);
			}
			var e;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var delta = acc.delta;
				var stride = acc.stride;
				var a1 = acc.a;
				var index = a1.t == null ? a1.pos : a1.pos >> 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			if(size == 4) {
				if((a.pos & 3) != 0) {
					throw haxe_Exception.thrown("assert");
				}
			} else {
				var sw = [];
				var _g = 0;
				var _g1 = size;
				while(_g < _g1) {
					var i = _g++;
					sw.push(hxsl_Tools.SWIZ[i + (a.pos & 3)]);
				}
				e = { e : hxsl_TExprDef.TSwiz(e,sw), t : t, p : pos};
			}
			switch(t._hx_index) {
			case 1:
				e.t = hxsl_Type.TFloat;
				e = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToInt), t : hxsl_Type.TFun([]), p : pos},[e]), t : t, p : pos};
				break;
			case 5:
				if(t.t._hx_index == 0) {
					var size = t.size;
					e.t = hxsl_Type.TVec(size,hxsl_VecType.VFloat);
					e = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal([hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4][size - 2]), t : hxsl_Type.TFun([]), p : pos},[e]), t : t, p : pos};
				}
				break;
			default:
			}
			return e;
		}
	}
	,optimize: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 8:
			var _g1 = _g.args;
			var _g2 = _g.e;
			var _g3 = _g2.t;
			var _g3 = _g2.p;
			var _g3 = _g2.e;
			if(_g3._hx_index == 2) {
				if(_g3.g._hx_index == 52) {
					if(_g1.length == 1) {
						var _g2 = _g1[0];
						var _g1 = _g2.t;
						var _g1 = _g2.p;
						var _g1 = _g2.e;
						if(_g1._hx_index == 8) {
							var _g2 = _g1.e;
							var _g3 = _g2.t;
							var _g3 = _g2.p;
							var _g3 = _g2.e;
							if(_g3._hx_index == 2) {
								if(_g3.g._hx_index == 51) {
									var args = _g1.args;
									var rem = 0;
									var size = 0;
									while(size < 4) {
										var t = args[args.length - 1 - rem].t;
										size += this.varSize(t,hxsl_VecType.VFloat);
										++rem;
									}
									if(size == 4) {
										var _g1 = 0;
										var _g2 = rem;
										while(_g1 < _g2) {
											var i = _g1++;
											args.pop();
										}
										var emat;
										var _g1 = e.e;
										if(_g1._hx_index == 8) {
											var _g2 = _g1.args;
											var e1 = _g1.e;
											emat = e1;
										} else {
											throw haxe_Exception.thrown("assert");
										}
										return { e : hxsl_TExprDef.TCall(emat,args), t : e.t, p : e.p};
									}
								}
							}
						}
					}
				}
			}
			break;
		case 16:
			var _g1 = _g.index;
			var _g2 = _g.e;
			var _g = _g2.t;
			var _g = _g2.p;
			var _g = _g2.e;
			if(_g._hx_index == 17) {
				var _g2 = _g1.t;
				var _g2 = _g1.p;
				var _g2 = _g1.e;
				if(_g2._hx_index == 0) {
					var _g1 = _g2.c;
					if(_g1._hx_index == 2) {
						var el = _g.el;
						var i = _g1.v;
						if(i >= 0 && i < el.length) {
							return el[i];
						}
						hxsl_Error.t("Reading outside array bounds",e.p);
					}
				}
			}
			break;
		default:
		}
		return e;
	}
	,packTextures: function(name,vars,t) {
		var alloc = [];
		var g = { id : hxsl_Tools.allocVarId(), name : name, type : t, kind : hxsl_VarKind.Param};
		var pos = 0;
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			var count = 1;
			if(v.type != t) {
				var _g1 = v.type;
				switch(_g1._hx_index) {
				case 15:
					var _g2 = _g1.size;
					if(_g2._hx_index == 0) {
						var t2 = _g1.t;
						var n = _g2.v;
						if(t2 == t) {
							count = n;
						} else {
							continue;
						}
					} else {
						continue;
					}
					break;
				case 17:
					var _g3 = _g1.size;
					if(t != hxsl_Type.TSampler2D) {
						continue;
					}
					break;
				default:
					continue;
				}
			}
			var a = new hxsl__$Flatten_Alloc(g,null,pos,count);
			a.v = v;
			this.varMap.set(v,a);
			alloc.push(a);
			pos += count;
		}
		g.type = hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(pos));
		if(alloc.length > 0) {
			this.outVars.push(g);
			this.allocData.set(g,alloc);
		}
		return alloc;
	}
	,packBuffers: function(vars) {
		var alloc = [];
		var g = { id : hxsl_Tools.allocVarId(), name : "buffers", type : hxsl_Type.TVoid, kind : hxsl_VarKind.Param};
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			var _g1 = v.type;
			var tmp;
			if(_g1._hx_index == 16) {
				var _g2 = _g1.size;
				var _g3 = _g1.t;
				tmp = true;
			} else {
				tmp = false;
			}
			if(tmp) {
				var a = new hxsl__$Flatten_Alloc(g,null,alloc.length,1);
				a.v = v;
				alloc.push(a);
				this.outVars.push(v);
			}
		}
		g.type = hxsl_Type.TArray(hxsl_Type.TBuffer(hxsl_Type.TVoid,hxsl_SizeDecl.SConst(0)),hxsl_SizeDecl.SConst(alloc.length));
		this.allocData.set(g,alloc);
	}
	,pack: function(name,kind,vars,t) {
		var alloc = [];
		var apos = 0;
		var g = { id : hxsl_Tools.allocVarId(), name : name, type : hxsl_Type.TVec(0,t), kind : kind};
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			var tmp;
			if(!hxsl_Tools.isSampler(v.type)) {
				var _g1 = v.type;
				if(_g1._hx_index == 16) {
					var _g2 = _g1.size;
					var _g3 = _g1.t;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = true;
			}
			if(tmp) {
				continue;
			}
			var _g4 = v.type;
			if(_g4._hx_index == 15) {
				var _g5 = _g4.size;
				var t1 = _g4.t;
				if(hxsl_Tools.isSampler(t1)) {
					continue;
				}
			}
			var size = this.varSize(v.type,t);
			var best = null;
			var _g6 = 0;
			while(_g6 < alloc.length) {
				var a = alloc[_g6];
				++_g6;
				if(a.v == null && a.size >= size && (best == null || best.size > a.size)) {
					best = a;
				}
			}
			if(best != null) {
				var free = best.size - size;
				if(free > 0) {
					var i = alloc.indexOf(best);
					var a1 = new hxsl__$Flatten_Alloc(g,t,best.pos + size,free);
					alloc.splice(i + 1,0,a1);
					best.size = size;
				}
				best.v = v;
				this.varMap.set(v,best);
			} else {
				var a2 = new hxsl__$Flatten_Alloc(g,t,apos,size);
				apos += size;
				a2.v = v;
				this.varMap.set(v,a2);
				alloc.push(a2);
				var pad = (4 - size % 4) % 4;
				if(pad > 0) {
					var a3 = new hxsl__$Flatten_Alloc(g,t,apos,pad);
					apos += pad;
					alloc.push(a3);
				}
			}
		}
		g.type = hxsl_Type.TArray(hxsl_Type.TVec(4,t),hxsl_SizeDecl.SConst(apos >> 2));
		if(apos > 0) {
			this.outVars.push(g);
			this.allocData.set(g,alloc);
		}
		return g;
	}
	,varSize: function(v,t) {
		switch(v._hx_index) {
		case 1:case 3:
			if(t == hxsl_VecType.VFloat) {
				return 1;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 5:
			var t2 = v.t;
			var n = v.size;
			if(t == t2) {
				return n;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 7:
			if(t == hxsl_VecType.VFloat) {
				return 16;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 6:case 8:
			if(t == hxsl_VecType.VFloat) {
				return 12;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 15:
			var _g = v.size;
			if(_g._hx_index == 0) {
				var at = v.t;
				var n = _g.v;
				return this.varSize(at,t) * n;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		default:
			throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
		}
	}
	,gatherVar: function(v) {
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var v1 = vl[_g];
				++_g;
				this.gatherVar(v1);
			}
		} else {
			switch(v.kind._hx_index) {
			case 0:
				if(hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.PerObject)) {
					this.params.push(v);
				} else {
					this.globals.push(v);
				}
				break;
			case 2:
				this.params.push(v);
				break;
			default:
				this.outVars.push(v);
			}
		}
	}
	,__class__: hxsl_Flatten
};
var hxsl_Globals = function() {
	this.channels = [];
	this.map = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Globals"] = hxsl_Globals;
hxsl_Globals.__name__ = "hxsl.Globals";
hxsl_Globals.allocID = function(path) {
	if(hxsl_Globals.MAP == null) {
		hxsl_Globals.MAP = new haxe_ds_StringMap();
		hxsl_Globals.ALL = [];
	}
	var id = hxsl_Globals.MAP.h[path];
	if(id == null) {
		id = hxsl_Globals.ALL.length;
		hxsl_Globals.ALL.push(path);
		hxsl_Globals.MAP.h[path] = id;
	}
	return id;
};
hxsl_Globals.prototype = {
	set: function(path,v) {
		var this1 = this.map;
		var key = hxsl_Globals.allocID(path);
		this1.h[key] = v;
	}
	,allocChannelID: function(t) {
		var _g = 0;
		var _g1 = this.maxChannels;
		while(_g < _g1) {
			var i = _g++;
			if(this.channels[i] == t) {
				return i;
			}
		}
		if(this.maxChannels == 1 << hxsl_Tools.MAX_CHANNELS_BITS) {
			throw haxe_Exception.thrown("Too many unique channels");
		}
		var i = this.maxChannels++;
		this.channels[i] = t;
		return i;
	}
	,__class__: hxsl_Globals
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hxsl_GlslOut = function() {
	this.outIndex = 0;
	this.uniformBuffer = 0;
	this.exprIds = 0;
	this.varNames = new haxe_ds_IntMap();
	this.allNames = new haxe_ds_StringMap();
};
$hxClasses["hxsl.GlslOut"] = hxsl_GlslOut;
hxsl_GlslOut.__name__ = "hxsl.GlslOut";
hxsl_GlslOut.prototype = {
	decl: function(s) {
		var _g = 0;
		var _g1 = this.decls;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d == s) {
				return;
			}
		}
		if(HxOverrides.cca(s,0) == 35) {
			this.decls.unshift(s);
		} else {
			this.decls.push(s);
		}
	}
	,addType: function(t) {
		switch(t._hx_index) {
		case 0:
			this.buf.b += Std.string("void");
			break;
		case 1:
			this.buf.b += Std.string("int");
			break;
		case 2:
			this.buf.b += Std.string("bool");
			break;
		case 3:
			this.buf.b += Std.string("float");
			break;
		case 4:
			this.buf.b += Std.string("string");
			break;
		case 5:
			var k = t.t;
			var size = t.size;
			switch(k._hx_index) {
			case 0:
				this.buf.b += Std.string("i");
				break;
			case 1:
				break;
			case 2:
				this.buf.b += Std.string("b");
				break;
			}
			this.buf.b += Std.string("vec");
			this.buf.b += Std.string(size);
			break;
		case 6:
			this.buf.b += Std.string("mat3");
			break;
		case 7:
			this.buf.b += Std.string("mat4");
			break;
		case 8:
			this.decl(hxsl_GlslOut.MAT34);
			this.buf.b += Std.string("_mat3x4");
			break;
		case 9:
			var n = t.size;
			this.buf.b += Std.string("vec");
			this.buf.b += Std.string(n);
			break;
		case 10:
			this.buf.b += Std.string("sampler2D");
			break;
		case 11:
			this.buf.b += Std.string("sampler2DArray");
			if(this.glES != null) {
				this.decl("precision lowp sampler2DArray;");
			}
			break;
		case 12:
			this.buf.b += Std.string("samplerCube");
			break;
		case 13:
			var vl = t.vl;
			this.buf.b += Std.string("struct { ");
			var _g = 0;
			while(_g < vl.length) {
				var v = vl[_g];
				++_g;
				this.addVar(v);
				this.buf.b += Std.string(";");
			}
			this.buf.b += Std.string(" }");
			break;
		case 14:
			var _g = t.variants;
			this.buf.b += Std.string("function");
			break;
		case 15:
			var size = t.size;
			var t1 = t.t;
			this.addType(t1);
			this.buf.b += Std.string("[");
			switch(size._hx_index) {
			case 0:
				var _g = size.v;
				if(_g == 1) {
					if(this.intelDriverFix) {
						this.buf.b += Std.string(2);
					} else {
						var v = _g;
						this.buf.b += Std.string(v);
					}
				} else {
					var v = _g;
					this.buf.b += Std.string(v);
				}
				break;
			case 1:
				var v = size.v;
				var v1 = this.varName(v);
				this.buf.b += Std.string(v1);
				break;
			}
			this.buf.b += Std.string("]");
			break;
		case 16:
			var _g = t.size;
			var _g = t.t;
			throw haxe_Exception.thrown("assert");
		case 17:
			var n = t.size;
			this.buf.b += Std.string("channel" + n);
			break;
		case 18:
			this.buf.b += Std.string("mat2");
			break;
		}
	}
	,addVar: function(v) {
		var _g = v.type;
		switch(_g._hx_index) {
		case 15:
			var size = _g.size;
			var t = _g.t;
			var old = v.type;
			v.type = t;
			this.addVar(v);
			v.type = old;
			this.buf.b += Std.string("[");
			switch(size._hx_index) {
			case 0:
				var _g1 = size.v;
				if(_g1 == 1) {
					if(this.intelDriverFix) {
						this.buf.b += Std.string(2);
					} else {
						var n = _g1;
						this.buf.b += Std.string(n);
					}
				} else {
					var n = _g1;
					this.buf.b += Std.string(n);
				}
				break;
			case 1:
				var v1 = size.v;
				var v2 = this.varName(v1);
				this.buf.b += Std.string(v2);
				break;
			}
			this.buf.b += Std.string("]");
			break;
		case 16:
			var size = _g.size;
			var t = _g.t;
			this.buf.b += Std.string("uniform_buffer" + this.uniformBuffer++);
			this.buf.b += Std.string(" { ");
			v.type = hxsl_Type.TArray(t,size);
			this.addVar(v);
			v.type = hxsl_Type.TBuffer(t,size);
			this.buf.b += Std.string("; }");
			break;
		default:
			this.addType(v.type);
			this.buf.b += Std.string(" ");
			var v1 = this.varName(v);
			this.buf.b += Std.string(v1);
		}
	}
	,addValue: function(e,tabs) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 4:
			var el = _g.el;
			var name = "val" + this.exprIds++;
			var tmp = this.buf;
			this.buf = new StringBuf();
			this.addType(e.t);
			this.buf.b += Std.string(" ");
			this.buf.b += Std.string(name);
			this.buf.b += Std.string("(void)");
			var el2 = el.slice();
			var last = el2[el2.length - 1];
			el2[el2.length - 1] = { e : hxsl_TExprDef.TReturn(last), t : e.t, p : last.p};
			var e2 = { t : hxsl_Type.TVoid, e : hxsl_TExprDef.TBlock(el2), p : e.p};
			this.addExpr(e2,"");
			this.exprValues.push(this.buf.b);
			this.buf = tmp;
			this.buf.b += Std.string(name);
			this.buf.b += Std.string("()");
			break;
		case 10:
			var eelse = _g.eelse;
			var eif = _g.eif;
			var econd = _g.econd;
			this.buf.b += Std.string("( ");
			this.addValue(econd,tabs);
			this.buf.b += Std.string(" ) ? ");
			this.addValue(eif,tabs);
			this.buf.b += Std.string(" : ");
			this.addValue(eelse,tabs);
			break;
		case 20:
			var _g1 = _g.args;
			var _g1 = _g.m;
			var e1 = _g.e;
			this.addValue(e1,tabs);
			break;
		default:
			this.addExpr(e,tabs);
		}
	}
	,addBlock: function(e,tabs) {
		this.addExpr(e,tabs);
	}
	,getFunName: function(g,args,rt) {
		switch(g._hx_index) {
		case 20:
			if(rt == hxsl_Type.TInt && this.glES != null) {
				this.decl("int _imod( int x, int y ) { return int(mod(float(x),float(y))); }");
				return "_imod";
			}
			break;
		case 33:
			var _g = args[0].t;
			switch(_g._hx_index) {
			case 10:case 11:
				if(this.glES != null && this.glES <= 2) {
					return "texture2D";
				}
				break;
			case 12:
				if(this.glES != null && this.glES <= 2) {
					return "textureCube";
				}
				break;
			case 17:
				var _g1 = _g.size;
				if(this.glES != null && this.glES <= 2) {
					return "texture2D";
				}
				break;
			default:
			}
			break;
		case 34:
			var _g = args[0].t;
			switch(_g._hx_index) {
			case 10:case 11:
				if(this.glES != null && this.glES <= 2) {
					this.decl("#extension GL_EXT_shader_texture_lod : enable");
					return "texture2DLodEXT";
				}
				break;
			case 12:
				if(this.glES != null && this.glES <= 2) {
					this.decl("#extension GL_EXT_shader_texture_lod : enable");
					return "textureCubeLodEXT";
				}
				break;
			case 17:
				var _g1 = _g.size;
				if(this.glES != null && this.glES <= 2) {
					this.decl("#extension GL_EXT_shader_texture_lod : enable");
					return "texture2DLodEXT";
				}
				break;
			default:
			}
			break;
		case 35:case 36:
			return "texelFetch";
		case 50:
			if(args[0].t == hxsl_Type.TMat3x4) {
				this.decl(hxsl_GlslOut.MAT34);
				this.decl("mat3 _mat3( _mat3x4 v ) { return mat3(v.a.xyz,v.b.xyz,v.c.xyz); }");
				return "_mat3";
			}
			break;
		case 52:
			this.decl(hxsl_GlslOut.MAT34);
			if(args.length == 1) {
				this.decl("_mat3x4 mat_to_34( mat4 m ) { return _mat3x4(m[0],m[1],m[2]); }");
				return "mat_to_34";
			}
			break;
		case 54:
			this.decl("vec4 pack( float v ) { vec4 color = fract(v * vec4(1, 255, 255.*255., 255.*255.*255.)); return color - color.yzww * vec4(1. / 255., 1. / 255., 1. / 255., 0.); }");
			break;
		case 55:
			this.decl("float unpack( vec4 color ) { return dot(color,vec4(1., 1. / 255., 1. / (255. * 255.), 1. / (255. * 255. * 255.))); }");
			break;
		case 56:
			this.decl("vec4 packNormal( vec3 v ) { return vec4((v + vec3(1.)) * vec3(0.5),1.); }");
			break;
		case 57:
			this.decl("vec3 unpackNormal( vec4 v ) { return normalize((v.xyz - vec3(0.5)) * vec3(2.)); }");
			break;
		case 58:
			this.decl("vec2 screenToUv( vec2 v ) { return v * vec2(0.5,-0.5) + vec2(0.5,0.5); }");
			break;
		case 59:
			this.decl("vec2 uvToScreen( vec2 v ) { return v * vec2(2.,-2.) + vec2(-1., 1.); }");
			break;
		case 60:case 61:case 62:
			this.decl("#extension GL_OES_standard_derivatives:enable");
			break;
		default:
		}
		return hxsl_GlslOut.GLOBALS.get(g);
	}
	,addExpr: function(e,tabs) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			switch(c._hx_index) {
			case 0:
				this.buf.b += Std.string("null");
				break;
			case 1:
				var b = c.b;
				this.buf.b += Std.string(b);
				break;
			case 2:
				var v = c.v;
				this.buf.b += Std.string(v);
				break;
			case 3:
				var f = c.v;
				var str = "" + f;
				this.buf.b += Std.string(str);
				if(str.indexOf(".") == -1 && str.indexOf("e") == -1) {
					this.buf.b += Std.string(".");
				}
				break;
			case 4:
				var v = c.v;
				this.buf.b += Std.string("\"" + v + "\"");
				break;
			}
			break;
		case 1:
			var v = _g.v;
			var v1 = this.varName(v);
			this.buf.b += Std.string(v1);
			break;
		case 2:
			var g = _g.g;
			var v = hxsl_GlslOut.GLOBALS.get(g);
			this.buf.b += Std.string(v);
			break;
		case 3:
			var e1 = _g.e;
			this.buf.b += Std.string("(");
			this.addValue(e1,tabs);
			this.buf.b += Std.string(")");
			break;
		case 4:
			var el = _g.el;
			this.buf.b += Std.string("{\n");
			var t2 = tabs + "\t";
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				this.buf.b += Std.string(t2);
				this.addExpr(e1,t2);
				this.newLine(e1);
			}
			this.buf.b += Std.string(tabs);
			this.buf.b += Std.string("}");
			break;
		case 5:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var op = _g.op;
			var _g1 = e2.t;
			var _g2 = e1.t;
			switch(op._hx_index) {
			case 1:
				if(_g2._hx_index == 5) {
					if(_g2.size == 3) {
						if(_g2.t._hx_index == 1) {
							if(_g1._hx_index == 8) {
								this.decl(hxsl_GlslOut.MAT34);
								this.decl("vec3 m3x4mult( vec3 v, _mat3x4 m) { vec4 ve = vec4(v,1.0); return vec3(dot(m.a,ve),dot(m.b,ve),dot(m.c,ve)); }");
								var tmp;
								if(op._hx_index == 20) {
									var _g3 = op.op;
									tmp = true;
								} else {
									tmp = false;
								}
								if(tmp) {
									this.addValue(e1,tabs);
									this.buf.b += Std.string(" = ");
								}
								this.buf.b += Std.string("m3x4mult(");
								this.addValue(e1,tabs);
								this.buf.b += Std.string(",");
								this.addValue(e2,tabs);
								this.buf.b += Std.string(")");
							} else {
								this.addValue(e1,tabs);
								this.buf.b += Std.string(" ");
								var v = hxsl_Printer.opStr(op);
								this.buf.b += Std.string(v);
								this.buf.b += Std.string(" ");
								this.addValue(e2,tabs);
							}
						} else {
							this.addValue(e1,tabs);
							this.buf.b += Std.string(" ");
							var v = hxsl_Printer.opStr(op);
							this.buf.b += Std.string(v);
							this.buf.b += Std.string(" ");
							this.addValue(e2,tabs);
						}
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 5:
				if(_g2._hx_index == 5) {
					var _g3 = _g2.t;
					if(_g1._hx_index == 5) {
						var _g3 = _g1.t;
						var _g3 = _g1.size;
						var n = _g2.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 6:
				if(_g2._hx_index == 5) {
					var _g3 = _g2.t;
					if(_g1._hx_index == 5) {
						var _g3 = _g1.t;
						var _g3 = _g1.size;
						var n = _g2.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 7:
				if(_g2._hx_index == 5) {
					var _g3 = _g2.t;
					if(_g1._hx_index == 5) {
						var _g3 = _g1.t;
						var _g3 = _g1.size;
						var n = _g2.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 8:
				if(_g2._hx_index == 5) {
					var _g3 = _g2.t;
					if(_g1._hx_index == 5) {
						var _g3 = _g1.t;
						var _g3 = _g1.size;
						var n = _g2.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 9:
				if(_g2._hx_index == 5) {
					var _g3 = _g2.t;
					if(_g1._hx_index == 5) {
						var _g3 = _g1.t;
						var _g3 = _g1.size;
						var n = _g2.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 10:
				if(_g2._hx_index == 5) {
					var _g3 = _g2.t;
					if(_g1._hx_index == 5) {
						var _g3 = _g1.t;
						var _g3 = _g1.size;
						var n = _g2.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 18:
				this.decl("int _ushr( int i, int j ) { return int(uint(i) >> uint(j)); }");
				this.buf.b += Std.string("_ushr(");
				this.addValue(e1,tabs);
				this.buf.b += Std.string(",");
				this.addValue(e2,tabs);
				this.buf.b += Std.string(")");
				break;
			case 19:
				if(e.t != hxsl_Type.TInt) {
					var tmp;
					if(op._hx_index == 20) {
						var _g3 = op.op;
						tmp = true;
					} else {
						tmp = false;
					}
					if(tmp) {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" = ");
					}
					this.addExpr({ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mod), t : hxsl_Type.TFun([]), p : e.p},[e1,e2]), t : e.t, p : e.p},tabs);
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 20:
				switch(op.op._hx_index) {
				case 1:
					if(_g2._hx_index == 5) {
						if(_g2.size == 3) {
							if(_g2.t._hx_index == 1) {
								if(_g1._hx_index == 8) {
									this.decl(hxsl_GlslOut.MAT34);
									this.decl("vec3 m3x4mult( vec3 v, _mat3x4 m) { vec4 ve = vec4(v,1.0); return vec3(dot(m.a,ve),dot(m.b,ve),dot(m.c,ve)); }");
									var tmp;
									if(op._hx_index == 20) {
										var _g1 = op.op;
										tmp = true;
									} else {
										tmp = false;
									}
									if(tmp) {
										this.addValue(e1,tabs);
										this.buf.b += Std.string(" = ");
									}
									this.buf.b += Std.string("m3x4mult(");
									this.addValue(e1,tabs);
									this.buf.b += Std.string(",");
									this.addValue(e2,tabs);
									this.buf.b += Std.string(")");
								} else {
									this.addValue(e1,tabs);
									this.buf.b += Std.string(" ");
									var v = hxsl_Printer.opStr(op);
									this.buf.b += Std.string(v);
									this.buf.b += Std.string(" ");
									this.addValue(e2,tabs);
								}
							} else {
								this.addValue(e1,tabs);
								this.buf.b += Std.string(" ");
								var v = hxsl_Printer.opStr(op);
								this.buf.b += Std.string(v);
								this.buf.b += Std.string(" ");
								this.addValue(e2,tabs);
							}
						} else {
							this.addValue(e1,tabs);
							this.buf.b += Std.string(" ");
							var v = hxsl_Printer.opStr(op);
							this.buf.b += Std.string(v);
							this.buf.b += Std.string(" ");
							this.addValue(e2,tabs);
						}
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
					break;
				case 19:
					if(e.t != hxsl_Type.TInt) {
						var tmp;
						if(op._hx_index == 20) {
							var _g1 = op.op;
							tmp = true;
						} else {
							tmp = false;
						}
						if(tmp) {
							this.addValue(e1,tabs);
							this.buf.b += Std.string(" = ");
						}
						this.addExpr({ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mod), t : hxsl_Type.TFun([]), p : e.p},[e1,e2]), t : e.t, p : e.p},tabs);
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
					break;
				default:
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			default:
				this.addValue(e1,tabs);
				this.buf.b += Std.string(" ");
				var v = hxsl_Printer.opStr(op);
				this.buf.b += Std.string(v);
				this.buf.b += Std.string(" ");
				this.addValue(e2,tabs);
			}
			break;
		case 6:
			var e1 = _g.e1;
			var op = _g.op;
			var _this = this.buf;
			var _this1 = _this.b;
			var tmp;
			switch(op._hx_index) {
			case 0:
				tmp = "++";
				break;
			case 1:
				tmp = "--";
				break;
			case 2:
				tmp = "!";
				break;
			case 3:
				tmp = "-";
				break;
			case 4:
				tmp = "~";
				break;
			}
			_this.b = _this1 + Std.string(tmp);
			this.addValue(e1,tabs);
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			this.locals.h[v.id] = v;
			if(init != null) {
				var v1 = this.varName(v);
				this.buf.b += Std.string(v1);
				this.buf.b += Std.string(" = ");
				this.addValue(init,tabs);
			} else {
				this.buf.b += Std.string("/*var*/");
			}
			break;
		case 8:
			var _g1 = _g.args;
			var _g2 = _g.e;
			var _g3 = _g2.t;
			var _g3 = _g2.p;
			var _g3 = _g2.e;
			if(_g3._hx_index == 2) {
				var _g4 = _g3.g;
				switch(_g4._hx_index) {
				case 35:
					var args = _g1;
					var g = _g4;
					var v = this.getFunName(g,args,e.t);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string("(");
					var _g3 = 0;
					while(_g3 < args.length) {
						var e1 = args[_g3];
						++_g3;
						this.addValue(e1,tabs);
						this.buf.b += Std.string(", ");
					}
					this.buf.b += Std.string("0)");
					break;
				case 53:
					if(_g1.length == 1) {
						var e1 = _g1[0];
						this.buf.b += Std.string("clamp(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(", 0., 1.)");
					} else {
						var v = _g2;
						var args = _g1;
						var _g3 = v.e;
						if(_g3._hx_index == 2) {
							var g = _g3.g;
							var v1 = this.getFunName(g,args,e.t);
							this.buf.b += Std.string(v1);
						} else {
							this.addValue(v,tabs);
						}
						this.buf.b += Std.string("(");
						var first = true;
						var _g3 = 0;
						while(_g3 < args.length) {
							var e1 = args[_g3];
							++_g3;
							if(first) {
								first = false;
							} else {
								this.buf.b += Std.string(", ");
							}
							this.addValue(e1,tabs);
						}
						this.buf.b += Std.string(")");
					}
					break;
				default:
					var args = _g1;
					var v = _g2;
					var _g3 = v.e;
					if(_g3._hx_index == 2) {
						var g = _g3.g;
						var v1 = this.getFunName(g,args,e.t);
						this.buf.b += Std.string(v1);
					} else {
						this.addValue(v,tabs);
					}
					this.buf.b += Std.string("(");
					var first = true;
					var _g3 = 0;
					while(_g3 < args.length) {
						var e1 = args[_g3];
						++_g3;
						if(first) {
							first = false;
						} else {
							this.buf.b += Std.string(", ");
						}
						this.addValue(e1,tabs);
					}
					this.buf.b += Std.string(")");
				}
			} else {
				var args = _g1;
				var v = _g2;
				var _g1 = v.e;
				if(_g1._hx_index == 2) {
					var g = _g1.g;
					var v1 = this.getFunName(g,args,e.t);
					this.buf.b += Std.string(v1);
				} else {
					this.addValue(v,tabs);
				}
				this.buf.b += Std.string("(");
				var first = true;
				var _g1 = 0;
				while(_g1 < args.length) {
					var e1 = args[_g1];
					++_g1;
					if(first) {
						first = false;
					} else {
						this.buf.b += Std.string(", ");
					}
					this.addValue(e1,tabs);
				}
				this.buf.b += Std.string(")");
			}
			break;
		case 9:
			var regs = _g.regs;
			var e1 = _g.e;
			if(e1.t._hx_index == 3) {
				var _g1 = 0;
				while(_g1 < regs.length) {
					var r = regs[_g1];
					++_g1;
					if(r != hxsl_Component.X) {
						throw haxe_Exception.thrown("assert");
					}
				}
				switch(regs.length) {
				case 1:
					this.addValue(e1,tabs);
					break;
				case 2:
					this.decl("vec2 _vec2( float v ) { return vec2(v,v); }");
					this.buf.b += Std.string("_vec2(");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(")");
					break;
				case 3:
					this.decl("vec3 _vec3( float v ) { return vec3(v,v,v); }");
					this.buf.b += Std.string("_vec3(");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(")");
					break;
				case 4:
					this.decl("vec4 _vec4( float v ) { return vec4(v,v,v,v); }");
					this.buf.b += Std.string("_vec4(");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(")");
					break;
				default:
					throw haxe_Exception.thrown("assert");
				}
			} else {
				this.addValue(e1,tabs);
				this.buf.b += Std.string(".");
				var _g1 = 0;
				while(_g1 < regs.length) {
					var r = regs[_g1];
					++_g1;
					var _this = this.buf;
					var _this1 = _this.b;
					var tmp;
					switch(r._hx_index) {
					case 0:
						tmp = "x";
						break;
					case 1:
						tmp = "y";
						break;
					case 2:
						tmp = "z";
						break;
					case 3:
						tmp = "w";
						break;
					}
					_this.b = _this1 + Std.string(tmp);
				}
			}
			break;
		case 10:
			var eelse = _g.eelse;
			var eif = _g.eif;
			var econd = _g.econd;
			this.buf.b += Std.string("if( ");
			this.addValue(econd,tabs);
			this.buf.b += Std.string(") ");
			this.addExpr(eif,tabs);
			if(eelse != null) {
				if(!this.isBlock(eif)) {
					this.buf.b += Std.string(";");
				}
				this.buf.b += Std.string(" else ");
				this.addExpr(eelse,tabs);
			}
			break;
		case 11:
			this.buf.b += Std.string("discard");
			break;
		case 12:
			var e1 = _g.e;
			if(e1 == null) {
				this.buf.b += Std.string("return");
			} else {
				this.buf.b += Std.string("return ");
				this.addValue(e1,tabs);
			}
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			this.locals.h[v.id] = v;
			var _g1 = it.e;
			if(_g1._hx_index == 5) {
				if(_g1.op._hx_index == 21) {
					var e2 = _g1.e2;
					var e1 = _g1.e1;
					this.buf.b += Std.string("for(");
					this.buf.b += Std.string(v.name + "=");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(";" + v.name + "<");
					this.addValue(e2,tabs);
					this.buf.b += Std.string(";" + v.name + "++) ");
					this.addBlock(loop,tabs);
				} else {
					throw haxe_Exception.thrown("assert");
				}
			} else {
				throw haxe_Exception.thrown("assert");
			}
			break;
		case 14:
			this.buf.b += Std.string("continue");
			break;
		case 15:
			this.buf.b += Std.string("break");
			break;
		case 16:
			var index = _g.index;
			var e1 = _g.e;
			this.addValue(e1,tabs);
			this.buf.b += Std.string("[");
			this.addValue(index,tabs);
			this.buf.b += Std.string("]");
			break;
		case 17:
			var el = _g.el;
			var _g1 = e.t;
			if(_g1._hx_index == 15) {
				var _g2 = _g1.size;
				var t = _g1.t;
				this.addType(t);
			} else {
				throw haxe_Exception.thrown("assert");
			}
			this.buf.b += Std.string("[" + el.length + "]");
			this.buf.b += Std.string("(");
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += Std.string(", ");
				}
				this.addValue(e,tabs);
			}
			this.buf.b += Std.string(")");
			break;
		case 18:
			var _g1 = _g.def;
			var _g1 = _g.cases;
			var _g1 = _g.e;
			this.buf.b += Std.string("switch(...)");
			break;
		case 19:
			var _g1 = _g.loop;
			var _g2 = _g.e;
			if(_g.normalWhile == false) {
				var e = _g2;
				var loop = _g1;
				var old = tabs;
				tabs += "\t";
				this.buf.b += Std.string("do ");
				this.addBlock(loop,tabs);
				this.buf.b += Std.string(" while( ");
				this.addValue(e,tabs);
				this.buf.b += Std.string(" )");
			} else {
				var e = _g2;
				var loop = _g1;
				this.buf.b += Std.string("while( ");
				this.addValue(e,tabs);
				this.buf.b += Std.string(" ) ");
				this.addBlock(loop,tabs);
			}
			break;
		case 20:
			var _g1 = _g.args;
			var _g1 = _g.m;
			var e = _g.e;
			this.addExpr(e,tabs);
			break;
		}
	}
	,varName: function(v) {
		if(v.kind == hxsl_VarKind.Output) {
			if(this.isVertex) {
				return "gl_Position";
			}
			if(this.glES != null && this.glES <= 2) {
				if(this.outIndexes == null) {
					return "gl_FragColor";
				}
				return "gl_FragData[" + this.outIndexes.h[v.id] + "]";
			}
		}
		var n = this.varNames.h[v.id];
		if(n != null) {
			return n;
		}
		n = v.name;
		if(Object.prototype.hasOwnProperty.call(hxsl_GlslOut.KWDS.h,n)) {
			n = "_" + n;
		}
		if(Object.prototype.hasOwnProperty.call(this.allNames.h,n)) {
			var k = 2;
			n += "_";
			while(Object.prototype.hasOwnProperty.call(this.allNames.h,n + k)) ++k;
			n += k;
		}
		this.varNames.h[v.id] = n;
		this.allNames.h[n] = v.id;
		return n;
	}
	,newLine: function(e) {
		if(this.isBlock(e)) {
			this.buf.b += Std.string("\n");
		} else {
			this.buf.b += Std.string(";\n");
		}
	}
	,isBlock: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 4:
			var _g1 = _g.el;
			return true;
		case 13:
			var _g1 = _g.it;
			var _g1 = _g.v;
			var loop = _g.loop;
			return this.isBlock(loop);
		case 19:
			var _g1 = _g.e;
			if(_g.normalWhile == true) {
				var loop = _g.loop;
				return this.isBlock(loop);
			} else {
				return false;
			}
			break;
		default:
			return false;
		}
	}
	,initVar: function(v) {
		switch(v.kind._hx_index) {
		case 0:case 2:
			var _g = v.type;
			var tmp;
			if(_g._hx_index == 16) {
				var _g1 = _g.size;
				var _g1 = _g.t;
				tmp = true;
			} else {
				tmp = false;
			}
			if(tmp) {
				this.buf.b += Std.string("layout(std140) ");
			}
			this.buf.b += Std.string("uniform ");
			break;
		case 1:
			this.buf.b += Std.string(this.glES != null && this.glES <= 2 ? "attribute " : "in ");
			break;
		case 3:
			this.buf.b += Std.string(this.glES != null && this.glES <= 2 ? "varying " : this.isVertex ? "out " : "in ");
			break;
		case 4:
			break;
		case 5:
			if(this.glES != null && this.glES <= 2) {
				this.outIndexes.h[v.id] = this.outIndex++;
				return;
			}
			if(this.isVertex) {
				return;
			}
			if(this.glES != null) {
				this.buf.b += Std.string("layout(location=" + this.outIndex++ + ") ");
			}
			this.buf.b += Std.string("out ");
			break;
		case 6:
			return;
		}
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				if(q._hx_index == 6) {
					var p = q.p;
					switch(p._hx_index) {
					case 0:
						this.buf.b += Std.string("lowp ");
						break;
					case 1:
						this.buf.b += Std.string("mediump ");
						break;
					case 2:
						this.buf.b += Std.string("highp ");
						break;
					}
				}
			}
		}
		this.addVar(v);
		this.buf.b += Std.string(";\n");
	}
	,initVars: function(s) {
		this.outIndex = 0;
		this.uniformBuffer = 0;
		this.outIndexes = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.initVar(v);
		}
		this.buf.b += Std.string("\n");
		if(this.outIndex < 2) {
			this.outIndexes = null;
		} else if(!this.isVertex && (this.glES != null && this.glES <= 2)) {
			this.decl("#extension GL_EXT_draw_buffers : enable");
		}
	}
	,run: function(s) {
		this.locals = new haxe_ds_IntMap();
		this.decls = [];
		this.buf = new StringBuf();
		this.exprValues = [];
		this.decl("precision mediump float;");
		if(s.funs.length != 1) {
			throw haxe_Exception.thrown("assert");
		}
		var f = s.funs[0];
		this.isVertex = f.kind == hxsl_FunctionKind.Vertex;
		this.initVars(s);
		var tmp = this.buf;
		this.buf = new StringBuf();
		this.buf.b += Std.string("void main(void) {\n");
		var _g = f.expr.e;
		if(_g._hx_index == 4) {
			var el = _g.el;
			var _g = 0;
			while(_g < el.length) {
				var e = el[_g];
				++_g;
				this.buf.b += Std.string("\t");
				this.addExpr(e,"\t");
				this.newLine(e);
			}
		} else {
			this.addExpr(f.expr,"");
		}
		this.buf.b += Std.string("}");
		this.exprValues.push(this.buf.b);
		this.buf = tmp;
		var locals = Lambda.array(this.locals);
		locals.sort(function(v1,v2) {
			return Reflect.compare(v1.name,v2.name);
		});
		var _g = 0;
		while(_g < locals.length) {
			var v = locals[_g];
			++_g;
			this.addVar(v);
			this.buf.b += Std.string(";\n");
		}
		this.buf.b += Std.string("\n");
		var _g = 0;
		var _g1 = this.exprValues;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			this.buf.b += Std.string(e);
			this.buf.b += Std.string("\n\n");
		}
		if(this.glES != null) {
			this.decl("#version " + (this.version < 100 ? 100 : this.version) + (this.version > 150 ? " es" : ""));
		} else if(this.version != null) {
			this.decl("#version " + (this.version > 150 ? 150 : this.version));
		} else {
			this.decl("#version 130");
		}
		this.decls.push(this.buf.b);
		this.buf = null;
		return this.decls.join("\n");
	}
	,__class__: hxsl_GlslOut
};
var hxsl__$Linker_AllocatedVar = function() {
};
$hxClasses["hxsl._Linker.AllocatedVar"] = hxsl__$Linker_AllocatedVar;
hxsl__$Linker_AllocatedVar.__name__ = "hxsl._Linker.AllocatedVar";
hxsl__$Linker_AllocatedVar.prototype = {
	__class__: hxsl__$Linker_AllocatedVar
};
var hxsl__$Linker_ShaderInfos = function(n,v) {
	this.name = n;
	this.uid = hxsl__$Linker_ShaderInfos.UID++;
	this.vertex = v;
	this.processed = new haxe_ds_IntMap();
	this.usedFunctions = [];
	this.read = new haxe_ds_IntMap();
	this.write = new haxe_ds_IntMap();
};
$hxClasses["hxsl._Linker.ShaderInfos"] = hxsl__$Linker_ShaderInfos;
hxsl__$Linker_ShaderInfos.__name__ = "hxsl._Linker.ShaderInfos";
hxsl__$Linker_ShaderInfos.prototype = {
	__class__: hxsl__$Linker_ShaderInfos
};
var hxsl_Linker = function(batchMode) {
	if(batchMode == null) {
		batchMode = false;
	}
	this.debugDepth = 0;
	this.batchMode = batchMode;
};
$hxClasses["hxsl.Linker"] = hxsl_Linker;
hxsl_Linker.__name__ = "hxsl.Linker";
hxsl_Linker.prototype = {
	error: function(msg,p) {
		return hxsl_Error.t(msg,p);
	}
	,mergeVar: function(path,v,v2,p) {
		switch(v.kind._hx_index) {
		case 0:case 1:case 3:case 4:case 5:
			break;
		case 2:case 6:
			throw haxe_Exception.thrown("assert");
		}
		if(v.kind != v2.kind && v.kind != hxsl_VarKind.Local && v2.kind != hxsl_VarKind.Local) {
			this.error("'" + path + "' kind does not match : " + Std.string(v.kind) + " should be " + Std.string(v2.kind),p);
		}
		var _g = v2.type;
		var _g1 = v.type;
		if(_g1._hx_index == 13) {
			if(_g._hx_index == 13) {
				var fl1 = _g1.vl;
				var fl2 = _g.vl;
				var _g = 0;
				while(_g < fl1.length) {
					var f1 = fl1[_g];
					++_g;
					var ft = null;
					var _g1 = 0;
					while(_g1 < fl2.length) {
						var f2 = fl2[_g1];
						++_g1;
						if(f1.name == f2.name) {
							ft = f2;
							break;
						}
					}
					if(ft == null) {
						fl2.push(this.allocVar(f1,p).v);
					} else {
						this.mergeVar(path + "." + ft.name,f1,ft,p);
					}
				}
			} else if(!Type.enumEq(v.type,v2.type)) {
				this.error("'" + path + "' type does not match : " + hxsl_Tools.toString(v.type) + " should be " + hxsl_Tools.toString(v2.type),p);
			}
		} else if(!Type.enumEq(v.type,v2.type)) {
			this.error("'" + path + "' type does not match : " + hxsl_Tools.toString(v.type) + " should be " + hxsl_Tools.toString(v2.type),p);
		}
	}
	,allocVar: function(v,p,path,parent) {
		var _gthis = this;
		if(v.parent != null && parent == null) {
			parent = this.allocVar(v.parent,p);
			var p1 = parent.v;
			path = p1.name;
			p1 = p1.parent;
			while(p1 != null) {
				path = p1.name + "." + path;
				p1 = p1.parent;
			}
		}
		var key = path == null ? v.name : path + "." + v.name;
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				if(q._hx_index == 4) {
					var n = q.n;
					key = n;
				}
			}
		}
		var v2 = this.varMap.h[key];
		var vname = v.name;
		if(v2 != null) {
			var _g = 0;
			var _g1 = v2.merged;
			while(_g < _g1.length) {
				var vm = _g1[_g];
				++_g;
				if(vm == v) {
					return v2;
				}
			}
			var tmp;
			if(!(v.kind == hxsl_VarKind.Param && !hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.Shared) && !_gthis.isBatchShader || v.kind == hxsl_VarKind.Function || v.kind == hxsl_VarKind.Var && hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.Private))) {
				var v1 = v2.v;
				tmp = v1.kind == hxsl_VarKind.Param && !hxsl_Tools.hasQualifier(v1,hxsl_VarQualifier.Shared) && !_gthis.isBatchShader || v1.kind == hxsl_VarKind.Function || v1.kind == hxsl_VarKind.Var && hxsl_Tools.hasQualifier(v1,hxsl_VarQualifier.Private);
			} else {
				tmp = true;
			}
			if(tmp || v.kind == hxsl_VarKind.Param && v2.v.kind == hxsl_VarKind.Param) {
				var k = 2;
				while(true) {
					var a = this.varMap.h[key + k];
					if(a == null) {
						break;
					}
					var _g = 0;
					var _g1 = a.merged;
					while(_g < _g1.length) {
						var vm = _g1[_g];
						++_g;
						if(vm == v) {
							return a;
						}
					}
					++k;
				}
				vname += k;
				key += k;
			} else {
				v2.merged.push(v);
				this.mergeVar(key,v,v2.v,p);
				this.varIdMap.h[v.id] = v2.id;
				return v2;
			}
		}
		var vid = this.allVars.length + 1;
		var v2 = { id : vid, name : vname, type : v.type, kind : v.kind, qualifiers : v.qualifiers, parent : parent == null ? null : parent.v};
		var a = new hxsl__$Linker_AllocatedVar();
		a.v = v2;
		a.merged = [v];
		a.path = key;
		a.id = vid;
		a.parent = parent;
		a.instanceIndex = this.curInstance;
		this.allVars.push(a);
		this.varMap.h[key] = a;
		var _g = v2.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = [];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v = vl[_g1];
				++_g1;
				_g.push(this.allocVar(v,p,key,a).v);
			}
			v2.type = hxsl_Type.TStruct(_g);
		}
		return a;
	}
	,mapExprVar: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			if(!this.locals.h.hasOwnProperty(v.id)) {
				var v1 = this.allocVar(v,e.p);
				if(this.curShader != null && !this.curShader.write.h.hasOwnProperty(v1.id)) {
					this.curShader.read.h[v1.id] = v1;
					if(this.curShader.vertex == null && v1.v.kind == hxsl_VarKind.Var) {
						this.curShader.vertex = false;
					}
				}
				return { e : hxsl_TExprDef.TVar(v1.v), t : v1.v.type, p : e.p};
			}
			break;
		case 5:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var op = _g.op;
			var _g1 = e1.e;
			switch(op._hx_index) {
			case 4:
				switch(_g1._hx_index) {
				case 1:
					var _g2 = _g1.v;
					var v = _g2;
					if(!this.locals.h.hasOwnProperty(v.id)) {
						var e21 = this.mapExprVar(e2);
						var v1 = this.allocVar(v,e1.p);
						if(this.curShader != null) {
							this.curShader.write.h[v1.id] = v1;
						}
						return { e : hxsl_TExprDef.TBinop(op,{ e : hxsl_TExprDef.TVar(v1.v), t : v1.v.type, p : e.p},e21), t : e.t, p : e.p};
					} else {
						var v = _g2;
						if(!this.locals.h.hasOwnProperty(v.id)) {
							var e11 = this.mapExprVar(e1);
							var e21 = this.mapExprVar(e2);
							var v1 = this.allocVar(v,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v1.id] = v1;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
						}
					}
					break;
				case 9:
					var _g2 = _g1.regs;
					var _g2 = _g1.e;
					var _g3 = _g2.t;
					var _g3 = _g2.p;
					var _g3 = _g2.e;
					if(_g3._hx_index == 1) {
						var v = _g3.v;
						if(!this.locals.h.hasOwnProperty(v.id)) {
							var e11 = this.mapExprVar(e1);
							var e21 = this.mapExprVar(e2);
							var v1 = this.allocVar(v,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v1.id] = v1;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
						}
					}
					break;
				default:
				}
				break;
			case 20:
				var _g2 = op.op;
				switch(_g1._hx_index) {
				case 1:
					var v = _g1.v;
					if(!this.locals.h.hasOwnProperty(v.id)) {
						var e11 = this.mapExprVar(e1);
						var e21 = this.mapExprVar(e2);
						var v1 = this.allocVar(v,e11.p);
						if(this.curShader != null) {
							this.curShader.write.h[v1.id] = v1;
						}
						return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
					}
					break;
				case 9:
					var _g2 = _g1.regs;
					var _g2 = _g1.e;
					var _g1 = _g2.t;
					var _g1 = _g2.p;
					var _g1 = _g2.e;
					if(_g1._hx_index == 1) {
						var v = _g1.v;
						if(!this.locals.h.hasOwnProperty(v.id)) {
							var e11 = this.mapExprVar(e1);
							var e21 = this.mapExprVar(e2);
							var v1 = this.allocVar(v,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v1.id] = v1;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
						}
					}
					break;
				default:
				}
				break;
			default:
			}
			break;
		case 7:
			var _g1 = _g.init;
			var v = _g.v;
			this.locals.h[v.id] = true;
			break;
		case 11:
			if(this.curShader != null) {
				this.curShader.vertex = false;
				this.curShader.hasDiscard = true;
			}
			break;
		case 13:
			var _g1 = _g.loop;
			var _g1 = _g.it;
			var v = _g.v;
			this.locals.h[v.id] = true;
			break;
		default:
		}
		return hxsl_Tools.map(e,$bind(this,this.mapExprVar));
	}
	,addShader: function(name,vertex,e,p) {
		var s = new hxsl__$Linker_ShaderInfos(name,vertex);
		this.curShader = s;
		s.priority = p;
		s.body = this.mapExprVar(e);
		this.shaders.push(s);
		this.curShader = null;
		return s;
	}
	,sortByPriorityDesc: function(s1,s2) {
		if(s1.priority == s2.priority) {
			return s1.uid - s2.uid;
		}
		return s2.priority - s1.priority;
	}
	,buildDependency: function(s,v,isWritten) {
		var found = !isWritten;
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var parent = _g1[_g];
			++_g;
			if(parent == s) {
				found = true;
				continue;
			} else if(!found) {
				continue;
			}
			if(!parent.write.h.hasOwnProperty(v.id)) {
				continue;
			}
			if(s.vertex) {
				if(parent.vertex == false) {
					continue;
				}
				if(parent.vertex == null) {
					parent.vertex = true;
				}
			}
			s.deps.set(parent,true);
			this.debugDepth++;
			this.initDependencies(parent);
			this.debugDepth--;
			if(!parent.read.h.hasOwnProperty(v.id)) {
				return;
			}
		}
		if(v.v.kind == hxsl_VarKind.Var) {
			this.error("Variable " + v.path + " required by " + s.name + " is missing initializer",null);
		}
	}
	,initDependencies: function(s) {
		if(s.deps != null) {
			return;
		}
		s.deps = new haxe_ds_ObjectMap();
		var r = s.read.iterator();
		while(r.hasNext()) {
			var r1 = r.next();
			this.buildDependency(s,r1,s.write.h.hasOwnProperty(r1.id));
		}
		if(s.vertex == null) {
			var d = s.deps.keys();
			while(d.hasNext()) {
				var d1 = d.next();
				if(d1.vertex == false) {
					s.vertex = false;
					break;
				}
			}
		}
		if(s.vertex) {
			var d = s.deps.keys();
			while(d.hasNext()) {
				var d1 = d.next();
				if(d1.vertex == null) {
					d1.vertex = true;
				}
			}
		}
	}
	,collect: function(cur,out,vertex) {
		if(cur.onStack) {
			this.error("Loop in shader dependencies (" + cur.name + ")",null);
		}
		if(cur.marked == vertex) {
			return;
		}
		cur.marked = vertex;
		cur.onStack = true;
		var _g = [];
		var d = cur.deps.keys();
		while(d.hasNext()) {
			var d1 = d.next();
			_g.push(d1);
		}
		var deps = _g;
		deps.sort($bind(this,this.sortByPriorityDesc));
		var _g = 0;
		while(_g < deps.length) {
			var d = deps[_g];
			++_g;
			this.collect(d,out,vertex);
		}
		if(cur.vertex == null) {
			cur.vertex = vertex;
		}
		if(cur.vertex == vertex) {
			out.push(cur);
		}
		cur.onStack = false;
	}
	,uniqueLocals: function(expr,locals) {
		var _g = expr.e;
		switch(_g._hx_index) {
		case 4:
			var el = _g.el;
			var _g1 = new haxe_ds_StringMap();
			var k = haxe_ds_StringMap.keysIterator(locals.h);
			while(k.hasNext()) {
				var k1 = k.next();
				_g1.h[k1] = true;
			}
			var locals1 = _g1;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				this.uniqueLocals(e,locals1);
			}
			break;
		case 7:
			var _g1 = _g.init;
			var v = _g.v;
			if(Object.prototype.hasOwnProperty.call(locals.h,v.name)) {
				var k = 2;
				while(Object.prototype.hasOwnProperty.call(locals.h,v.name + k)) ++k;
				v.name += k;
			}
			locals.h[v.name] = true;
			break;
		default:
			var _g = $bind(this,this.uniqueLocals);
			var locals1 = locals;
			hxsl_Tools.iter(expr,function(expr) {
				_g(expr,locals1);
			});
		}
	}
	,link: function(shadersData) {
		var _gthis = this;
		this.varMap = new haxe_ds_StringMap();
		this.varIdMap = new haxe_ds_IntMap();
		this.allVars = [];
		this.shaders = [];
		this.locals = new haxe_ds_IntMap();
		var dupShaders = new haxe_ds_ObjectMap();
		var _g = [];
		var _g1 = 0;
		while(_g1 < shadersData.length) {
			var s = shadersData[_g1];
			++_g1;
			var s1 = s;
			var sreal = s1;
			if(dupShaders.h.__keys__[s1.__id__] != null) {
				s1 = hxsl_Clone.shaderData(s1);
			}
			dupShaders.set(s1,sreal);
			_g.push(s1);
		}
		shadersData = _g;
		this.curInstance = 0;
		var outVars = [];
		var _g = 0;
		while(_g < shadersData.length) {
			var s = shadersData[_g];
			++_g;
			this.isBatchShader = this.batchMode && StringTools.startsWith(s.name,"batchShader_");
			var _g1 = 0;
			var _g2 = s.vars;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				var v2 = this.allocVar(v,null);
				if(this.isBatchShader && v2.v.kind == hxsl_VarKind.Param && !StringTools.startsWith(v2.path,"Batch_")) {
					v2.v.kind = hxsl_VarKind.Local;
				}
				if(v.kind == hxsl_VarKind.Output) {
					outVars.push(v);
				}
			}
			var _g3 = 0;
			var _g4 = s.funs;
			while(_g3 < _g4.length) {
				var f = _g4[_g3];
				++_g3;
				var v1 = this.allocVar(f.ref,f.expr.p);
				v1.kind = f.kind;
			}
			this.curInstance++;
		}
		var priority = 0;
		var initPrio_init = [-3000];
		var initPrio_vert = [-2000];
		var initPrio_frag = [-1000];
		var _g = 0;
		while(_g < shadersData.length) {
			var s = shadersData[_g];
			++_g;
			var _g1 = 0;
			var _g2 = s.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				var v = this.allocVar(f.ref,f.expr.p);
				if(v.kind == null) {
					throw haxe_Exception.thrown("assert");
				}
				switch(v.kind._hx_index) {
				case 0:case 1:
					this.addShader(s.name + "." + (v.kind == hxsl_FunctionKind.Vertex ? "vertex" : "fragment"),v.kind == hxsl_FunctionKind.Vertex,f.expr,priority);
					break;
				case 2:
					var prio;
					var status;
					switch(f.ref.name) {
					case "__init__fragment":
						prio = initPrio_frag;
						status = false;
						break;
					case "__init__vertex":
						prio = initPrio_vert;
						status = true;
						break;
					default:
						prio = initPrio_init;
						status = null;
					}
					var _g3 = f.expr.e;
					if(_g3._hx_index == 4) {
						var el = _g3.el;
						var index = 0;
						var _g4 = 0;
						while(_g4 < el.length) {
							var e = el[_g4];
							++_g4;
							this.addShader(s.name + "." + f.ref.name + index++,status,e,prio[0]++);
						}
					} else {
						this.addShader(s.name + "." + f.ref.name,status,f.expr,prio[0]++);
					}
					break;
				case 3:
					throw haxe_Exception.thrown("Unexpected helper function in linker " + v.v.name);
				}
			}
			++priority;
		}
		this.shaders.sort($bind(this,this.sortByPriorityDesc));
		var entry = new hxsl__$Linker_ShaderInfos("<entry>",false);
		entry.deps = new haxe_ds_ObjectMap();
		var _g = 0;
		while(_g < outVars.length) {
			var v = outVars[_g];
			++_g;
			this.buildDependency(entry,this.allocVar(v,null),false);
		}
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.hasDiscard) {
				this.initDependencies(s);
				entry.deps.set(s,true);
			}
		}
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.vertex != null) {
				continue;
			}
			var onlyParams = true;
			var r = s.read.iterator();
			while(r.hasNext()) {
				var r1 = r.next();
				if(r1.v.kind != hxsl_VarKind.Param) {
					onlyParams = false;
					break;
				}
			}
			if(onlyParams) {
				s.vertex = false;
			}
		}
		var v = [];
		var f = [];
		this.collect(entry,v,true);
		this.collect(entry,f,false);
		if(f.pop() != entry) {
			throw haxe_Exception.thrown("assert");
		}
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.marked = null;
		}
		var _g = 0;
		var _g1 = v.concat(f);
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var d = s.deps.keys();
			while(d.hasNext()) {
				var d1 = d.next();
				if(d1.marked == null) {
					this.error(d1.name + " needed by " + s.name + " is unreachable",null);
				}
			}
			s.marked = true;
		}
		var outVars = [];
		var varMap_h = { };
		var addVar = null;
		addVar = function(v) {
			if(varMap_h.hasOwnProperty(v.id)) {
				return;
			}
			varMap_h[v.id] = true;
			if(v.v.parent != null) {
				addVar(v.parent);
			} else {
				outVars.push(v.v);
			}
		};
		var _g = 0;
		var _g1 = v.concat(f);
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var v1 = s.read.iterator();
			while(v1.hasNext()) {
				var v2 = v1.next();
				addVar(v2);
			}
			var v3 = s.write.iterator();
			while(v3.hasNext()) {
				var v4 = v3.next();
				addVar(v4);
			}
		}
		var cleanVar = null;
		cleanVar = function(v) {
			var _g = v.type;
			if(_g._hx_index == 13) {
				var vl = _g.vl;
				if(v.kind != hxsl_VarKind.Input) {
					var vout = [];
					var _g = 0;
					while(_g < vl.length) {
						var v1 = vl[_g];
						++_g;
						if(varMap_h.hasOwnProperty(v1.id)) {
							cleanVar(v1);
							vout.push(v1);
						}
					}
					v.type = hxsl_Type.TStruct(vout);
				}
			}
		};
		var _g = 0;
		while(_g < outVars.length) {
			var v1 = outVars[_g];
			++_g;
			cleanVar(v1);
		}
		var build = function(kind,name,a) {
			var v = { id : hxsl_Tools.allocVarId(), name : name, type : hxsl_Type.TFun([{ ret : hxsl_Type.TVoid, args : []}]), kind : hxsl_VarKind.Function};
			outVars.push(v);
			var exprs = [];
			var _g = 0;
			while(_g < a.length) {
				var s = a[_g];
				++_g;
				var _g1 = s.body.e;
				if(_g1._hx_index == 4) {
					var el = _g1.el;
					var _g2 = 0;
					while(_g2 < el.length) {
						var e = el[_g2];
						++_g2;
						exprs.push(e);
					}
				} else {
					exprs.push(s.body);
				}
			}
			var expr = { e : hxsl_TExprDef.TBlock(exprs), t : hxsl_Type.TVoid, p : exprs.length == 0 ? null : exprs[0].p};
			_gthis.uniqueLocals(expr,new haxe_ds_StringMap());
			return { kind : kind, ref : v, ret : hxsl_Type.TVoid, args : [], expr : expr};
		};
		var funs = [build(hxsl_FunctionKind.Vertex,"vertex",v),build(hxsl_FunctionKind.Fragment,"fragment",f)];
		var s = dupShaders.keys();
		while(s.hasNext()) {
			var s1 = s.next();
			var sreal = dupShaders.h[s1.__id__];
			if(s1 == sreal) {
				continue;
			}
			var _g = 0;
			var _g1 = s1.vars.length;
			while(_g < _g1) {
				var i = _g++;
				this.allocVar(s1.vars[i],null).merged.unshift(sreal.vars[i]);
			}
		}
		return { name : "out", vars : outVars, funs : funs};
	}
	,__class__: hxsl_Linker
};
var hxsl_Output = $hxEnums["hxsl.Output"] = { __ename__ : true, __constructs__ : ["Const","Value","PackNormal","PackFloat","Vec2","Vec3","Vec4","Swiz"]
	,Const: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["v"],$_)
	,Value: ($_=function(v,size) { return {_hx_index:1,v:v,size:size,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["v","size"],$_)
	,PackNormal: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["v"],$_)
	,PackFloat: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["v"],$_)
	,Vec2: ($_=function(a) { return {_hx_index:4,a:a,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["a"],$_)
	,Vec3: ($_=function(a) { return {_hx_index:5,a:a,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["a"],$_)
	,Vec4: ($_=function(a) { return {_hx_index:6,a:a,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["a"],$_)
	,Swiz: ($_=function(a,swiz) { return {_hx_index:7,a:a,swiz:swiz,__enum__:"hxsl.Output",toString:$estr}; },$_.__params__ = ["a","swiz"],$_)
};
hxsl_Output.__empty_constructs__ = [];
var hxsl_Printer = function(varId) {
	if(varId == null) {
		varId = false;
	}
	this.varId = varId;
};
$hxClasses["hxsl.Printer"] = hxsl_Printer;
hxsl_Printer.__name__ = "hxsl.Printer";
hxsl_Printer.opStr = function(op) {
	switch(op._hx_index) {
	case 0:
		return "+";
	case 1:
		return "*";
	case 2:
		return "/";
	case 3:
		return "-";
	case 4:
		return "=";
	case 5:
		return "==";
	case 6:
		return "!=";
	case 7:
		return ">";
	case 8:
		return ">=";
	case 9:
		return "<";
	case 10:
		return "<=";
	case 11:
		return "&";
	case 12:
		return "|";
	case 13:
		return "^";
	case 14:
		return "&&";
	case 15:
		return "||";
	case 16:
		return "<<";
	case 17:
		return ">>";
	case 18:
		return ">>>";
	case 19:
		return "%";
	case 20:
		var op1 = op.op;
		return hxsl_Printer.opStr(op1) + "=";
	case 21:
		return "...";
	case 22:
		return "=>";
	case 23:
		return " in ";
	}
};
hxsl_Printer.toString = function(e,varId) {
	if(varId == null) {
		varId = false;
	}
	return new hxsl_Printer(varId).exprString(e);
};
hxsl_Printer.shaderToString = function(s,varId) {
	if(varId == null) {
		varId = false;
	}
	return new hxsl_Printer(varId).shaderString(s);
};
hxsl_Printer.prototype = {
	shaderString: function(s) {
		this.buffer = new StringBuf();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.addVar(v,null);
			this.buffer.b += Std.string(";\n");
		}
		if(s.vars.length > 0) {
			this.buffer.b += Std.string("\n");
		}
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.addFun(f);
			this.buffer.b += Std.string("\n\n");
		}
		return this.buffer.b;
	}
	,exprString: function(e) {
		this.buffer = new StringBuf();
		this.addExpr(e,"");
		return this.buffer.b;
	}
	,addVar: function(v,defKind,tabs,parent) {
		if(tabs == null) {
			tabs = "";
		}
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				var v1;
				switch(q._hx_index) {
				case 0:
					var max = q.max;
					v1 = "const" + (max == null ? "" : "(" + max + ")");
					break;
				case 1:
					v1 = "private";
					break;
				case 2:
					v1 = "nullable";
					break;
				case 3:
					v1 = "perObject";
					break;
				case 4:
					var n = q.n;
					v1 = "name('" + n + "')";
					break;
				case 5:
					v1 = "shared";
					break;
				case 6:
					var p = q.p;
					v1 = $hxEnums[p.__enum__].__constructs__[p._hx_index].toLowerCase() + "p";
					break;
				case 7:
					var max1 = q.max;
					var min = q.min;
					v1 = "range(" + min + "," + max1 + ")";
					break;
				case 8:
					v1 = "ignore";
					break;
				case 9:
					var n1 = q.v;
					v1 = "perInstance(" + n1 + ")";
					break;
				}
				this.buffer.b += Std.string("@" + v1 + " ");
			}
		}
		if(v.kind != defKind) {
			switch(v.kind._hx_index) {
			case 0:
				this.buffer.b += Std.string("@global ");
				break;
			case 1:
				this.buffer.b += Std.string("@input ");
				break;
			case 2:
				this.buffer.b += Std.string("@param ");
				break;
			case 3:
				this.buffer.b += Std.string("@varying ");
				break;
			case 4:
				this.buffer.b += Std.string("@local ");
				break;
			case 5:
				this.buffer.b += Std.string("@output ");
				break;
			case 6:
				this.buffer.b += Std.string("@function ");
				break;
			}
		}
		this.buffer.b += Std.string("var ");
		if(v.parent == parent) {
			this.buffer.b += Std.string(v.name + (this.varId ? "@" + v.id : ""));
		} else {
			this.addVarName(v);
		}
		this.buffer.b += Std.string(" : ");
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			this.buffer.b += Std.string("{");
			var first = true;
			var _g = 0;
			while(_g < vl.length) {
				var v1 = vl[_g];
				++_g;
				if(first) {
					first = false;
				} else {
					this.buffer.b += Std.string(", ");
				}
				this.addVar(v1,v1.kind,tabs,v1);
			}
			this.buffer.b += Std.string("}");
		} else {
			var v1 = hxsl_Tools.toString(v.type);
			this.buffer.b += Std.string(v1);
		}
	}
	,addFun: function(f) {
		this.buffer.b += Std.string("function " + f.ref.name + "(");
		var first = true;
		var _g = 0;
		var _g1 = f.args;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(first) {
				this.buffer.b += Std.string(" ");
				first = false;
			} else {
				this.buffer.b += Std.string(", ");
			}
			this.addVar(a,hxsl_VarKind.Local);
		}
		if(f.args.length > 0) {
			this.buffer.b += Std.string(" ");
		}
		var v = ") : " + hxsl_Tools.toString(f.ret) + " ";
		this.buffer.b += Std.string(v);
		this.addExpr(f.expr,"");
	}
	,addVarName: function(v) {
		if(v.parent != null) {
			this.addVarName(v.parent);
			this.buffer.b += Std.string(".");
		}
		this.buffer.b += Std.string(v.name);
		if(this.varId) {
			this.buffer.b += Std.string("@" + v.id);
		}
	}
	,addConst: function(c) {
		var _this = this.buffer;
		var _this1 = _this.b;
		var tmp;
		switch(c._hx_index) {
		case 0:
			tmp = "null";
			break;
		case 1:
			var b = c.b;
			tmp = b;
			break;
		case 2:
			var i = c.v;
			tmp = i;
			break;
		case 3:
			var f = c.v;
			tmp = f;
			break;
		case 4:
			var s = c.v;
			tmp = "\"" + s + "\"";
			break;
		}
		_this.b = _this1 + Std.string(tmp);
	}
	,addExpr: function(e,tabs) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			this.addConst(c);
			break;
		case 1:
			var v = _g.v;
			this.addVarName(v);
			break;
		case 2:
			var g = _g.g;
			var v = hxsl_Tools2.toString(g);
			this.buffer.b += Std.string(v);
			break;
		case 3:
			var e = _g.e;
			this.buffer.b += Std.string("(");
			this.addExpr(e,tabs);
			this.buffer.b += Std.string(")");
			break;
		case 4:
			var el = _g.el;
			this.buffer.b += Std.string("{");
			tabs += "\t";
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				this.buffer.b += Std.string("\n" + tabs);
				this.addExpr(e,tabs);
				this.buffer.b += Std.string(";");
			}
			tabs = HxOverrides.substr(tabs,1,null);
			if(el.length > 0) {
				this.buffer.b += Std.string("\n" + tabs);
			}
			this.buffer.b += Std.string("}");
			break;
		case 5:
			var e2 = _g.e2;
			var e1 = _g.e1;
			var op = _g.op;
			this.addExpr(e1,tabs);
			var v = " " + hxsl_Printer.opStr(op) + " ";
			this.buffer.b += Std.string(v);
			this.addExpr(e2,tabs);
			break;
		case 6:
			var e = _g.e1;
			var op = _g.op;
			var _this = this.buffer;
			var _this1 = _this.b;
			var tmp;
			switch(op._hx_index) {
			case 0:
				tmp = "++";
				break;
			case 1:
				tmp = "--";
				break;
			case 2:
				tmp = "!";
				break;
			case 3:
				tmp = "-";
				break;
			case 4:
				tmp = "~";
				break;
			}
			_this.b = _this1 + Std.string(tmp);
			this.addExpr(e,tabs);
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			this.addVar(v,hxsl_VarKind.Local,tabs);
			if(init != null) {
				this.buffer.b += Std.string(" = ");
				this.addExpr(init,tabs);
			}
			break;
		case 8:
			var el = _g.args;
			var e = _g.e;
			this.addExpr(e,tabs);
			this.buffer.b += Std.string("(");
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buffer.b += Std.string(", ");
				}
				this.addExpr(e,tabs);
			}
			this.buffer.b += Std.string(")");
			break;
		case 9:
			var regs = _g.regs;
			var e = _g.e;
			this.addExpr(e,tabs);
			this.buffer.b += Std.string(".");
			var _g1 = 0;
			while(_g1 < regs.length) {
				var r = regs[_g1];
				++_g1;
				this.buffer.b += Std.string(hxsl_Printer.SWIZ[r._hx_index]);
			}
			break;
		case 10:
			var eelse = _g.eelse;
			var eif = _g.eif;
			var cond = _g.econd;
			this.buffer.b += Std.string("if( ");
			this.addExpr(cond,tabs);
			this.buffer.b += Std.string(" ) ");
			this.addExpr(eif,tabs);
			if(eelse != null) {
				this.buffer.b += Std.string(" else ");
				this.addExpr(eelse,tabs);
			}
			break;
		case 11:
			this.buffer.b += Std.string("discard");
			break;
		case 12:
			var e = _g.e;
			this.buffer.b += Std.string("return");
			if(e != null) {
				this.buffer.b += Std.string(" ");
				this.addExpr(e,tabs);
			}
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			this.buffer.b += Std.string("for( ");
			this.addVarName(v);
			this.buffer.b += Std.string(" in ");
			this.addExpr(it,tabs);
			this.buffer.b += Std.string(" ) ");
			this.addExpr(loop,tabs);
			break;
		case 14:
			this.buffer.b += Std.string("continue");
			break;
		case 15:
			this.buffer.b += Std.string("break");
			break;
		case 16:
			var e2 = _g.index;
			var e1 = _g.e;
			this.addExpr(e1,tabs);
			this.buffer.b += Std.string("[");
			this.addExpr(e2,tabs);
			this.buffer.b += Std.string("]");
			break;
		case 17:
			var el = _g.el;
			this.buffer.b += Std.string("[");
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buffer.b += Std.string(", ");
				}
				this.addExpr(e,tabs);
			}
			this.buffer.b += Std.string("]");
			break;
		case 18:
			var def = _g.def;
			var cases = _g.cases;
			var e = _g.e;
			this.buffer.b += Std.string("switch( ");
			this.addExpr(e,tabs);
			this.buffer.b += Std.string(") {");
			var old = tabs;
			var _g1 = 0;
			while(_g1 < cases.length) {
				var c = cases[_g1];
				++_g1;
				this.buffer.b += Std.string("\n" + tabs);
				this.buffer.b += Std.string("case ");
				var first = true;
				var _g2 = 0;
				var _g3 = c.values;
				while(_g2 < _g3.length) {
					var v = _g3[_g2];
					++_g2;
					if(first) {
						first = false;
					} else {
						this.buffer.b += Std.string(", ");
					}
					this.addExpr(v,tabs);
				}
				tabs += "\t";
				this.buffer.b += Std.string(":\n" + tabs);
				this.addExpr(c.expr,tabs);
				tabs = old;
			}
			if(def != null) {
				this.buffer.b += Std.string("\n" + tabs);
				tabs += "\t";
				this.buffer.b += Std.string("default:\n" + tabs);
				this.addExpr(def,tabs);
				tabs = old;
			}
			this.buffer.b += Std.string("\n" + tabs + "}");
			break;
		case 19:
			var _g1 = _g.loop;
			var _g2 = _g.e;
			if(_g.normalWhile == false) {
				var e = _g2;
				var loop = _g1;
				var old = tabs;
				tabs += "\t";
				this.buffer.b += Std.string("do {\n" + tabs);
				this.addExpr(loop,tabs);
				tabs = old;
				this.buffer.b += Std.string("\n" + tabs + "} while( ");
				this.addExpr(e,tabs);
				this.buffer.b += Std.string(" )");
			} else {
				var e = _g2;
				var loop = _g1;
				this.buffer.b += Std.string("while( ");
				this.addExpr(e,tabs);
				var old = tabs;
				tabs += "\t";
				this.buffer.b += Std.string(" ) {\n" + tabs);
				this.addExpr(loop,tabs);
				tabs = old;
				this.buffer.b += Std.string("\n" + tabs + "}");
			}
			break;
		case 20:
			var e = _g.e;
			var args = _g.args;
			var m = _g.m;
			this.buffer.b += Std.string(m);
			if(args.length > 0) {
				this.buffer.b += Std.string("(");
				var first = true;
				var _g = 0;
				while(_g < args.length) {
					var c = args[_g];
					++_g;
					if(first) {
						first = false;
					} else {
						this.buffer.b += Std.string(", ");
					}
					this.addConst(c);
				}
				this.buffer.b += Std.string(")");
			}
			this.buffer.b += Std.string(" ");
			this.addExpr(e,tabs);
			break;
		}
	}
	,__class__: hxsl_Printer
};
var hxsl_AllocParam = function(name,pos,instance,index,type) {
	this.name = name;
	this.pos = pos;
	this.instance = instance;
	this.index = index;
	this.type = type;
};
$hxClasses["hxsl.AllocParam"] = hxsl_AllocParam;
hxsl_AllocParam.__name__ = "hxsl.AllocParam";
hxsl_AllocParam.prototype = {
	__class__: hxsl_AllocParam
};
var hxsl_AllocGlobal = function(pos,path,type) {
	this.pos = pos;
	this.path = path;
	this.gid = hxsl_Globals.allocID(path);
	this.type = type;
};
$hxClasses["hxsl.AllocGlobal"] = hxsl_AllocGlobal;
hxsl_AllocGlobal.__name__ = "hxsl.AllocGlobal";
hxsl_AllocGlobal.prototype = {
	__class__: hxsl_AllocGlobal
};
var hxsl_RuntimeShaderData = function() {
};
$hxClasses["hxsl.RuntimeShaderData"] = hxsl_RuntimeShaderData;
hxsl_RuntimeShaderData.__name__ = "hxsl.RuntimeShaderData";
hxsl_RuntimeShaderData.prototype = {
	__class__: hxsl_RuntimeShaderData
};
var hxsl_ShaderInstanceDesc = function(shader,bits) {
	this.shader = shader;
	this.bits = bits;
};
$hxClasses["hxsl.ShaderInstanceDesc"] = hxsl_ShaderInstanceDesc;
hxsl_ShaderInstanceDesc.__name__ = "hxsl.ShaderInstanceDesc";
hxsl_ShaderInstanceDesc.prototype = {
	__class__: hxsl_ShaderInstanceDesc
};
var hxsl_RuntimeShader = function() {
	this.id = hxsl_RuntimeShader.UID++;
};
$hxClasses["hxsl.RuntimeShader"] = hxsl_RuntimeShader;
hxsl_RuntimeShader.__name__ = "hxsl.RuntimeShader";
hxsl_RuntimeShader.prototype = {
	__class__: hxsl_RuntimeShader
};
var hxsl_Serializer = function() {
};
$hxClasses["hxsl.Serializer"] = hxsl_Serializer;
hxsl_Serializer.__name__ = "hxsl.Serializer";
hxsl_Serializer.prototype = {
	readVarInt: function() {
		var b = this.input.readByte();
		if(b < 128) {
			return b;
		}
		if(b == 255) {
			return this.input.readInt32();
		}
		return (b & 127) << 8 | this.input.readByte();
	}
	,readType: function() {
		switch(this.input.readByte()) {
		case 0:
			return hxsl_Type.TVoid;
		case 1:
			return hxsl_Type.TInt;
		case 2:
			return hxsl_Type.TBool;
		case 3:
			return hxsl_Type.TFloat;
		case 4:
			return hxsl_Type.TString;
		case 5:
			var bits = this.input.readByte();
			var v = hxsl_Serializer.TVECS.h[bits];
			if(v == null) {
				v = hxsl_Type.TVec(bits & 7,Type.createEnumIndex(hxsl_VecType,bits >> 3,null));
				hxsl_Serializer.TVECS.h[bits] = v;
			}
			return v;
		case 6:
			return hxsl_Type.TMat3;
		case 7:
			return hxsl_Type.TMat4;
		case 8:
			return hxsl_Type.TMat3x4;
		case 9:
			return hxsl_Type.TBytes(this.input.readInt32());
		case 10:
			return hxsl_Type.TSampler2D;
		case 11:
			return hxsl_Type.TSampler2DArray;
		case 12:
			return hxsl_Type.TSamplerCube;
		case 13:
			var id = this.readVarInt();
			var t = this.types[id];
			if(t != null) {
				return t;
			}
			var f = $bind(this,this.readVar);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			t = hxsl_Type.TStruct(_g);
			this.types[id] = t;
			return t;
		case 14:
			return hxsl_Type.TFun(null);
		case 15:
			var t = this.readType();
			var v = this.readVar();
			return hxsl_Type.TArray(t,v == null ? hxsl_SizeDecl.SConst(this.readVarInt()) : hxsl_SizeDecl.SVar(v));
		case 16:
			var t = this.readType();
			var v = this.readVar();
			return hxsl_Type.TBuffer(t,v == null ? hxsl_SizeDecl.SConst(this.readVarInt()) : hxsl_SizeDecl.SVar(v));
		case 17:
			return hxsl_Type.TChannel(this.input.readByte());
		case 18:
			return hxsl_Type.TMat2;
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,readString: function() {
		var len = this.readVarInt();
		var s = this.input.read(len).getString(0,len);
		return s;
	}
	,readConst: function() {
		switch(this.input.readByte()) {
		case 0:
			return hxsl_Const.CNull;
		case 1:
			return hxsl_Const.CBool(this.input.readByte() != 0);
		case 2:
			return hxsl_Const.CInt(this.input.readInt32());
		case 3:
			return hxsl_Const.CFloat(this.input.readDouble());
		case 4:
			return hxsl_Const.CString(this.readString());
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,readExpr: function() {
		var _gthis = this;
		var k = this.input.readByte();
		if(k-- == 0) {
			return null;
		}
		var e;
		switch(k) {
		case 0:
			e = hxsl_TExprDef.TConst(this.readConst());
			break;
		case 1:
			e = hxsl_TExprDef.TVar(this.readVar());
			break;
		case 2:
			e = hxsl_TExprDef.TGlobal(hxsl_Serializer.TGLOBALS[this.input.readByte()]);
			break;
		case 3:
			e = hxsl_TExprDef.TParenthesis(this.readExpr());
			break;
		case 4:
			var f = $bind(this,this.readExpr);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TBlock(_g);
			break;
		case 5:
			var op = this.input.readByte();
			e = hxsl_TExprDef.TBinop(op >= 128 ? haxe_macro_Binop.OpAssignOp(hxsl_Serializer.BOPS[op & 127]) : hxsl_Serializer.BOPS[op],this.readExpr(),this.readExpr());
			break;
		case 6:
			e = hxsl_TExprDef.TUnop(hxsl_Serializer.UNOPS[this.input.readByte()],this.readExpr());
			break;
		case 7:
			e = hxsl_TExprDef.TVarDecl(this.readVar(),this.readExpr());
			break;
		case 8:
			var e1 = this.readExpr();
			var f = $bind(this,this.readExpr);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TCall(e1,_g);
			break;
		case 9:
			var e1 = this.readExpr();
			var bits = this.input.readUInt16();
			var swiz = hxsl_Serializer.TSWIZ.h[bits];
			if(swiz == null) {
				var _g = [];
				var _g1 = 0;
				var _g2 = (bits & 3) + 1;
				while(_g1 < _g2) {
					var i = _g1++;
					_g.push(hxsl_Serializer.REGS[bits >> i * 2 + 2 & 3]);
				}
				swiz = _g;
				hxsl_Serializer.TSWIZ.h[bits] = swiz;
			}
			e = hxsl_TExprDef.TSwiz(e1,swiz);
			break;
		case 10:
			e = hxsl_TExprDef.TIf(this.readExpr(),this.readExpr(),this.readExpr());
			break;
		case 11:
			e = hxsl_TExprDef.TDiscard;
			break;
		case 12:
			e = hxsl_TExprDef.TReturn(this.readExpr());
			break;
		case 13:
			e = hxsl_TExprDef.TFor(this.readVar(),this.readExpr(),this.readExpr());
			break;
		case 14:
			e = hxsl_TExprDef.TContinue;
			break;
		case 15:
			e = hxsl_TExprDef.TBreak;
			break;
		case 16:
			e = hxsl_TExprDef.TArray(this.readExpr(),this.readExpr());
			break;
		case 17:
			var f = $bind(this,this.readExpr);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TArrayDecl(_g);
			break;
		case 18:
			var e1 = this.readExpr();
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				var f = $bind(_gthis,_gthis.readExpr);
				var _g3 = [];
				var _g4 = 0;
				var _g5 = _gthis.readVarInt();
				while(_g4 < _g5) {
					var i1 = _g4++;
					_g3.push(f());
				}
				_g.push({ values : _g3, expr : _gthis.readExpr()});
			}
			e = hxsl_TExprDef.TSwitch(e1,_g,this.readExpr());
			break;
		case 19:
			e = hxsl_TExprDef.TWhile(this.readExpr(),this.readExpr(),this.input.readByte() != 0);
			break;
		case 20:
			var e1 = this.readString();
			var f = $bind(this,this.readConst);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TMeta(e1,_g,this.readExpr());
			break;
		default:
			throw haxe_Exception.thrown("assert");
		}
		return { e : e, t : this.readType(), p : null};
	}
	,readVar: function() {
		var id = this.readVarInt();
		if(id == 0) {
			return null;
		}
		var v = this.varMap.h[id];
		if(v != null) {
			return v;
		}
		v = { id : hxsl_Tools.allocVarId(), name : this.readString(), type : null, kind : null};
		this.varMap.h[id] = v;
		v.type = this.readType();
		v.kind = hxsl_Serializer.VKINDS[this.input.readByte()];
		v.parent = this.readVar();
		var nq = this.input.readByte();
		if(nq > 0) {
			v.qualifiers = [];
			var _g = 0;
			var _g1 = nq;
			while(_g < _g1) {
				var i = _g++;
				var qid = this.input.readByte();
				var q;
				switch(qid) {
				case 0:
					var n = this.input.readInt32();
					q = hxsl_VarQualifier.Const(n == 0 ? null : n);
					break;
				case 1:
					q = hxsl_VarQualifier.Private;
					break;
				case 2:
					q = hxsl_VarQualifier.Nullable;
					break;
				case 3:
					q = hxsl_VarQualifier.PerObject;
					break;
				case 4:
					q = hxsl_VarQualifier.Name(this.readString());
					break;
				case 5:
					q = hxsl_VarQualifier.Shared;
					break;
				case 6:
					q = hxsl_VarQualifier.Precision(hxsl_Serializer.PRECS[this.input.readByte()]);
					break;
				case 7:
					q = hxsl_VarQualifier.Range(this.input.readDouble(),this.input.readDouble());
					break;
				case 8:
					q = hxsl_VarQualifier.Ignore;
					break;
				case 9:
					q = hxsl_VarQualifier.PerInstance(this.input.readInt32());
					break;
				default:
					throw haxe_Exception.thrown("assert");
				}
				v.qualifiers.push(q);
			}
		}
		return v;
	}
	,readFun: function() {
		var tmp = hxsl_Serializer.FKIND[this.input.readByte()];
		var tmp1 = this.readVar();
		var f = $bind(this,this.readVar);
		var _g = [];
		var _g1 = 0;
		var _g2 = this.readVarInt();
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(f());
		}
		return { kind : tmp, ref : tmp1, args : _g, ret : this.readType(), expr : this.readExpr()};
	}
	,unserialize: function(data) {
		this.input = new haxe_io_BytesInput(haxe_crypto_Base64.decode(data,false));
		if(this.input.readByte() != (hxsl_Serializer.SIGN & 255) || this.input.readByte() != (hxsl_Serializer.SIGN >> 8 & 255) || this.input.readByte() != (hxsl_Serializer.SIGN >> 16 & 255)) {
			throw haxe_Exception.thrown("Invalid HXSL data");
		}
		this.varMap = new haxe_ds_IntMap();
		this.types = [];
		var tmp = this.readString();
		var f = $bind(this,this.readVar);
		var _g = [];
		var _g1 = 0;
		var _g2 = this.readVarInt();
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(f());
		}
		var tmp1 = _g;
		var f = $bind(this,this.readFun);
		var _g = [];
		var _g1 = 0;
		var _g2 = this.readVarInt();
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(f());
		}
		return { name : tmp, vars : tmp1, funs : _g};
	}
	,__class__: hxsl_Serializer
};
var hxsl_ShaderList = function(s,n) {
	this.s = s;
	this.next = n;
};
$hxClasses["hxsl.ShaderList"] = hxsl_ShaderList;
hxsl_ShaderList.__name__ = "hxsl.ShaderList";
hxsl_ShaderList.addSort = function(s,shaders) {
	var prev = null;
	var hd = shaders;
	while(hd != null && hd.s.priority < s.priority) {
		prev = hd;
		hd = hd.next;
	}
	if(prev == null) {
		return new hxsl_ShaderList(s,shaders);
	}
	prev.next = new hxsl_ShaderList(s,prev.next);
	return shaders;
};
hxsl_ShaderList.prototype = {
	__class__: hxsl_ShaderList
};
var hxsl_ShaderInstance = function(shader) {
	this.id = hxsl_Tools.allocVarId();
	this.shader = shader;
	this.params = new haxe_ds_IntMap();
};
$hxClasses["hxsl.ShaderInstance"] = hxsl_ShaderInstance;
hxsl_ShaderInstance.__name__ = "hxsl.ShaderInstance";
hxsl_ShaderInstance.prototype = {
	__class__: hxsl_ShaderInstance
};
var hxsl_ShaderGlobal = function(v,gid) {
	this.v = v;
	this.globalId = gid;
};
$hxClasses["hxsl.ShaderGlobal"] = hxsl_ShaderGlobal;
hxsl_ShaderGlobal.__name__ = "hxsl.ShaderGlobal";
hxsl_ShaderGlobal.prototype = {
	__class__: hxsl_ShaderGlobal
};
var hxsl_ShaderConst = function(v,pos,bits) {
	this.v = v;
	this.pos = pos;
	this.bits = bits;
};
$hxClasses["hxsl.ShaderConst"] = hxsl_ShaderConst;
hxsl_ShaderConst.__name__ = "hxsl.ShaderConst";
hxsl_ShaderConst.prototype = {
	__class__: hxsl_ShaderConst
};
var hxsl_SharedShader = function(src) {
	this.instanceCache = new haxe_ds_IntMap();
	this.consts = null;
	this.globals = [];
	if(src == "") {
		return;
	}
	this.data = new hxsl_Serializer().unserialize(src);
	this.initialize();
};
$hxClasses["hxsl.SharedShader"] = hxsl_SharedShader;
hxsl_SharedShader.__name__ = "hxsl.SharedShader";
hxsl_SharedShader.prototype = {
	initialize: function() {
		var _g = 0;
		var _g1 = this.data.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.browseVar(v);
		}
	}
	,makeInstance: function(constBits) {
		var $eval = new hxsl_Eval();
		var c = this.consts;
		while(c != null) {
			var c1 = c.v;
			var _g = c.v.type;
			var tmp;
			switch(_g._hx_index) {
			case 1:
				tmp = hxsl_Const.CInt(constBits >>> c.pos & (1 << c.bits) - 1);
				break;
			case 2:
				tmp = hxsl_Const.CBool((constBits >>> c.pos & 1) != 0);
				break;
			case 17:
				var _g1 = _g.size;
				tmp = hxsl_Const.CInt(constBits >>> c.pos & (1 << c.bits) - 1);
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			$eval.setConstant(c1,tmp);
			c = c.next;
		}
		$eval.inlineCalls = true;
		$eval.unrollLoops = hxsl_SharedShader.UNROLL_LOOPS;
		var i = new hxsl_ShaderInstance($eval.eval(this.data));
		this.paramsCount = 0;
		var _g = 0;
		var _g1 = this.data.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.addParam($eval,i,v);
		}
		this.instanceCache.h[constBits] = i;
		return i;
	}
	,addParam: function($eval,i,v) {
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var v1 = vl[_g];
				++_g;
				this.addParam($eval,i,v1);
			}
		} else if(v.kind == hxsl_VarKind.Param) {
			i.params.h[$eval.varMap.h[v.__id__].id] = this.paramsCount;
			this.paramsCount++;
		}
	}
	,browseVar: function(v,path) {
		v.id = hxsl_Tools.allocVarId();
		if(path == null) {
			path = hxsl_Tools.getName(v);
		} else {
			path += "." + v.name;
		}
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var vs = vl[_g];
				++_g;
				this.browseVar(vs,path);
			}
		} else {
			var globalId = 0;
			if(v.kind == hxsl_VarKind.Global) {
				globalId = hxsl_Globals.allocID(path);
				this.globals.push(new hxsl_ShaderGlobal(v,globalId));
			}
			if(!hxsl_Tools.isConst(v)) {
				return;
			}
			var bits = hxsl_Tools.getConstBits(v);
			if(bits > 0) {
				var pos = this.consts == null ? 0 : this.consts.pos + this.consts.bits;
				var c = new hxsl_ShaderConst(v,pos,bits);
				c.globalId = globalId;
				c.next = this.consts;
				this.consts = c;
			}
		}
	}
	,__class__: hxsl_SharedShader
};
var hxsl__$Splitter_VarProps = function(v) {
	this.v = v;
	this.read = 0;
	this.write = 0;
};
$hxClasses["hxsl._Splitter.VarProps"] = hxsl__$Splitter_VarProps;
hxsl__$Splitter_VarProps.__name__ = "hxsl._Splitter.VarProps";
hxsl__$Splitter_VarProps.prototype = {
	__class__: hxsl__$Splitter_VarProps
};
var hxsl_Splitter = function() {
};
$hxClasses["hxsl.Splitter"] = hxsl_Splitter;
hxsl_Splitter.__name__ = "hxsl.Splitter";
hxsl_Splitter.prototype = {
	split: function(s) {
		var vfun = null;
		var vvars = new haxe_ds_IntMap();
		var ffun = null;
		var fvars = new haxe_ds_IntMap();
		this.varNames = new haxe_ds_StringMap();
		this.varMap = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			switch(f.kind._hx_index) {
			case 0:
				this.vars = vvars;
				vfun = f;
				this.checkExpr(f.expr);
				break;
			case 1:
				this.vars = fvars;
				ffun = f;
				this.checkExpr(f.expr);
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
		}
		vfun = { ret : vfun.ret, ref : vfun.ref, kind : vfun.kind, args : vfun.args, expr : this.mapVars(vfun.expr)};
		var _g = 0;
		var _g1 = Lambda.array(vvars);
		while(_g < _g1.length) {
			var inf = _g1[_g];
			++_g;
			var v = inf.v;
			switch(v.kind._hx_index) {
			case 3:case 4:
				v.kind = fvars.h.hasOwnProperty(v.id) ? hxsl_VarKind.Var : hxsl_VarKind.Local;
				break;
			default:
			}
			switch(v.kind._hx_index) {
			case 3:case 5:
				if(inf.read > 0 || inf.write > 1) {
					var nv = { id : hxsl_Tools.allocVarId(), name : v.name, kind : v.kind, type : v.type};
					this.vars = vvars;
					var ninf = this.get(nv);
					v.kind = hxsl_VarKind.Local;
					var p = vfun.expr.p;
					var e = { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(nv), t : nv.type, p : p},{ e : hxsl_TExprDef.TVar(v), t : v.type, p : p}), t : nv.type, p : p};
					this.addExpr(vfun,e);
					this.checkExpr(e);
					if(nv.kind == hxsl_VarKind.Var) {
						var old = fvars.h[v.id];
						this.varMap.set(v,nv);
						fvars.remove(v.id);
						var np = new hxsl__$Splitter_VarProps(nv);
						np.read = old.read;
						np.write = old.write;
						fvars.h[nv.id] = np;
					}
				}
				break;
			default:
			}
		}
		var finits = [];
		var todo = [];
		var inf = fvars.iterator();
		while(inf.hasNext()) {
			var inf1 = inf.next();
			var v = inf1.v;
			switch(v.kind._hx_index) {
			case 1:
				var nv = { id : hxsl_Tools.allocVarId(), name : v.name, kind : hxsl_VarKind.Var, type : v.type};
				this.uniqueName(nv);
				var i = vvars.h[v.id];
				if(i == null) {
					i = new hxsl__$Splitter_VarProps(v);
					vvars.h[v.id] = i;
				}
				i.read++;
				var vp = new hxsl__$Splitter_VarProps(nv);
				vp.write = 1;
				vvars.h[nv.id] = vp;
				var fp = new hxsl__$Splitter_VarProps(nv);
				fp.read = 1;
				todo.push(fp);
				this.addExpr(vfun,{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(nv), t : v.type, p : vfun.expr.p},{ e : hxsl_TExprDef.TVar(v), t : v.type, p : vfun.expr.p}), t : v.type, p : vfun.expr.p});
				this.varMap.set(v,nv);
				inf1.local = true;
				break;
			case 3:
				if(inf1.write > 0) {
					var nv1 = { id : hxsl_Tools.allocVarId(), name : v.name, kind : hxsl_VarKind.Local, type : v.type};
					this.uniqueName(nv1);
					finits.push({ e : hxsl_TExprDef.TVarDecl(nv1,{ e : hxsl_TExprDef.TVar(v), t : v.type, p : ffun.expr.p}), t : hxsl_Type.TVoid, p : ffun.expr.p});
					this.varMap.set(v,nv1);
				}
				break;
			default:
			}
		}
		var _g = 0;
		while(_g < todo.length) {
			var v = todo[_g];
			++_g;
			fvars.h[v.v.id] = v;
		}
		var v = vvars.iterator();
		while(v.hasNext()) {
			var v1 = v.next();
			this.checkVar(v1,true,vvars,vfun.expr.p);
		}
		var v = fvars.iterator();
		while(v.hasNext()) {
			var v1 = v.next();
			this.checkVar(v1,false,vvars,ffun.expr.p);
		}
		var v = this.varMap.keys();
		while(v.hasNext()) {
			var v1 = v.next();
			var v2 = this.varMap.h[this.varMap.h[v1.__id__].__id__];
			if(v2 != null) {
				this.varMap.set(v1,v2);
			}
		}
		ffun = { ret : ffun.ret, ref : ffun.ref, kind : ffun.kind, args : ffun.args, expr : this.mapVars(ffun.expr)};
		var _g = ffun.expr.e;
		if(_g._hx_index == 4) {
			var el = _g.el;
			var _g = 0;
			while(_g < finits.length) {
				var e = finits[_g];
				++_g;
				el.unshift(e);
			}
		} else {
			finits.push(ffun.expr);
			ffun.expr = { e : hxsl_TExprDef.TBlock(finits), t : hxsl_Type.TVoid, p : ffun.expr.p};
		}
		var _g = [];
		var v = vvars.iterator();
		while(v.hasNext()) {
			var v1 = v.next();
			if(!v1.local) {
				_g.push(v1.v);
			}
		}
		var vvars = _g;
		var _g = [];
		var v = fvars.iterator();
		while(v.hasNext()) {
			var v1 = v.next();
			if(!v1.local) {
				_g.push(v1.v);
			}
		}
		var fvars = _g;
		vvars.sort(function(v1,v2) {
			return v1.id - v2.id;
		});
		fvars.sort(function(v1,v2) {
			return v1.id - v2.id;
		});
		return { vertex : { name : "vertex", vars : vvars, funs : [vfun]}, fragment : { name : "fragment", vars : fvars, funs : [ffun]}};
	}
	,addExpr: function(f,e) {
		var _g = f.expr.e;
		if(_g._hx_index == 4) {
			var el = _g.el;
			el.push(e);
		} else {
			f.expr = { e : hxsl_TExprDef.TBlock([f.expr,e]), t : hxsl_Type.TVoid, p : f.expr.p};
		}
	}
	,checkVar: function(v,vertex,vvars,p) {
		switch(v.v.kind._hx_index) {
		case 3:
			if(!vertex) {
				var i = vvars.h[v.v.id];
				if(i == null || i.write == 0) {
					throw haxe_Exception.thrown(new hxsl_Error("Varying " + v.v.name + " is not written by vertex shader",p));
				}
			}
			break;
		case 4:
			if(v.requireInit) {
				throw haxe_Exception.thrown(new hxsl_Error("Variable " + v.v.name + " is used without being initialized",p));
			}
			break;
		default:
		}
	}
	,mapVars: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			var v2 = this.varMap.h[v.__id__];
			if(v2 == null) {
				return e;
			} else {
				return { e : hxsl_TExprDef.TVar(v2), t : e.t, p : e.p};
			}
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			var v2 = this.varMap.h[v.__id__];
			if(v2 == null) {
				return hxsl_Tools.map(e,$bind(this,this.mapVars));
			} else {
				return { e : hxsl_TExprDef.TVarDecl(v2,this.mapVars(init)), t : e.t, p : e.p};
			}
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			var v2 = this.varMap.h[v.__id__];
			if(v2 == null) {
				return hxsl_Tools.map(e,$bind(this,this.mapVars));
			} else {
				return { e : hxsl_TExprDef.TFor(v2,this.mapVars(it),this.mapVars(loop)), t : e.t, p : e.p};
			}
			break;
		default:
			return hxsl_Tools.map(e,$bind(this,this.mapVars));
		}
	}
	,get: function(v) {
		var i = this.vars.h[v.id];
		if(i == null) {
			var v2 = this.varMap.h[v.__id__];
			if(v2 != null) {
				return this.get(v2);
			}
			var oldName = v.name;
			this.uniqueName(v);
			if(v.kind == hxsl_VarKind.Local && oldName != v.name) {
				var nv = { id : hxsl_Tools.allocVarId(), name : v.name, kind : v.kind, type : v.type};
				this.varMap.set(v,nv);
				v.name = oldName;
				v = nv;
			}
			i = new hxsl__$Splitter_VarProps(v);
			this.vars.h[v.id] = i;
		}
		return i;
	}
	,uniqueName: function(v) {
		if(v.kind == hxsl_VarKind.Global || v.kind == hxsl_VarKind.Output || v.kind == hxsl_VarKind.Input) {
			return;
		}
		v.parent = null;
		var n = this.varNames.h[v.name];
		if(n != null && n != v) {
			var prefix = v.name;
			while(HxOverrides.cca(prefix,prefix.length - 1) >= 48 && HxOverrides.cca(prefix,prefix.length - 1) <= 57) prefix = HxOverrides.substr(prefix,0,-1);
			var k = prefix == v.name ? 2 : Std.parseInt(HxOverrides.substr(v.name,prefix.length,null));
			while(Object.prototype.hasOwnProperty.call(this.varNames.h,prefix + k)) ++k;
			v.name = prefix + k;
		}
		this.varNames.h[v.name] = v;
	}
	,checkExpr: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			var inf = this.get(v);
			if(inf.write == 0) {
				inf.requireInit = true;
			}
			inf.read++;
			break;
		case 5:
			var _g1 = _g.e2;
			var _g2 = _g.e1;
			var _g3 = _g.op;
			switch(_g3._hx_index) {
			case 4:
				var _g4 = _g2.t;
				var _g4 = _g2.p;
				var _g4 = _g2.e;
				switch(_g4._hx_index) {
				case 1:
					var e1 = _g1;
					var v = _g4.v;
					var inf = this.get(v);
					inf.write++;
					this.checkExpr(e1);
					break;
				case 9:
					var _g5 = _g4.regs;
					var _g5 = _g4.e;
					var _g4 = _g5.t;
					var _g4 = _g5.p;
					var _g4 = _g5.e;
					if(_g4._hx_index == 1) {
						var e1 = _g1;
						var v = _g4.v;
						var inf = this.get(v);
						inf.write++;
						this.checkExpr(e1);
					} else {
						hxsl_Tools.iter(e,$bind(this,this.checkExpr));
					}
					break;
				default:
					hxsl_Tools.iter(e,$bind(this,this.checkExpr));
				}
				break;
			case 20:
				var _g4 = _g3.op;
				var _g3 = _g2.t;
				var _g3 = _g2.p;
				var _g3 = _g2.e;
				switch(_g3._hx_index) {
				case 1:
					var e1 = _g1;
					var v = _g3.v;
					var inf = this.get(v);
					if(inf.write == 0) {
						inf.requireInit = true;
					}
					inf.read++;
					inf.write++;
					this.checkExpr(e1);
					break;
				case 9:
					var _g2 = _g3.regs;
					var _g2 = _g3.e;
					var _g3 = _g2.t;
					var _g3 = _g2.p;
					var _g3 = _g2.e;
					if(_g3._hx_index == 1) {
						var e1 = _g1;
						var v = _g3.v;
						var inf = this.get(v);
						if(inf.write == 0) {
							inf.requireInit = true;
						}
						inf.read++;
						inf.write++;
						this.checkExpr(e1);
					} else {
						hxsl_Tools.iter(e,$bind(this,this.checkExpr));
					}
					break;
				default:
					hxsl_Tools.iter(e,$bind(this,this.checkExpr));
				}
				break;
			default:
				hxsl_Tools.iter(e,$bind(this,this.checkExpr));
			}
			break;
		case 7:
			var init = _g.init;
			var v = _g.v;
			var inf = this.get(v);
			inf.local = true;
			if(init != null) {
				this.checkExpr(init);
				inf.write++;
			}
			break;
		case 13:
			var loop = _g.loop;
			var it = _g.it;
			var v = _g.v;
			this.checkExpr(it);
			var inf = this.get(v);
			inf.local = true;
			inf.write++;
			this.checkExpr(loop);
			break;
		default:
			hxsl_Tools.iter(e,$bind(this,this.checkExpr));
		}
	}
	,__class__: hxsl_Splitter
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = "js.html._CanvasElement.CanvasUtil";
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var name = "webgl";
	var ctx = canvas.getContext(name,attribs);
	if(ctx != null) {
		return ctx;
	}
	var name = "experimental-webgl";
	var ctx = canvas.getContext(name,attribs);
	if(ctx != null) {
		return ctx;
	}
	return null;
};
Math.__name__ = "Math";
var led_LayerType = $hxEnums["led.LayerType"] = { __ename__ : true, __constructs__ : ["IntGrid","Tiles","Entities","AutoLayer","Unknown"]
	,IntGrid: {_hx_index:0,__enum__:"led.LayerType",toString:$estr}
	,Tiles: {_hx_index:1,__enum__:"led.LayerType",toString:$estr}
	,Entities: {_hx_index:2,__enum__:"led.LayerType",toString:$estr}
	,AutoLayer: {_hx_index:3,__enum__:"led.LayerType",toString:$estr}
	,Unknown: {_hx_index:4,__enum__:"led.LayerType",toString:$estr}
};
led_LayerType.__empty_constructs__ = [led_LayerType.IntGrid,led_LayerType.Tiles,led_LayerType.Entities,led_LayerType.AutoLayer,led_LayerType.Unknown];
var led_Point = function(cx,cy) {
	this.cx = cx;
	this.cy = cy;
};
$hxClasses["led.Point"] = led_Point;
led_Point.__name__ = "led.Point";
led_Point.prototype = {
	__class__: led_Point
};
var ui_Console = function(f,p) {
	h2d_Console.call(this,f,p);
	var _g = this;
	_g.posChanged = true;
	_g.scaleX *= 2;
	var _g = this;
	_g.posChanged = true;
	_g.scaleY *= 2;
	ui_Console.ME = this;
	h2d_Console.HIDE_LOG_TIMEOUT = 30;
	dn_Lib.redirectTracesToH2dConsole(this);
};
$hxClasses["ui.Console"] = ui_Console;
ui_Console.__name__ = "ui.Console";
ui_Console.__super__ = h2d_Console;
ui_Console.prototype = $extend(h2d_Console.prototype,{
	handleCommand: function(command) {
		var flagReg_r = new RegExp("[/ \t]*\\+[ \t]*([\\w]+)","g".split("u").join(""));
		h2d_Console.prototype.handleCommand.call(this,command.replace(flagReg_r,"/+ $1"));
	}
	,hasFlag: function(k) {
		return false;
	}
	,__class__: ui_Console
});
var ui_Hud = function() {
	this.invalidated = true;
	dn_Process.call(this,Game.ME);
	this.createRootInLayers(Game.ME.root,Const.DP_UI);
	this.root.set_filter(new h2d_filter_ColorMatrix());
	this.flow = new h2d_Flow(this.root);
};
$hxClasses["ui.Hud"] = ui_Hud;
ui_Hud.__name__ = "ui.Hud";
ui_Hud.__super__ = dn_Process;
ui_Hud.prototype = $extend(dn_Process.prototype,{
	onResize: function() {
		dn_Process.prototype.onResize.call(this);
		var _this = this.root;
		var v = Const.UI_SCALE;
		_this.posChanged = true;
		_this.scaleX = v;
		_this.posChanged = true;
		_this.scaleY = v;
	}
	,render: function() {
	}
	,postUpdate: function() {
		dn_Process.prototype.postUpdate.call(this);
		if(this.invalidated) {
			this.invalidated = false;
			this.render();
		}
	}
	,__class__: ui_Hud
});
var ui_Window = function() {
	dn_Process.call(this,Game.ME);
	this.createRootInLayers(Game.ME.root,Const.DP_UI);
	this.root.set_filter(new h2d_filter_ColorMatrix());
	this.win = new h2d_Flow(this.root);
	this.win.set_backgroundTile(h2d_Tile.fromColor(16777215,32,32));
	this.win.set_borderWidth(7);
	this.win.set_borderHeight(7);
	this.win.set_layout(h2d_FlowLayout.Vertical);
	this.win.set_verticalSpacing(2);
	dn_Process.resizeAll();
};
$hxClasses["ui.Window"] = ui_Window;
ui_Window.__name__ = "ui.Window";
ui_Window.__super__ = dn_Process;
ui_Window.prototype = $extend(dn_Process.prototype,{
	onResize: function() {
		dn_Process.prototype.onResize.call(this);
		var _this = this.root;
		var v = Const.UI_SCALE;
		var _g = _this;
		_g.posChanged = true;
		_g.scaleX *= v;
		var _g = _this;
		_g.posChanged = true;
		_g.scaleY *= v;
		var x = (dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) / Const.UI_SCALE;
		var w;
		if(x > .0) {
			var t = x + .5 | 0;
			w = t < x ? t + 1 : t;
		} else if(x < .0) {
			var t = x - .5 | 0;
			w = t < x ? t + 1 : t;
		} else {
			w = 0;
		}
		var x = (dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height()) / Const.UI_SCALE;
		var h;
		if(x > .0) {
			var t = x + .5 | 0;
			h = t < x ? t + 1 : t;
		} else if(x < .0) {
			var t = x - .5 | 0;
			h = t < x ? t + 1 : t;
		} else {
			h = 0;
		}
		var _this = this.win;
		var v = w * 0.5 - this.win.get_outerWidth() * 0.5 | 0;
		_this.posChanged = true;
		_this.x = v;
		var _this = this.win;
		var v = h * 0.5 - this.win.get_outerHeight() * 0.5 | 0;
		_this.posChanged = true;
		_this.y = v;
	}
	,onClose: function() {
	}
	,close: function() {
		if(!this.destroyed) {
			this.destroyed = true;
			this.onClose();
		}
	}
	,__class__: ui_Window
});
var ui_Modal = function() {
	ui_Window.call(this);
	ui_Modal.ALL.push(this);
	this.modalIdx = ui_Modal.COUNT++;
	if(this.modalIdx == 0) {
		Game.ME.pause();
	}
	this.ca = Main.ME.controller.createAccess("modal",true);
	this.mask = new h2d_Bitmap(h2d_Tile.fromColor(0,1,1,0.6),this.root);
	this.root.under(this.mask);
	dn_Process.resizeAll();
};
$hxClasses["ui.Modal"] = ui_Modal;
ui_Modal.__name__ = "ui.Modal";
ui_Modal.hasAny = function() {
	var _g = 0;
	var _g1 = ui_Modal.ALL;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		if(!e.destroyed) {
			return true;
		}
	}
	return false;
};
ui_Modal.__super__ = ui_Window;
ui_Modal.prototype = $extend(ui_Window.prototype,{
	onDispose: function() {
		ui_Window.prototype.onDispose.call(this);
		this.ca.dispose();
		HxOverrides.remove(ui_Modal.ALL,this);
		ui_Modal.COUNT--;
		if(!ui_Modal.hasAny()) {
			Game.ME.resume();
		}
	}
	,onResize: function() {
		ui_Window.prototype.onResize.call(this);
		if(this.mask != null) {
			var x = (dn_Process.CUSTOM_STAGE_WIDTH > 0 ? dn_Process.CUSTOM_STAGE_WIDTH : hxd_Window.getInstance().get_width()) / Const.UI_SCALE;
			var w;
			if(x > .0) {
				var t = x + .5 | 0;
				w = t < x ? t + 1 : t;
			} else if(x < .0) {
				var t = x - .5 | 0;
				w = t < x ? t + 1 : t;
			} else {
				w = 0;
			}
			var x = (dn_Process.CUSTOM_STAGE_HEIGHT > 0 ? dn_Process.CUSTOM_STAGE_HEIGHT : hxd_Window.getInstance().get_height()) / Const.UI_SCALE;
			var h;
			if(x > .0) {
				var t = x + .5 | 0;
				h = t < x ? t + 1 : t;
			} else if(x < .0) {
				var t = x - .5 | 0;
				h = t < x ? t + 1 : t;
			} else {
				h = 0;
			}
			var _this = this.mask;
			_this.posChanged = true;
			_this.scaleX = w;
			var _this = this.mask;
			_this.posChanged = true;
			_this.scaleY = h;
		}
	}
	,postUpdate: function() {
		ui_Window.prototype.postUpdate.call(this);
		this.mask.set_visible(this.modalIdx == 0);
		this.win.alpha = this.modalIdx == ui_Modal.COUNT - 1 ? 1 : 0.6;
	}
	,update: function() {
		ui_Window.prototype.update.call(this);
		var tmp;
		var _this = this.ca;
		var k = 1;
		var tmp1;
		if(!(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer)) {
			var tmp2;
			var tmp3;
			var tmp4;
			var k1 = _this.parent.primary.h[k];
			if(!(k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1))) {
				var k1 = _this.parent.secondary.h[k];
				tmp4 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
			} else {
				tmp4 = true;
			}
			if(!tmp4) {
				var k1 = _this.parent.third.h[k];
				tmp3 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
			} else {
				tmp3 = true;
			}
			if(!tmp3) {
				var k1 = _this.parent.fourth.h[k];
				tmp2 = k1 != null && !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(k1);
			} else {
				tmp2 = true;
			}
			tmp1 = tmp2 || _this.parent.gc.isPressed(k);
		} else {
			tmp1 = false;
		}
		if(!tmp1) {
			var _this = this.ca;
			tmp = !(_this.manualLock || _this.parent.isLocked() || _this.parent.exclusiveId != null && _this.parent.exclusiveId != _this.id || HxOverrides.now() / 1000 < _this.parent.suspendTimer) && hxd_Key.isPressed(27);
		} else {
			tmp = true;
		}
		if(tmp) {
			this.close();
		}
	}
	,__class__: ui_Modal
});
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
haxe_Resource.content = [{ name : "R_fonts_barlow_condensed_medium_regular_32_fnt", data : ""},{ name : "R_lang_sourceTexts_pot", data : "bXNnaWQgIiINCm1zZ3N0ciAiIg0KIkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD1VVEYtOFxuIg0KIkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXRcbiINCiJNSU1FLVZlcnNpb246IDEuMFxuIg0KDQojOiBzcmMvR2FtZS5oeDozMA0KbXNnaWQgIkdhbWUgaXMgcmVhZHkuIg0KbXNnc3RyICIiDQoNCiM6IHNyYy9HYW1lLmh4OjY5DQptc2dpZCAiUHJlc3MgRVNDQVBFIGFnYWluIHRvIGV4aXQuIg0KbXNnc3RyICIiDQoNCg0K"},{ name : "R_fonts_minecraftiaOutline_fnt", data : "QkZOVAABCwBNaW5lY3JhZnRpYQYAFgBtaW5lY3JhZnRpYU91dGxpbmUucG5nDAAKAD8AAADvAAAAHwA/AAUACwD//wAABAAAAAAAtgAAAG0AJAAKAAkA//8CAAkAAAAAADIAAAB5AAEABwAJAP//AgAGAAAAAABQAAAAZwAMAAcACQD//wIABgAAAAAAbAAAAEMAFgAEAAkA//8CAAMAAAAAAKYAAAD0ABYAAwAJAP//AgACAAAAAAB4AQAApAA/AAcACwD//wAABgAAAAAAaAAAACgAFgAHAAkA//8CAAYAAAAAADEAAABxAAEABwAJAP//AgAGAAAAAAA0AAAAiQABAAcACQD//wIABgAAAAAAvAAAAJYAJAAHAAkA//8CAAYAAAAAAMgAAAD2ACEABwAMAP////8GAAAAAADbAAAAiAAxAAcACwD//wAABgAAAAAA+gAAAHYAQQAHAAkA//8CAAYAAAAAAD4AAADQAAEABgAJAP//AgAFAAAAAABnAAAAIAAYAAcACAD//wQABgAAAAAAuQAAAIMAJAAEAAUA//8CAAMAAAAAAL0AAACeACQABwAJAP//AgAGAAAAAABmAAAAGQAWAAYACQD//wIABQAAAAAAagAAADQAFgAHAAoA//8CAAYAAAAAAM4AAAAjADIABQAKAP//AQAEAAAAAABvAAAAWAAYAAcABwD//wQABgAAAAAAUgAAAHcADAAHAAkA//8CAAYAAAAAAFkAAACvAAwABwAJAP//AgAGAAAAAADdAAAAmAAxAAcACwD//wAABgAAAAAAtAAAAF4AJAAEAAUA//8CAAMAAAAAADgAAACpAAEABwAJAP//AgAGAAAAAABPAAAAXwAMAAcACQD//wIABgAAAAAA2QAAAHgAMQAHAAsA//8AAAYAAAAAAKQAAADlABcABgAHAP//AwAFAAAAAAB5AAAApgAYAAcACAD//wQABgAAAAAA2AAAAHAAMwAHAAkA//8CAAYAAAAAAGUAAAARABgABwAHAP//BAAGAAAAAACoAAAAAQAkAAcAAwD//wIABgAAAAAA0QAAADgAMQAHAAsA//8AAAYAAAAAAEUAAAARAAwABwAJAP//AgAGAAAAAADNAAAAHgAyAAQACgAAAAEABAAAAAAAyQAAAAEAMAAHAAwA/////wYAAAAAAMwAAAAZADIABAAKAP//AQADAAAAAADrAAAACQBBAAcACQD//wIABgAAAAAA9gAAAFUAQQAHAAkA//8CAAYAAAAAAMsAAAARADEABwALAP//AAAGAAAAAABgAAAA4wAMAAQABQD//wIAAwAAAAAAwwAAAM4AIgAHAAsA//8AAAYAAAAAAC0AAABVAAQABwADAP//BQAGAAAAAAA2AAAAmQABAAcACQD//wIABgAAAAAATgAAAFcADAAHAAkA//8CAAYAAAAAAHwAAAC9ABYAAwAJAP//AgACAAAAAAB2AAAAjgAYAAcABwD//wQABgAAAAAAUQAAAG8ADAAHAAkA//8CAAYAAAAAAOwAAAARAEAABAAKAP//AQADAAAAAABNAAAATwAMAAcACQD//wIABgAAAAAA8gAAADUAQQAHAAkA//8CAAYAAAAAAEYAAAAZAAwABwAJAP//AgAGAAAAAABeAAAA0wAMAAcABQD//wIABgAAAAAAbQAAAEgAGAAHAAcA//8EAAYAAAAAAL4AAACmACQABwAJAP//AgAGAAAAAACnAAAA+AAWAAYACQD//wIABQAAAAAAJAAAABcAAQAHAAkA//8CAAYAAAAAAEwAAABHAAwABwAJAP//AgAGAAAAAADFAAAA3gAiAAcACwD//wAABgAAAAAA5wAAAOcANAAHAAoA//8DAAYAAAAAAPUAAABNAEEABwAJAP//AgAGAAAAAAA5AAAAsQABAAcACQD//wIABgAAAAAARAAAAAkADAAHAAkA//8CAAYAAAAAANUAAABYADEABwALAP//AAAGAAAAAAB6AAAArgAYAAcABwD//wQABgAAAAAAtQAAAGMAJAAJAAgA//8CAAgAAAAAAO0AAAAWAEAABAAKAP//AQADAAAAAABVAAAAjwAMAAcACQD//wIABgAAAAAAZAAAAAkAFgAHAAkA//8CAAYAAAAAAGIAAADwAAwABwAJAP//AgAGAAAAAABpAAAAMAAWAAMACQD//wIAAgAAAAAA1gAAAGAAMQAHAAsA//8AAAYAAAAAAMoAAAAJADAABwAMAP////8GAAAAAADhAAAAtwAzAAcACQD//wIABgAAAAAA9wAAAF0AQQAIAAkA//8CAAcAAAAAAD8AAADXAAEABwAJAP//AgAGAAAAAADcAAAAkAAxAAcACwD//wAABgAAAAAAsAAAAEEAJAAFAAUA//8CAAQAAAAAALoAAACIACQABQAFAP//AgAEAAAAAAAzAAAAgQABAAcACQD//wIABgAAAAAAawAAADwAFgAGAAkA//8CAAUAAAAAAMAAAAC2ACEABwAMAP////8GAAAAAADTAAAASAAwAAcADAD/////BgAAAAAAfQAAAMEAFgAGAAkA//8CAAUAAAAAAPkAAABuAEEABwAJAP//AgAGAAAAAAAgAAAAAQAIAAIAAgD//wkABQAAAAAA4wAAAMcAMwAHAAkA//8CAAYAAAAAAFoAAAC3AAwABwAJAP//AgAGAAAAAACsAAAAIAAoAAcABQD//wYABgAAAAAA5AAAAM8AMwAHAAkA//8CAAYAAAAAAOIAAAC/ADMABwAJAP//AgAGAAAAAAAoAAAANAABAAYACQD//wIABQAAAAAAxwAAAO4AJAAHAAsA//8CAAYAAAAAANIAAABAADAABwAMAP////8GAAAAAABDAAAAAQAMAAcACQD//wIABgAAAAAANwAAAKEAAQAHAAkA//8CAAYAAAAAAHUAAACGABgABwAHAP//BAAGAAAAAABuAAAAUAAYAAcABwD//wQABgAAAAAAwQAAAL4AIQAHAAwA/////wYAAAAAANAAAAAvADMACAAJAP7/AgAGAAAAAAA8AAAAwQABAAYACQD//wIABQAAAAAAOwAAAL0AAgADAAkA//8DAAIAAAAAAKUAAADsABYABwAJAP//AgAGAAAAAAC7AAAAjgAmAAcABwD//wQABgAAAAAA9AAAAEUAQQAHAAkA//8CAAYAAAAAAKEAAADRABcAAwAIAP//AwACAAAAAADEAAAA1gAiAAcACwD//wAABgAAAAAA3wAAAKcAMwAHAAkA//8CAAYAAAAAAHQAAACAABYABQAJAP//AgAEAAAAAADzAAAAPQBBAAcACQD//wIABgAAAAAAwgAAAMYAIQAHAAwA/////wYAAAAAACYAAAAnAAEABwAJAP//AgAGAAAAAAA9AAAAyAADAAcABgD//wQABgAAAAAA1AAAAFAAMAAHAAwA/////wYAAAAAAFcAAACfAAwABwAJAP//AgAGAAAAAABxAAAAaAAYAAcACAD//wQABgAAAAAAOgAAALkAAgADAAgA//8DAAIAAAAAAFQAAACHAAwABwAJAP//AgAGAAAAAACqAAAAEgAkAAUABQD//wIABAAAAAAAtwAAAHgAKAAEAAMA//8GAAMAAAAAAKsAAAAYACYABwAHAP//BAAGAAAAAAAiAAAACAABAAYABQD//wIABQAAAAAASgAAADcADAAHAAkA//8CAAYAAAAAAHAAAABgABgABwAIAP//BAAGAAAAAACyAAAAUAAkAAYABwD//wIABQAAAAAA/wAAAJwAQQAHAAoA//8CAAYAAAAAAEsAAAA/AAwABwAJAP//AgAGAAAAAAB7AAAAtgAWAAYACQD//wIABQAAAAAAMAAAAGkAAQAHAAkA//8CAAYAAAAAAPEAAAAtAEEABwAJAP//AgAGAAAAAAD7AAAAfgBBAAcACQD//wIABgAAAAAAqQAAAAkAJgAIAAcA//8EAAcAAAAAAEcAAAAhAAwABwAJAP//AgAGAAAAAADqAAAAAQBBAAcACQD//wIABgAAAAAArQAAACgAJgAHAAMA//8EAAYAAAAAANcAAABoADQABwAHAP//AwAGAAAAAADeAAAAoAAzAAYACQD//wIABQAAAAAANQAAAJEAAQAHAAkA//8CAAYAAAAAAPAAAAAlAEAABwAKAP//AQAGAAAAAABBAAAA6AABAAcACQD//wIABgAAAAAAvwAAAK4AJAAHAAkA//8CAAYAAAAAANoAAACAADEABwALAP//AAAGAAAAAAAvAAAAYQABAAcACQD//wIABgAAAAAASQAAADEADAAFAAkA//8CAAQAAAAAACwAAABRAAYAAwAFAP//BwACAAAAAABbAAAAvwAMAAUACQD//wIABAAAAAAAeAAAAJ4AGAAHAAcA//8EAAYAAAAAALgAAAB9ACcABQAGAP//BQAEAAAAAABhAAAA6AAOAAcABwD//wQABgAAAAAAogAAANUAFgAHAAkA//8CAAYAAAAAAKMAAADdABYABwAJAP//AgAGAAAAAADmAAAA3wA1AAcABwD//wQABgAAAAAASAAAACkADAAHAAkA//8CAAYAAAAAAGMAAAABABgABwAHAP//BAAGAAAAAAByAAAAcAAYAAcABwD//wQABgAAAAAAIQAAAAQAAQADAAkA//8CAAIAAAAAACUAAAAfAAEABwAJAP//AgAGAAAAAABAAAAA3wABAAgACQD//wIABwAAAAAAXQAAAM0ADAAFAAkA//8CAAQAAAAAAHcAAACWABgABwAHAP//BAAGAAAAAACvAAAAOQAkAAcAAwD//wIABgAAAAAA/AAAAIYAQQAHAAkA//8CAAYAAAAAAPgAAABmAEMABwAHAP//BAAGAAAAAAApAAAAOwABAAYACQD//wIABQAAAAAA6QAAAPcAMwAHAAkA//8CAAYAAAAAAF8AAADbABIABwADAP//CAAGAAAAAADGAAAA5gAkAAcACQD//wIABgAAAAAA6AAAAO8AMwAHAAkA//8CAAYAAAAAAFwAAADFAAwABwAJAP//AgAGAAAAAABzAAAAeAAYAAcABwD//wQABgAAAAAAKgAAAEIAAwAGAAUA//8EAAUAAAAAAP0AAACOAEEABwAKAP//AgAGAAAAAADgAAAArwAzAAcACQD//wIABgAAAAAA5QAAANcAMwAHAAkA//8CAAYAAAAAAP4AAACWAEIABQAJAP//AwAEAAAAAAAuAAAAXQAGAAMABAD//wcAAgAAAAAAsQAAAEcAJAAIAAkA//8CAAcAAAAAACcAAAAvAAEABAAFAP//AgADAAAAAABCAAAA8AABAAcACQD//wIABgAAAAAAUwAAAH8ADAAHAAkA//8CAAYAAAAAAM8AAAApADMABQAJAP//AgAEAAAAAABYAAAApwAMAAcACQD//wIABgAAAAAAIwAAAA8AAQAHAAkA//8CAAYAAAAAAK4AAAAwACQACAAHAP//AgAHAAAAAADuAAAAGwA/AAMACwD//wAAAgAAAAAAfgAAAMgAFgAIAAQA//8CAAcAAAAAALMAAABXACQABgAHAP//AgAFAAAAAAArAAAASQACAAcABwD//wMABgAAAAAAVgAAAJcADAAHAAkA//8CAAYAAAAAAAAAAAA"},{ name : "R_fonts_barlow_condensed_medium_regular_9_fnt", data : "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"},{ name : "R_props_json", data : "ew0KCSJmcy5jb252ZXJ0IiA6IHsNCgkJIndhdiIgOiAibXAzIg0KCX0NCn0NCg"},{ name : "R_fonts_barlow_condensed_medium_regular_32_png", data : "iVBORw0KGgoAAAANSUhEUgAABAAAAAIACAYAAAAczR65AAAACXBIWXMAABnWAAAZ1gEY0crtAAAFw2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDUgNzkuMTYzNDk5LCAyMDE4LzA4LzEzLTE2OjQwOjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOSAoV2luZG93cykiIHhtcDpDcmVhdGVEYXRlPSIyMDE5LTA1LTE3VDA4OjIyOjQ0KzAyOjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAxOS0wNS0yMFQxMjo1MDoxOCswMjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxOS0wNS0yMFQxMjo1MDoxOCswMjowMCIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NzllNmMzZGYtYWZlOS04NzRiLTg2ODEtZDdmN2QwNjM4ZmVmIiB4bXBNTTpEb2N1bWVudElE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gUAgEAgE4gAQCAQCgUAgEAgEAoFAIA4AgUAgEAgEAoFAIBAIBOIAEAgEAoFAIBAIBAKBQCAOAIFAIBAIBAKBQCAQCATiABAIBAKBQCAQCAQCgUAgDgCBQCAQCAQCgUAgEAgE4gAQCAQCgUAgEAgEAoFAHAACgUAgEAgEAoFAIBAIxAEgEAgEAoFAIBAIBAKBQBwAAoFAIBAIBAKBQCAQCMQBIBAIBAKBQCAQCAQCgUAcAAKBQCAQCAQCgUAgEAjEASAQCAQCgUAgEAgEAoFAHAACgUAgEAgEAoFAIBAIxAEgEAgEAoFAIBAIBAKBOADkJggEAoFAIBAIBAKBQCAOAIFAIBAIBAKBQCAQCATiABAIBAKBQCAQCAQCgUAgDgCBQCAQCAQCgUAgEAgE4gAQCAQCgUAgEAgEAoFAIA4AgUAgEAgEAoFAIBAIBOIAEAgEAoFAIBAIBAKBQCAOAIFAIBAIBAKBQCAQCATiABAIBAKBQCAQCAQCgUAcAAKBQCAQCAQCgUAgEAjEASAQCAQCgUAgEAgEAoFAHAACgUAgEAgEAoFAIBAIxAEgEAgEAoFAIBAIBAKBQBwAAoFAIBAIBAKBQCAQCMQBIBAIBAKBQCAQCAQCgUAcAAKBQCAQCAQCgUAgEAjEASAQCAQCgUAgEAgEAsFzif8PR0LzzuGKs70AAAAASUVORK5CYII"},{ name : "R_fonts_barlow_condensed_medium_regular_17_fnt", data : ""},{ name : "R_fonts_barlow_condensed_medium_regular_11_fnt", data : ""},{ name : "R_lang_en_po", data : "bXNnaWQgIiINCm1zZ3N0ciAiIg0KIlByb2plY3QtSWQtVmVyc2lvbjogXG4iDQoiUE9ULUNyZWF0aW9uLURhdGU6IFxuIg0KIlBPLVJldmlzaW9uLURhdGU6IDIwMTktMTAtMjkgMTU6MTcrMDEwMFxuIg0KIkxhc3QtVHJhbnNsYXRvcjogXG4iDQoiTGFuZ3VhZ2UtVGVhbTogXG4iDQoiTGFuZ3VhZ2U6IGVuXG4iDQoiTUlNRS1WZXJzaW9uOiAxLjBcbiINCiJDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLThcbiINCiJDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA4Yml0XG4iDQoiWC1HZW5lcmF0b3I6IFBvZWRpdCAyLjIuNFxuIg0KIlgtUG9lZGl0LUJhc2VwYXRoOiAuXG4iDQoiUGx1cmFsLUZvcm1zOiBucGx1cmFscz0yOyBwbHVyYWw9KG4gIT0gMSk7XG4iDQoNCiM6IHNyYy9HYW1lLmh4OjE5DQptc2dpZCAiR2FtZSBpcyByZWFkeS4iDQptc2dzdHIgIiINCg0KIzogc3JjL0dhbWUuaHg6NTcNCm1zZ2lkICJQcmVzcyBFU0NBUEUgYWdhaW4gdG8gZXhpdC4iDQptc2dzdHIgIiINCg"},{ name : "R_fonts_minecraftiaOutline_png", data : ""},{ name : "R_world_tiles_png", data : ""},{ name : "R_fonts_barlow_condensed_medium_regular_11_png", data : ""},{ name : "R_atlas_tiles_atlas", data : "DQp0aWxlcy5wbmcNCnNpemU6IDEwMjQsNTEyDQpmb3JtYXQ6IFJHQkE4ODg4DQpmaWx0ZXI6IExpbmVhcixMaW5lYXINCnJlcGVhdDogbm9uZQ0KYmcNCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogMSwgMQ0KICBzaXplOiA2MDAsIDQwMA0KICBvcmlnOiA2MDAsIDQwMA0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpidW1wZXJPZmYNCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogMzQsIDQ4MA0KICBzaXplOiAzMiwgMjQNCiAgb3JpZzogMzIsIDI0DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCmJ1bXBlck91dA0KICByb3RhdGU6IGZhbHNlDQogIHh5OiAxLCA0ODANCiAgc2l6ZTogMzIsIDI2DQogIG9yaWc6IDMyLCAyNg0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpjYXJ0MA0KICByb3RhdGU6IGZhbHNlDQogIHh5OiAxLCA0NDcNCiAgc2l6ZTogMzIsIDMyDQogIG9yaWc6IDMyLCAzMg0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQplbXB0eQ0KICByb3RhdGU6IGZhbHNlDQogIHh5OiAzNCwgNTA1DQogIHNpemU6IDEsIDENCiAgb3JpZzogMSwgMQ0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpmeENpcmNsZTANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogNjcsIDQ0Nw0KICBzaXplOiAxNiwgMTYNCiAgb3JpZzogMTYsIDE2DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCmZ4RG90MA0KICByb3RhdGU6IGZhbHNlDQogIHh5OiA4NCwgNTAyDQogIHNpemU6IDMsIDMNCiAgb3JpZzogMywgMw0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpmeER1c3QwDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDc3LCA1MDYNCiAgc2l6ZTogNSwgMw0KICBvcmlnOiA1LCAzDQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCmZ4RHVzdDENCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogODMsIDUwNg0KICBzaXplOiA0LCAzDQogIG9yaWc6IDQsIDMNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KZnhEdXN0Mg0KICByb3RhdGU6IGZhbHNlDQogIHh5OiAxLCA1MDcNCiAgc2l6ZTogNCwgNA0KICBvcmlnOiA0LCA0DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCmZ4RHVzdDMNCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogNiwgNTA3DQogIHNpemU6IDQsIDQNCiAgb3JpZzogNCwgNA0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpmeEltcGFjdDANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogODAsIDQzNQ0KICBzaXplOiAxNSwgOQ0KICBvcmlnOiAxNSwgOQ0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpmeExlYWYwDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDYxLCA1MDUNCiAgc2l6ZTogNSwgNQ0KICBvcmlnOiA1LCA1DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCmZ4TGVhZjENCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogNjcsIDQ5OA0KICBzaXplOiA1LCA1DQogIG9yaWc6IDUsIDUNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KZnhMZWFmMg0KICByb3RhdGU6IGZhbHNlDQogIHh5OiA2NywgNTA0DQogIHNpemU6IDQsIDUNCiAgb3JpZzogNCwgNQ0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpmeExlYWYzDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDcyLCA1MDQNCiAgc2l6ZTogNCwgNQ0KICBvcmlnOiA0LCA1DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCmZ4TGluZTANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogMTEsIDUwNw0KICBzaXplOiAzMywgMw0KICBvcmlnOiAzMywgMw0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQpmeExpbmVEaXIwDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDczLCA0OTgNCiAgc2l6ZTogMzMsIDMNCiAgb3JpZzogMzMsIDMNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KZnhTbWFsbENpcmNsZTANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogNDUsIDUwNQ0KICBzaXplOiA2LCA2DQogIG9yaWc6IDYsIDYNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KZnhTbW9rZTANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogMSwgNDAyDQogIHNpemU6IDQ0LCA0NA0KICBvcmlnOiA0NCwgNDQNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KZnhUYWlsMA0KICByb3RhdGU6IGZhbHNlDQogIHh5OiA0NiwgNDM1DQogIHNpemU6IDMzLCAxMQ0KICBvcmlnOiAzMywgMTENCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KaGFsbw0KICByb3RhdGU6IGZhbHNlDQogIHh5OiA2MDIsIDENCiAgc2l6ZTogMTI4LCAxMjgNCiAgb3JpZzogMTI4LCAxMjgNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KaXRlbUFwcGxlDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDY3LCA0NjQNCiAgc2l6ZTogMTYsIDE2DQogIG9yaWc6IDE2LCAxNg0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQppdGVtRGlhbW9uZA0KICByb3RhdGU6IGZhbHNlDQogIHh5OiA2NywgNDgxDQogIHNpemU6IDE2LCAxNg0KICBvcmlnOiAxNiwgMTYNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KaXRlbVdvb2QNCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogODQsIDQ0NQ0KICBzaXplOiAxNiwgMTYNCiAgb3JpZzogMTYsIDE2DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCnBpeGVsDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDM2LCA1MDUNCiAgc2l6ZTogMSwgMQ0KICBvcmlnOiAxLCAxDQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCnRyYWN0b3JCYWNrMA0KICByb3RhdGU6IGZhbHNlDQogIHh5OiAzNCwgNDQ3DQogIHNpemU6IDMyLCAzMg0KICBvcmlnOiAzMiwgMzINCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0KdHJhY3RvckJhc2UwDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDQ2LCA0MDINCiAgc2l6ZTogMzIsIDMyDQogIG9yaWc6IDMyLCAzMg0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQp0cmFjdG9yR3lybzANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogNzksIDQwMg0KICBzaXplOiAzMiwgMzINCiAgb3JpZzogMzIsIDMyDQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCnVpQmFyDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDc3LCA1MDINCiAgc2l6ZTogNiwgMw0KICBvcmlnOiA2LCAzDQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCnVpQmFyQmcNCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogNTIsIDUwNQ0KICBzaXplOiA4LCA1DQogIG9yaWc6IDgsIDUNCiAgb2Zmc2V0OiAwLCAwDQogIGluZGV4OiAtMQ0Kd2hlZWxMYXJnZTANCiAgcm90YXRlOiBmYWxzZQ0KICB4eTogODQsIDQ2Mg0KICBzaXplOiAxNiwgMTYNCiAgb3JpZzogMTYsIDE2DQogIG9mZnNldDogMCwgMA0KICBpbmRleDogLTENCndoZWVsU21hbGwwDQogIHJvdGF0ZTogZmFsc2UNCiAgeHk6IDg0LCA0NzkNCiAgc2l6ZTogMTYsIDE2DQogIG9yaWc6IDE2LCAxNg0KICBvZmZzZXQ6IDAsIDANCiAgaW5kZXg6IC0xDQo"},{ name : "R_data_cdb", data : "ew0KCSJzaGVldHMiOiBbXSwNCgkiY3VzdG9tVHlwZXMiOiBbXSwNCgkiY29tcHJlc3MiOiBmYWxzZQ0KfQ"},{ name : "R_atlas_tiles_png", data : ""},{ name : "R_world_world_json", data : ""},{ name : "R_world_RPG_Assets_by_ssugmi_png", data : ""},{ name : "R_fonts_barlow_condensed_medium_regular_9_png", data : ""},{ name : "R_lang_en_mo", data : "3hIElQAAAAABAAAAHAAAACQAAAADAAAALAAAAAAAAAA4AAAAIAEAADkAAAABAAAAAAAAAAAAAAAAUHJvamVjdC1JZC1WZXJzaW9uOiAKUE8tUmV2aXNpb24tRGF0ZTogMjAxOS0xMC0yOSAxNToxNyswMTAwCkxhc3QtVHJhbnNsYXRvcjogCkxhbmd1YWdlLVRlYW06IApMYW5ndWFnZTogZW4KTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PVVURi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKWC1HZW5lcmF0b3I6IFBvZWRpdCAyLjIuNApYLVBvZWRpdC1CYXNlcGF0aDogLgpQbHVyYWwtRm9ybXM6IG5wbHVyYWxzPTI7IHBsdXJhbD0obiAhPSAxKTsKAA"},{ name : "R_fonts_barlow_condensed_medium_regular_17_png", data : ""}];
haxe_ds_ObjectMap.count = 0;
haxe_MainLoop.add(hxd_System.updateCursor,-1);
js_Boot.__toStr = ({ }).toString;
Assets.initDone = false;
dn_Process.CUSTOM_STAGE_WIDTH = -1;
dn_Process.CUSTOM_STAGE_HEIGHT = -1;
dn_Process.UNIQ_ID = 0;
dn_Process.ROOTS = [];
Const.FPS = 60;
Const.AUTO_SCALE_TARGET_WID = 320;
Const.AUTO_SCALE_TARGET_HEI = -1;
Const.SCALE = 1.0;
Const.UI_SCALE = 1.0;
Const.GRID = 16;
Const.GRAVITY = 0.016;
Const.PARALLAX_COLOR = Std.parseInt("0x" + HxOverrides.substr("#ffb600",1,999));
Const.BG_COLOR = Std.parseInt("0x" + HxOverrides.substr("#805c93",1,999));
Const._uniq = 0;
Const.INFINITE = 999999;
Const._inc = 0;
Const.DP_BG = Const._inc++;
Const.DP_FX_BG = Const._inc++;
Const.DP_MAIN = Const._inc++;
Const.DP_HERO_BACK = Const._inc++;
Const.DP_HERO = Const._inc++;
Const.DP_FX_FRONT = Const._inc++;
Const.DP_TOP = Const._inc++;
Const.DP_UI = Const._inc++;
Entity.ALL = [];
Entity.GC = [];
Lang._initDone = false;
Lang.DEFAULT = "en";
Lang.CUR = "??";
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
dn_Cooldown.__meta__ = { obj : { indexes : ["wasOnGround","spawnLock","spawnTick","carriedFollowLock","homePicked","heroPickLock","homePickLock","keepBlink","shineFx","jump","emitterLife","emitterTick","shaking","open","autoWalk","recentHeroJump","bumperJump","walkLock","extraJump","grass","smoke","cliffMiniJump","slowdown","bump","bumping","stopFrame","check"]}};
dn_data_GetText.CONTEXT = "||";
dn_data_MoReader.MAGIC = -1794895138;
dn_data_MoReader.MAGIC2 = -569244523;
dn_heaps_Controller.UNIQ_ID = 0;
dn_heaps_Controller.LONG_PRESS = 0.35;
dn_heaps_Controller.SHORT_PRESS = 0.17;
dn_heaps_Controller.ALL = [];
hxd_Pad.CONFIG_JS_STD = { A : 0, B : 1, X : 2, Y : 3, LB : 4, RB : 5, LT : 6, RT : 7, back : 8, start : 9, analogClick : 10, ranalogClick : 11, dpadUp : 12, dpadDown : 13, dpadLeft : 14, dpadRight : 15, analogX : 17, analogY : 18, ranalogX : 19, ranalogY : 20, names : ["A","B","X","Y","LB","RB","LT","RT","Select","Start","LCLK","RCLK","DUp","DDown","DLeft","DRight","LX","LY","RX","RY"]};
hxd_Pad.CONFIG_JS_DS4 = { A : 0, B : 1, X : 2, Y : 3, LB : 4, RB : 5, LT : 6, RT : 7, back : 8, start : 9, analogClick : 10, ranalogClick : 11, dpadUp : 12, dpadDown : 13, dpadLeft : 14, dpadRight : 15, analogX : 18, analogY : 19, ranalogX : 20, ranalogY : 21, names : ["A","B","X","Y","LB","RB","LT","RT","Select","Start","LCLK","RCLK","DUp","DDown","DLeft","DRight","LX","LY","RX","RY"]};
hxd_Pad.CONFIG_JS_DS4_FF = { A : 1, B : 2, X : 0, Y : 3, LB : 4, RB : 5, LT : 6, RT : 7, back : 8, start : 9, analogClick : 10, ranalogClick : 11, dpadUp : 9000, dpadDown : 9000, dpadLeft : 9000, dpadRight : 9000, analogX : 18, analogY : 19, ranalogX : 20, ranalogY : 23, names : ["A","B","X","Y","LB","RB","LT","RT","Select","Start","LCLK","RCLK","DUp","DDown","DLeft","DRight","LX","LY","RX","RY"]};
hxd_Pad.DEFAULT_CONFIG = hxd_Pad.CONFIG_JS_STD;
hxd_Pad.initDone = false;
hxd_Pad.pads = new haxe_ds_IntMap();
dn_heaps_GamePad.ALL = [];
dn_heaps_GamePad.MAPPING = [hxd_Pad.DEFAULT_CONFIG.A,hxd_Pad.DEFAULT_CONFIG.B,hxd_Pad.DEFAULT_CONFIG.X,hxd_Pad.DEFAULT_CONFIG.Y,hxd_Pad.DEFAULT_CONFIG.back,hxd_Pad.DEFAULT_CONFIG.start,hxd_Pad.DEFAULT_CONFIG.LT,hxd_Pad.DEFAULT_CONFIG.RT,hxd_Pad.DEFAULT_CONFIG.LB,hxd_Pad.DEFAULT_CONFIG.RB,hxd_Pad.DEFAULT_CONFIG.analogClick,hxd_Pad.DEFAULT_CONFIG.ranalogClick,hxd_Pad.DEFAULT_CONFIG.dpadUp,hxd_Pad.DEFAULT_CONFIG.dpadDown,hxd_Pad.DEFAULT_CONFIG.dpadLeft,hxd_Pad.DEFAULT_CONFIG.dpadRight,hxd_Pad.DEFAULT_CONFIG.analogX,hxd_Pad.DEFAULT_CONFIG.analogX,hxd_Pad.DEFAULT_CONFIG.analogX,hxd_Pad.DEFAULT_CONFIG.analogY,hxd_Pad.DEFAULT_CONFIG.analogY,hxd_Pad.DEFAULT_CONFIG.analogY,hxd_Pad.DEFAULT_CONFIG.ranalogX,hxd_Pad.DEFAULT_CONFIG.ranalogX,hxd_Pad.DEFAULT_CONFIG.ranalogX,hxd_Pad.DEFAULT_CONFIG.ranalogY,hxd_Pad.DEFAULT_CONFIG.ranalogY,hxd_Pad.DEFAULT_CONFIG.ranalogY];
dn_heaps_assets_Atlas.CACHE_ANIMS = [];
dn_heaps_filter__$PixelOutline_PixelOutlinePass.__meta__ = { obj : { ignore : ["shader"]}};
h3d_shader_ScreenShader.SRC = "HXSLF2gzZC5zaGFkZXIuU2NyZWVuU2hhZGVyBwEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACghfX2luaXRfXw4GAAALBnZlcnRleA4GAAACAgoAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAALAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAA";
dn_heaps_filter__$PixelOutline_PixelOutlineShader.SRC = "HXSLMGRuLmhlYXBzLmZpbHRlci5fUGl4ZWxPdXRsaW5lLlBpeGVsT3V0bGluZVNoYWRlcgwBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoHdGV4dHVyZQoCAAALCXBpeGVsU2l6ZQUKAgAADAxvdXRsaW5lQ29sb3IFCwIAAA0La25vY2tPdXRNdWwBAgAADghfX2luaXRfXw4GAAAPBnZlcnRleA4GAAAQCGZyYWdtZW50DgYAAAMCDgAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAA8AAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAARAAAAUCCBEIY3VyQ29sb3IFDAQAAAkDIQ4CAgoKAgMFCgUMAAsGBQoCEQUMDAADAQMAAAAAAAAAAAMCBQELBg8GDwYPBgYKCQMhDgICCgoJAygOAgYACgIDBQoAAAMKAgsFCgAAAwMKAgMFCgQAAwUKBQwMAAMBAwAAAAAAAAAAAwIGBgoJAyEOAgIKCgkDKA4CBgMKAgMFCgAAAwoCCwUKAAADAwoCAwUKBAADBQoFDAwAAwEDAAAAAAAAAAADAgIGBgoJAyEOAgIKCgkDKA4CCgIDBQoAAAMGAAoCAwUKBAADCgILBQoEAAMDBQoFDAwAAwEDAAAAAAAAAAADAgIGBgoJAyEOAgIKCgkDKA4CCgIDBQoAAAMGAwoCAwUKBAADCgILBQoEAAMDBQoFDAwAAwEDAAAAAAAAAAADAgIGBAIHBQwJAyoOAgIMBQsBAwAAAAAAAPA/AwUMBQwAAAAGBAIHBQwGAQIRBQwJAyYOAQINAQMFDAUMAAA";
dn_heaps_slib_SpriteLib.DISABLE_ANIM_UPDATES = false;
en_Bumper.ALL = [];
en_Home.ALL = [];
en_Item.ALL = [];
en_ItemGen.ALL = [];
h2d_Console.HIDE_LOG_TIMEOUT = 3.;
h2d_HtmlText.REG_SPACES = new EReg("[\r\n\t ]+","g");
h3d_Buffer.GUID = 0;
h3d_Engine.SOFTWARE_DRIVER = false;
h3d_Engine.ANTIALIASING = 0;
h3d_impl_InputNames.UID = 0;
h3d_impl_InputNames.CACHE = new haxe_ds_StringMap();
h3d_impl_GlDriver.ALLOW_WEBGL2 = true;
h3d_impl_GlDriver.BLACK = new h3d_Vector(0,0,0,0);
h3d_impl_GlDriver.outOfMemoryCheck = false;
h3d_impl_GlDriver.TFILTERS = [[[9728,9728],[9729,9729]],[[9728,9984],[9729,9985]],[[9728,9986],[9729,9987]]];
h3d_impl_GlDriver.TWRAP = [33071,10497];
h3d_impl_GlDriver.FACES = [0,1028,1029,1032];
h3d_impl_GlDriver.BLEND = [1,0,770,768,772,774,771,769,773,775,32769,32771,32770,32772,776];
h3d_impl_GlDriver.COMPARE = [519,512,514,517,516,518,513,515];
h3d_impl_GlDriver.STENCIL_OP = [7680,0,7681,7682,34055,7683,34056,5386];
h3d_impl_GlDriver.OP = [32774,32778,32779,32775,32776];
h3d_impl_GlDriver.CUBE_FACES = [34069,34070,34071,34072,34073,34074];
h3d_impl_GlDriver.CBUFFERS = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 0;
		while(_g1 < 32) {
			var i = _g1++;
			var _g2 = [];
			var _g3 = 0;
			var _g4 = i;
			while(_g3 < _g4) {
				var k = _g3++;
				_g2.push(36064 + k);
			}
			_g.push(_g2);
		}
	}
	$r = _g;
	return $r;
}(this));
h3d_impl_MemoryManager.ALL_FLAGS = h3d_BufferFlag.__empty_constructs__.slice();
h3d_mat_Defaults.defaultKillAlphaThreshold = 0.5;
h3d_mat_Defaults.loadingTextureColor = -65281;
h3d_mat_MaterialSetup.current = new h3d_mat_MaterialSetup("Default");
h3d_mat_Texture.UID = 0;
h3d_mat_Texture.PREVENT_AUTO_DISPOSE = 2147483647;
h3d_mat_Texture.nativeFormat = hxd_PixelFormat.RGBA;
h3d_pass_Blur.__meta__ = { obj : { ignore : ["shader"]}};
h3d_pass__$Border_BorderShader.SRC = "HXSLHWgzZC5wYXNzLl9Cb3JkZXIuQm9yZGVyU2hhZGVyCQEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACgVjb2xvcgUMAgAACwhfX2luaXRfXw4GAAAMBnZlcnRleA4GAAANCGZyYWdtZW50DgYAAAMCCwAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAAwAAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAAQ0AAAUBBgQCCAUMAgoFDAUMAA";
h3d_pass_ColorMatrixShader.SRC = "HXSLGmgzZC5wYXNzLkNvbG9yTWF0cml4U2hhZGVyFQEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACgd0ZXh0dXJlCgIAAAsGbWF0cml4BwIAAAwIdXNlQWxwaGECAgABAAAAAAANB3VzZU1hc2sCAgABAAAAAAAOCm1hc2tJbnZlcnQCAgABAAAAAAAPD2hhc1NlY29uZE1hdHJpeAICAAEAAAAAABAHbWF0cml4MgcCAAARBG1hc2sKAgAAEghtYXNrTWF0QQULAgAAEwhtYXNrTWF0QgULAgAAFAltYXNrUG93ZXIDAgAAFQttYXNrQ2hhbm5lbAUMAgAAFghfX2luaXRfXw4GAAAXBnZlcnRleA4GAAAYBWFwcGx5DgYAABkIZnJhZ21lbnQOBgAABAIWAAAFAgYEAgcFDAIIBQwFDAYEAgkFCgIDBQoFCgAAFwAABQEGBAIGBQwJAyoOBAoCAgUKAAADBgEKAgIFCgQAAwIEAwMBAwAAAAAAAAAAAwEDAAAAAAAA8D8DBQwFDAADGAIaBWNvbG9yBQwEAAAbA21hdAcEAAAFDAUBDQsCDAIGAQIaBQwCGwcFDAYBCQMqDgIKAhoFDJIABQsBAwAAAAAAAPA/AwUMAhsHBQwFDAAAARkAAAUBCwINAgUFCBwFY29sb3IFDAQAAAkDIQ4CAgoKAgMFCgUMAAgdAnV2BQsEAAAJAykOAgIDBQoBAwAAAAAAAPA/AwULAAgeAWsDBAAACQMIDgIJAx0OAgkDIQ4CAhEKCQMoDgIJAx0OAgIdBQsCEgULAwkDHQ4CAh0FCwITBQsDBQoFDAIVBQwDAhQDAwAIHwZjb2xvcjIFDAQAAAsCDwIJAhgOAgIcBQwCEAcFDAIcBQwFDAAGBAIHBQwLAg4CCQMYDgMCHwUMCQIYDgICHAUMAgsHBQwCHgMFDAkDGA4DCQIYDgICHAUMAgsHBQwCHwUMAh4DBQwFDAUMAAYEAgcFDAkCGA4CCQMhDgICCgoCAwUKBQwCCwcFDAUMAAA";
h3d_pass__$Copy_ArrayCopyShader.SRC = "HXSLHmgzZC5wYXNzLl9Db3B5LkFycmF5Q29weVNoYWRlcgoBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoHdGV4dHVyZQsCAAALBWxheWVyAQIAAAwIX19pbml0X18OBgAADQZ2ZXJ0ZXgOBgAADghmcmFnbWVudA4GAAADAgwAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAANAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEOAAAFAQYEAggFDAkDIQ4CAgoLCQMpDgICCQUKCQMmDgECCwEDBQsFDAUMAA";
h3d_pass__$Copy_CopyShader.SRC = "HXSLGWgzZC5wYXNzLl9Db3B5LkNvcHlTaGFkZXIJAQVpbnB1dA0BAgIIcG9zaXRpb24FCgEBAAMCdXYFCgEBAAEAAAQFZmxpcFkDAgAABQZvdXRwdXQNAgIGCHBvc2l0aW9uBQwEBQAHBWNvbG9yBQwEBQAEAAAICnBpeGVsQ29sb3IFDAQAAAkMY2FsY3VsYXRlZFVWBQoEAAAKB3RleHR1cmUKAgAACwhfX2luaXRfXw4GAAAMBnZlcnRleA4GAAANCGZyYWdtZW50DgYAAAMCCwAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAAwAAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAAQ0AAAUBBgQCCAUMCQMhDgICCgoCCQUKBQwFDAA";
h3d_pass__$CubeCopy_CubeCopyShader.SRC = "HXSLIWgzZC5wYXNzLl9DdWJlQ29weS5DdWJlQ29weVNoYWRlcgoBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoHdGV4dHVyZQwCAAALA21hdAYCAAAMCF9faW5pdF9fDgYAAA0GdmVydGV4DgYAAA4IZnJhZ21lbnQOBgAAAwIMAAAFAgYEAgcFDAIIBQwFDAYEAgkFCgIDBQoFCgAADQAABQEGBAIGBQwJAyoOBAoCAgUKAAADBgEKAgIFCgQAAwIEAwMBAwAAAAAAAAAAAwEDAAAAAAAA8D8DBQwFDAABDgAABQIIDwJ1dgUKBAAABgMGAQIJBQoBAwAAAAAAAABAAwUKAQMAAAAAAADwPwMFCgAGBAIIBQwJAyEOAgIKDAkDHw4BBgEJAykOAgIPBQoBAwAAAAAAAPA/AwULAgsGBQsFCwUMBQwA";
h3d_pass__$HardwarePick_FixedColor.SRC = "HXSLIWgzZC5wYXNzLl9IYXJkd2FyZVBpY2suRml4ZWRDb2xvcgUBB2NvbG9ySUQFDAIAAAIIdmlld3BvcnQFDAIAAAMGb3V0cHV0DQECBAhwb3NpdGlvbgUMBAMABQdjb2xvcklEBQwEAwAEAAAGBnZlcnRleA4GAAAHCGZyYWdtZW50DgYAAAIABgAABQEGBAIEBQwGAQQGAAIEBQwGAQkDKg4DCgICBQwRAAUKAQMAAAAAAAAAAAMBAwAAAAAAAAAAAwUMCgIEBQwMAAMFDAUMBQwJAyoOAwoCAgUMOQAFCgEDAAAAAAAA8D8DAQMAAAAAAADwPwMFDAUMBQwAAQcAAAUBBgQCBQUMAgEFDAUMAA";
h3d_pass_ShaderManager.STRICT = true;
h3d_shader_AmbientLight.SRC = "HXSLF2gzZC5zaGFkZXIuQW1iaWVudExpZ2h0CgEGZ2xvYmFsDQECAgxhbWJpZW50TGlnaHQFCwABAAMQcGVyUGl4ZWxMaWdodGluZwIAAQEAAAAAAAAAAAQKcGl4ZWxDb2xvcgUMBAAABQ9saWdodFBpeGVsQ29sb3IFCwQAAAYKbGlnaHRDb2xvcgULBAAABwhhZGRpdGl2ZQICAAEAAAAAAAgIX19pbml0X18OBgAACRBfX2luaXRfX2ZyYWdtZW50DgYAAAoJY2FsY0xpZ2h0DgYAAAsGdmVydGV4DgYAAAwIZnJhZ21lbnQOBgAABQIIAAAFAQYEAgYFCwsCBwICAgULCQMpDgEBAwAAAAAAAAAAAwULBQsFCwACCQAABQEGBAIFBQsLAgcCAgIFCwkDKQ4BAQMAAAAAAAAAAAMFCwULBQsAAwoBDQpsaWdodENvbG9yBQsEAAAFCwUBDQsCBwICDQULBAYAAgIFCwYBCQMWDgIEBgMBAwAAAAAAAPA/AwICBQsFCwULAQMAAAAAAAAAAAMFCwINBQsFCwULBQsFCwAAAAsAAAUBCwcCAgMCAgaBCgIEBQySAAULCQIKDgECBgULBQsFCwAAAAEMAAAFAQsCAwIGgQoCBAUMkgAFCwkCCg4BAgUFCwULBQsAAAA";
h3d_shader_Base2d.SRC = "HXSLEWgzZC5zaGFkZXIuQmFzZTJkGwEFaW5wdXQNAQMCCHBvc2l0aW9uBQoBAQADAnV2BQoBAQAEBWNvbG9yBQwBAQABAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgEdGltZQMAAAAJBnpWYWx1ZQMCAAAKB3RleHR1cmUKAgAACw5zcHJpdGVQb3NpdGlvbgUMBAAADBBhYnNvbHV0ZVBvc2l0aW9uBQwEAAANCnBpeGVsQ29sb3IFDAQAAA4MdGV4dHVyZUNvbG9yBQwEAAAPDGNhbGN1bGF0ZWRVVgUKAwAAEAppc1JlbGF0aXZlAgIAAQAAAAAAEQVjb2xvcgUMAgAAEg9hYnNvbHV0ZU1hdHJpeEEFCwIAABMPYWJzb2x1dGVNYXRyaXhCBQsCAAAUDWZpbHRlck1hdHJpeEEFCwIAABUNZmlsdGVyTWF0cml4QgULAgAAFghoYXNVVlBvcwICAAEAAAAAABcFdXZQb3MFDAIAABgJa2lsbEFscGhhAgIAAQAAAAAAGQpwaXhlbEFsaWduAgIAAQAAAAAAGhBoYWxmUGl4ZWxJbnZlcnNlBQoCAAAbCXZpZXdwb3J0QQULAgAAHAl2aWV3cG9ydEIFCwIAAB0Ob3V0cHV0UG9zaXRpb24FDAQAAB4IX19pbml0X18OBgAAHwZ2ZXJ0ZXgOBgAAIAhmcmFnbWVudA4GAAADAh4AAAUGBgQCCwUMCQMqDgMCAgUKAgkDAQMAAAAAAADwPwMFDAUMCwIQAgUDBgQKAgwFDAAAAwkDHQ4CCQMpDgIKAgsFDBEABQoBAwAAAAAAAPA/AwULAhIFCwMDBgQKAgwFDAQAAwkDHQ4CCQMpDgIKAgsFDBEABQoBAwAAAAAAAPA/AwULAhMFCwMDBgQKAgwFDDkABQoKAgsFDDkABQoFCgAGBAIMBQwCCwUMBQwABgQCDwUKCwIWAgYABgECAwUKCgIXBQw5AAUKBQoKAhcFDBEABQoFCgIDBQoFCgUKBgQCDQUMCwIQAgYBAhEFDAIEBQwFDAIEBQwFDAUMBgQCDgUMCQMhDgICCgoCDwUKBQwFDAaBAg0FDAIOBQwFDAAAHwAABQUIIQN0bXAFCwQAAAkDKQ4CCgIMBQwRAAUKAQMAAAAAAADwPwMFCwAGBAIhBQsJAykOAwkDHQ4CAiEFCwIUBQsDCQMdDgICIQULAhUFCwMBAwAAAAAAAPA/AwULBQsGBAIdBQwJAyoOAwkDHQ4CAiEFCwIbBQsDCQMdDgICIQULAhwFCwMKAgwFDDkABQoFDAUMCwIZAgaDCgIdBQwRAAUKAhoFCgUKAAAGBAIGBQwCHQUMBQwAASAAAAUCCwYOAhgCBgkKAg0FDAwAAwED/Knx0k1iUD8DAgIMAAAABgQCBwUMAg0FDAUMAA";
h3d_shader_BaseMesh.SRC = "HXSLE2gzZC5zaGFkZXIuQmFzZU1lc2gXAQZjYW1lcmENAQoCBHZpZXcHAAEAAwRwcm9qBwABAAQIcG9zaXRpb24FCwABAAUIcHJvakZsaXADAAEABghwcm9qRGlhZwULAAEABwh2aWV3UHJvagcAAQAID2ludmVyc2VWaWV3UHJvagcAAQAJBXpOZWFyAwABAAoEekZhcgMAAQALA2RpcgULAwEAAAAADAZnbG9iYWwNAgQNBHRpbWUDAAwADglwaXhlbFNpemUFCgAMAA8JbW9kZWxWaWV3BwAMAQMQEG1vZGVsVmlld0ludmVyc2UHAAwBAwAAABEFaW5wdXQNAwISCHBvc2l0aW9uBQsBEQATBm5vcm1hbAULAREAAQAAFAZvdXRwdXQNBAUVCHBvc2l0aW9uBQwEFAAWBWNvbG9yBQwEFAAXBWRlcHRoAwQUABgGbm9ybWFsBQsEFAAZCXdvcmxkRGlzdAMEFAAEAAAaEHJlbGF0aXZlUG9zaXRpb24FCwQAABsTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAHBhwaXhlbFRyYW5zZm9ybWVkUG9zaXRpb24FCwQAAB0RdHJhbnNmb3JtZWROb3JtYWwFCwQAAB4RcHJvamVjdGVkUG9zaXRpb24FDAQAAB8KcGl4ZWxDb2xvcgUMBAAAIAVkZXB0aAMEAAAhCHNjcmVlblVWBQoEAAAiCXNwZWNQb3dlcgMEAAAjCXNwZWNDb2xvcgULBAAAJAl3b3JsZERpc3QDBAAAJQVjb2xvcgUMAgAAJg1zcGVjdWxhclBvd2VyAwIAAQcAAAAAAAAAAAAAAAAAAFlAJw5zcGVjdWxhckFtb3VudAMCAAEHAAAAAAAAAAAAAAAAAAAkQCgNc3BlY3VsYXJDb2xvcgULAgAAKQhfX2luaXRfXw4GAAAqEF9faW5pdF9fZnJhZ21lbnQOBgAAKwZ2ZXJ0ZXgOBgAALAhmcmFnbWVudA4GAAAEAikAAAULBgQCGgULAhIFCwULBgQCGwULBgECGgULCQM0DgECDwcIBQsFCwYEAh4FDAYBCQMqDgICGwULAQMAAAAAAADwPwMFDAIHBwUMBQwGBAIdBQsJAx8OAQQGAQITBQsJAzIOAQIPBwYFCwULBQsFCwYEAgsFCwkDHw4BBAYDAgQFCwIbBQsFCwULBQsFCwYEAh8FDAIlBQwFDAYEAiIDAiYDAwYEAiMFCwYBAigFCwInAwULBQsGBAIhBQoJAzoOAQYCCgIeBQwRAAUKCgIeBQwMAAMFCgUKBQoGBAIgAwYCCgIeBQwIAAMKAh4FDAwAAwMDBgQCJAMGAgkDGw4BBgMCGwULAgQFCwULAwIKAwMDAAIqAAAFBQYEAh0FCwkDHw4BAh0FCwULBQsGBAIhBQoJAzoOAQYCCgIeBQwRAAUKCgIeBQwMAAMFCgUKBQoGBAIgAwYCCgIeBQwIAAMKAh4FDAwAAwMDBgQCIgMCJgMDBgQCIwULBgECKAULAicDBQsFCwAAKwAABQIGBAIVBQwGAQIeBQwJAyoOBAEDAAAAAAAA8D8DAgUDAQMAAAAAAADwPwMBAwAAAAAAAPA/AwUMBQwFDAYEAhwFCwIbBQsFCwABLAAABQQGBAIWBQwCHwUMBQwGBAIXAwIgAwMGBAIYBQsCHQULBQsGBAIZAwIkAwMA";
h3d_shader_Blur.SRC = "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";
h3d_shader_ColorAdd.SRC = "HXSLE2gzZC5zaGFkZXIuQ29sb3JBZGQDAQpwaXhlbENvbG9yBQwEAAACBWNvbG9yBQsCAAADCGZyYWdtZW50DgYAAAEBAwAABQEGgAoCAQUMkgAFCwICBQsFCwA";
h3d_shader_ColorKey.SRC = "HXSLE2gzZC5zaGFkZXIuQ29sb3JLZXkDAQhjb2xvcktleQUMAgAAAgx0ZXh0dXJlQ29sb3IFDAQAAAMIZnJhZ21lbnQOBgAAAQEDAAAFAggEBWNkaWZmBQwEAAAGAwICBQwCAQUMBQwACwYJCQMdDgICBAUMAgQFDAMBA/Fo44i1+OQ+AwIMAAAAAA";
h3d_shader_ColorMatrix.SRC = "HXSLFmgzZC5zaGFkZXIuQ29sb3JNYXRyaXgDAQpwaXhlbENvbG9yBQwEAAACBm1hdHJpeAcCAAADCGZyYWdtZW50DgYAAAEBAwAABQEGBAIBBQwJAyoOAgoEBgEJAyoOAgoCAQUMkgAFCwEDAAAAAAAA8D8DBQwCAgcFDAUMkgAFCwoEBgECAQUMAgIHBQwFDAwAAwUMBQwA";
h3d_shader_DirShadow.SRC = "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";
h3d_shader_GenTexture.SRC = "HXSLFWgzZC5zaGFkZXIuR2VuVGV4dHVyZQoBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoEbW9kZQECAAEAAAAAAAsFY29sb3IFDAIAAAwIX19pbml0X18OBgAADQZ2ZXJ0ZXgOBgAADghmcmFnbWVudA4GAAADAgwAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAANAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEOAAAFARMEAgoBAQEBAQIAAAAAAQUBBgQCCAUMCwYHCQMbDgEKAgYFDBEABQoDAQMAAAAAAADwPwMCCQMqDgEBAwAAAAAAAAAAAwUMAgsFDAUMBQwAAAAA";
h3d_shader_LineShader.SRC = "HXSLFWgzZC5zaGFkZXIuTGluZVNoYWRlcgwBBmNhbWVyYQ0BAwIEdmlldwcAAQADBHByb2oHAAEABAh2aWV3UHJvagcAAQAAAAAFBmdsb2JhbA0CAgYJcGl4ZWxTaXplBQoABQAHCW1vZGVsVmlldwcABQEDAAAACAVpbnB1dA0DAwkIcG9zaXRpb24FCwEIAAoGbm9ybWFsBQsBCAALAnV2BQoBCAABAAAMBm91dHB1dA0EAQ0IcG9zaXRpb24FDAQMAAQAAA4RdHJhbnNmb3JtZWROb3JtYWwFCwQAAA8TdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAEBFwcm9qZWN0ZWRQb3NpdGlvbgUMBAAAEQtsZW5ndGhTY2FsZQMCAAASBXdpZHRoAwIAABMEcGRpcgUMBAAAFAhfX2luaXRfXw4GAAAVBnZlcnRleA4GAAACAhQAAAUBBQUIFgNkaXIFCwQAAAYBAgoFCwkDMg4BAgcHBgULAAYEAhMFDAYBCQMqDgIGAQIWBQsJAzIOAQICBwYFCwEDAAAAAAAA8D8DBQwCAwcFDAUMBoEKAhMFDBEABQoGAgEDAAAAAAAA8D8DCQMNDgEGAAYBCgITBQwAAAMKAhMFDAAAAwMGAQoCEwUMBAADCgITBQwEAAMDAwMDBQoGgAIPBQsGAQYBAhYFCwoCCwUKAAADBQsCEQMFCwULBgQCDgULCQMfDgECFgULBQsFCwAAABUAAAUBBoAKAhAFDBEABQoGAQYBBgEGAQQGAQoCEwUMBQAFCgkDKA4CAQMAAAAAAADwPwMBAwAAAAAAAPC/AwUKBQoFCgQGAwoCCwUKBAADAQMAAAAAAADgPwMDAwUKCgIQBQwIAAMFCgIGBQoFCgISAwUKBQoA";
h3d_shader_MinMaxShader.SRC = "HXSLF2gzZC5zaGFkZXIuTWluTWF4U2hhZGVyCwEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACgR0ZXhBCgIAAAsEdGV4QgoCAAAMBWlzTWF4AgIAAQAAAAAADQhfX2luaXRfXw4GAAAOBnZlcnRleA4GAAAPCGZyYWdtZW50DgYAAAMCDQAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAA4AAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAAQ8AAAUDCBABYQUMBAAACQMhDgICCgoCCQUKBQwACBEBYgUMBAAACQMhDgICCwoCCQUKBQwABgQCCAUMCwIMAgkDFg4CAhAFDAIRBQwFDAkDFQ4CAhAFDAIRBQwFDAUMBQwA";
h3d_shader_CubeMinMaxShader.SRC = "HXSLG2gzZC5zaGFkZXIuQ3ViZU1pbk1heFNoYWRlcgwBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoEdGV4QQwCAAALBHRleEIMAgAADAVpc01heAICAAEAAAAAAA0DbWF0BgIAAA4IX19pbml0X18OBgAADwZ2ZXJ0ZXgOBgAAEAhmcmFnbWVudA4GAAADAg4AAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAAPAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEQAAAFBQgRAnV2BQoEAAAGAwYBAgkFCgEDAAAAAAAAAEADBQoBAwAAAAAAAPA/AwUKAAgSA2RpcgULBAAABgEJAykOAgIRBQoBAwAAAAAAAPA/AwULAg0GBQsACBMBYQUMBAAACQMhDgICCgwCEgULBQwACBQBYgUMBAAACQMhDgICCwwCEgULBQwABgQCCAUMCwIMAgkDFg4CAhMFDAIUBQwFDAkDFQ4CAhMFDAIUBQwFDAUMBQwA";
h3d_shader_NormalMap.SRC = "HXSLFGgzZC5zaGFkZXIuTm9ybWFsTWFwCgEGY2FtZXJhDQECAghwb3NpdGlvbgULAAEAAwNkaXIFCwMBAAAAAAQGZ2xvYmFsDQIBBQltb2RlbFZpZXcHAAQBAwAAAAYFaW5wdXQNAwIHBm5vcm1hbAULAQYACAd0YW5nZW50BQsBBgABAAAJB3RleHR1cmUKAgAACgxjYWxjdWxhdGVkVVYFCgQAAAsTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAADBF0cmFuc2Zvcm1lZE5vcm1hbAULBAAADRJ0cmFuc2Zvcm1lZFRhbmdlbnQFDAMAAA4OX19pbml0X192ZXJ0ZXgOBgAADwhmcmFnbWVudA4GAAACAg4AAAUBBgQCDQUMCQMqDgIGAQIIBQsJAzIOAQIFBwYFCwsGBwkDHQ4CAggFCwIIBQsDAQMAAAAAAADgPwMCAQMAAAAAAADwPwMBAwAAAAAAAPC/AwMFDAUMAAEPAAAFBQgQAW4FCwQAAAIMBQsACBECbmYFCwQAAAkDOQ4BCQMhDgICCQoCCgUKBQwFCwAIEgR0YW5YBQsEAAAJAx8OAQoCDQUMkgAFCwULAAgTBHRhblkFCwQAAAYBCQMeDgICEAULAhIFCwULBwMKAg0FDAwAAwMFCwAGBAIMBQsJAx8OAQQGAAYABgEKAhEFCwAAAwISBQsFCwYBCgIRBQsEAAMCEwULBQsFCwYBCgIRBQsIAAMCEAULBQsFCwULBQsFCwA";
h3d_shader_Shadow.SRC = "HXSLEWgzZC5zaGFkZXIuU2hhZG93BgEGc2hhZG93DQEFAgNtYXARAQABAAMEcHJvaggAAQAEBWNvbG9yBQsAAQAFBXBvd2VyAwABAAYEYmlhcwMAAQAAAAAHCnBpeGVsQ29sb3IFDAQAAAgTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAACRhwaXhlbFRyYW5zZm9ybWVkUG9zaXRpb24FCwQAAAoJc2hhZG93UG9zBQsDAAEBCwhmcmFnbWVudA4GAAABAQsAAAUGCAwJc2hhZG93UG9zBQsEAAAGAQIJBQsCAwgFCwAIDQVkZXB0aAMEAAAJAz8OAgICEQEJAzoOAQoCDAULEQAFCgUKAwAIDgR6TWF4AwQAAAkDNQ4BCgIMBQsIAAMDAAgPBWRlbHRhAwQAAAYDCQMVDgIEBgACDQMCBgMDAwIOAwMCDgMDAAgQBXNoYWRlAwQAAAkDNQ4BCQMJDgEGAQIFAwIPAwMDAwAGgQoCBwUMkgAFCwYABgEEBgMBAwAAAAAAAPA/AwIQAwMDCgIEBQuSAAULBQsCEAMFCwULAA";
h3d_shader_SignedDistanceField.SRC = "HXSLHmgzZC5zaGFkZXIuU2lnbmVkRGlzdGFuY2VGaWVsZA4BBWlucHV0DQEDAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEABAVjb2xvcgUMAQEAAQAABQZvdXRwdXQNAgIGCHBvc2l0aW9uBQwEBQAHBWNvbG9yBQwEBQAEAAAIBHRpbWUDAAAACQ5zcHJpdGVQb3NpdGlvbgUMBAAAChBhYnNvbHV0ZVBvc2l0aW9uBQwEAAALCnBpeGVsQ29sb3IFDAQAAAwMdGV4dHVyZUNvbG9yBQwEAAANDGNhbGN1bGF0ZWRVVgUKAwAADg5vdXRwdXRQb3NpdGlvbgUMBAAADwdjaGFubmVsAQIAAQAAAAAAEAthbHBoYUN1dG9mZgMCAAARCXNtb290aGluZwMCAAASBm1lZGlhbg4GAAATCGZyYWdtZW50DgYAAAIDEgMUAXIDBAAAFQFnAwQAABYBYgMEAAADBQENCQMWDgIJAxUOAgIUAwIVAwMJAxUOAgkDFg4CAhQDAhUDAwIWAwMDAAABEwAABQQIFw10ZXh0dXJlU2FtcGxlBQwEAAACDAUMAAgYCGRpc3RhbmNlAwQAAAAABgQCGAMLBgUCDwEBAgAAAAABAgoCFwUMAAADCwYFAg8BAQIBAAAAAQIKAhcFDAQAAwsGBQIPAQECAgAAAAECCgIXBQwIAAMLBgUCDwEBAgMAAAABAgoCFwUMDAADCQISDgMKAhcFDAAAAwoCFwUMBAADCgIXBQwIAAMDAwMDAwMGBAIMBQwJAyoOBAEDAAAAAAAA8D8DAQMAAAAAAADwPwMBAwAAAAAAAPA/AwkDGg4DBgMCEAMCEQMDBgACEAMCEQMDAhgDAwUMBQwA";
h3d_shader_SkinBase.SRC = "HXSLE2gzZC5zaGFkZXIuU2tpbkJhc2UFARByZWxhdGl2ZVBvc2l0aW9uBQsEAAACE3RyYW5zZm9ybWVkUG9zaXRpb24FCwQAAAMRdHJhbnNmb3JtZWROb3JtYWwFCwQAAAQITWF4Qm9uZXMBAgABAAAAAAAFDWJvbmVzTWF0cml4ZXMPCAQCAAEIAA";
h3d_shader_Skin.SRC = "HXSLD2gzZC5zaGFkZXIuU2tpbggBEHJlbGF0aXZlUG9zaXRpb24FCwQAAAITdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAAxF0cmFuc2Zvcm1lZE5vcm1hbAULBAAABAhNYXhCb25lcwECAAEAAAAAAAUNYm9uZXNNYXRyaXhlcw8IBAIAAQgGBWlucHV0DQEEBwhwb3NpdGlvbgULAQYACAZub3JtYWwFCwEGAAkHd2VpZ2h0cwULAQYACgdpbmRleGVzCQQAAAABBgABAAALEnRyYW5zZm9ybWVkVGFuZ2VudAUMBAAADAZ2ZXJ0ZXgOBgAAAQAMAAAFAgYEAgIFCwYABgAGAQQGAQIBBQsRAgUPCAQKAgoJBAAAAAAAAQgFCwULCgIJBQsAAAMFCwYBBAYBAgEFCxECBQ8IBAoCCgkEAAAABAABCAULBQsKAgkFCwQAAwULBQsGAQQGAQIBBQsRAgUPCAQKAgoJBAAAAAgAAQgFCwULCgIJBQsIAAMFCwULBQsGBAIDBQsJAx8OAQYABgAGAQQGAQIIBQsJAzIOARECBQ8IBAoCCgkEAAAAAAABCAYFCwULCgIJBQsAAAMFCwYBBAYBAggFCwkDMg4BEQIFDwgECgIKCQQAAAAEAAEIBgULBQsKAgkFCwQAAwULBQsGAQQGAQIIBQsJAzIOARECBQ8IBAoCCgkEAAAACAABCAYFCwULCgIJBQsIAAMFCwULBQsFCwA";
h3d_shader_SkinTangent.SRC = "HXSLFmgzZC5zaGFkZXIuU2tpblRhbmdlbnQIARByZWxhdGl2ZVBvc2l0aW9uBQsEAAACE3RyYW5zZm9ybWVkUG9zaXRpb24FCwQAAAMRdHJhbnNmb3JtZWROb3JtYWwFCwQAAAQITWF4Qm9uZXMBAgABAAAAAAAFDWJvbmVzTWF0cml4ZXMPCAQCAAEIBgVpbnB1dA0BBQcIcG9zaXRpb24FCwEGAAgGbm9ybWFsBQsBBgAJB3RhbmdlbnQFCwEGAAoHd2VpZ2h0cwULAQYACwdpbmRleGVzCQQAAAABBgABAAAMEnRyYW5zZm9ybWVkVGFuZ2VudAUMBAAADQZ2ZXJ0ZXgOBgAAAQANAAAFAwYEAgIFCwYABgAGAQQGAQIBBQsRAgUPCAQKAgsJBAAAAAAAAQgFCwULCgIKBQsAAAMFCwYBBAYBAgEFCxECBQ8IBAoCCwkEAAAABAABCAULBQsKAgoFCwQAAwULBQsGAQQGAQIBBQsRAgUPCAQKAgsJBAAAAAgAAQgFCwULCgIKBQsIAAMFCwULBQsGBAIDBQsJAx8OAQYABgAGAQQGAQIIBQsJAzIOARECBQ8IBAoCCwkEAAAAAAABCAYFCwULCgIKBQsAAAMFCwYBBAYBAggFCwkDMg4BEQIFDwgECgILCQQAAAAEAAEIBgULBQsKAgoFCwQAAwULBQsGAQQGAQIIBQsJAzIOARECBQ8IBAoCCwkEAAAACAABCAYFCwULCgIKBQsIAAMFCwULBQsFCwYEAgwFDAkDKg4CCQMfDgEGAAYABgEEBgEKAgkFC5IABQsJAzIOARECBQ8IBAoCCwkEAAAAAAABCAYFCwULCgIKBQsAAAMFCwYBBAYBCgIJBQuSAAULCQMyDgERAgUPCAQKAgsJBAAAAAQAAQgGBQsFCwoCCgULBAADBQsFCwYBBAYBCgIJBQuSAAULCQMyDgERAgUPCAQKAgsJBAAAAAgAAQgGBQsFCwoCCgULCAADBQsFCwULCgIMBQwMAAMFDAUMAA";
h3d_shader_SpecularTexture.SRC = "HXSLGmgzZC5zaGFkZXIuU3BlY3VsYXJUZXh0dXJlBAEHdGV4dHVyZQoCAAACDGNhbGN1bGF0ZWRVVgUKBAAAAwlzcGVjQ29sb3IFCwQAAAQIZnJhZ21lbnQOBgAAAQEEAAAFAQaBAgMFCwoJAyEOAgIBCgICBQoFDJIABQsFCwA";
h3d_shader_Texture.SRC = "HXSLEmgzZC5zaGFkZXIuVGV4dHVyZQsBBWlucHV0DQEBAgJ1dgUKAQEAAQAAAwhhZGRpdGl2ZQICAAEAAAAAAAQJa2lsbEFscGhhAgIAAQAAAAAABQ1zcGVjdWxhckFscGhhAgIAAQAAAAAABhJraWxsQWxwaGFUaHJlc2hvbGQDAgABBwAAAAAAAAAAAAAAAAAA8D8HB3RleHR1cmUKAgAACAxjYWxjdWxhdGVkVVYFCgQAAAkKcGl4ZWxDb2xvcgUMBAAACglzcGVjQ29sb3IFCwQAAAsGdmVydGV4DgYAAAwIZnJhZ21lbnQOBgAAAgALAAAFAQYEAggFCgICBQoFCgABDAAABQQIDQFjBQwEAAAJAyEOAgIHCgIIBQoFDAALBg4CBAIGCQYDCgINBQwMAAMCBgMDAQMAAAAAAAAAAAMCAgwAAAALAgMCBoACCQUMAg0FDAUMBoECCQUMAg0FDAUMAAsCBQIGgQIKBQsKAg0FDP4ABQsFCwAAAA";
h3d_shader_UVDelta.SRC = "HXSLEmgzZC5zaGFkZXIuVVZEZWx0YQQBB3V2RGVsdGEFCgIAAAIHdXZTY2FsZQUKAgAAAwxjYWxjdWxhdGVkVVYFCgQAAAQGdmVydGV4DgYAAAEABAAABQEGBAIDBQoGAAYBAgMFCgICBQoFCgIBBQoFCgUKAA";
h3d_shader_VertexColorAlpha.SRC = "HXSLG2gzZC5zaGFkZXIuVmVydGV4Q29sb3JBbHBoYQQBBWlucHV0DQEBAgVjb2xvcgUMAQEAAQAAAwpwaXhlbENvbG9yBQwEAAAECGFkZGl0aXZlAgIAAQAAAAAABQhmcmFnbWVudA4GAAABAQUAAAUBCwIEAgaAAgMFDAICBQwFDAaBAgMFDAICBQwFDAAA";
h3d_shader_VolumeDecal.SRC = "HXSLFmgzZC5zaGFkZXIuVm9sdW1lRGVjYWwYAQZjYW1lcmENAQoCBHZpZXcHAAEAAwRwcm9qBwABAAQIcG9zaXRpb24FCwABAAUIcHJvakZsaXADAAEABghwcm9qRGlhZwULAAEABwh2aWV3UHJvagcAAQAID2ludmVyc2VWaWV3UHJvagcAAQAJBXpOZWFyAwABAAoEekZhcgMAAQALA2RpcgULAwEAAAAADAZnbG9iYWwNAgQNBHRpbWUDAAwADglwaXhlbFNpemUFCgAMAA8JbW9kZWxWaWV3BwAMAQMQEG1vZGVsVmlld0ludmVyc2UHAAwBAwAAABEFaW5wdXQNAwISCHBvc2l0aW9uBQsBEQATBm5vcm1hbAULAREAAQAAFAZvdXRwdXQNBAUVCHBvc2l0aW9uBQwEFAAWBWNvbG9yBQwEFAAXBWRlcHRoAwQUABgGbm9ybWFsBQsEFAAZCXdvcmxkRGlzdAMEFAAEAAAaEHJlbGF0aXZlUG9zaXRpb24FCwQAABsTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAHBhwaXhlbFRyYW5zZm9ybWVkUG9zaXRpb24FCwQAAB0RdHJhbnNmb3JtZWROb3JtYWwFCwQAAB4RcHJvamVjdGVkUG9zaXRpb24FDAQAAB8KcGl4ZWxDb2xvcgUMBAAAIAVkZXB0aAMEAAAhCHNjcmVlblVWBQoEAAAiCXNwZWNQb3dlcgMEAAAjCXNwZWNDb2xvcgULBAAAJAl3b3JsZERpc3QDBAAAJQhkZXB0aE1hcBEBAAAAJgVzY2FsZQUKAgAAJwZub3JtYWwFCwIAACgHdGFuZ2VudAULAgAAKQppc0NlbnRlcmVkAgIAAQAAAAAAKgxjYWxjdWxhdGVkVVYFCgQAACsSdHJhbnNmb3JtZWRUYW5nZW50BQwEAAAsDl9faW5pdF9fdmVydGV4DgYAAC0IZnJhZ21lbnQOBgAAAgIsAAAFAgYEAh0FCwkDHw4BBAYBAicFCwkDMg4BAg8HBgULBQsFCwULBgQCKwUMCQMqDgIJAx8OAQQGAQIoBQsJAzIOAQIPBwYFCwULBQsBAwAAAAAAAPA/AwUMBQwAAS0AAAUJCC4GbWF0cml4BwQAAAYBAggHAhAHBwAILwlzY3JlZW5Qb3MFCgQAAAYCCgIeBQwRAAUKCgIeBQwMAAMFCgAIMANydXYFDAQAAAkDKg4DAi8FCgkDPw4CAiURAQkDOg4BAi8FCgUKAwEDAAAAAAAA8D8DBQwACDEEd3BvcwUMBAAABgECMAUMAi4HBQwACDIEcHBvcwUMBAAABgECMAUMAggHBQwABgQCHAULBgIKAjIFDJIABQsKAjIFDAwAAwULBQsGBAIqBQoGAQImBQoEBgIKAjEFDBEABQoKAjEFDAwAAwUKBQoFCgUKCwIpAgaAAioFCgEDAAAAAAAA4D8DBQoAAAsGCQkDFQ4CCQMVDgIKAioFCgAAAwoCKgUKBAADAwkDFQ4CBgMBAwAAAAAAAPA/AwoCKgUKAAADAwYDAQMAAAAAAADwPwMKAioFCgQAAwMDAwEDAAAAAAAAAAADAgwAAAAA";
haxe_EntryPoint.pending = [];
haxe_EntryPoint.threadCount = 0;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
hxd_Charset.complementChars = (function($this) {
	var $r;
	var str = "ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻";
	var _g = new haxe_ds_IntMap();
	{
		var _g1 = 0;
		var _g2 = str.length;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.h[HxOverrides.cca(str,i)] = true;
		}
	}
	$r = _g;
	return $r;
}(this));
hxd_Key.initDone = false;
hxd_Key.keyPressed = [];
hxd_Key.ALLOW_KEY_REPEAT = false;
hxd_Timer.wantedFPS = 60.;
hxd_Timer.maxDeltaTime = 0.5;
hxd_Timer.smoothFactor = 0.95;
hxd_Timer.lastTimeStamp = HxOverrides.now() / 1000;
hxd_Timer.elapsedTime = 0.;
hxd_Timer.frameCount = 0;
hxd_Timer.dt = 1 / hxd_Timer.wantedFPS;
hxd_Timer.currentDT = 1 / hxd_Timer.wantedFPS;
hxd_System.setCursor = hxd_System.setNativeCursor;
hxd_System.loopInit = false;
hxd_fs_EmbedFileSystem.invalidChars = new EReg("[^A-Za-z0-9_]","g");
hxd_res_Resource.LIVE_UPDATE = false;
hxd_res_Image.ALLOW_NPOT = true;
hxd_res_Image.DEFAULT_FILTER = h3d_mat_Filter.Linear;
hxd_res_Image.DEFAULT_ASYNC = false;
hxd_res_Image.ENABLE_AUTO_WATCH = true;
hxsl_Tools.UID = 0;
hxsl_Tools.SWIZ = hxsl_Component.__empty_constructs__.slice();
hxsl_Tools.MAX_CHANNELS_BITS = 3;
hxsl_BatchShader.SRC = "HXSLEGh4c2wuQmF0Y2hTaGFkZXICAQtCYXRjaF9Db3VudAECAAEAAAABAAIMQmF0Y2hfQnVmZmVyEAUMAQIAAAA";
hxsl_GlslOut.KWD_LIST = ["input","output","discard","dvec2","dvec3","dvec4","hvec2","hvec3","hvec4","fvec2","fvec3","fvec4","int","float","bool","long","short","double","half","fixed","unsigned","superp","lowp","mediump","highp","precision","invariant","discard","struct","asm","union","template","this","packed","goto","sizeof","namespace","noline","volatile","external","flat","input","output","out","attribute","const","uniform","varying","inout","void"];
hxsl_GlslOut.KWDS = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = 0;
		var _g2 = hxsl_GlslOut.KWD_LIST;
		while(_g1 < _g2.length) {
			var k = _g2[_g1];
			++_g1;
			_g.h[k] = true;
		}
	}
	$r = _g;
	return $r;
}(this));
hxsl_GlslOut.GLOBALS = (function($this) {
	var $r;
	var m = new haxe_ds_EnumValueMap();
	{
		var _g = 0;
		var _g1 = hxsl_TGlobal.__empty_constructs__.slice();
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			var n = "" + Std.string(g);
			n = n.charAt(0).toLowerCase() + HxOverrides.substr(n,1,null);
			m.set(g,n);
		}
	}
	m.set(hxsl_TGlobal.ToInt,"int");
	m.set(hxsl_TGlobal.ToFloat,"float");
	m.set(hxsl_TGlobal.ToBool,"bool");
	m.set(hxsl_TGlobal.LReflect,"reflect");
	m.set(hxsl_TGlobal.Mat3x4,"_mat3x4");
	m.set(hxsl_TGlobal.VertexID,"gl_VertexID");
	m.set(hxsl_TGlobal.InstanceID,"gl_InstanceID");
	m.set(hxsl_TGlobal.IVec2,"ivec2");
	m.set(hxsl_TGlobal.IVec3,"ivec3");
	m.set(hxsl_TGlobal.IVec4,"ivec4");
	m.set(hxsl_TGlobal.BVec2,"bvec2");
	m.set(hxsl_TGlobal.BVec3,"bvec3");
	m.set(hxsl_TGlobal.BVec4,"bvec4");
	m.set(hxsl_TGlobal.FragCoord,"gl_FragCoord");
	{
		var g = m.iterator();
		while(g.hasNext()) {
			var g1 = g.next();
			hxsl_GlslOut.KWDS.h[g1] = true;
		}
	}
	$r = m;
	return $r;
}(this));
hxsl_GlslOut.MAT34 = "struct _mat3x4 { vec4 a; vec4 b; vec4 c; };";
hxsl__$Linker_ShaderInfos.UID = 0;
hxsl_Printer.SWIZ = ["x","y","z","w"];
hxsl_RuntimeShader.UID = 0;
hxsl_Serializer.TVECS = new haxe_ds_IntMap();
hxsl_Serializer.BOPS = (function($this) {
	var $r;
	var ops = haxe_macro_Binop.__empty_constructs__.slice();
	ops.splice(haxe_macro_Binop.OpAssignOp(null)._hx_index,0,null);
	$r = ops;
	return $r;
}(this));
hxsl_Serializer.UNOPS = haxe_macro_Unop.__empty_constructs__.slice();
hxsl_Serializer.TGLOBALS = hxsl_TGlobal.__empty_constructs__.slice();
hxsl_Serializer.TSWIZ = new haxe_ds_IntMap();
hxsl_Serializer.REGS = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
hxsl_Serializer.VKINDS = hxsl_VarKind.__empty_constructs__.slice();
hxsl_Serializer.PRECS = hxsl_Prec.__empty_constructs__.slice();
hxsl_Serializer.FKIND = hxsl_FunctionKind.__empty_constructs__.slice();
hxsl_Serializer.SIGN = 9139229;
hxsl_SharedShader.UNROLL_LOOPS = false;
ui_Modal.ALL = [];
ui_Modal.COUNT = 0;
{
	Boot.main();
	haxe_EntryPoint.run();
}
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
